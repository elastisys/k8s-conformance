  I0904 14:12:37.574024      22 e2e.go:117] Starting e2e run "af886277-93c3-4f48-a25e-c7b1e5af3713" on Ginkgo node 1
  Sep  4 14:12:37.592: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1693836757 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Sep  4 14:12:37.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:12:37.703: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Sep  4 14:12:37.720: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Sep  4 14:12:37.723: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Sep  4 14:12:37.723: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  Sep  4 14:12:37.723: INFO: e2e test version: v1.28.1
  Sep  4 14:12:37.723: INFO: kube-apiserver version: v1.28.1
  Sep  4 14:12:37.723: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:12:37.725: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.022 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 09/04/23 14:12:37.888
  Sep  4 14:12:37.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename security-context @ 09/04/23 14:12:37.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:12:37.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:12:37.897
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/04/23 14:12:37.898
  STEP: Saw pod success @ 09/04/23 14:12:43.912
  Sep  4 14:12:43.913: INFO: Trying to get logs from node worker-02 pod security-context-898d4107-b5cb-4b99-b142-45ea905befc3 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:12:43.932
  Sep  4 14:12:43.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4101" for this suite. @ 09/04/23 14:12:43.939
• [6.053 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 09/04/23 14:12:43.941
  Sep  4 14:12:43.941: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename field-validation @ 09/04/23 14:12:43.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:12:43.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:12:43.949
  STEP: apply creating a deployment @ 09/04/23 14:12:43.951
  Sep  4 14:12:43.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8394" for this suite. @ 09/04/23 14:12:43.957
• [0.017 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/04/23 14:12:43.959
  Sep  4 14:12:43.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:12:43.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:12:43.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:12:43.966
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 14:12:43.968
  STEP: Saw pod success @ 09/04/23 14:12:58.091
  Sep  4 14:12:58.092: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-02ddc145-b6f9-4611-b06b-3cc8cc7a06df container client-container: <nil>
  STEP: delete the pod @ 09/04/23 14:12:58.101
  Sep  4 14:12:58.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9679" for this suite. @ 09/04/23 14:12:58.111
• [14.154 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 09/04/23 14:12:58.113
  Sep  4 14:12:58.113: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename podtemplate @ 09/04/23 14:12:58.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:12:58.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:12:58.121
  STEP: Create set of pod templates @ 09/04/23 14:12:58.122
  Sep  4 14:12:58.125: INFO: created test-podtemplate-1
  Sep  4 14:12:58.127: INFO: created test-podtemplate-2
  Sep  4 14:12:58.130: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/04/23 14:12:58.13
  STEP: delete collection of pod templates @ 09/04/23 14:12:58.131
  Sep  4 14:12:58.131: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/04/23 14:12:58.135
  Sep  4 14:12:58.135: INFO: requesting list of pod templates to confirm quantity
  Sep  4 14:12:58.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6371" for this suite. @ 09/04/23 14:12:58.137
• [0.027 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 09/04/23 14:12:58.14
  Sep  4 14:12:58.140: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename field-validation @ 09/04/23 14:12:58.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:12:58.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:12:58.146
  Sep  4 14:12:58.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  W0904 14:13:00.680177      22 warnings.go:70] unknown field "alpha"
  W0904 14:13:00.680193      22 warnings.go:70] unknown field "beta"
  W0904 14:13:00.680196      22 warnings.go:70] unknown field "delta"
  W0904 14:13:00.680198      22 warnings.go:70] unknown field "epsilon"
  W0904 14:13:00.680201      22 warnings.go:70] unknown field "gamma"
  Sep  4 14:13:01.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-526" for this suite. @ 09/04/23 14:13:01.207
• [3.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/04/23 14:13:01.209
  Sep  4 14:13:01.209: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:13:01.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:13:01.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:13:01.217
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 14:13:01.218
  STEP: Saw pod success @ 09/04/23 14:13:09.231
  Sep  4 14:13:09.232: INFO: Trying to get logs from node worker-02 pod downwardapi-volume-6590f772-04d7-431c-a920-73e0bc8f2069 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 14:13:09.234
  Sep  4 14:13:09.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-319" for this suite. @ 09/04/23 14:13:09.241
• [8.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/04/23 14:13:09.244
  Sep  4 14:13:09.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 14:13:09.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:13:09.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:13:09.252
  STEP: Creating configMap with name configmap-test-upd-7d6974d3-18a1-4184-aa43-9dd172d11cf8 @ 09/04/23 14:13:09.255
  STEP: Creating the pod @ 09/04/23 14:13:09.256
  STEP: Updating configmap configmap-test-upd-7d6974d3-18a1-4184-aa43-9dd172d11cf8 @ 09/04/23 14:13:11.266
  STEP: waiting to observe update in volume @ 09/04/23 14:13:11.268
  Sep  4 14:14:17.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9590" for this suite. @ 09/04/23 14:14:17.428
• [68.186 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/04/23 14:14:17.431
  Sep  4 14:14:17.431: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:14:17.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:14:17.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:14:17.439
  STEP: Creating projection with secret that has name projected-secret-test-d7dca0e6-fe0f-42c9-b30c-ab00a888e7c5 @ 09/04/23 14:14:17.441
  STEP: Creating a pod to test consume secrets @ 09/04/23 14:14:17.442
  STEP: Saw pod success @ 09/04/23 14:14:19.449
  Sep  4 14:14:19.450: INFO: Trying to get logs from node control-panel-01 pod pod-projected-secrets-981ccabd-fe02-4847-9d3d-77cf61d79608 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 14:14:19.452
  Sep  4 14:14:19.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2069" for this suite. @ 09/04/23 14:14:19.459
• [2.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/04/23 14:14:19.463
  Sep  4 14:14:19.463: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 14:14:19.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:14:19.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:14:19.47
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 14:14:19.473
  STEP: Saw pod success @ 09/04/23 14:14:21.48
  Sep  4 14:14:21.481: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-edad6ecc-1b70-4eea-abe4-e703a639fd64 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 14:14:21.483
  Sep  4 14:14:21.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8637" for this suite. @ 09/04/23 14:14:21.49
• [2.029 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 09/04/23 14:14:21.492
  Sep  4 14:14:21.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename statefulset @ 09/04/23 14:14:21.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:14:21.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:14:21.498
  STEP: Creating service test in namespace statefulset-8090 @ 09/04/23 14:14:21.501
  STEP: Creating stateful set ss in namespace statefulset-8090 @ 09/04/23 14:14:21.503
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8090 @ 09/04/23 14:14:21.508
  Sep  4 14:14:21.518: INFO: Found 0 stateful pods, waiting for 1
  Sep  4 14:14:31.523: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/04/23 14:14:31.523
  Sep  4 14:14:31.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-8090 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  4 14:14:31.618: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  4 14:14:31.618: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  4 14:14:31.618: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  4 14:14:31.620: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Sep  4 14:14:41.622: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep  4 14:14:41.622: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep  4 14:14:41.628: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Sep  4 14:14:41.628: INFO: ss-0  control-panel-01  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:21 +0000 UTC  }]
  Sep  4 14:14:41.628: INFO: 
  Sep  4 14:14:41.628: INFO: StatefulSet ss has not reached scale 3, at 1
  Sep  4 14:14:42.631: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997709531s
  Sep  4 14:14:43.633: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.99519093s
  Sep  4 14:14:44.635: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.993263371s
  Sep  4 14:14:45.637: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.991267776s
  Sep  4 14:14:46.639: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.989339628s
  Sep  4 14:14:47.641: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.987405268s
  Sep  4 14:14:48.643: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.985543245s
  Sep  4 14:14:49.646: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.982786541s
  Sep  4 14:14:50.648: INFO: Verifying statefulset ss doesn't scale past 3 for another 980.770986ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8090 @ 09/04/23 14:14:51.648
  Sep  4 14:14:51.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-8090 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  4 14:14:51.741: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  4 14:14:51.741: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  4 14:14:51.741: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  4 14:14:51.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-8090 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  4 14:14:51.822: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep  4 14:14:51.822: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  4 14:14:51.822: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  4 14:14:51.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-8090 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  4 14:14:51.909: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep  4 14:14:51.909: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  4 14:14:51.909: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  4 14:14:51.911: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 14:14:51.911: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 14:14:51.911: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/04/23 14:14:51.911
  Sep  4 14:14:51.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-8090 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  4 14:14:51.996: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  4 14:14:51.996: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  4 14:14:51.996: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  4 14:14:51.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-8090 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  4 14:14:52.091: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  4 14:14:52.091: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  4 14:14:52.091: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  4 14:14:52.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-8090 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  4 14:14:52.186: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  4 14:14:52.186: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  4 14:14:52.186: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  4 14:14:52.186: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep  4 14:14:52.187: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Sep  4 14:15:02.191: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep  4 14:15:02.191: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep  4 14:15:02.191: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep  4 14:15:02.196: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Sep  4 14:15:02.196: INFO: ss-0  control-panel-01  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:21 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:21 +0000 UTC  }]
  Sep  4 14:15:02.196: INFO: ss-1  worker-01         Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:41 +0000 UTC  }]
  Sep  4 14:15:02.196: INFO: ss-2  worker-02         Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:41 +0000 UTC  }]
  Sep  4 14:15:02.196: INFO: 
  Sep  4 14:15:02.196: INFO: StatefulSet ss has not reached scale 0, at 3
  Sep  4 14:15:03.199: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Sep  4 14:15:03.199: INFO: ss-0  control-panel-01  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:21 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:52 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:52 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:21 +0000 UTC  }]
  Sep  4 14:15:03.199: INFO: ss-2  worker-02         Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:41 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:52 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:52 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:14:41 +0000 UTC  }]
  Sep  4 14:15:03.199: INFO: 
  Sep  4 14:15:03.199: INFO: StatefulSet ss has not reached scale 0, at 2
  Sep  4 14:15:04.202: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.994653942s
  Sep  4 14:15:05.203: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.992992042s
  Sep  4 14:15:06.205: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.991323277s
  Sep  4 14:15:07.207: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.989662422s
  Sep  4 14:15:08.209: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.987038742s
  Sep  4 14:15:09.211: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.985338199s
  Sep  4 14:15:10.213: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.983231431s
  Sep  4 14:15:11.215: INFO: Verifying statefulset ss doesn't scale past 0 for another 981.553962ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8090 @ 09/04/23 14:15:12.215
  Sep  4 14:15:12.217: INFO: Scaling statefulset ss to 0
  Sep  4 14:15:12.221: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  4 14:15:12.222: INFO: Deleting all statefulset in ns statefulset-8090
  Sep  4 14:15:12.223: INFO: Scaling statefulset ss to 0
  Sep  4 14:15:12.231: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  4 14:15:12.232: INFO: Deleting statefulset ss
  Sep  4 14:15:12.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8090" for this suite. @ 09/04/23 14:15:12.237
• [50.749 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 09/04/23 14:15:12.241
  Sep  4 14:15:12.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 14:15:12.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:15:12.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:15:12.25
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/23 14:15:12.253
  Sep  4 14:15:12.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-5512 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Sep  4 14:15:12.295: INFO: stderr: ""
  Sep  4 14:15:12.295: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/04/23 14:15:12.295
  Sep  4 14:15:12.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-5512 delete pods e2e-test-httpd-pod'
  Sep  4 14:15:13.353: INFO: stderr: ""
  Sep  4 14:15:13.353: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep  4 14:15:13.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5512" for this suite. @ 09/04/23 14:15:13.355
• [1.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 09/04/23 14:15:13.358
  Sep  4 14:15:13.358: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename security-context-test @ 09/04/23 14:15:13.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:15:13.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:15:13.365
  Sep  4 14:15:17.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3815" for this suite. @ 09/04/23 14:15:17.376
• [4.020 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/04/23 14:15:17.378
  Sep  4 14:15:17.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename subpath @ 09/04/23 14:15:17.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:15:17.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:15:17.385
  STEP: Setting up data @ 09/04/23 14:15:17.386
  STEP: Creating pod pod-subpath-test-downwardapi-hr8l @ 09/04/23 14:15:17.39
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/23 14:15:17.39
  STEP: Saw pod success @ 09/04/23 14:15:41.424
  Sep  4 14:15:41.425: INFO: Trying to get logs from node control-panel-01 pod pod-subpath-test-downwardapi-hr8l container test-container-subpath-downwardapi-hr8l: <nil>
  STEP: delete the pod @ 09/04/23 14:15:41.428
  STEP: Deleting pod pod-subpath-test-downwardapi-hr8l @ 09/04/23 14:15:41.433
  Sep  4 14:15:41.433: INFO: Deleting pod "pod-subpath-test-downwardapi-hr8l" in namespace "subpath-5971"
  Sep  4 14:15:41.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5971" for this suite. @ 09/04/23 14:15:41.435
• [24.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 09/04/23 14:15:41.437
  Sep  4 14:15:41.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 14:15:41.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:15:41.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:15:41.444
  STEP: Setting up server cert @ 09/04/23 14:15:41.453
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 14:15:41.725
  STEP: Deploying the webhook pod @ 09/04/23 14:15:41.729
  STEP: Wait for the deployment to be ready @ 09/04/23 14:15:41.734
  Sep  4 14:15:41.736: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/04/23 14:15:43.741
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:15:43.745
  Sep  4 14:15:44.746: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/04/23 14:15:44.751
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/04/23 14:15:44.761
  STEP: Creating a configMap that should not be mutated @ 09/04/23 14:15:44.764
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/04/23 14:15:44.769
  STEP: Creating a configMap that should be mutated @ 09/04/23 14:15:44.773
  Sep  4 14:15:44.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8845" for this suite. @ 09/04/23 14:15:44.8
  STEP: Destroying namespace "webhook-markers-5107" for this suite. @ 09/04/23 14:15:44.804
• [3.369 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/04/23 14:15:44.808
  Sep  4 14:15:44.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-runtime @ 09/04/23 14:15:44.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:15:44.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:15:44.816
  STEP: create the container @ 09/04/23 14:15:44.818
  W0904 14:15:44.821211      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/04/23 14:15:44.821
  STEP: get the container status @ 09/04/23 14:15:47.829
  STEP: the container should be terminated @ 09/04/23 14:15:47.83
  STEP: the termination message should be set @ 09/04/23 14:15:47.83
  Sep  4 14:15:47.830: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/04/23 14:15:47.83
  Sep  4 14:15:47.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4346" for this suite. @ 09/04/23 14:15:47.837
• [3.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 09/04/23 14:15:47.84
  Sep  4 14:15:47.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:15:47.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:15:47.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:15:47.849
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/04/23 14:15:47.85
  STEP: Saw pod success @ 09/04/23 14:15:51.859
  Sep  4 14:15:51.860: INFO: Trying to get logs from node control-panel-01 pod pod-8fc3b2e0-b831-47e9-bbe7-cd7e46614132 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:15:51.862
  Sep  4 14:15:51.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-739" for this suite. @ 09/04/23 14:15:51.869
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 09/04/23 14:15:51.872
  Sep  4 14:15:51.872: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replication-controller @ 09/04/23 14:15:51.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:15:51.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:15:51.879
  STEP: creating a ReplicationController @ 09/04/23 14:15:51.881
  STEP: waiting for RC to be added @ 09/04/23 14:15:51.885
  STEP: waiting for available Replicas @ 09/04/23 14:15:51.885
  STEP: patching ReplicationController @ 09/04/23 14:15:54.414
  STEP: waiting for RC to be modified @ 09/04/23 14:15:54.418
  STEP: patching ReplicationController status @ 09/04/23 14:15:54.418
  STEP: waiting for RC to be modified @ 09/04/23 14:15:54.421
  STEP: waiting for available Replicas @ 09/04/23 14:15:54.421
  STEP: fetching ReplicationController status @ 09/04/23 14:15:54.423
  STEP: patching ReplicationController scale @ 09/04/23 14:15:54.424
  STEP: waiting for RC to be modified @ 09/04/23 14:15:54.427
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/04/23 14:15:54.427
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/04/23 14:15:56.383
  STEP: updating ReplicationController status @ 09/04/23 14:15:56.385
  STEP: waiting for RC to be modified @ 09/04/23 14:15:56.387
  STEP: listing all ReplicationControllers @ 09/04/23 14:15:56.387
  STEP: checking that ReplicationController has expected values @ 09/04/23 14:15:56.388
  STEP: deleting ReplicationControllers by collection @ 09/04/23 14:15:56.388
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/04/23 14:15:56.392
  Sep  4 14:15:56.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 14:15:56.419023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-4716" for this suite. @ 09/04/23 14:15:56.42
• [4.551 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/04/23 14:15:56.423
  Sep  4 14:15:56.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-probe @ 09/04/23 14:15:56.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:15:56.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:15:56.431
  STEP: Creating pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386 @ 09/04/23 14:15:56.432
  E0904 14:15:57.419179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:15:58.419621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/23 14:15:58.438
  Sep  4 14:15:58.439: INFO: Initial restart count of pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 is 0
  Sep  4 14:15:58.440: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:15:59.419653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:00.419738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:00.442: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:01.420424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:02.421490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:02.443: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:03.421569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:04.421703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:04.446: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:05.422744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:06.423392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:06.449: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:07.423856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:08.423934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:08.451: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:09.424787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:10.424847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:10.453: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:11.424927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:12.425477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:12.456: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:13.425550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:14.425686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:14.458: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:15.425705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:16.425781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:16.460: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:17.426631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:18.426726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:18.462: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:19.427649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:20.427719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:20.464: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:21.428440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:22.429482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:22.467: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:23.430312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:24.430449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:24.469: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:25.431014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:26.431154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:26.471: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:27.431386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:28.431805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:28.474: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:29.432480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:30.433480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:30.477: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:31.434329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:32.435338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:32.479: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:33.436290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:34.436432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:34.481: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:35.436510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:36.437491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:36.484: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:37.437559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:38.437772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:38.486: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:39.438223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:40.438376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:40.489: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:41.438770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:42.438894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:42.491: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:43.439703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:44.439794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:44.493: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:45.439962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:46.440053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:46.495: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:47.440794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:48.441481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:48.498: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:49.441921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:50.442060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:50.500: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:51.442938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:52.443081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:52.502: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:53.444045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:54.444177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:54.505: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:55.444417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:56.445485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:56.507: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:57.445575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:16:58.445942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:16:58.509: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:16:59.446191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:00.446731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:00.512: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:01.447196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:02.447442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:02.514: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:03.448203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:04.448337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:04.517: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:05.448409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:06.448504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:06.520: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:07.449466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:08.449781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:08.522: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:09.450500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:10.450612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:10.525: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:11.451231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:12.451346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:12.527: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:13.452370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:14.452412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:14.529: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:15.452497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:16.453472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:16.532: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:17.453557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:18.453828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:18.534: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:19.454527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:20.454613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:20.536: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:21.454690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:22.454776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:22.538: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:23.455792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:24.455894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:24.541: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:25.455966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:26.456239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:26.543: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:27.457240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:28.457468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:28.545: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:29.457560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:30.458023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:30.548: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:31.458783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:32.458908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:32.550: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:33.459958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:34.460070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:34.553: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:35.461079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:36.461160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:36.555: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:37.461886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:38.462266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:38.557: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:39.462346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:40.462944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:40.560: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:41.463976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:42.464400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:42.562: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:43.465441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:44.465473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:44.564: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:45.465549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:46.465675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:46.566: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:47.466508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:48.466822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:48.568: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:49.467577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:50.467595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:50.571: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:51.468412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:52.468495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:52.573: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:53.468925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:54.469701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:54.575: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:55.470733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:56.470849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:56.577: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:57.470933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:17:58.471260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:17:58.580: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:17:59.472087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:00.472201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:00.582: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:01.473197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:02.473479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:02.584: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:03.474332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:04.474392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:04.586: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:05.474562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:06.474950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:06.588: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:07.475661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:08.475995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:08.591: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:09.476647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:10.477493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:10.593: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:11.478158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:12.479204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:12.595: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:13.479825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:14.479867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:14.598: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:15.480067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:16.480162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:16.600: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:17.481063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:18.481259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:18.602: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:19.481313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:20.481407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:20.604: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:21.481524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:22.481576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:22.606: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:23.482338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:24.482530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:24.608: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:25.483563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:26.483690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:26.610: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:27.484411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:28.485484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:28.612: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:29.485874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:30.485998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:30.615: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:31.486034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:32.486091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:32.617: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:33.486917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:34.487050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:34.619: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:35.487217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:36.487363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:36.621: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:37.487834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:38.488168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:38.623: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:39.488193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:40.488355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:40.625: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:41.489370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:42.489414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:42.627: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:43.489846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:44.489982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:44.630: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:45.490221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:46.490349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:46.632: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:47.490941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:48.491262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:48.634: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:49.492122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:50.492190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:50.636: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:51.492942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:52.493023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:52.637: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:53.493543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:54.493673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:54.639: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:55.493764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:56.493893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:56.641: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:57.494365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:18:58.494504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:18:58.643: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:18:59.494598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:00.495603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:00.645: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:01.496431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:02.496646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:02.647: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:03.497493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:04.498540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:04.649: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:05.498571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:06.499589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:06.651: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:07.500143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:08.500712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:08.653: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:09.501552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:10.501633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:10.655: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:11.502649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:12.503023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:12.657: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:13.503694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:14.503801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:14.660: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:15.503967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:16.504112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:16.661: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:17.505054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:18.505250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:18.664: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:19.505587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:20.506006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:20.665: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:21.506671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:22.507232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:22.668: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:23.507318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:24.507437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:24.670: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:25.507623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:26.508474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:26.673: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:27.509471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:28.509938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:28.675: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:29.510607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:30.510727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:30.677: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:31.510810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:32.510942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:32.679: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:33.511848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:34.511965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:34.682: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:35.512047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:36.512171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:36.684: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:37.512709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:38.512842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:38.686: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:39.513469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:40.514145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:40.689: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:41.514334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:42.514449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:42.691: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:43.515404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:44.515498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:44.693: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:45.515720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:46.515847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:46.695: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:47.516023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:48.516633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:48.698: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:49.517486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:50.518469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:50.700: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:51.518550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:52.519204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:52.702: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:53.519874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:54.519955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:54.705: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:55.520114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:56.520340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:56.707: INFO: Get pod busybox-95c2addd-afda-4fb4-a917-85914c9214e4 in namespace container-probe-7386
  E0904 14:19:57.520410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:19:58.521475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:19:58.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 14:19:58.709
  STEP: Destroying namespace "container-probe-7386" for this suite. @ 09/04/23 14:19:58.716
• [242.298 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/04/23 14:19:58.721
  Sep  4 14:19:58.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 14:19:58.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:19:58.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:19:58.729
  STEP: Creating the pod @ 09/04/23 14:19:58.73
  E0904 14:19:59.522362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:00.522583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:20:01.254: INFO: Successfully updated pod "annotationupdate5a1f0628-f9c9-4619-aa80-4f76420aa92d"
  E0904 14:20:01.522824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:02.522960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:20:03.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9718" for this suite. @ 09/04/23 14:20:03.262
• [4.543 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/04/23 14:20:03.264
  Sep  4 14:20:03.264: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-probe @ 09/04/23 14:20:03.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:20:03.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:20:03.273
  E0904 14:20:03.523544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:04.524590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:05.524677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:06.525473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:07.525645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:08.526140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:09.526814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:10.527524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:11.528162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:12.528885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:13.529760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:14.530365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:15.531058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:16.531503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:17.532366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:18.533289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:19.534019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:20.534970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:21.535363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:22.536114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:23.536922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:24.537484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:25.538531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:26.539459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:27.540111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:28.540962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:29.541479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:30.542142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:31.542817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:32.543506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:33.544302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:34.545142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:35.545486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:36.545825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:37.546241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:38.546930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:39.547487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:40.548259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:41.548365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:42.549043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:43.549982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:44.550050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:45.551095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:46.551394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:47.551750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:48.552409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:49.552946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:50.553488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:51.554212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:52.554348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:53.555217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:54.556278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:55.556337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:56.557163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:57.557762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:58.558402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:20:59.559174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:00.559259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:01.560059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:02.560377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:03.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9341" for this suite. @ 09/04/23 14:21:03.28
• [60.018 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 09/04/23 14:21:03.282
  Sep  4 14:21:03.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/23 14:21:03.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:21:03.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:21:03.29
  STEP: fetching the /apis discovery document @ 09/04/23 14:21:03.291
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/04/23 14:21:03.292
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/04/23 14:21:03.292
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/04/23 14:21:03.292
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/04/23 14:21:03.292
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/04/23 14:21:03.292
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/04/23 14:21:03.293
  Sep  4 14:21:03.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9515" for this suite. @ 09/04/23 14:21:03.294
• [0.014 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 09/04/23 14:21:03.297
  Sep  4 14:21:03.297: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename namespaces @ 09/04/23 14:21:03.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:21:03.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:21:03.303
  STEP: Read namespace status @ 09/04/23 14:21:03.306
  Sep  4 14:21:03.307: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/04/23 14:21:03.307
  Sep  4 14:21:03.309: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/04/23 14:21:03.309
  Sep  4 14:21:03.313: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Sep  4 14:21:03.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1357" for this suite. @ 09/04/23 14:21:03.314
• [0.019 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/04/23 14:21:03.316
  Sep  4 14:21:03.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-probe @ 09/04/23 14:21:03.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:21:03.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:21:03.324
  E0904 14:21:03.560600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:04.561478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:05.561860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:06.561992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:07.562940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:08.563166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:09.563879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:10.564108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:11.564210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:12.564353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:13.565159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:14.565469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:15.566199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:16.566333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:17.566548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:18.566755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:19.567132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:20.567261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:21.567833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:22.567922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:23.568713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:24.568789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:25.352: INFO: Container started at 2023-09-04 14:21:03 +0000 UTC, pod became ready at 2023-09-04 14:21:23 +0000 UTC
  Sep  4 14:21:25.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8419" for this suite. @ 09/04/23 14:21:25.353
• [22.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 09/04/23 14:21:25.357
  Sep  4 14:21:25.357: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename aggregator @ 09/04/23 14:21:25.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:21:25.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:21:25.364
  Sep  4 14:21:25.366: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Registering the sample API server. @ 09/04/23 14:21:25.366
  E0904 14:21:25.569313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:25.641: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Sep  4 14:21:25.658: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  E0904 14:21:26.569941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:27.570443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:27.677: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:28.570655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:29.570787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:29.679: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:30.571833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:31.571924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:31.679: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:32.572423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:33.573434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:33.680: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:34.574157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:35.574293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:35.680: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:36.574926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:37.575923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:37.680: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:38.576930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:39.577496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:39.680: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:40.578361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:41.578511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:41.680: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:42.579398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:43.579473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:43.680: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:44.579625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:45.579901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:45.679: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:46.580424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:47.580824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:47.679: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:48.581312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:49.581437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:49.680: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:21:50.581496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:51.581580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:21:51.788: INFO: Waited 105.318504ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/04/23 14:21:51.805
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/04/23 14:21:51.806
  STEP: List APIServices @ 09/04/23 14:21:51.809
  Sep  4 14:21:51.812: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/04/23 14:21:51.812
  Sep  4 14:21:51.818: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/04/23 14:21:51.818
  Sep  4 14:21:51.822: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.September, 4, 14, 21, 51, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/04/23 14:21:51.822
  Sep  4 14:21:51.824: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-09-04 14:21:51 +0000 UTC Passed all checks passed}
  Sep  4 14:21:51.824: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  4 14:21:51.824: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/04/23 14:21:51.824
  Sep  4 14:21:51.828: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1232226528" @ 09/04/23 14:21:51.828
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/04/23 14:21:51.832
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/04/23 14:21:51.835
  STEP: Patch APIService Status @ 09/04/23 14:21:51.836
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/04/23 14:21:51.84
  Sep  4 14:21:51.841: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-09-04 14:21:51 +0000 UTC Passed all checks passed}
  Sep  4 14:21:51.841: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  4 14:21:51.841: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Sep  4 14:21:51.841: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 09/04/23 14:21:51.841
  STEP: Confirm that the generated APIService has been deleted @ 09/04/23 14:21:51.843
  Sep  4 14:21:51.843: INFO: Requesting list of APIServices to confirm quantity
  Sep  4 14:21:51.844: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Sep  4 14:21:51.844: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Sep  4 14:21:51.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-962" for this suite. @ 09/04/23 14:21:51.905
• [26.576 seconds]
------------------------------
SSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 09/04/23 14:21:51.933
  Sep  4 14:21:51.933: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename ingress @ 09/04/23 14:21:51.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:21:52.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:21:52.036
  STEP: getting /apis @ 09/04/23 14:21:52.038
  STEP: getting /apis/networking.k8s.io @ 09/04/23 14:21:52.04
  STEP: getting /apis/networking.k8s.iov1 @ 09/04/23 14:21:52.04
  STEP: creating @ 09/04/23 14:21:52.041
  E0904 14:21:52.582144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting @ 09/04/23 14:21:53.144
  STEP: listing @ 09/04/23 14:21:53.146
  STEP: watching @ 09/04/23 14:21:53.147
  Sep  4 14:21:53.147: INFO: starting watch
  STEP: cluster-wide listing @ 09/04/23 14:21:53.148
  STEP: cluster-wide watching @ 09/04/23 14:21:53.149
  Sep  4 14:21:53.149: INFO: starting watch
  STEP: patching @ 09/04/23 14:21:53.149
  STEP: updating @ 09/04/23 14:21:53.152
  Sep  4 14:21:53.156: INFO: waiting for watch events with expected annotations
  Sep  4 14:21:53.156: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/04/23 14:21:53.156
  STEP: updating /status @ 09/04/23 14:21:53.158
  STEP: get /status @ 09/04/23 14:21:53.162
  STEP: deleting @ 09/04/23 14:21:53.163
  STEP: deleting a collection @ 09/04/23 14:21:53.176
  Sep  4 14:21:53.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7440" for this suite. @ 09/04/23 14:21:53.182
• [1.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/04/23 14:21:53.186
  Sep  4 14:21:53.186: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename proxy @ 09/04/23 14:21:53.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:21:53.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:21:53.193
  STEP: starting an echo server on multiple ports @ 09/04/23 14:21:53.199
  STEP: creating replication controller proxy-service-xdnb7 in namespace proxy-2957 @ 09/04/23 14:21:53.199
  I0904 14:21:53.204120      22 runners.go:197] Created replication controller with name: proxy-service-xdnb7, namespace: proxy-2957, replica count: 1
  E0904 14:21:53.582394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:21:54.255777      22 runners.go:197] proxy-service-xdnb7 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0904 14:21:54.583241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:21:55.255895      22 runners.go:197] proxy-service-xdnb7 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  4 14:21:55.257: INFO: setup took 2.062162205s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/04/23 14:21:55.257
  Sep  4 14:21:55.259: INFO: (0) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 2.240766ms)
  Sep  4 14:21:55.261: INFO: (0) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 4.087524ms)
  Sep  4 14:21:55.261: INFO: (0) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 4.194833ms)
  Sep  4 14:21:55.261: INFO: (0) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 4.418591ms)
  Sep  4 14:21:55.264: INFO: (0) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 6.820232ms)
  Sep  4 14:21:55.264: INFO: (0) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 6.847401ms)
  Sep  4 14:21:55.264: INFO: (0) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 6.970894ms)
  Sep  4 14:21:55.264: INFO: (0) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 6.987712ms)
  Sep  4 14:21:55.265: INFO: (0) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 8.436524ms)
  Sep  4 14:21:55.265: INFO: (0) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 8.584289ms)
  Sep  4 14:21:55.265: INFO: (0) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 8.419399ms)
  Sep  4 14:21:55.266: INFO: (0) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 8.539158ms)
  Sep  4 14:21:55.266: INFO: (0) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 8.54339ms)
  Sep  4 14:21:55.266: INFO: (0) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 8.625397ms)
  Sep  4 14:21:55.266: INFO: (0) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 9.152052ms)
  Sep  4 14:21:55.266: INFO: (0) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 9.297932ms)
  Sep  4 14:21:55.269: INFO: (1) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 2.538545ms)
  Sep  4 14:21:55.269: INFO: (1) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.603422ms)
  Sep  4 14:21:55.269: INFO: (1) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.581024ms)
  Sep  4 14:21:55.269: INFO: (1) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 2.740144ms)
  Sep  4 14:21:55.269: INFO: (1) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.613999ms)
  Sep  4 14:21:55.269: INFO: (1) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 2.835935ms)
  Sep  4 14:21:55.269: INFO: (1) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 2.848063ms)
  Sep  4 14:21:55.270: INFO: (1) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.121492ms)
  Sep  4 14:21:55.270: INFO: (1) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 3.246942ms)
  Sep  4 14:21:55.270: INFO: (1) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 3.208649ms)
  Sep  4 14:21:55.270: INFO: (1) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 3.342337ms)
  Sep  4 14:21:55.270: INFO: (1) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 3.588007ms)
  Sep  4 14:21:55.270: INFO: (1) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 3.627929ms)
  Sep  4 14:21:55.270: INFO: (1) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 3.729255ms)
  Sep  4 14:21:55.270: INFO: (1) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 3.662474ms)
  Sep  4 14:21:55.270: INFO: (1) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 3.746698ms)
  Sep  4 14:21:55.272: INFO: (2) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 1.7394ms)
  Sep  4 14:21:55.274: INFO: (2) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 3.613531ms)
  Sep  4 14:21:55.274: INFO: (2) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.734713ms)
  Sep  4 14:21:55.274: INFO: (2) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 3.774768ms)
  Sep  4 14:21:55.274: INFO: (2) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 3.853507ms)
  Sep  4 14:21:55.274: INFO: (2) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 3.911265ms)
  Sep  4 14:21:55.274: INFO: (2) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 3.929455ms)
  Sep  4 14:21:55.274: INFO: (2) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 3.93199ms)
  Sep  4 14:21:55.274: INFO: (2) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 4.069434ms)
  Sep  4 14:21:55.274: INFO: (2) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 4.195255ms)
  Sep  4 14:21:55.274: INFO: (2) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 4.075481ms)
  Sep  4 14:21:55.275: INFO: (2) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 4.326186ms)
  Sep  4 14:21:55.275: INFO: (2) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 4.312202ms)
  Sep  4 14:21:55.279: INFO: (2) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 8.385605ms)
  Sep  4 14:21:55.279: INFO: (2) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 8.351529ms)
  Sep  4 14:21:55.279: INFO: (2) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 8.472257ms)
  Sep  4 14:21:55.280: INFO: (3) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 1.344803ms)
  Sep  4 14:21:55.280: INFO: (3) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 1.531997ms)
  Sep  4 14:21:55.282: INFO: (3) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.843322ms)
  Sep  4 14:21:55.282: INFO: (3) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 2.873485ms)
  Sep  4 14:21:55.282: INFO: (3) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.88439ms)
  Sep  4 14:21:55.282: INFO: (3) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 2.952096ms)
  Sep  4 14:21:55.282: INFO: (3) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.125414ms)
  Sep  4 14:21:55.282: INFO: (3) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 3.24158ms)
  Sep  4 14:21:55.282: INFO: (3) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 3.324319ms)
  Sep  4 14:21:55.282: INFO: (3) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 3.214929ms)
  Sep  4 14:21:55.282: INFO: (3) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.293792ms)
  Sep  4 14:21:55.283: INFO: (3) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 4.064881ms)
  Sep  4 14:21:55.283: INFO: (3) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 4.131324ms)
  Sep  4 14:21:55.283: INFO: (3) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 4.103872ms)
  Sep  4 14:21:55.283: INFO: (3) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 4.100585ms)
  Sep  4 14:21:55.283: INFO: (3) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 4.139016ms)
  Sep  4 14:21:55.285: INFO: (4) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 1.762226ms)
  Sep  4 14:21:55.286: INFO: (4) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.716508ms)
  Sep  4 14:21:55.286: INFO: (4) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 2.826558ms)
  Sep  4 14:21:55.286: INFO: (4) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 3.207332ms)
  Sep  4 14:21:55.286: INFO: (4) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 3.216221ms)
  Sep  4 14:21:55.286: INFO: (4) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.17267ms)
  Sep  4 14:21:55.286: INFO: (4) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 3.15436ms)
  Sep  4 14:21:55.286: INFO: (4) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.219377ms)
  Sep  4 14:21:55.286: INFO: (4) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.274476ms)
  Sep  4 14:21:55.286: INFO: (4) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 3.482638ms)
  Sep  4 14:21:55.287: INFO: (4) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 3.538377ms)
  Sep  4 14:21:55.287: INFO: (4) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 4.479267ms)
  Sep  4 14:21:55.287: INFO: (4) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 4.470698ms)
  Sep  4 14:21:55.288: INFO: (4) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 4.628839ms)
  Sep  4 14:21:55.288: INFO: (4) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 4.500298ms)
  Sep  4 14:21:55.288: INFO: (4) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 4.530209ms)
  Sep  4 14:21:55.289: INFO: (5) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 1.69717ms)
  Sep  4 14:21:55.290: INFO: (5) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.344525ms)
  Sep  4 14:21:55.290: INFO: (5) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 2.445852ms)
  Sep  4 14:21:55.290: INFO: (5) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 2.510461ms)
  Sep  4 14:21:55.290: INFO: (5) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 2.581698ms)
  Sep  4 14:21:55.290: INFO: (5) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.5302ms)
  Sep  4 14:21:55.291: INFO: (5) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 3.566331ms)
  Sep  4 14:21:55.291: INFO: (5) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 3.629493ms)
  Sep  4 14:21:55.291: INFO: (5) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 3.808961ms)
  Sep  4 14:21:55.291: INFO: (5) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 3.762665ms)
  Sep  4 14:21:55.292: INFO: (5) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 4.691099ms)
  Sep  4 14:21:55.292: INFO: (5) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 4.681954ms)
  Sep  4 14:21:55.293: INFO: (5) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 4.931619ms)
  Sep  4 14:21:55.295: INFO: (5) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 6.863831ms)
  Sep  4 14:21:55.295: INFO: (5) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 6.828909ms)
  Sep  4 14:21:55.299: INFO: (5) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 11.037417ms)
  Sep  4 14:21:55.301: INFO: (6) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 1.974005ms)
  Sep  4 14:21:55.301: INFO: (6) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 2.138399ms)
  Sep  4 14:21:55.302: INFO: (6) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 2.682456ms)
  Sep  4 14:21:55.302: INFO: (6) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.644533ms)
  Sep  4 14:21:55.302: INFO: (6) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 2.787644ms)
  Sep  4 14:21:55.302: INFO: (6) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 2.690042ms)
  Sep  4 14:21:55.302: INFO: (6) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.691548ms)
  Sep  4 14:21:55.302: INFO: (6) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 2.790165ms)
  Sep  4 14:21:55.302: INFO: (6) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.899255ms)
  Sep  4 14:21:55.302: INFO: (6) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 3.187919ms)
  Sep  4 14:21:55.302: INFO: (6) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 3.233783ms)
  Sep  4 14:21:55.303: INFO: (6) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 3.820047ms)
  Sep  4 14:21:55.303: INFO: (6) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 3.861985ms)
  Sep  4 14:21:55.303: INFO: (6) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 3.920983ms)
  Sep  4 14:21:55.303: INFO: (6) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 4.463791ms)
  Sep  4 14:21:55.309: INFO: (6) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 9.753937ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 6.183336ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 6.337668ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 6.182974ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 6.292194ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 6.225052ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 6.440494ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 6.361203ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 6.485297ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 6.42909ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 6.443747ms)
  Sep  4 14:21:55.315: INFO: (7) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 6.38529ms)
  Sep  4 14:21:55.316: INFO: (7) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 7.086844ms)
  Sep  4 14:21:55.316: INFO: (7) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 7.152441ms)
  Sep  4 14:21:55.316: INFO: (7) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 7.249961ms)
  Sep  4 14:21:55.316: INFO: (7) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 7.372071ms)
  Sep  4 14:21:55.316: INFO: (7) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 7.383962ms)
  Sep  4 14:21:55.319: INFO: (8) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 2.628828ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.445978ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 3.435053ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 3.615068ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 3.653096ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.770999ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 3.733126ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 3.77608ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 3.974786ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 3.889633ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 3.861425ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 3.927682ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 3.876346ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 3.925314ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.958858ms)
  Sep  4 14:21:55.320: INFO: (8) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 4.094775ms)
  Sep  4 14:21:55.322: INFO: (9) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 1.820866ms)
  Sep  4 14:21:55.323: INFO: (9) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 3.098847ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.244179ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 3.280602ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 3.276463ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 3.338701ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 3.459919ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 3.415229ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 3.711103ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 3.666442ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.737234ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 3.838352ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.826619ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 3.935352ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.875267ms)
  Sep  4 14:21:55.324: INFO: (9) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 3.942984ms)
  Sep  4 14:21:55.326: INFO: (10) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.09071ms)
  Sep  4 14:21:55.327: INFO: (10) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 2.166311ms)
  Sep  4 14:21:55.327: INFO: (10) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.380814ms)
  Sep  4 14:21:55.327: INFO: (10) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.357678ms)
  Sep  4 14:21:55.327: INFO: (10) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.676271ms)
  Sep  4 14:21:55.327: INFO: (10) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 2.742168ms)
  Sep  4 14:21:55.327: INFO: (10) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 2.854019ms)
  Sep  4 14:21:55.327: INFO: (10) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 2.916019ms)
  Sep  4 14:21:55.327: INFO: (10) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 2.896872ms)
  Sep  4 14:21:55.327: INFO: (10) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 2.931149ms)
  Sep  4 14:21:55.329: INFO: (10) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 4.239895ms)
  Sep  4 14:21:55.329: INFO: (10) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 4.237543ms)
  Sep  4 14:21:55.329: INFO: (10) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 4.296703ms)
  Sep  4 14:21:55.329: INFO: (10) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 4.3615ms)
  Sep  4 14:21:55.329: INFO: (10) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 4.381718ms)
  Sep  4 14:21:55.336: INFO: (10) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 11.291109ms)
  Sep  4 14:21:55.338: INFO: (11) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 2.564233ms)
  Sep  4 14:21:55.338: INFO: (11) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.570634ms)
  Sep  4 14:21:55.338: INFO: (11) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.738991ms)
  Sep  4 14:21:55.338: INFO: (11) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 2.695687ms)
  Sep  4 14:21:55.339: INFO: (11) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.795138ms)
  Sep  4 14:21:55.339: INFO: (11) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.746393ms)
  Sep  4 14:21:55.339: INFO: (11) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 2.790261ms)
  Sep  4 14:21:55.339: INFO: (11) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 2.961464ms)
  Sep  4 14:21:55.339: INFO: (11) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 2.873584ms)
  Sep  4 14:21:55.339: INFO: (11) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 3.036668ms)
  Sep  4 14:21:55.340: INFO: (11) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 3.853245ms)
  Sep  4 14:21:55.340: INFO: (11) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 3.895633ms)
  Sep  4 14:21:55.340: INFO: (11) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 4.095025ms)
  Sep  4 14:21:55.340: INFO: (11) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 4.040085ms)
  Sep  4 14:21:55.340: INFO: (11) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 4.143272ms)
  Sep  4 14:21:55.340: INFO: (11) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 4.270409ms)
  Sep  4 14:21:55.342: INFO: (12) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 1.670571ms)
  Sep  4 14:21:55.342: INFO: (12) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 2.071648ms)
  Sep  4 14:21:55.342: INFO: (12) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.086142ms)
  Sep  4 14:21:55.342: INFO: (12) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.228572ms)
  Sep  4 14:21:55.344: INFO: (12) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 3.55505ms)
  Sep  4 14:21:55.344: INFO: (12) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.709511ms)
  Sep  4 14:21:55.344: INFO: (12) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 3.71569ms)
  Sep  4 14:21:55.344: INFO: (12) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.777256ms)
  Sep  4 14:21:55.344: INFO: (12) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 3.871162ms)
  Sep  4 14:21:55.344: INFO: (12) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 4.192757ms)
  Sep  4 14:21:55.344: INFO: (12) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 4.312625ms)
  Sep  4 14:21:55.344: INFO: (12) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 4.394153ms)
  Sep  4 14:21:55.344: INFO: (12) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 4.298505ms)
  Sep  4 14:21:55.345: INFO: (12) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 4.394224ms)
  Sep  4 14:21:55.345: INFO: (12) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 4.510617ms)
  Sep  4 14:21:55.345: INFO: (12) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 4.518578ms)
  Sep  4 14:21:55.347: INFO: (13) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 2.394841ms)
  Sep  4 14:21:55.347: INFO: (13) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 2.535184ms)
  Sep  4 14:21:55.347: INFO: (13) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 2.535012ms)
  Sep  4 14:21:55.347: INFO: (13) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 2.571452ms)
  Sep  4 14:21:55.348: INFO: (13) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 3.222464ms)
  Sep  4 14:21:55.348: INFO: (13) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 3.366645ms)
  Sep  4 14:21:55.348: INFO: (13) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 3.086183ms)
  Sep  4 14:21:55.348: INFO: (13) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.202604ms)
  Sep  4 14:21:55.348: INFO: (13) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 3.462283ms)
  Sep  4 14:21:55.348: INFO: (13) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 3.657894ms)
  Sep  4 14:21:55.348: INFO: (13) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.451078ms)
  Sep  4 14:21:55.349: INFO: (13) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 3.702645ms)
  Sep  4 14:21:55.349: INFO: (13) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.614879ms)
  Sep  4 14:21:55.349: INFO: (13) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.615827ms)
  Sep  4 14:21:55.349: INFO: (13) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 4.533645ms)
  Sep  4 14:21:55.349: INFO: (13) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 4.415689ms)
  Sep  4 14:21:55.351: INFO: (14) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 1.499661ms)
  Sep  4 14:21:55.353: INFO: (14) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.55139ms)
  Sep  4 14:21:55.353: INFO: (14) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 3.767417ms)
  Sep  4 14:21:55.353: INFO: (14) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 3.717694ms)
  Sep  4 14:21:55.353: INFO: (14) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.892655ms)
  Sep  4 14:21:55.353: INFO: (14) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 4.063112ms)
  Sep  4 14:21:55.354: INFO: (14) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 4.209749ms)
  Sep  4 14:21:55.354: INFO: (14) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 4.222664ms)
  Sep  4 14:21:55.354: INFO: (14) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 4.108411ms)
  Sep  4 14:21:55.354: INFO: (14) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 4.196209ms)
  Sep  4 14:21:55.354: INFO: (14) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 4.269093ms)
  Sep  4 14:21:55.354: INFO: (14) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 4.307503ms)
  Sep  4 14:21:55.354: INFO: (14) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 4.323955ms)
  Sep  4 14:21:55.354: INFO: (14) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 4.323913ms)
  Sep  4 14:21:55.354: INFO: (14) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 4.592525ms)
  Sep  4 14:21:55.354: INFO: (14) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 4.519349ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 4.497376ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 4.705576ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 4.830122ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 4.974763ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 4.872786ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 4.875012ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 4.834139ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 4.924465ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 4.900984ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 4.881951ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 5.088821ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 5.146076ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 5.177184ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 5.01992ms)
  Sep  4 14:21:55.359: INFO: (15) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 5.081819ms)
  Sep  4 14:21:55.366: INFO: (15) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 11.550384ms)
  Sep  4 14:21:55.368: INFO: (16) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 1.872395ms)
  Sep  4 14:21:55.368: INFO: (16) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 1.939305ms)
  Sep  4 14:21:55.368: INFO: (16) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.085054ms)
  Sep  4 14:21:55.368: INFO: (16) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 2.426047ms)
  Sep  4 14:21:55.368: INFO: (16) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 2.534618ms)
  Sep  4 14:21:55.368: INFO: (16) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 2.648187ms)
  Sep  4 14:21:55.369: INFO: (16) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 2.71604ms)
  Sep  4 14:21:55.369: INFO: (16) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 3.481827ms)
  Sep  4 14:21:55.369: INFO: (16) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.367988ms)
  Sep  4 14:21:55.369: INFO: (16) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 3.430502ms)
  Sep  4 14:21:55.369: INFO: (16) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 3.442935ms)
  Sep  4 14:21:55.369: INFO: (16) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 3.569494ms)
  Sep  4 14:21:55.370: INFO: (16) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 4.631876ms)
  Sep  4 14:21:55.370: INFO: (16) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 4.59282ms)
  Sep  4 14:21:55.371: INFO: (16) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 4.649488ms)
  Sep  4 14:21:55.371: INFO: (16) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 4.742624ms)
  Sep  4 14:21:55.373: INFO: (17) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 1.943429ms)
  Sep  4 14:21:55.373: INFO: (17) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.002445ms)
  Sep  4 14:21:55.373: INFO: (17) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 2.107941ms)
  Sep  4 14:21:55.373: INFO: (17) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 2.162717ms)
  Sep  4 14:21:55.373: INFO: (17) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 2.412539ms)
  Sep  4 14:21:55.373: INFO: (17) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.421475ms)
  Sep  4 14:21:55.373: INFO: (17) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 2.665767ms)
  Sep  4 14:21:55.373: INFO: (17) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 2.51024ms)
  Sep  4 14:21:55.374: INFO: (17) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 3.006864ms)
  Sep  4 14:21:55.374: INFO: (17) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 3.362751ms)
  Sep  4 14:21:55.374: INFO: (17) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 3.255439ms)
  Sep  4 14:21:55.374: INFO: (17) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 3.539927ms)
  Sep  4 14:21:55.375: INFO: (17) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 3.97693ms)
  Sep  4 14:21:55.375: INFO: (17) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 3.854009ms)
  Sep  4 14:21:55.375: INFO: (17) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 3.881583ms)
  Sep  4 14:21:55.375: INFO: (17) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 4.142472ms)
  Sep  4 14:21:55.377: INFO: (18) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 2.056716ms)
  Sep  4 14:21:55.377: INFO: (18) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 2.068268ms)
  Sep  4 14:21:55.377: INFO: (18) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 2.245721ms)
  Sep  4 14:21:55.378: INFO: (18) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 2.437826ms)
  Sep  4 14:21:55.378: INFO: (18) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 2.509186ms)
  Sep  4 14:21:55.379: INFO: (18) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 3.987039ms)
  Sep  4 14:21:55.381: INFO: (18) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 6.179987ms)
  Sep  4 14:21:55.384: INFO: (18) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 8.448338ms)
  Sep  4 14:21:55.384: INFO: (18) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 8.560053ms)
  Sep  4 14:21:55.384: INFO: (18) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 9.200592ms)
  Sep  4 14:21:55.386: INFO: (18) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 10.462288ms)
  Sep  4 14:21:55.386: INFO: (18) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 10.452363ms)
  Sep  4 14:21:55.388: INFO: (18) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 12.676464ms)
  Sep  4 14:21:55.388: INFO: (18) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 12.734332ms)
  Sep  4 14:21:55.388: INFO: (18) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 12.742812ms)
  Sep  4 14:21:55.389: INFO: (18) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 13.475607ms)
  Sep  4 14:21:55.394: INFO: (19) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:1080/proxy/rewriteme">test<... (200; 5.3407ms)
  Sep  4 14:21:55.394: INFO: (19) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:162/proxy/: bar (200; 5.459889ms)
  Sep  4 14:21:55.395: INFO: (19) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname2/proxy/: bar (200; 6.093088ms)
  Sep  4 14:21:55.397: INFO: (19) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:1080/proxy/rewriteme">... (200; 8.478081ms)
  Sep  4 14:21:55.399: INFO: (19) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:162/proxy/: bar (200; 9.851141ms)
  Sep  4 14:21:55.399: INFO: (19) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb/proxy/rewriteme">test</a> (200; 10.366038ms)
  Sep  4 14:21:55.399: INFO: (19) /api/v1/namespaces/proxy-2957/services/http:proxy-service-xdnb7:portname1/proxy/: foo (200; 10.490257ms)
  Sep  4 14:21:55.400: INFO: (19) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:460/proxy/: tls baz (200; 11.195363ms)
  Sep  4 14:21:55.400: INFO: (19) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/: <a href="/api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:443/proxy/tlsrewritem... (200; 10.989522ms)
  Sep  4 14:21:55.402: INFO: (19) /api/v1/namespaces/proxy-2957/pods/https:proxy-service-xdnb7-knssb:462/proxy/: tls qux (200; 13.409717ms)
  Sep  4 14:21:55.402: INFO: (19) /api/v1/namespaces/proxy-2957/pods/proxy-service-xdnb7-knssb:160/proxy/: foo (200; 13.278903ms)
  Sep  4 14:21:55.402: INFO: (19) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname2/proxy/: tls qux (200; 13.518907ms)
  Sep  4 14:21:55.402: INFO: (19) /api/v1/namespaces/proxy-2957/pods/http:proxy-service-xdnb7-knssb:160/proxy/: foo (200; 13.279578ms)
  Sep  4 14:21:55.404: INFO: (19) /api/v1/namespaces/proxy-2957/services/https:proxy-service-xdnb7:tlsportname1/proxy/: tls baz (200; 14.803629ms)
  Sep  4 14:21:55.404: INFO: (19) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname2/proxy/: bar (200; 14.734907ms)
  Sep  4 14:21:55.404: INFO: (19) /api/v1/namespaces/proxy-2957/services/proxy-service-xdnb7:portname1/proxy/: foo (200; 14.794628ms)
  Sep  4 14:21:55.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-xdnb7 in namespace proxy-2957, will wait for the garbage collector to delete the pods @ 09/04/23 14:21:55.406
  Sep  4 14:21:55.460: INFO: Deleting ReplicationController proxy-service-xdnb7 took: 2.212406ms
  Sep  4 14:21:55.561: INFO: Terminating ReplicationController proxy-service-xdnb7 pods took: 100.556426ms
  E0904 14:21:55.583451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:56.584485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:57.584729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-2957" for this suite. @ 09/04/23 14:21:57.962
• [4.779 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 09/04/23 14:21:57.966
  Sep  4 14:21:57.966: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 14:21:57.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:21:57.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:21:57.974
  STEP: Setting up server cert @ 09/04/23 14:21:57.982
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 14:21:58.254
  STEP: Deploying the webhook pod @ 09/04/23 14:21:58.257
  STEP: Wait for the deployment to be ready @ 09/04/23 14:21:58.262
  Sep  4 14:21:58.265: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 14:21:58.585470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:21:59.585706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:22:00.271
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:22:00.276
  E0904 14:22:00.585865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:22:01.276: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/04/23 14:22:01.279
  STEP: create a pod @ 09/04/23 14:22:01.287
  E0904 14:22:01.586177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:02.586953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/04/23 14:22:03.294
  Sep  4 14:22:03.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=webhook-3889 attach --namespace=webhook-3889 to-be-attached-pod -i -c=container1'
  Sep  4 14:22:03.341: INFO: rc: 1
  Sep  4 14:22:03.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3889" for this suite. @ 09/04/23 14:22:03.361
  STEP: Destroying namespace "webhook-markers-1645" for this suite. @ 09/04/23 14:22:03.366
• [5.407 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 09/04/23 14:22:03.373
  Sep  4 14:22:03.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename controllerrevisions @ 09/04/23 14:22:03.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:22:03.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:22:03.383
  STEP: Creating DaemonSet "e2e-bgvrv-daemon-set" @ 09/04/23 14:22:03.394
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/23 14:22:03.396
  Sep  4 14:22:03.399: INFO: Number of nodes with available pods controlled by daemonset e2e-bgvrv-daemon-set: 0
  Sep  4 14:22:03.399: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:22:03.586997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:22:04.403: INFO: Number of nodes with available pods controlled by daemonset e2e-bgvrv-daemon-set: 0
  Sep  4 14:22:04.403: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:22:04.587699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:22:05.403: INFO: Number of nodes with available pods controlled by daemonset e2e-bgvrv-daemon-set: 3
  Sep  4 14:22:05.403: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-bgvrv-daemon-set
  STEP: Confirm DaemonSet "e2e-bgvrv-daemon-set" successfully created with "daemonset-name=e2e-bgvrv-daemon-set" label @ 09/04/23 14:22:05.404
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-bgvrv-daemon-set" @ 09/04/23 14:22:05.407
  Sep  4 14:22:05.408: INFO: Located ControllerRevision: "e2e-bgvrv-daemon-set-6cc8c54748"
  STEP: Patching ControllerRevision "e2e-bgvrv-daemon-set-6cc8c54748" @ 09/04/23 14:22:05.408
  Sep  4 14:22:05.411: INFO: e2e-bgvrv-daemon-set-6cc8c54748 has been patched
  STEP: Create a new ControllerRevision @ 09/04/23 14:22:05.411
  Sep  4 14:22:05.413: INFO: Created ControllerRevision: e2e-bgvrv-daemon-set-7999b76c86
  STEP: Confirm that there are two ControllerRevisions @ 09/04/23 14:22:05.413
  Sep  4 14:22:05.413: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep  4 14:22:05.414: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-bgvrv-daemon-set-6cc8c54748" @ 09/04/23 14:22:05.414
  STEP: Confirm that there is only one ControllerRevision @ 09/04/23 14:22:05.417
  Sep  4 14:22:05.417: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep  4 14:22:05.417: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-bgvrv-daemon-set-7999b76c86" @ 09/04/23 14:22:05.418
  Sep  4 14:22:05.421: INFO: e2e-bgvrv-daemon-set-7999b76c86 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/04/23 14:22:05.421
  W0904 14:22:05.425739      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/04/23 14:22:05.425
  Sep  4 14:22:05.425: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0904 14:22:05.588121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:22:06.426: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep  4 14:22:06.428: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-bgvrv-daemon-set-7999b76c86=updated" @ 09/04/23 14:22:06.428
  STEP: Confirm that there is only one ControllerRevision @ 09/04/23 14:22:06.432
  Sep  4 14:22:06.432: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep  4 14:22:06.433: INFO: Found 1 ControllerRevisions
  Sep  4 14:22:06.434: INFO: ControllerRevision "e2e-bgvrv-daemon-set-59466b46f9" has revision 3
  STEP: Deleting DaemonSet "e2e-bgvrv-daemon-set" @ 09/04/23 14:22:06.435
  STEP: deleting DaemonSet.extensions e2e-bgvrv-daemon-set in namespace controllerrevisions-6629, will wait for the garbage collector to delete the pods @ 09/04/23 14:22:06.435
  Sep  4 14:22:06.489: INFO: Deleting DaemonSet.extensions e2e-bgvrv-daemon-set took: 3.173951ms
  E0904 14:22:06.589087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:22:06.590: INFO: Terminating DaemonSet.extensions e2e-bgvrv-daemon-set pods took: 100.491007ms
  E0904 14:22:07.589466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:22:07.991: INFO: Number of nodes with available pods controlled by daemonset e2e-bgvrv-daemon-set: 0
  Sep  4 14:22:07.991: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-bgvrv-daemon-set
  Sep  4 14:22:07.993: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3321"},"items":null}

  Sep  4 14:22:07.994: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3321"},"items":null}

  Sep  4 14:22:07.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6629" for this suite. @ 09/04/23 14:22:07.999
• [4.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/04/23 14:22:08.002
  Sep  4 14:22:08.002: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename subpath @ 09/04/23 14:22:08.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:22:08.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:22:08.008
  STEP: Setting up data @ 09/04/23 14:22:08.011
  STEP: Creating pod pod-subpath-test-configmap-fl2z @ 09/04/23 14:22:08.015
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/23 14:22:08.015
  E0904 14:22:08.589569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:09.589845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:10.590802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:11.591539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:12.592435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:13.592445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:14.593203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:15.593271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:16.593369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:17.593738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:18.593823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:19.593869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:20.594688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:21.594811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:22.594998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:23.595098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:24.595281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:25.595637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:26.596258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:27.596526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:28.597499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:29.597612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:30.598422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:31.599085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:22:32.048
  Sep  4 14:22:32.050: INFO: Trying to get logs from node control-panel-01 pod pod-subpath-test-configmap-fl2z container test-container-subpath-configmap-fl2z: <nil>
  STEP: delete the pod @ 09/04/23 14:22:32.059
  STEP: Deleting pod pod-subpath-test-configmap-fl2z @ 09/04/23 14:22:32.065
  Sep  4 14:22:32.065: INFO: Deleting pod "pod-subpath-test-configmap-fl2z" in namespace "subpath-274"
  Sep  4 14:22:32.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-274" for this suite. @ 09/04/23 14:22:32.067
• [24.068 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 09/04/23 14:22:32.07
  Sep  4 14:22:32.070: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/23 14:22:32.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:22:32.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:22:32.078
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/23 14:22:32.081
  E0904 14:22:32.599876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:33.600558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:34.601399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:35.601469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:36.602287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:37.603202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:38.603870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:39.604001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/04/23 14:22:40.096
  E0904 14:22:40.604103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:41.604163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/04/23 14:22:42.104
  E0904 14:22:42.604211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:43.604642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/04/23 14:22:44.11
  Sep  4 14:22:44.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4732" for this suite. @ 09/04/23 14:22:44.121
• [12.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 09/04/23 14:22:44.124
  Sep  4 14:22:44.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename endpointslice @ 09/04/23 14:22:44.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:22:44.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:22:44.132
  E0904 14:22:44.605468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:45.605538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:46.605948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:47.606235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:22:48.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-142" for this suite. @ 09/04/23 14:22:48.159
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/04/23 14:22:48.162
  Sep  4 14:22:48.163: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 14:22:48.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:22:48.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:22:48.171
  STEP: Creating configMap with name configmap-test-volume-b134ffcf-3644-43be-b090-829d868d494a @ 09/04/23 14:22:48.172
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:22:48.173
  E0904 14:22:48.607205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:49.608126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:22:50.179
  Sep  4 14:22:50.180: INFO: Trying to get logs from node control-panel-01 pod pod-configmaps-a3e219e4-e079-439a-bd7f-cf2653ed63dc container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:22:50.182
  Sep  4 14:22:50.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-921" for this suite. @ 09/04/23 14:22:50.188
• [2.028 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/04/23 14:22:50.191
  Sep  4 14:22:50.191: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename containers @ 09/04/23 14:22:50.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:22:50.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:22:50.199
  STEP: Creating a pod to test override command @ 09/04/23 14:22:50.2
  E0904 14:22:50.608353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:51.608414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:22:52.206
  Sep  4 14:22:52.207: INFO: Trying to get logs from node worker-02 pod client-containers-d864cf7b-1312-4e54-ad30-91426162fb80 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:22:52.217
  Sep  4 14:22:52.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7366" for this suite. @ 09/04/23 14:22:52.223
• [2.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 09/04/23 14:22:52.227
  Sep  4 14:22:52.227: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename namespaces @ 09/04/23 14:22:52.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:22:52.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:22:52.233
  STEP: Creating a test namespace @ 09/04/23 14:22:52.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:22:52.24
  STEP: Creating a service in the namespace @ 09/04/23 14:22:52.241
  STEP: Deleting the namespace @ 09/04/23 14:22:52.246
  STEP: Waiting for the namespace to be removed. @ 09/04/23 14:22:52.25
  E0904 14:22:52.608994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:53.609441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:54.610357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:55.611093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:56.611829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:22:57.612478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/04/23 14:22:58.252
  STEP: Verifying there is no service in the namespace @ 09/04/23 14:22:58.258
  Sep  4 14:22:58.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9545" for this suite. @ 09/04/23 14:22:58.261
  STEP: Destroying namespace "nsdeletetest-4747" for this suite. @ 09/04/23 14:22:58.263
  Sep  4 14:22:58.264: INFO: Namespace nsdeletetest-4747 was already deleted
  STEP: Destroying namespace "nsdeletetest-6972" for this suite. @ 09/04/23 14:22:58.264
• [6.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 09/04/23 14:22:58.267
  Sep  4 14:22:58.267: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename events @ 09/04/23 14:22:58.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:22:58.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:22:58.273
  STEP: creating a test event @ 09/04/23 14:22:58.276
  STEP: listing all events in all namespaces @ 09/04/23 14:22:58.278
  STEP: patching the test event @ 09/04/23 14:22:58.28
  STEP: fetching the test event @ 09/04/23 14:22:58.282
  STEP: updating the test event @ 09/04/23 14:22:58.283
  STEP: getting the test event @ 09/04/23 14:22:58.286
  STEP: deleting the test event @ 09/04/23 14:22:58.287
  STEP: listing all events in all namespaces @ 09/04/23 14:22:58.289
  Sep  4 14:22:58.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3208" for this suite. @ 09/04/23 14:22:58.292
• [0.027 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 09/04/23 14:22:58.295
  Sep  4 14:22:58.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/23 14:22:58.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:22:58.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:22:58.301
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/04/23 14:22:58.303
  Sep  4 14:22:58.303: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:22:58.613250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:22:59.495: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:22:59.613649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:00.614192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:01.614431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:02.614647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:03.615043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:23:04.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7182" for this suite. @ 09/04/23 14:23:04.211
• [5.919 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 09/04/23 14:23:04.214
  Sep  4 14:23:04.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:23:04.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:23:04.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:23:04.221
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/04/23 14:23:04.223
  E0904 14:23:04.615573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:05.616620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:23:06.229
  Sep  4 14:23:06.230: INFO: Trying to get logs from node worker-02 pod pod-f85230f3-b932-466b-bfdb-145e0098822d container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:23:06.233
  Sep  4 14:23:06.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5206" for this suite. @ 09/04/23 14:23:06.239
• [2.027 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 09/04/23 14:23:06.241
  Sep  4 14:23:06.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-webhook @ 09/04/23 14:23:06.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:23:06.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:23:06.248
  STEP: Setting up server cert @ 09/04/23 14:23:06.25
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/04/23 14:23:06.419
  STEP: Deploying the custom resource conversion webhook pod @ 09/04/23 14:23:06.422
  STEP: Wait for the deployment to be ready @ 09/04/23 14:23:06.427
  Sep  4 14:23:06.429: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0904 14:23:06.617078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:07.617744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:23:08.434
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:23:08.438
  E0904 14:23:08.618570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:23:09.438: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep  4 14:23:09.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:23:09.619135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:10.619961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:11.620096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/04/23 14:23:12.003
  STEP: v2 custom resource should be converted @ 09/04/23 14:23:12.005
  Sep  4 14:23:12.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2756" for this suite. @ 09/04/23 14:23:12.531
• [6.294 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 09/04/23 14:23:12.535
  Sep  4 14:23:12.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename namespaces @ 09/04/23 14:23:12.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:23:12.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:23:12.55
  STEP: Updating Namespace "namespaces-8815" @ 09/04/23 14:23:12.552
  Sep  4 14:23:12.556: INFO: Namespace "namespaces-8815" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"af886277-93c3-4f48-a25e-c7b1e5af3713", "kubernetes.io/metadata.name":"namespaces-8815", "namespaces-8815":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Sep  4 14:23:12.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8815" for this suite. @ 09/04/23 14:23:12.558
• [0.026 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 09/04/23 14:23:12.561
  Sep  4 14:23:12.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:23:12.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:23:12.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:23:12.571
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/04/23 14:23:12.572
  E0904 14:23:12.620536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:13.621445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:14.622195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:15.622317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:23:16.584
  Sep  4 14:23:16.585: INFO: Trying to get logs from node control-panel-01 pod pod-89dc222e-852b-49d0-887e-902478258428 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:23:16.587
  Sep  4 14:23:16.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2658" for this suite. @ 09/04/23 14:23:16.594
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/04/23 14:23:16.597
  Sep  4 14:23:16.597: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 14:23:16.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:23:16.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:23:16.605
  STEP: Creating configMap with name configmap-test-volume-99097a98-5f07-46b6-b928-f954623d37cc @ 09/04/23 14:23:16.606
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:23:16.608
  E0904 14:23:16.622841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:17.623199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:18.623428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:19.624270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:23:20.617
  Sep  4 14:23:20.619: INFO: Trying to get logs from node worker-02 pod pod-configmaps-0339ee74-3669-4c15-8304-5fc4de51752c container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:23:20.621
  E0904 14:23:20.624819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:23:20.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5393" for this suite. @ 09/04/23 14:23:20.628
• [4.033 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 09/04/23 14:23:20.63
  Sep  4 14:23:20.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 14:23:20.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:23:20.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:23:20.638
  STEP: creating service in namespace services-8888 @ 09/04/23 14:23:20.64
  STEP: creating service affinity-clusterip in namespace services-8888 @ 09/04/23 14:23:20.64
  STEP: creating replication controller affinity-clusterip in namespace services-8888 @ 09/04/23 14:23:20.645
  I0904 14:23:20.648817      22 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-8888, replica count: 3
  E0904 14:23:21.625657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:22.626351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:23.626508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:23:23.700680      22 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  4 14:23:23.703: INFO: Creating new exec pod
  E0904 14:23:24.626695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:25.626924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:26.627411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:23:26.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-8888 exec execpod-affinityd9pbr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Sep  4 14:23:26.810: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Sep  4 14:23:26.810: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:23:26.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-8888 exec execpod-affinityd9pbr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.208.12 80'
  Sep  4 14:23:26.892: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.208.12 80\nConnection to 10.68.208.12 80 port [tcp/http] succeeded!\n"
  Sep  4 14:23:26.892: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:23:26.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-8888 exec execpod-affinityd9pbr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.208.12:80/ ; done'
  Sep  4 14:23:27.007: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.208.12:80/\n"
  Sep  4 14:23:27.007: INFO: stdout: "\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6\naffinity-clusterip-g8jr6"
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Received response from host: affinity-clusterip-g8jr6
  Sep  4 14:23:27.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 14:23:27.008: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8888, will wait for the garbage collector to delete the pods @ 09/04/23 14:23:27.014
  Sep  4 14:23:27.069: INFO: Deleting ReplicationController affinity-clusterip took: 2.874505ms
  Sep  4 14:23:27.170: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.03839ms
  E0904 14:23:27.628005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:28.629022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:29.629594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-8888" for this suite. @ 09/04/23 14:23:30.081
• [9.454 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 09/04/23 14:23:30.085
  Sep  4 14:23:30.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replication-controller @ 09/04/23 14:23:30.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:23:30.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:23:30.092
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/04/23 14:23:30.094
  E0904 14:23:30.629679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:31.630698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/04/23 14:23:32.102
  STEP: Then the orphan pod is adopted @ 09/04/23 14:23:32.105
  E0904 14:23:32.630873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:23:33.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-778" for this suite. @ 09/04/23 14:23:33.109
• [3.027 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 09/04/23 14:23:33.112
  Sep  4 14:23:33.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 14:23:33.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:23:33.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:23:33.119
  E0904 14:23:33.631676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:34.632366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:35.633031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:36.633328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:37.633362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:38.633828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:39.634206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:40.634653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:41.635414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:42.636430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:43.636435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:44.637043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:45.637832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:46.638423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:47.638415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:48.638722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:49.639439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/04/23 14:23:50.123
  E0904 14:23:50.640434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:51.641382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:52.642254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:53.642369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:54.643241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/23 14:23:55.126
  STEP: Ensuring resource quota status is calculated @ 09/04/23 14:23:55.129
  E0904 14:23:55.644196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:56.644281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/04/23 14:23:57.131
  STEP: Ensuring resource quota status captures configMap creation @ 09/04/23 14:23:57.137
  E0904 14:23:57.644501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:23:58.645491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/04/23 14:23:59.139
  STEP: Ensuring resource quota status released usage @ 09/04/23 14:23:59.141
  E0904 14:23:59.645506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:00.646536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:24:01.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6830" for this suite. @ 09/04/23 14:24:01.145
• [28.036 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/04/23 14:24:01.148
  Sep  4 14:24:01.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename deployment @ 09/04/23 14:24:01.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:24:01.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:24:01.154
  Sep  4 14:24:01.156: INFO: Creating deployment "test-recreate-deployment"
  Sep  4 14:24:01.158: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Sep  4 14:24:01.160: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0904 14:24:01.646611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:02.647037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:24:03.164: INFO: Waiting deployment "test-recreate-deployment" to complete
  Sep  4 14:24:03.165: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Sep  4 14:24:03.168: INFO: Updating deployment test-recreate-deployment
  Sep  4 14:24:03.168: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Sep  4 14:24:03.210: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46c3338c-1d7c-46f8-b8dd-c22adb75e03d",
      ResourceVersion: (string) (len=4) "4280",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  4 14:24:03.212: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c761eb3-74cc-4140-b7a5-4421aebf00bb",
      ResourceVersion: (string) (len=4) "4277",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "46c3338c-1d7c-46f8-b8dd-c22adb75e03d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 36 63 33 33 33  38 63 2d 31 64 37 63 2d  |\"46c3338c-1d7c-|
              00000120  34 36 66 38 2d 62 38 64  64 2d 63 32 32 61 64 62  |46f8-b8dd-c22adb|
              00000130  37 35 65 30 33 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |75e03d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 14:24:03.213: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Sep  4 14:24:03.213: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3bb2ea48-2c55-4ba5-88d4-b073efe5cba7",
      ResourceVersion: (string) (len=4) "4269",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "46c3338c-1d7c-46f8-b8dd-c22adb75e03d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 36 63 33 33 33  38 63 2d 31 64 37 63 2d  |\"46c3338c-1d7c-|
              00000120  34 36 66 38 2d 62 38 64  64 2d 63 32 32 61 64 62  |46f8-b8dd-c22adb|
              00000130  37 35 65 30 33 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |75e03d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 14:24:03.215: INFO: Pod "test-recreate-deployment-76fb77d45-bx5jn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-bx5jn",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-9164",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20c0e712-ded8-401c-acb8-905abe6dd569",
      ResourceVersion: (string) (len=4) "4281",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "9c761eb3-74cc-4140-b7a5-4421aebf00bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  37 36 31 65 62 33 2d 37  |d\":\"9c761eb3-7|
              00000090  34 63 63 2d 34 31 34 30  2d 62 37 61 35 2d 34 34  |4cc-4140-b7a5-44|
              000000a0  32 31 61 65 62 66 30 30  62 62 5c 22 7d 22 3a 7b  |21aebf00bb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6nk5v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6nk5v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 14:24:03.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9164" for this suite. @ 09/04/23 14:24:03.217
• [2.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 09/04/23 14:24:03.22
  Sep  4 14:24:03.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 14:24:03.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:24:03.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:24:03.226
  STEP: creating service nodeport-test with type=NodePort in namespace services-387 @ 09/04/23 14:24:03.228
  STEP: creating replication controller nodeport-test in namespace services-387 @ 09/04/23 14:24:03.234
  I0904 14:24:03.237189      22 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-387, replica count: 2
  E0904 14:24:03.647288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:04.647344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:05.647468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:24:06.288203      22 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  4 14:24:06.288: INFO: Creating new exec pod
  E0904 14:24:06.648050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:07.648399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:08.648415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:24:09.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-387 exec execpodf7nnq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep  4 14:24:09.378: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep  4 14:24:09.378: INFO: stdout: "nodeport-test-62hl8"
  Sep  4 14:24:09.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-387 exec execpodf7nnq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.220.59 80'
  Sep  4 14:24:09.457: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.220.59 80\nConnection to 10.68.220.59 80 port [tcp/http] succeeded!\n"
  Sep  4 14:24:09.457: INFO: stdout: "nodeport-test-zg7w6"
  Sep  4 14:24:09.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-387 exec execpodf7nnq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.254.0.10 31522'
  Sep  4 14:24:09.541: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.254.0.10 31522\nConnection to 10.254.0.10 31522 port [tcp/*] succeeded!\n"
  Sep  4 14:24:09.541: INFO: stdout: "nodeport-test-62hl8"
  Sep  4 14:24:09.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-387 exec execpodf7nnq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.254.0.9 31522'
  Sep  4 14:24:09.625: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.254.0.9 31522\nConnection to 10.254.0.9 31522 port [tcp/*] succeeded!\n"
  Sep  4 14:24:09.625: INFO: stdout: "nodeport-test-62hl8"
  Sep  4 14:24:09.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-387" for this suite. @ 09/04/23 14:24:09.627
• [6.409 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 09/04/23 14:24:09.629
  Sep  4 14:24:09.629: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 14:24:09.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:24:09.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:24:09.638
  STEP: Setting up server cert @ 09/04/23 14:24:09.648
  E0904 14:24:09.649932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 14:24:09.886
  STEP: Deploying the webhook pod @ 09/04/23 14:24:09.889
  STEP: Wait for the deployment to be ready @ 09/04/23 14:24:09.899
  Sep  4 14:24:09.902: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 14:24:10.650190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:11.650229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:24:11.906
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:24:11.911
  E0904 14:24:12.650873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:24:12.911: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/04/23 14:24:12.913
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/23 14:24:12.914
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/04/23 14:24:12.921
  E0904 14:24:13.650929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/04/23 14:24:13.926
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/23 14:24:13.926
  E0904 14:24:14.651799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/04/23 14:24:14.937
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/23 14:24:14.937
  E0904 14:24:15.651919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:16.652226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:17.652476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:18.652553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:19.653470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/04/23 14:24:19.953
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/23 14:24:19.953
  E0904 14:24:20.653697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:21.653842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:22.654148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:23.654785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:24.654903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:24:24.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3348" for this suite. @ 09/04/23 14:24:24.99
  STEP: Destroying namespace "webhook-markers-2523" for this suite. @ 09/04/23 14:24:24.994
• [15.368 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/04/23 14:24:24.998
  Sep  4 14:24:24.998: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 14:24:24.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:24:25.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:24:25.007
  STEP: Creating secret with name s-test-opt-del-b7ae6e49-5d69-4611-8d17-a78b41a1a183 @ 09/04/23 14:24:25.01
  STEP: Creating secret with name s-test-opt-upd-6a8f9f30-23cc-4ebd-a21c-a5183e634e2c @ 09/04/23 14:24:25.013
  STEP: Creating the pod @ 09/04/23 14:24:25.015
  E0904 14:24:25.655863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:26.656009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-b7ae6e49-5d69-4611-8d17-a78b41a1a183 @ 09/04/23 14:24:27.031
  STEP: Updating secret s-test-opt-upd-6a8f9f30-23cc-4ebd-a21c-a5183e634e2c @ 09/04/23 14:24:27.032
  STEP: Creating secret with name s-test-opt-create-33c741a1-4eee-41b5-b591-ba4a57dcec32 @ 09/04/23 14:24:27.034
  STEP: waiting to observe update in volume @ 09/04/23 14:24:27.037
  E0904 14:24:27.656019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:28.656632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:29.657471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:30.658325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:31.658329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:32.658539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:33.658579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:34.658683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:35.659410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:36.659507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:37.659782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:38.659908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:39.660421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:40.661478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:41.661776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:42.661999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:43.662949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:44.663077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:45.663658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:46.664230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:47.664792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:48.665479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:49.665522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:50.665628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:51.665994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:52.666729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:53.667046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:54.667189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:55.668123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:56.668250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:57.668577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:58.668660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:24:59.668767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:00.669476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:01.669555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:02.669805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:03.670278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:04.670728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:05.670768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:06.670916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:07.671378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:08.671506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:09.671708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:10.671804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:11.672126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:12.672341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:13.672450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:14.673487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:15.674078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:16.674148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:17.674651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:18.674792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:19.675545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:20.676254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:21.677230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:22.677471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:23.678014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:24.678954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:25.679799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:26.679929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:27.680254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:28.680344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:29.681231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:30.681297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:31.682175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:32.683021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:33.683747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:34.683838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:35.683996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:36.684583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:37.685106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:38.685495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:39.685768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:40.685906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:41.686112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:42.687148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:43.688092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:44.688218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:45.689271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:46.689297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:47.690299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:48.690385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:25:49.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7321" for this suite. @ 09/04/23 14:25:49.205
• [84.209 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 09/04/23 14:25:49.208
  Sep  4 14:25:49.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/23 14:25:49.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:25:49.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:25:49.216
  Sep  4 14:25:49.222: INFO: Waiting up to 1m0s for all nodes to be ready
  E0904 14:25:49.691268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:50.692343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:51.692857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:52.693119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:53.694068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:54.694092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:55.695141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:56.695273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:57.696335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:58.696423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:25:59.697439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:00.697649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:01.698610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:02.698706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:03.699439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:04.699507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:05.699934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:06.700858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:07.701218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:08.701464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:09.701923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:10.702559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:11.702646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:12.703350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:13.703838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:14.704841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:15.705086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:16.705168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:17.705832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:18.705955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:19.706027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:20.706768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:21.706913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:22.707361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:23.707446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:24.708480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:25.708750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:26.708840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:27.709694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:28.709777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:29.709943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:30.710360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:31.711381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:32.711541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:33.711615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:34.711740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:35.712127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:36.712216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:37.712538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:38.712618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:39.712856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:40.712936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:41.712971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:42.713476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:43.713587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:44.713649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:45.713760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:46.714198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:47.714714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:48.714826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:26:49.232: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/04/23 14:26:49.233
  Sep  4 14:26:49.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/04/23 14:26:49.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:26:49.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:26:49.242
  STEP: Finding an available node @ 09/04/23 14:26:49.244
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/23 14:26:49.244
  E0904 14:26:49.715905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:50.715991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/23 14:26:51.251
  Sep  4 14:26:51.256: INFO: found a healthy node: control-panel-01
  E0904 14:26:51.716705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:52.716848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:53.716884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:54.717020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:55.717483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:56.717645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:26:57.286: INFO: pods created so far: [1 1 1]
  Sep  4 14:26:57.286: INFO: length of pods created so far: 3
  E0904 14:26:57.717743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:26:58.718069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:26:59.291: INFO: pods created so far: [2 2 1]
  E0904 14:26:59.718384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:00.718468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:01.718778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:02.719522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:03.719599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:04.719717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:05.719801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:27:06.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 14:27:06.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5558" for this suite. @ 09/04/23 14:27:06.319
  STEP: Destroying namespace "sched-preemption-9066" for this suite. @ 09/04/23 14:27:06.321
• [77.115 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/04/23 14:27:06.323
  Sep  4 14:27:06.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename tables @ 09/04/23 14:27:06.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:27:06.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:27:06.331
  Sep  4 14:27:06.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8046" for this suite. @ 09/04/23 14:27:06.335
• [0.014 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 09/04/23 14:27:06.338
  Sep  4 14:27:06.338: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:27:06.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:27:06.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:27:06.346
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/04/23 14:27:06.347
  E0904 14:27:06.719859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:07.720910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:08.721459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:09.721586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:27:10.356
  Sep  4 14:27:10.357: INFO: Trying to get logs from node worker-02 pod pod-841b00cf-30c1-4d7e-9b67-42f03f7791e8 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:27:10.366
  Sep  4 14:27:10.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6632" for this suite. @ 09/04/23 14:27:10.373
• [4.037 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 09/04/23 14:27:10.376
  Sep  4 14:27:10.376: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename endpointslice @ 09/04/23 14:27:10.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:27:10.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:27:10.383
  Sep  4 14:27:10.387: INFO: Endpoints addresses: [10.254.0.8] , ports: [6443]
  Sep  4 14:27:10.387: INFO: EndpointSlices addresses: [10.254.0.8] , ports: [6443]
  Sep  4 14:27:10.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3388" for this suite. @ 09/04/23 14:27:10.389
• [0.016 seconds]
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/04/23 14:27:10.391
  Sep  4 14:27:10.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/23 14:27:10.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:27:10.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:27:10.398
  STEP: Waiting for pod completion @ 09/04/23 14:27:10.403
  E0904 14:27:10.722522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:11.722622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:12.722689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:13.723206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:27:14.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1881" for this suite. @ 09/04/23 14:27:14.413
• [4.023 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/04/23 14:27:14.415
  Sep  4 14:27:14.415: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename var-expansion @ 09/04/23 14:27:14.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:27:14.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:27:14.423
  STEP: creating the pod @ 09/04/23 14:27:14.424
  STEP: waiting for pod running @ 09/04/23 14:27:14.428
  E0904 14:27:14.723809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:15.724797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/04/23 14:27:16.431
  Sep  4 14:27:16.432: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3514 PodName:var-expansion-9f6e8c96-e9c7-4409-a423-639aef6ae75a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:27:16.432: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:27:16.432: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:27:16.432: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-3514/pods/var-expansion-9f6e8c96-e9c7-4409-a423-639aef6ae75a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/04/23 14:27:16.472
  Sep  4 14:27:16.473: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3514 PodName:var-expansion-9f6e8c96-e9c7-4409-a423-639aef6ae75a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:27:16.473: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:27:16.473: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:27:16.473: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-3514/pods/var-expansion-9f6e8c96-e9c7-4409-a423-639aef6ae75a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/04/23 14:27:16.496
  E0904 14:27:16.725467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:27:17.001: INFO: Successfully updated pod "var-expansion-9f6e8c96-e9c7-4409-a423-639aef6ae75a"
  STEP: waiting for annotated pod running @ 09/04/23 14:27:17.001
  STEP: deleting the pod gracefully @ 09/04/23 14:27:17.002
  Sep  4 14:27:17.002: INFO: Deleting pod "var-expansion-9f6e8c96-e9c7-4409-a423-639aef6ae75a" in namespace "var-expansion-3514"
  Sep  4 14:27:17.005: INFO: Wait up to 5m0s for pod "var-expansion-9f6e8c96-e9c7-4409-a423-639aef6ae75a" to be fully deleted
  E0904 14:27:17.726477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:18.726595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:19.727108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:20.727231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:21.727317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:22.727487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:23.728062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:24.728823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:25.729490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:26.729615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:27.730507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:28.730587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:29.731394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:30.732232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:31.732438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:32.732745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:33.732832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:34.733843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:35.734858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:36.734986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:37.735340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:38.735472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:39.736368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:40.736412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:41.737472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:42.738389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:43.739257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:44.739340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:45.740202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:46.741166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:47.742054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:48.743116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:27:49.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3514" for this suite. @ 09/04/23 14:27:49.043
• [34.631 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/04/23 14:27:49.046
  Sep  4 14:27:49.046: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename watch @ 09/04/23 14:27:49.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:27:49.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:27:49.054
  STEP: creating a watch on configmaps with label A @ 09/04/23 14:27:49.055
  STEP: creating a watch on configmaps with label B @ 09/04/23 14:27:49.056
  STEP: creating a watch on configmaps with label A or B @ 09/04/23 14:27:49.057
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/04/23 14:27:49.057
  Sep  4 14:27:49.059: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7132  416b5711-331b-48f7-9df4-1e8c83ff3bda 5255 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 14:27:49.059: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7132  416b5711-331b-48f7-9df4-1e8c83ff3bda 5255 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/04/23 14:27:49.059
  Sep  4 14:27:49.062: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7132  416b5711-331b-48f7-9df4-1e8c83ff3bda 5256 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 14:27:49.062: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7132  416b5711-331b-48f7-9df4-1e8c83ff3bda 5256 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/04/23 14:27:49.062
  Sep  4 14:27:49.064: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7132  416b5711-331b-48f7-9df4-1e8c83ff3bda 5257 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 14:27:49.064: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7132  416b5711-331b-48f7-9df4-1e8c83ff3bda 5257 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/04/23 14:27:49.064
  Sep  4 14:27:49.066: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7132  416b5711-331b-48f7-9df4-1e8c83ff3bda 5258 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 14:27:49.066: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7132  416b5711-331b-48f7-9df4-1e8c83ff3bda 5258 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/04/23 14:27:49.066
  Sep  4 14:27:49.070: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7132  e4c5a6b5-fa5d-4662-8193-de6e6e9c642e 5259 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 14:27:49.070: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7132  e4c5a6b5-fa5d-4662-8193-de6e6e9c642e 5259 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0904 14:27:49.743191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:50.744161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:51.745108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:52.745714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:53.745831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:54.745915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:55.746056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:56.746308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:57.746645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:27:58.746730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/04/23 14:27:59.071
  Sep  4 14:27:59.073: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7132  e4c5a6b5-fa5d-4662-8193-de6e6e9c642e 5287 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 14:27:59.073: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7132  e4c5a6b5-fa5d-4662-8193-de6e6e9c642e 5287 0 2023-09-04 14:27:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-04 14:27:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0904 14:27:59.747592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:00.747973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:01.748057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:02.748068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:03.748415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:04.748491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:05.748575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:06.749491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:07.750529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:08.750607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:09.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7132" for this suite. @ 09/04/23 14:28:09.075
• [20.032 seconds]
------------------------------
SSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 09/04/23 14:28:09.078
  Sep  4 14:28:09.078: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename ingressclass @ 09/04/23 14:28:09.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:28:09.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:28:09.086
  STEP: getting /apis @ 09/04/23 14:28:09.088
  STEP: getting /apis/networking.k8s.io @ 09/04/23 14:28:09.089
  STEP: getting /apis/networking.k8s.iov1 @ 09/04/23 14:28:09.09
  STEP: creating @ 09/04/23 14:28:09.09
  STEP: getting @ 09/04/23 14:28:09.095
  STEP: listing @ 09/04/23 14:28:09.096
  STEP: watching @ 09/04/23 14:28:09.097
  Sep  4 14:28:09.097: INFO: starting watch
  STEP: patching @ 09/04/23 14:28:09.097
  STEP: updating @ 09/04/23 14:28:09.1
  Sep  4 14:28:09.102: INFO: waiting for watch events with expected annotations
  Sep  4 14:28:09.102: INFO: saw patched and updated annotations
  STEP: deleting @ 09/04/23 14:28:09.102
  STEP: deleting a collection @ 09/04/23 14:28:09.106
  Sep  4 14:28:09.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9213" for this suite. @ 09/04/23 14:28:09.111
• [0.035 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 09/04/23 14:28:09.113
  Sep  4 14:28:09.113: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:28:09.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:28:09.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:28:09.12
  STEP: Creating Pod @ 09/04/23 14:28:09.121
  E0904 14:28:09.750981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:10.751579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/04/23 14:28:11.128
  Sep  4 14:28:11.128: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2781 PodName:pod-sharedvolume-0b889380-a0d8-4b7f-9afa-2842ff5f4ec9 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:28:11.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:28:11.129: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:28:11.129: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/emptydir-2781/pods/pod-sharedvolume-0b889380-a0d8-4b7f-9afa-2842ff5f4ec9/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Sep  4 14:28:11.175: INFO: Exec stderr: ""
  Sep  4 14:28:11.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2781" for this suite. @ 09/04/23 14:28:11.177
• [2.066 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/04/23 14:28:11.179
  Sep  4 14:28:11.179: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/04/23 14:28:11.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:28:11.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:28:11.187
  STEP: Creating two CSIDrivers @ 09/04/23 14:28:11.188
  STEP: Getting "inline-driver-475f2e1f-c70e-4d73-ba72-e285a37ae647" & "inline-driver-95301f09-fa04-419a-88c5-94223fee38b9" @ 09/04/23 14:28:11.194
  STEP: Patching the CSIDriver "inline-driver-95301f09-fa04-419a-88c5-94223fee38b9" @ 09/04/23 14:28:11.196
  STEP: Updating the CSIDriver "inline-driver-95301f09-fa04-419a-88c5-94223fee38b9" @ 09/04/23 14:28:11.198
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-784" @ 09/04/23 14:28:11.201
  STEP: Deleting CSIDriver "inline-driver-475f2e1f-c70e-4d73-ba72-e285a37ae647" @ 09/04/23 14:28:11.202
  STEP: Confirm deletion of CSIDriver "inline-driver-475f2e1f-c70e-4d73-ba72-e285a37ae647" @ 09/04/23 14:28:11.204
  STEP: Deleting CSIDriver "inline-driver-95301f09-fa04-419a-88c5-94223fee38b9" via DeleteCollection @ 09/04/23 14:28:11.205
  STEP: Confirm deletion of CSIDriver "inline-driver-95301f09-fa04-419a-88c5-94223fee38b9" @ 09/04/23 14:28:11.207
  Sep  4 14:28:11.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-784" for this suite. @ 09/04/23 14:28:11.209
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 09/04/23 14:28:11.213
  Sep  4 14:28:11.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/23 14:28:11.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:28:11.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:28:11.219
  STEP: getting /apis @ 09/04/23 14:28:11.221
  STEP: getting /apis/node.k8s.io @ 09/04/23 14:28:11.222
  STEP: getting /apis/node.k8s.io/v1 @ 09/04/23 14:28:11.223
  STEP: creating @ 09/04/23 14:28:11.223
  STEP: watching @ 09/04/23 14:28:11.231
  Sep  4 14:28:11.231: INFO: starting watch
  STEP: getting @ 09/04/23 14:28:11.234
  STEP: listing @ 09/04/23 14:28:11.235
  STEP: patching @ 09/04/23 14:28:11.236
  STEP: updating @ 09/04/23 14:28:11.238
  Sep  4 14:28:11.239: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 09/04/23 14:28:11.239
  STEP: deleting a collection @ 09/04/23 14:28:11.243
  Sep  4 14:28:11.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5850" for this suite. @ 09/04/23 14:28:11.248
• [0.037 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 09/04/23 14:28:11.25
  Sep  4 14:28:11.250: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 14:28:11.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:28:11.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:28:11.257
  STEP: creating service in namespace services-406 @ 09/04/23 14:28:11.259
  STEP: creating service affinity-nodeport in namespace services-406 @ 09/04/23 14:28:11.259
  STEP: creating replication controller affinity-nodeport in namespace services-406 @ 09/04/23 14:28:11.264
  I0904 14:28:11.267545      22 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-406, replica count: 3
  E0904 14:28:11.751679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:12.752261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:13.752440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:28:14.319143      22 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  4 14:28:14.322: INFO: Creating new exec pod
  E0904 14:28:14.753489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:15.753564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:16.753994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:17.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-406 exec execpod-affinity4788b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Sep  4 14:28:17.410: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Sep  4 14:28:17.410: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:28:17.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-406 exec execpod-affinity4788b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.64.2 80'
  Sep  4 14:28:17.493: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.64.2 80\nConnection to 10.68.64.2 80 port [tcp/http] succeeded!\n"
  Sep  4 14:28:17.493: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:28:17.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-406 exec execpod-affinity4788b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.254.0.9 30818'
  Sep  4 14:28:17.573: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.254.0.9 30818\nConnection to 10.254.0.9 30818 port [tcp/*] succeeded!\n"
  Sep  4 14:28:17.573: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:28:17.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-406 exec execpod-affinity4788b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.254.0.10 30818'
  Sep  4 14:28:17.657: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.254.0.10 30818\nConnection to 10.254.0.10 30818 port [tcp/*] succeeded!\n"
  Sep  4 14:28:17.657: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:28:17.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-406 exec execpod-affinity4788b -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.254.0.8:30818/ ; done'
  E0904 14:28:17.754214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:17.775: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:30818/\n"
  Sep  4 14:28:17.775: INFO: stdout: "\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94\naffinity-nodeport-kkb94"
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Received response from host: affinity-nodeport-kkb94
  Sep  4 14:28:17.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 14:28:17.776: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-406, will wait for the garbage collector to delete the pods @ 09/04/23 14:28:17.782
  Sep  4 14:28:17.835: INFO: Deleting ReplicationController affinity-nodeport took: 2.072727ms
  Sep  4 14:28:17.936: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.720053ms
  E0904 14:28:18.754253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:19.755052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-406" for this suite. @ 09/04/23 14:28:20.544
• [9.296 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/04/23 14:28:20.547
  Sep  4 14:28:20.547: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-probe @ 09/04/23 14:28:20.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:28:20.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:28:20.556
  STEP: Creating pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003 @ 09/04/23 14:28:20.558
  E0904 14:28:20.755121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:21.755271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/23 14:28:22.565
  Sep  4 14:28:22.566: INFO: Initial restart count of pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 is 0
  Sep  4 14:28:22.567: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:22.755772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:23.755799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:24.569: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:24.756250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:25.757285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:26.571: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:26.757891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:27.758627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:28.574: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:28.759389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:29.760129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:30.576: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:30.760830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:31.760912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:32.578: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:32.761738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:33.761863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:34.579: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:34.762120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:35.762244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:36.582: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:36.763269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:37.763806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:38.583: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:38.764242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:39.764332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:40.585: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:40.765117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:41.765254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:42.587: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:42.765854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:43.765980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:44.589: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:44.766507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:45.766641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:46.590: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:46.767162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:47.767909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:48.593: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:48.768206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:49.768424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:50.594: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:50.768931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:51.769600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:52.596: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:52.769676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:53.770618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:54.598: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:54.771232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:55.771365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:56.600: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:56.771853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:57.771899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:28:58.602: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:28:58.772781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:28:59.772859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:00.604: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:00.773310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:01.773390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:02.605: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:02.773893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:03.774501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:04.608: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:04.775420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:05.775555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:06.610: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:06.776234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:07.776303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:08.611: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:08.777148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:09.777867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:10.613: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:10.778042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:11.778568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:12.615: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:12.778819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:13.778889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:14.618: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:14.779278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:15.779398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:16.619: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:16.779892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:17.780272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:18.621: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:18.780664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:19.780734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:20.623: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:20.780857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:21.780875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:22.625: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:22.781636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:23.781920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:24.626: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:24.781932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:25.782952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:26.628: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:26.783491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:27.784512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:28.629: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:28.785185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:29.786126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:30.631: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:30.786504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:31.787403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:32.633: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:32.787910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:33.788875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:34.635: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  E0904 14:29:34.789375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:35.789501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:36.636: INFO: Get pod test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 in namespace container-probe-1003
  Sep  4 14:29:36.636: INFO: Restart count of pod container-probe-1003/test-grpc-d2cfac34-c98d-4c10-8b21-587d66966791 is now 1 (1m14.070412574s elapsed)
  Sep  4 14:29:36.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 14:29:36.638
  STEP: Destroying namespace "container-probe-1003" for this suite. @ 09/04/23 14:29:36.644
• [76.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/04/23 14:29:36.646
  Sep  4 14:29:36.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename containers @ 09/04/23 14:29:36.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:29:36.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:29:36.654
  STEP: Creating a pod to test override arguments @ 09/04/23 14:29:36.655
  E0904 14:29:36.790492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:37.790625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:38.791362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:39.791408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:29:40.665
  Sep  4 14:29:40.666: INFO: Trying to get logs from node control-panel-01 pod client-containers-527c64f5-de95-43f2-859b-285dcf3db596 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:29:40.675
  Sep  4 14:29:40.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5831" for this suite. @ 09/04/23 14:29:40.682
• [4.037 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 09/04/23 14:29:40.684
  Sep  4 14:29:40.684: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename gc @ 09/04/23 14:29:40.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:29:40.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:29:40.69
  STEP: create the rc @ 09/04/23 14:29:40.692
  W0904 14:29:40.693947      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0904 14:29:40.792177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:41.792269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:42.792413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:43.792423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:44.793483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/04/23 14:29:45.695
  STEP: wait for all pods to be garbage collected @ 09/04/23 14:29:45.697
  E0904 14:29:45.793990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:46.794088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:47.794917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:48.794951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:49.795254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/04/23 14:29:50.7
  W0904 14:29:50.703174      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  4 14:29:50.703: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  4 14:29:50.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9121" for this suite. @ 09/04/23 14:29:50.704
• [10.023 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 09/04/23 14:29:50.707
  Sep  4 14:29:50.707: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/23 14:29:50.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:29:50.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:29:50.716
  Sep  4 14:29:50.717: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:29:50.796100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:51.796539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/23 14:29:51.878
  Sep  4 14:29:51.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-9841 --namespace=crd-publish-openapi-9841 create -f -'
  Sep  4 14:29:52.149: INFO: stderr: ""
  Sep  4 14:29:52.149: INFO: stdout: "e2e-test-crd-publish-openapi-7126-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep  4 14:29:52.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-9841 --namespace=crd-publish-openapi-9841 delete e2e-test-crd-publish-openapi-7126-crds test-cr'
  Sep  4 14:29:52.191: INFO: stderr: ""
  Sep  4 14:29:52.191: INFO: stdout: "e2e-test-crd-publish-openapi-7126-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Sep  4 14:29:52.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-9841 --namespace=crd-publish-openapi-9841 apply -f -'
  Sep  4 14:29:52.286: INFO: stderr: ""
  Sep  4 14:29:52.286: INFO: stdout: "e2e-test-crd-publish-openapi-7126-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep  4 14:29:52.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-9841 --namespace=crd-publish-openapi-9841 delete e2e-test-crd-publish-openapi-7126-crds test-cr'
  Sep  4 14:29:52.327: INFO: stderr: ""
  Sep  4 14:29:52.327: INFO: stdout: "e2e-test-crd-publish-openapi-7126-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/04/23 14:29:52.327
  Sep  4 14:29:52.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-9841 explain e2e-test-crd-publish-openapi-7126-crds'
  Sep  4 14:29:52.410: INFO: stderr: ""
  Sep  4 14:29:52.410: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7126-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0904 14:29:52.797485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:29:53.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9841" for this suite. @ 09/04/23 14:29:53.567
• [2.864 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/04/23 14:29:53.572
  Sep  4 14:29:53.572: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 14:29:53.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:29:53.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:29:53.579
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 14:29:53.581
  E0904 14:29:53.798152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:54.798781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:55.799519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:56.799643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:29:57.593
  Sep  4 14:29:57.594: INFO: Trying to get logs from node worker-02 pod downwardapi-volume-25d1d505-6b5e-4270-b064-01fab91eefab container client-container: <nil>
  STEP: delete the pod @ 09/04/23 14:29:57.607
  Sep  4 14:29:57.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1250" for this suite. @ 09/04/23 14:29:57.615
• [4.046 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/04/23 14:29:57.618
  Sep  4 14:29:57.618: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename watch @ 09/04/23 14:29:57.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:29:57.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:29:57.626
  STEP: getting a starting resourceVersion @ 09/04/23 14:29:57.627
  STEP: starting a background goroutine to produce watch events @ 09/04/23 14:29:57.628
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/04/23 14:29:57.628
  E0904 14:29:57.800016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:58.800881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:29:59.801527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:30:00.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9008" for this suite. @ 09/04/23 14:30:00.471
• [2.903 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/04/23 14:30:00.522
  Sep  4 14:30:00.522: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename watch @ 09/04/23 14:30:00.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:30:00.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:30:00.53
  STEP: creating a watch on configmaps @ 09/04/23 14:30:00.532
  STEP: creating a new configmap @ 09/04/23 14:30:00.532
  STEP: modifying the configmap once @ 09/04/23 14:30:00.534
  STEP: closing the watch once it receives two notifications @ 09/04/23 14:30:00.537
  Sep  4 14:30:00.537: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3967  bfe49e1e-e820-44df-ba5d-8215a9e14f68 6024 0 2023-09-04 14:30:00 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-04 14:30:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 14:30:00.537: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3967  bfe49e1e-e820-44df-ba5d-8215a9e14f68 6025 0 2023-09-04 14:30:00 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-04 14:30:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/04/23 14:30:00.537
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/04/23 14:30:00.54
  STEP: deleting the configmap @ 09/04/23 14:30:00.541
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/04/23 14:30:00.549
  Sep  4 14:30:00.549: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3967  bfe49e1e-e820-44df-ba5d-8215a9e14f68 6026 0 2023-09-04 14:30:00 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-04 14:30:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 14:30:00.549: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3967  bfe49e1e-e820-44df-ba5d-8215a9e14f68 6027 0 2023-09-04 14:30:00 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-04 14:30:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 14:30:00.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3967" for this suite. @ 09/04/23 14:30:00.551
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/04/23 14:30:00.553
  Sep  4 14:30:00.553: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 14:30:00.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:30:00.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:30:00.561
  STEP: Creating secret with name secret-test-map-fbae07cd-3b80-4944-9d17-1135c34929d0 @ 09/04/23 14:30:00.562
  STEP: Creating a pod to test consume secrets @ 09/04/23 14:30:00.564
  E0904 14:30:00.802299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:01.803026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:02.803105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:03.803187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:30:04.572
  Sep  4 14:30:04.573: INFO: Trying to get logs from node worker-02 pod pod-secrets-b7d49897-1721-4861-8c1a-95596e082db3 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 14:30:04.577
  Sep  4 14:30:04.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9807" for this suite. @ 09/04/23 14:30:04.584
• [4.034 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/04/23 14:30:04.587
  Sep  4 14:30:04.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-runtime @ 09/04/23 14:30:04.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:30:04.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:30:04.596
  STEP: create the container @ 09/04/23 14:30:04.599
  W0904 14:30:04.602190      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/04/23 14:30:04.602
  E0904 14:30:04.803662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:05.804084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:06.804389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/04/23 14:30:07.608
  STEP: the container should be terminated @ 09/04/23 14:30:07.609
  STEP: the termination message should be set @ 09/04/23 14:30:07.609
  Sep  4 14:30:07.609: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/04/23 14:30:07.609
  Sep  4 14:30:07.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3837" for this suite. @ 09/04/23 14:30:07.617
• [3.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/04/23 14:30:07.621
  Sep  4 14:30:07.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 14:30:07.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:30:07.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:30:07.627
  STEP: Creating configMap with name configmap-test-volume-c5effc7d-1387-471f-b9e6-9699ad9ef4fb @ 09/04/23 14:30:07.629
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:30:07.63
  E0904 14:30:07.804580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:08.805445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:09.806062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:10.806725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:30:11.639
  Sep  4 14:30:11.640: INFO: Trying to get logs from node worker-02 pod pod-configmaps-c6d7b827-ae0b-4392-a019-b7a0f3c41cde container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:30:11.642
  Sep  4 14:30:11.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2179" for this suite. @ 09/04/23 14:30:11.649
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/04/23 14:30:11.653
  Sep  4 14:30:11.653: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sched-pred @ 09/04/23 14:30:11.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:30:11.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:30:11.66
  Sep  4 14:30:11.662: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep  4 14:30:11.664: INFO: Waiting for terminating namespaces to be deleted...
  Sep  4 14:30:11.665: INFO: 
  Logging pods the apiserver thinks is on node control-panel-01 before test
  Sep  4 14:30:11.667: INFO: calico-node-xrnwn from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.667: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 14:30:11.667: INFO: dashboard-metrics-scraper-77b667b99d-kp24j from kube-system started at 2023-09-04 14:11:31 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.667: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep  4 14:30:11.667: INFO: metrics-server-dfb478476-crb6q from kube-system started at 2023-09-04 14:11:29 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.667: INFO: 	Container metrics-server ready: true, restart count 0
  Sep  4 14:30:11.667: INFO: node-local-dns-9x8s5 from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.667: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 14:30:11.667: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-stzx5 from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 14:30:11.667: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 14:30:11.667: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  4 14:30:11.667: INFO: 
  Logging pods the apiserver thinks is on node worker-01 before test
  Sep  4 14:30:11.669: INFO: calico-kube-controllers-86b55cf789-rxvqz from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.669: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep  4 14:30:11.669: INFO: calico-node-skg92 from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.669: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 14:30:11.669: INFO: kubernetes-dashboard-74fb9f77fb-g9q9c from kube-system started at 2023-09-04 14:11:31 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.669: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep  4 14:30:11.669: INFO: node-local-dns-zpjfs from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.669: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 14:30:11.669: INFO: sonobuoy-e2e-job-95efc8522fa94e6d from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 14:30:11.669: INFO: 	Container e2e ready: true, restart count 0
  Sep  4 14:30:11.669: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 14:30:11.669: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-s8c5l from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 14:30:11.669: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 14:30:11.669: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  4 14:30:11.669: INFO: 
  Logging pods the apiserver thinks is on node worker-02 before test
  Sep  4 14:30:11.671: INFO: calico-node-j5dlh from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.671: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 14:30:11.671: INFO: coredns-7bc88ddb8b-8qz6h from kube-system started at 2023-09-04 14:11:27 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.671: INFO: 	Container coredns ready: true, restart count 0
  Sep  4 14:30:11.671: INFO: node-local-dns-lpzbf from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.671: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 14:30:11.671: INFO: sonobuoy from sonobuoy started at 2023-09-04 14:11:58 +0000 UTC (1 container statuses recorded)
  Sep  4 14:30:11.671: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep  4 14:30:11.671: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-x5kgm from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 14:30:11.671: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 14:30:11.671: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/23 14:30:11.671
  E0904 14:30:11.806791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:12.806857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/23 14:30:13.679
  STEP: Trying to apply a random label on the found node. @ 09/04/23 14:30:13.685
  STEP: verifying the node has the label kubernetes.io/e2e-40f63fb7-e6c6-4c1b-b538-6808f36a53b4 95 @ 09/04/23 14:30:13.689
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/04/23 14:30:13.69
  E0904 14:30:13.807837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:14.808684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.254.0.10 on the node which pod4 resides and expect not scheduled @ 09/04/23 14:30:15.698
  E0904 14:30:15.809421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:16.809482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:17.810246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:18.810525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:19.810795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:20.810887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:21.811585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:22.812473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:23.812539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:24.813478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:25.814357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:26.815187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:27.815585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:28.815716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:29.816512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:30.817483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:31.817922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:32.818500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:33.818560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:34.818645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:35.819081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:36.819598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:37.820421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:38.821478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:39.822358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:40.822935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:41.823659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:42.824491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:43.825126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:44.825207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:45.825812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:46.825879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:47.826433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:48.826566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:49.827189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:50.827272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:51.828061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:52.828894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:53.829696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:54.829834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:55.830092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:56.830974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:57.831782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:58.831870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:30:59.832417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:00.833481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:01.833835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:02.834527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:03.834594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:04.834734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:05.835303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:06.835847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:07.836469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:08.837483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:09.838154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:10.838243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:11.838949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:12.839992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:13.840373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:14.840429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:15.841225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:16.841441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:17.842409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:18.842557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:19.842908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:20.843754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:21.844161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:22.844409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:23.844667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:24.844755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:25.845277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:26.845480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:27.845522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:28.845603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:29.846219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:30.846293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:31.847144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:32.847338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:33.847596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:34.848248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:35.849123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:36.849702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:37.850731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:38.850872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:39.851188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:40.851280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:41.851722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:42.851882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:43.852820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:44.853492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:45.854068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:46.854195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:47.854774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:48.854910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:49.855436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:50.856171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:51.856933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:52.857093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:53.857688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:54.857826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:55.858605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:56.858746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:57.858947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:58.859858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:31:59.860757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:00.861516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:01.862319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:02.863098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:03.863714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:04.864025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:05.864789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:06.865450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:07.866326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:08.866455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:09.866948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:10.867034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:11.867910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:12.868518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:13.868696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:14.869468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:15.870177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:16.870281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:17.870285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:18.870373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:19.871291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:20.872339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:21.873234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:22.873452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:23.874243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:24.874330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:25.875102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:26.875540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:27.875543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:28.875657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:29.876150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:30.876269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:31.877195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:32.877283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:33.877605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:34.877725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:35.877842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:36.878816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:37.879478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:38.879897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:39.880094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:40.880284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:41.881154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:42.881363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:43.881679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:44.881977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:45.882260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:46.882730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:47.883283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:48.883405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:49.884144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:50.884234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:51.884241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:52.884420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:53.884443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:54.884802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:55.885285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:56.885465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:57.885508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:58.885629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:32:59.885737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:00.886241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:01.886360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:02.887266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:03.887383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:04.887614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:05.888641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:06.889698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:07.889972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:08.890873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:09.891074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:10.891850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:11.891989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:12.892996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:13.893705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:14.894521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:15.894647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:16.895374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:17.895576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:18.895661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:19.896427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:20.897486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:21.897619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:22.898552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:23.898577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:24.898736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:25.898872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:26.898946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:27.898993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:28.899473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:29.900180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:30.900420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:31.901486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:32.902513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:33.903423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:34.903506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:35.904474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:36.905493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:37.905564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:38.906164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:39.906859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:40.907461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:41.907595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:42.908495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:43.909483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:44.909911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:45.910042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:46.910155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:47.910311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:48.911189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:49.911647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:50.912479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:51.913470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:52.913505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:53.913636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:54.913699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:55.913786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:56.914658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:57.915511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:58.915611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:33:59.915746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:00.916426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:01.917484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:02.918189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:03.918333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:04.918825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:05.918622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:06.918769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:07.919814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:08.920417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:09.920494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:10.920837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:11.920923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:12.921836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:13.921958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:14.922079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:15.922158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:16.923081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:17.924062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:18.924412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:19.924496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:20.925470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:21.925555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:22.926518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:23.926648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:24.926719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:25.927635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:26.928408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:27.929473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:28.930329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:29.930453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:30.930958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:31.931051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:32.931970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:33.932948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:34.933738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:35.933856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:36.934834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:37.935097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:38.935888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:39.936006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:40.936409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:41.937470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:42.938404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:43.938495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:44.938620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:45.938682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:46.938925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:47.939839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:48.940412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:49.940492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:50.940565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:51.941473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:52.942507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:53.942657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:54.943253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:55.944224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:56.944413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:57.945291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:58.946349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:34:59.947115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:00.948022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:01.948111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:02.949042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:03.949133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:04.949167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:05.949477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:06.950278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:07.950766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:08.951618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:09.951731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:10.952416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:11.953470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:12.953521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:13.953621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:14.953779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-40f63fb7-e6c6-4c1b-b538-6808f36a53b4 off the node worker-02 @ 09/04/23 14:35:15.702
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-40f63fb7-e6c6-4c1b-b538-6808f36a53b4 @ 09/04/23 14:35:15.708
  Sep  4 14:35:15.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9695" for this suite. @ 09/04/23 14:35:15.711
• [304.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/04/23 14:35:15.716
  Sep  4 14:35:15.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:35:15.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:35:15.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:35:15.724
  STEP: Creating the pod @ 09/04/23 14:35:15.725
  E0904 14:35:15.954742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:16.955737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:17.956430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:18.249: INFO: Successfully updated pod "labelsupdate85a2edca-fd3b-4120-8834-ed236342375f"
  E0904 14:35:18.957289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:19.957377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:20.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2442" for this suite. @ 09/04/23 14:35:20.257
• [4.543 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/04/23 14:35:20.259
  Sep  4 14:35:20.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename deployment @ 09/04/23 14:35:20.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:35:20.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:35:20.267
  Sep  4 14:35:20.275: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0904 14:35:20.957968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:21.958052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:22.958815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:23.958947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:24.959026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:25.277: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/23 14:35:25.277
  Sep  4 14:35:25.277: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0904 14:35:25.959787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:26.959924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:27.279: INFO: Creating deployment "test-rollover-deployment"
  Sep  4 14:35:27.283: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0904 14:35:27.960434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:28.960516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:29.286: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Sep  4 14:35:29.288: INFO: Ensure that both replica sets have 1 created replica
  Sep  4 14:35:29.290: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Sep  4 14:35:29.294: INFO: Updating deployment test-rollover-deployment
  Sep  4 14:35:29.294: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0904 14:35:29.961090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:30.961434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:31.297: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Sep  4 14:35:31.299: INFO: Make sure deployment "test-rollover-deployment" is complete
  Sep  4 14:35:31.301: INFO: all replica sets need to contain the pod-template-hash label
  Sep  4 14:35:31.301: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 35, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:35:31.962041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:32.962086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:33.305: INFO: all replica sets need to contain the pod-template-hash label
  Sep  4 14:35:33.305: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 35, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:35:33.962941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:34.963075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:35.305: INFO: all replica sets need to contain the pod-template-hash label
  Sep  4 14:35:35.305: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 35, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:35:35.963265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:36.963333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:37.305: INFO: all replica sets need to contain the pod-template-hash label
  Sep  4 14:35:37.305: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 35, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:35:37.963518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:38.963650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:39.304: INFO: all replica sets need to contain the pod-template-hash label
  Sep  4 14:35:39.304: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 14, 35, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 14, 35, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0904 14:35:39.963723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:40.964178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:41.305: INFO: 
  Sep  4 14:35:41.305: INFO: Ensure that both old replica sets have no replicas
  Sep  4 14:35:41.308: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2970",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c0f4911-8581-4410-ba5b-0e268664a11d",
      ResourceVersion: (string) (len=4) "6880",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434927,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434940,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434940,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  4 14:35:41.310: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2970",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "53aa0f0c-920b-4784-ab42-5427d18bb73c",
      ResourceVersion: (string) (len=4) "6870",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5c0f4911-8581-4410-ba5b-0e268664a11d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 63 30 66 34 39  31 31 2d 38 35 38 31 2d  |\"5c0f4911-8581-|
              00000120  34 34 31 30 2d 62 61 35  62 2d 30 65 32 36 38 36  |4410-ba5b-0e2686|
              00000130  36 34 61 31 31 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |64a11d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434940,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 14:35:41.310: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Sep  4 14:35:41.310: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2970",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcc4c102-de87-411c-a90e-6f44a0e36b86",
      ResourceVersion: (string) (len=4) "6879",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434920,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5c0f4911-8581-4410-ba5b-0e268664a11d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434920,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434940,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 63 30 66 34 39 31 31  2d 38 35 38 31 2d 34 34  |5c0f4911-8581-44|
              000000c0  31 30 2d 62 61 35 62 2d  30 65 32 36 38 36 36 34  |10-ba5b-0e268664|
              000000d0  61 31 31 64 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |a11d\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434940,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 14:35:41.311: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2970",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "564e0742-9071-4951-8e12-00e3b0a71696",
      ResourceVersion: (string) (len=4) "6830",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434927,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5c0f4911-8581-4410-ba5b-0e268664a11d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 63 30 66 34 39  31 31 2d 38 35 38 31 2d  |\"5c0f4911-8581-|
              00000120  34 34 31 30 2d 62 61 35  62 2d 30 65 32 36 38 36  |4410-ba5b-0e2686|
              00000130  36 34 61 31 31 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |64a11d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 14:35:41.313: INFO: Pod "test-rollover-deployment-5d484bf7f9-zbhrr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-zbhrr",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-2970",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea06ee2f-143f-49c7-8223-a792db98388c",
      ResourceVersion: (string) (len=4) "6846",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "53aa0f0c-920b-4784-ab42-5427d18bb73c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 33  61 61 30 66 30 63 2d 39  |d\":\"53aa0f0c-9|
              00000090  32 30 62 2d 34 37 38 34  2d 61 62 34 32 2d 35 34  |20b-4784-ab42-54|
              000000a0  32 37 64 31 38 62 62 37  33 63 5c 22 7d 22 3a 7b  |27d18bb73c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 36 37 5c 22  |172.20.132.167\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t7qzt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t7qzt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829434929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829434929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829434929,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://e4b396a1bca6f50088b6b23fbc75646a891f1d1946f5d8ef0e50ea10679cecde",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 14:35:41.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2970" for this suite. @ 09/04/23 14:35:41.315
• [21.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/04/23 14:35:41.318
  Sep  4 14:35:41.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:35:41.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:35:41.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:35:41.325
  STEP: Creating configMap with name projected-configmap-test-volume-map-bf0bcc4c-6b6f-43d4-85c4-0d8336d24e52 @ 09/04/23 14:35:41.327
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:35:41.329
  E0904 14:35:41.965118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:42.965342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:35:43.335
  Sep  4 14:35:43.336: INFO: Trying to get logs from node worker-02 pod pod-projected-configmaps-7b236de9-68eb-4f35-ae6f-c875d263d90d container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:35:43.345
  Sep  4 14:35:43.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8115" for this suite. @ 09/04/23 14:35:43.352
• [2.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 09/04/23 14:35:43.355
  Sep  4 14:35:43.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replication-controller @ 09/04/23 14:35:43.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:35:43.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:35:43.367
  STEP: Creating replication controller my-hostname-basic-18c9c239-4704-4997-9197-a1fd82ed4bc9 @ 09/04/23 14:35:43.368
  Sep  4 14:35:43.375: INFO: Pod name my-hostname-basic-18c9c239-4704-4997-9197-a1fd82ed4bc9: Found 0 pods out of 1
  E0904 14:35:43.965675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:44.965841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:45.965950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:46.966746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:47.966826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:48.376: INFO: Pod name my-hostname-basic-18c9c239-4704-4997-9197-a1fd82ed4bc9: Found 1 pods out of 1
  Sep  4 14:35:48.376: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-18c9c239-4704-4997-9197-a1fd82ed4bc9" are running
  Sep  4 14:35:48.378: INFO: Pod "my-hostname-basic-18c9c239-4704-4997-9197-a1fd82ed4bc9-tl6f4" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-04 14:35:43 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-04 14:35:44 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-04 14:35:44 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-04 14:35:43 +0000 UTC Reason: Message:}])
  Sep  4 14:35:48.378: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/04/23 14:35:48.378
  Sep  4 14:35:48.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2371" for this suite. @ 09/04/23 14:35:48.383
• [5.031 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/04/23 14:35:48.386
  Sep  4 14:35:48.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/23 14:35:48.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:35:48.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:35:48.394
  E0904 14:35:48.966903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:49.967032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:50.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4576" for this suite. @ 09/04/23 14:35:50.415
• [2.031 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/04/23 14:35:50.417
  Sep  4 14:35:50.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename proxy @ 09/04/23 14:35:50.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:35:50.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:35:50.425
  Sep  4 14:35:50.426: INFO: Creating pod...
  E0904 14:35:50.967128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:51.967358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:52.432: INFO: Creating service...
  Sep  4 14:35:52.437: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/pods/agnhost/proxy/some/path/with/DELETE
  Sep  4 14:35:52.441: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep  4 14:35:52.441: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/pods/agnhost/proxy/some/path/with/GET
  Sep  4 14:35:52.442: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep  4 14:35:52.442: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/pods/agnhost/proxy/some/path/with/HEAD
  Sep  4 14:35:52.443: INFO: http.Client request:HEAD | StatusCode:200
  Sep  4 14:35:52.443: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/pods/agnhost/proxy/some/path/with/OPTIONS
  Sep  4 14:35:52.452: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep  4 14:35:52.452: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/pods/agnhost/proxy/some/path/with/PATCH
  Sep  4 14:35:52.462: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep  4 14:35:52.462: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/pods/agnhost/proxy/some/path/with/POST
  Sep  4 14:35:52.463: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep  4 14:35:52.463: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/pods/agnhost/proxy/some/path/with/PUT
  Sep  4 14:35:52.473: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep  4 14:35:52.473: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/services/test-service/proxy/some/path/with/DELETE
  Sep  4 14:35:52.483: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep  4 14:35:52.483: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/services/test-service/proxy/some/path/with/GET
  Sep  4 14:35:52.484: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep  4 14:35:52.484: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/services/test-service/proxy/some/path/with/HEAD
  Sep  4 14:35:52.486: INFO: http.Client request:HEAD | StatusCode:200
  Sep  4 14:35:52.486: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/services/test-service/proxy/some/path/with/OPTIONS
  Sep  4 14:35:52.487: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep  4 14:35:52.487: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/services/test-service/proxy/some/path/with/PATCH
  Sep  4 14:35:52.494: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep  4 14:35:52.494: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/services/test-service/proxy/some/path/with/POST
  Sep  4 14:35:52.498: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep  4 14:35:52.498: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8920/services/test-service/proxy/some/path/with/PUT
  Sep  4 14:35:52.504: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep  4 14:35:52.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8920" for this suite. @ 09/04/23 14:35:52.506
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 09/04/23 14:35:52.509
  Sep  4 14:35:52.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename gc @ 09/04/23 14:35:52.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:35:52.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:35:52.518
  STEP: create the deployment @ 09/04/23 14:35:52.52
  W0904 14:35:52.523153      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/04/23 14:35:52.523
  E0904 14:35:52.967915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/04/23 14:35:53.027
  STEP: wait for all rs to be garbage collected @ 09/04/23 14:35:53.029
  STEP: expected 0 rs, got 1 rs @ 09/04/23 14:35:53.033
  STEP: expected 0 pods, got 2 pods @ 09/04/23 14:35:53.034
  STEP: Gathering metrics @ 09/04/23 14:35:53.546
  W0904 14:35:53.548379      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  4 14:35:53.548: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  4 14:35:53.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-866" for this suite. @ 09/04/23 14:35:53.549
• [1.043 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 09/04/23 14:35:53.552
  Sep  4 14:35:53.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 14:35:53.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:35:53.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:35:53.558
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-230 @ 09/04/23 14:35:53.56
  STEP: changing the ExternalName service to type=ClusterIP @ 09/04/23 14:35:53.562
  STEP: creating replication controller externalname-service in namespace services-230 @ 09/04/23 14:35:53.568
  I0904 14:35:53.570900      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-230, replica count: 2
  E0904 14:35:53.969432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:54.969642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:55.970114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:35:56.621468      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  4 14:35:56.621: INFO: Creating new exec pod
  E0904 14:35:56.970569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:57.970810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:35:58.971801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:35:59.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-230 exec execpodlzq4q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep  4 14:35:59.713: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep  4 14:35:59.713: INFO: stdout: "externalname-service-tc7hr"
  Sep  4 14:35:59.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-230 exec execpodlzq4q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.39.83 80'
  Sep  4 14:35:59.808: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.39.83 80\nConnection to 10.68.39.83 80 port [tcp/http] succeeded!\n"
  Sep  4 14:35:59.808: INFO: stdout: "externalname-service-l9fqr"
  Sep  4 14:35:59.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 14:35:59.810: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-230" for this suite. @ 09/04/23 14:35:59.816
• [6.266 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/04/23 14:35:59.819
  Sep  4 14:35:59.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:35:59.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:35:59.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:35:59.828
  STEP: Creating secret with name s-test-opt-del-14037a42-f978-4b69-8dfd-9e3e525953bc @ 09/04/23 14:35:59.831
  STEP: Creating secret with name s-test-opt-upd-1b477937-ecaf-4886-8958-5cfb3ef574c9 @ 09/04/23 14:35:59.833
  STEP: Creating the pod @ 09/04/23 14:35:59.836
  E0904 14:35:59.972854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:00.973750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-14037a42-f978-4b69-8dfd-9e3e525953bc @ 09/04/23 14:36:01.853
  STEP: Updating secret s-test-opt-upd-1b477937-ecaf-4886-8958-5cfb3ef574c9 @ 09/04/23 14:36:01.856
  STEP: Creating secret with name s-test-opt-create-17bfc4e3-3e3c-41a0-ac5a-62c7fb0107d3 @ 09/04/23 14:36:01.858
  STEP: waiting to observe update in volume @ 09/04/23 14:36:01.86
  E0904 14:36:01.973854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:02.974643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:03.975070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:04.975330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:05.976182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:06.976852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:07.977228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:08.977314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:09.977867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:10.978657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:11.978707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:12.978762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:13.979780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:14.979903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:15.980648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:16.981599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:17.981682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:18.981760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:19.982470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:20.982554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:21.982998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:22.983895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:23.984337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:24.984416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:25.984994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:26.985472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:27.985702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:28.986144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:29.986390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:30.986523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:31.986919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:32.987028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:33.987520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:34.987600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:35.988418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:36.989488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:37.990233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:38.990354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:39.991182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:40.991280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:41.991708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:42.991900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:43.992419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:44.992411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:45.992666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:46.993488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:47.994392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:48.994478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:49.994728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:50.994812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:51.994832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:52.995109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:53.995197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:54.995575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:55.995701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:56.996240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:57.996423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:58.996506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:36:59.997488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:00.997567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:01.998295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:02.998813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:03.999744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:05.000056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:06.000925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:07.001575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:08.001744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:09.001987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:10.002345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:11.003263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:12.003392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:13.004265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:14.004431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:15.005503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:16.006262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:17.007096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:18.007179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:37:18.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3053" for this suite. @ 09/04/23 14:37:18.085
• [78.269 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/04/23 14:37:18.088
  Sep  4 14:37:18.088: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename subpath @ 09/04/23 14:37:18.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:37:18.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:37:18.096
  STEP: Setting up data @ 09/04/23 14:37:18.097
  STEP: Creating pod pod-subpath-test-secret-82mh @ 09/04/23 14:37:18.101
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/23 14:37:18.101
  E0904 14:37:19.007657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:20.007788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:21.008691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:22.009487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:23.009504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:24.009638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:25.009861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:26.010759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:27.010836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:28.011127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:29.011835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:30.011912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:31.011995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:32.012869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:33.013485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:34.013616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:35.013693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:36.013830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:37.013916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:38.013957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:39.014000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:40.014135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:41.014278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:42.014400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:37:42.133
  Sep  4 14:37:42.134: INFO: Trying to get logs from node control-panel-01 pod pod-subpath-test-secret-82mh container test-container-subpath-secret-82mh: <nil>
  STEP: delete the pod @ 09/04/23 14:37:42.142
  STEP: Deleting pod pod-subpath-test-secret-82mh @ 09/04/23 14:37:42.148
  Sep  4 14:37:42.148: INFO: Deleting pod "pod-subpath-test-secret-82mh" in namespace "subpath-737"
  Sep  4 14:37:42.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-737" for this suite. @ 09/04/23 14:37:42.154
• [24.068 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/04/23 14:37:42.156
  Sep  4 14:37:42.156: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/04/23 14:37:42.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:37:42.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:37:42.164
  E0904 14:37:43.015014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:44.015227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:37:44.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 09/04/23 14:37:44.179
  STEP: Cleaning up the configmap @ 09/04/23 14:37:44.181
  STEP: Cleaning up the pod @ 09/04/23 14:37:44.183
  STEP: Destroying namespace "emptydir-wrapper-3675" for this suite. @ 09/04/23 14:37:44.188
• [2.034 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/04/23 14:37:44.191
  Sep  4 14:37:44.191: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/23 14:37:44.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:37:44.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:37:44.198
  E0904 14:37:45.015837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:46.016055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:47.016137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:48.017155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:37:48.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6135" for this suite. @ 09/04/23 14:37:48.207
• [4.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 09/04/23 14:37:48.209
  Sep  4 14:37:48.209: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replication-controller @ 09/04/23 14:37:48.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:37:48.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:37:48.218
  STEP: Given a ReplicationController is created @ 09/04/23 14:37:48.219
  STEP: When the matched label of one of its pods change @ 09/04/23 14:37:48.221
  Sep  4 14:37:48.229: INFO: Pod name pod-release: Found 0 pods out of 1
  E0904 14:37:49.017317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:50.017580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:51.017717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:52.017766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:53.018644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:37:53.231: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/04/23 14:37:53.236
  E0904 14:37:54.019432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:37:54.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5708" for this suite. @ 09/04/23 14:37:54.241
• [6.033 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 09/04/23 14:37:54.243
  Sep  4 14:37:54.243: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename endpointslice @ 09/04/23 14:37:54.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:37:54.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:37:54.252
  E0904 14:37:55.019800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:56.020407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:57.020438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:58.021475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:37:59.021554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/04/23 14:37:59.285
  E0904 14:38:00.021637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:01.021788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:02.021930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:03.022754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:04.022839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 09/04/23 14:38:04.289
  E0904 14:38:05.023140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:06.023186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:07.023431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:08.023586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:09.023670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/04/23 14:38:09.292
  E0904 14:38:10.023677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:11.023793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:12.024850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:13.025479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:14.025563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 09/04/23 14:38:14.296
  Sep  4 14:38:14.304: INFO: EndpointSlice for Service endpointslice-4586/example-named-port not found
  E0904 14:38:15.026134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:16.026263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:17.026934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:18.027806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:19.028519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:20.029230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:21.029983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:22.030073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:23.030375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:24.030503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:38:24.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4586" for this suite. @ 09/04/23 14:38:24.31
• [30.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 09/04/23 14:38:24.313
  Sep  4 14:38:24.313: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/23 14:38:24.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:38:24.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:38:24.322
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/04/23 14:38:24.325
  Sep  4 14:38:24.325: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:38:25.031220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:26.031873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:27.032523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:28.033371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:29.034116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/04/23 14:38:29.091
  Sep  4 14:38:29.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:38:30.034523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:38:30.281: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:38:31.035271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:32.035748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:33.036294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:34.036338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:38:34.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2936" for this suite. @ 09/04/23 14:38:34.995
• [10.685 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/04/23 14:38:34.998
  Sep  4 14:38:34.998: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/04/23 14:38:34.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:38:35.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:38:35.006
  STEP: creating @ 09/04/23 14:38:35.007
  STEP: getting @ 09/04/23 14:38:35.014
  STEP: listing in namespace @ 09/04/23 14:38:35.016
  STEP: patching @ 09/04/23 14:38:35.018
  STEP: deleting @ 09/04/23 14:38:35.022
  Sep  4 14:38:35.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6403" for this suite. @ 09/04/23 14:38:35.028
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/04/23 14:38:35.033
  Sep  4 14:38:35.033: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 14:38:35.033
  E0904 14:38:35.036310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:38:35.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:38:35.04
  STEP: creating the pod @ 09/04/23 14:38:35.043
  STEP: submitting the pod to kubernetes @ 09/04/23 14:38:35.043
  E0904 14:38:36.036421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:37.037493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/04/23 14:38:37.05
  STEP: updating the pod @ 09/04/23 14:38:37.051
  Sep  4 14:38:37.557: INFO: Successfully updated pod "pod-update-3df7ff16-a036-45be-b94c-8b68560d553b"
  STEP: verifying the updated pod is in kubernetes @ 09/04/23 14:38:37.558
  Sep  4 14:38:37.560: INFO: Pod update OK
  Sep  4 14:38:37.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3915" for this suite. @ 09/04/23 14:38:37.562
• [2.532 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 09/04/23 14:38:37.566
  Sep  4 14:38:37.566: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename podtemplate @ 09/04/23 14:38:37.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:38:37.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:38:37.573
  Sep  4 14:38:37.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4820" for this suite. @ 09/04/23 14:38:37.585
• [0.022 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/04/23 14:38:37.588
  Sep  4 14:38:37.588: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename var-expansion @ 09/04/23 14:38:37.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:38:37.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:38:37.594
  STEP: Creating a pod to test substitution in container's command @ 09/04/23 14:38:37.599
  E0904 14:38:38.038370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:39.038471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:38:39.605
  Sep  4 14:38:39.606: INFO: Trying to get logs from node control-panel-01 pod var-expansion-699f2e63-a582-4aa3-ad15-087ae66692dd container dapi-container: <nil>
  STEP: delete the pod @ 09/04/23 14:38:39.609
  Sep  4 14:38:39.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5581" for this suite. @ 09/04/23 14:38:39.616
• [2.031 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/04/23 14:38:39.619
  Sep  4 14:38:39.619: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename daemonsets @ 09/04/23 14:38:39.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:38:39.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:38:39.628
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/23 14:38:39.635
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/23 14:38:39.638
  Sep  4 14:38:39.645: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:38:39.645: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:38:40.039104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:38:40.649: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  4 14:38:40.649: INFO: Node worker-01 is running 0 daemon pod, expected 1
  E0904 14:38:41.039426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:38:41.649: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  4 14:38:41.649: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/04/23 14:38:41.65
  Sep  4 14:38:41.658: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  4 14:38:41.658: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:38:42.040169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:38:42.662: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  4 14:38:42.662: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:38:43.040724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:38:43.662: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  4 14:38:43.662: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/23 14:38:43.663
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2729, will wait for the garbage collector to delete the pods @ 09/04/23 14:38:43.663
  Sep  4 14:38:43.717: INFO: Deleting DaemonSet.extensions daemon-set took: 2.430868ms
  Sep  4 14:38:43.817: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.066988ms
  E0904 14:38:44.041582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:45.041778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:38:45.419: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:38:45.419: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  4 14:38:45.420: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8097"},"items":null}

  Sep  4 14:38:45.421: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8097"},"items":null}

  Sep  4 14:38:45.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2729" for this suite. @ 09/04/23 14:38:45.426
• [5.810 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/04/23 14:38:45.429
  Sep  4 14:38:45.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sched-pred @ 09/04/23 14:38:45.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:38:45.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:38:45.438
  Sep  4 14:38:45.439: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep  4 14:38:45.441: INFO: Waiting for terminating namespaces to be deleted...
  Sep  4 14:38:45.442: INFO: 
  Logging pods the apiserver thinks is on node control-panel-01 before test
  Sep  4 14:38:45.444: INFO: calico-node-xrnwn from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.444: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 14:38:45.444: INFO: dashboard-metrics-scraper-77b667b99d-kp24j from kube-system started at 2023-09-04 14:11:31 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.444: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep  4 14:38:45.444: INFO: metrics-server-dfb478476-crb6q from kube-system started at 2023-09-04 14:11:29 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.444: INFO: 	Container metrics-server ready: true, restart count 0
  Sep  4 14:38:45.444: INFO: node-local-dns-9x8s5 from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.444: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 14:38:45.444: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-stzx5 from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 14:38:45.444: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 14:38:45.444: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  4 14:38:45.444: INFO: 
  Logging pods the apiserver thinks is on node worker-01 before test
  Sep  4 14:38:45.447: INFO: calico-kube-controllers-86b55cf789-rxvqz from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.447: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep  4 14:38:45.447: INFO: calico-node-skg92 from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.447: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 14:38:45.447: INFO: kubernetes-dashboard-74fb9f77fb-g9q9c from kube-system started at 2023-09-04 14:11:31 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.447: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep  4 14:38:45.447: INFO: node-local-dns-zpjfs from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.447: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 14:38:45.447: INFO: sonobuoy-e2e-job-95efc8522fa94e6d from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 14:38:45.447: INFO: 	Container e2e ready: true, restart count 0
  Sep  4 14:38:45.447: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 14:38:45.447: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-s8c5l from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 14:38:45.447: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 14:38:45.447: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  4 14:38:45.447: INFO: 
  Logging pods the apiserver thinks is on node worker-02 before test
  Sep  4 14:38:45.449: INFO: calico-node-j5dlh from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.449: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 14:38:45.449: INFO: coredns-7bc88ddb8b-8qz6h from kube-system started at 2023-09-04 14:11:27 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.449: INFO: 	Container coredns ready: true, restart count 0
  Sep  4 14:38:45.449: INFO: node-local-dns-lpzbf from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.449: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 14:38:45.449: INFO: sonobuoy from sonobuoy started at 2023-09-04 14:11:58 +0000 UTC (1 container statuses recorded)
  Sep  4 14:38:45.449: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep  4 14:38:45.449: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-x5kgm from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 14:38:45.449: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 14:38:45.449: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node control-panel-01 @ 09/04/23 14:38:45.455
  STEP: verifying the node has the label node worker-01 @ 09/04/23 14:38:45.464
  STEP: verifying the node has the label node worker-02 @ 09/04/23 14:38:45.471
  Sep  4 14:38:45.477: INFO: Pod calico-kube-controllers-86b55cf789-rxvqz requesting resource cpu=0m on Node worker-01
  Sep  4 14:38:45.477: INFO: Pod calico-node-j5dlh requesting resource cpu=250m on Node worker-02
  Sep  4 14:38:45.477: INFO: Pod calico-node-skg92 requesting resource cpu=250m on Node worker-01
  Sep  4 14:38:45.477: INFO: Pod calico-node-xrnwn requesting resource cpu=250m on Node control-panel-01
  Sep  4 14:38:45.477: INFO: Pod coredns-7bc88ddb8b-8qz6h requesting resource cpu=100m on Node worker-02
  Sep  4 14:38:45.477: INFO: Pod dashboard-metrics-scraper-77b667b99d-kp24j requesting resource cpu=0m on Node control-panel-01
  Sep  4 14:38:45.477: INFO: Pod kubernetes-dashboard-74fb9f77fb-g9q9c requesting resource cpu=0m on Node worker-01
  Sep  4 14:38:45.477: INFO: Pod metrics-server-dfb478476-crb6q requesting resource cpu=100m on Node control-panel-01
  Sep  4 14:38:45.477: INFO: Pod node-local-dns-9x8s5 requesting resource cpu=25m on Node control-panel-01
  Sep  4 14:38:45.477: INFO: Pod node-local-dns-lpzbf requesting resource cpu=25m on Node worker-02
  Sep  4 14:38:45.477: INFO: Pod node-local-dns-zpjfs requesting resource cpu=25m on Node worker-01
  Sep  4 14:38:45.477: INFO: Pod sonobuoy requesting resource cpu=0m on Node worker-02
  Sep  4 14:38:45.477: INFO: Pod sonobuoy-e2e-job-95efc8522fa94e6d requesting resource cpu=0m on Node worker-01
  Sep  4 14:38:45.477: INFO: Pod sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-s8c5l requesting resource cpu=0m on Node worker-01
  Sep  4 14:38:45.477: INFO: Pod sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-stzx5 requesting resource cpu=0m on Node control-panel-01
  Sep  4 14:38:45.478: INFO: Pod sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-x5kgm requesting resource cpu=0m on Node worker-02
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/04/23 14:38:45.478
  Sep  4 14:38:45.478: INFO: Creating a pod which consumes cpu=2607m on Node worker-01
  Sep  4 14:38:45.482: INFO: Creating a pod which consumes cpu=2537m on Node worker-02
  Sep  4 14:38:45.484: INFO: Creating a pod which consumes cpu=2537m on Node control-panel-01
  E0904 14:38:46.042542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:47.043259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/04/23 14:38:47.496
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1a09d92d-77c4-45a2-8190-1e326f317e2a.1781b8fb9192e7fc], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6482/filler-pod-1a09d92d-77c4-45a2-8190-1e326f317e2a to worker-01] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1a09d92d-77c4-45a2-8190-1e326f317e2a.1781b8fbb0059708], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.9"] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1a09d92d-77c4-45a2-8190-1e326f317e2a.1781b8fbd22d7d8e], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.9" in 573ms (573ms including waiting)] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1a09d92d-77c4-45a2-8190-1e326f317e2a.1781b8fbd2dd1860], Reason = [Created], Message = [Created container filler-pod-1a09d92d-77c4-45a2-8190-1e326f317e2a] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1a09d92d-77c4-45a2-8190-1e326f317e2a.1781b8fbd65a66f7], Reason = [Started], Message = [Started container filler-pod-1a09d92d-77c4-45a2-8190-1e326f317e2a] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6f6ad28d-8f1f-4f73-93b2-153b699367bc.1781b8fb92153190], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6482/filler-pod-6f6ad28d-8f1f-4f73-93b2-153b699367bc to control-panel-01] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6f6ad28d-8f1f-4f73-93b2-153b699367bc.1781b8fbb109e121], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6f6ad28d-8f1f-4f73-93b2-153b699367bc.1781b8fbb19fa4df], Reason = [Created], Message = [Created container filler-pod-6f6ad28d-8f1f-4f73-93b2-153b699367bc] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6f6ad28d-8f1f-4f73-93b2-153b699367bc.1781b8fbb5886e34], Reason = [Started], Message = [Started container filler-pod-6f6ad28d-8f1f-4f73-93b2-153b699367bc] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cd93d50e-eb8c-4bcb-8264-00917638d45a.1781b8fb91c5a4b9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6482/filler-pod-cd93d50e-eb8c-4bcb-8264-00917638d45a to worker-02] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cd93d50e-eb8c-4bcb-8264-00917638d45a.1781b8fbaf1f19c2], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cd93d50e-eb8c-4bcb-8264-00917638d45a.1781b8fbafb4a950], Reason = [Created], Message = [Created container filler-pod-cd93d50e-eb8c-4bcb-8264-00917638d45a] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cd93d50e-eb8c-4bcb-8264-00917638d45a.1781b8fbb31325f5], Reason = [Started], Message = [Started container filler-pod-cd93d50e-eb8c-4bcb-8264-00917638d45a] @ 09/04/23 14:38:47.498
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1781b8fc09b27610], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] @ 09/04/23 14:38:47.504
  E0904 14:38:48.044239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node control-panel-01 @ 09/04/23 14:38:48.504
  STEP: verifying the node doesn't have the label node @ 09/04/23 14:38:48.509
  STEP: removing the label node off the node worker-01 @ 09/04/23 14:38:48.51
  STEP: verifying the node doesn't have the label node @ 09/04/23 14:38:48.519
  STEP: removing the label node off the node worker-02 @ 09/04/23 14:38:48.521
  STEP: verifying the node doesn't have the label node @ 09/04/23 14:38:48.533
  Sep  4 14:38:48.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6482" for this suite. @ 09/04/23 14:38:48.536
• [3.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/04/23 14:38:48.541
  Sep  4 14:38:48.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 14:38:48.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:38:48.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:38:48.549
  STEP: Creating configMap with name configmap-test-volume-map-8a21f66c-4011-449d-9b3d-65a2391f7751 @ 09/04/23 14:38:48.551
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:38:48.553
  E0904 14:38:49.044301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:50.045141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:38:50.559
  Sep  4 14:38:50.560: INFO: Trying to get logs from node control-panel-01 pod pod-configmaps-d91aed27-6fe7-42ad-adfb-40d91faa823b container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:38:50.563
  Sep  4 14:38:50.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5234" for this suite. @ 09/04/23 14:38:50.57
• [2.031 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 09/04/23 14:38:50.572
  Sep  4 14:38:50.572: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 14:38:50.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:38:50.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:38:50.579
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5979 @ 09/04/23 14:38:50.581
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/04/23 14:38:50.585
  STEP: creating service externalsvc in namespace services-5979 @ 09/04/23 14:38:50.585
  STEP: creating replication controller externalsvc in namespace services-5979 @ 09/04/23 14:38:50.592
  I0904 14:38:50.596091      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5979, replica count: 2
  E0904 14:38:51.045320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:52.046118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:53.046502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:38:53.647176      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/04/23 14:38:53.648
  Sep  4 14:38:53.654: INFO: Creating new exec pod
  E0904 14:38:54.047546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:55.047673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:38:55.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-5979 exec execpodgmqsl -- /bin/sh -x -c nslookup clusterip-service.services-5979.svc.cluster.local'
  Sep  4 14:38:55.760: INFO: stderr: "+ nslookup clusterip-service.services-5979.svc.cluster.local\n"
  Sep  4 14:38:55.760: INFO: stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-5979.svc.cluster.local\tcanonical name = externalsvc.services-5979.svc.cluster.local.\nName:\texternalsvc.services-5979.svc.cluster.local\nAddress: 10.68.111.221\n\n"
  Sep  4 14:38:55.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-5979, will wait for the garbage collector to delete the pods @ 09/04/23 14:38:55.762
  Sep  4 14:38:55.815: INFO: Deleting ReplicationController externalsvc took: 2.478306ms
  Sep  4 14:38:55.916: INFO: Terminating ReplicationController externalsvc pods took: 100.386725ms
  E0904 14:38:56.048694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:57.049611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:38:58.050157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:38:58.423: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-5979" for this suite. @ 09/04/23 14:38:58.427
• [7.858 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 09/04/23 14:38:58.431
  Sep  4 14:38:58.431: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename disruption @ 09/04/23 14:38:58.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:38:58.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:38:58.44
  STEP: creating the pdb @ 09/04/23 14:38:58.441
  STEP: Waiting for the pdb to be processed @ 09/04/23 14:38:58.443
  E0904 14:38:59.050369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:00.050494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/04/23 14:39:00.446
  STEP: Waiting for the pdb to be processed @ 09/04/23 14:39:00.449
  E0904 14:39:01.050557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:02.050757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 09/04/23 14:39:02.452
  STEP: Waiting for the pdb to be processed @ 09/04/23 14:39:02.456
  E0904 14:39:03.051594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:04.051729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 09/04/23 14:39:04.461
  Sep  4 14:39:04.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4672" for this suite. @ 09/04/23 14:39:04.464
• [6.036 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 09/04/23 14:39:04.467
  Sep  4 14:39:04.467: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:39:04.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:39:04.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:39:04.475
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/04/23 14:39:04.476
  E0904 14:39:05.052065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:06.052427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:07.053395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:08.053488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:39:08.484
  Sep  4 14:39:08.485: INFO: Trying to get logs from node worker-02 pod pod-ad793adb-90c4-4fc0-9e42-3b8689a88c2e container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:39:08.493
  Sep  4 14:39:08.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3829" for this suite. @ 09/04/23 14:39:08.5
• [4.036 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/04/23 14:39:08.502
  Sep  4 14:39:08.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 14:39:08.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:39:08.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:39:08.511
  STEP: Creating secret with name secret-test-3fed6447-176f-44d6-ad63-4851ae36f5e0 @ 09/04/23 14:39:08.512
  STEP: Creating a pod to test consume secrets @ 09/04/23 14:39:08.514
  E0904 14:39:09.053510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:10.053645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:11.054514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:12.054654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:39:12.523
  Sep  4 14:39:12.524: INFO: Trying to get logs from node control-panel-01 pod pod-secrets-e97277f6-d3df-47dc-bd00-7145824ad856 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 14:39:12.526
  Sep  4 14:39:12.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5536" for this suite. @ 09/04/23 14:39:12.533
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 09/04/23 14:39:12.538
  Sep  4 14:39:12.538: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replicaset @ 09/04/23 14:39:12.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:39:12.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:39:12.545
  STEP: Create a ReplicaSet @ 09/04/23 14:39:12.546
  STEP: Verify that the required pods have come up @ 09/04/23 14:39:12.548
  Sep  4 14:39:12.551: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0904 14:39:13.055269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:14.056026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:15.056162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:16.056247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:17.056375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:39:17.553: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/04/23 14:39:17.553
  Sep  4 14:39:17.554: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/04/23 14:39:17.554
  STEP: DeleteCollection of the ReplicaSets @ 09/04/23 14:39:17.556
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/04/23 14:39:17.558
  Sep  4 14:39:17.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9293" for this suite. @ 09/04/23 14:39:17.561
• [5.026 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 09/04/23 14:39:17.564
  Sep  4 14:39:17.564: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/23 14:39:17.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:39:17.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:39:17.579
  Sep  4 14:39:17.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:39:18.057442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/23 14:39:18.778
  Sep  4 14:39:18.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5574 --namespace=crd-publish-openapi-5574 create -f -'
  Sep  4 14:39:19.033: INFO: stderr: ""
  Sep  4 14:39:19.033: INFO: stdout: "e2e-test-crd-publish-openapi-5595-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep  4 14:39:19.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5574 --namespace=crd-publish-openapi-5574 delete e2e-test-crd-publish-openapi-5595-crds test-cr'
  E0904 14:39:19.057686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:39:19.075: INFO: stderr: ""
  Sep  4 14:39:19.075: INFO: stdout: "e2e-test-crd-publish-openapi-5595-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Sep  4 14:39:19.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5574 --namespace=crd-publish-openapi-5574 apply -f -'
  Sep  4 14:39:19.164: INFO: stderr: ""
  Sep  4 14:39:19.164: INFO: stdout: "e2e-test-crd-publish-openapi-5595-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep  4 14:39:19.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5574 --namespace=crd-publish-openapi-5574 delete e2e-test-crd-publish-openapi-5595-crds test-cr'
  Sep  4 14:39:19.206: INFO: stderr: ""
  Sep  4 14:39:19.206: INFO: stdout: "e2e-test-crd-publish-openapi-5595-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/04/23 14:39:19.206
  Sep  4 14:39:19.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5574 explain e2e-test-crd-publish-openapi-5595-crds'
  Sep  4 14:39:19.293: INFO: stderr: ""
  Sep  4 14:39:19.293: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5595-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0904 14:39:20.058115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:39:20.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5574" for this suite. @ 09/04/23 14:39:20.475
• [2.913 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 09/04/23 14:39:20.477
  Sep  4 14:39:20.477: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename dns @ 09/04/23 14:39:20.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:39:20.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:39:20.486
  STEP: Creating a test headless service @ 09/04/23 14:39:20.487
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4265 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4265;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4265 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4265;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4265.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4265.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4265.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4265.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4265.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4265.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4265.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4265.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4265.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4265.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4265.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4265.svc;check="$$(dig +notcp +noall +answer +search 229.47.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.47.229_udp@PTR;check="$$(dig +tcp +noall +answer +search 229.47.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.47.229_tcp@PTR;sleep 1; done
   @ 09/04/23 14:39:20.495
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4265 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4265;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4265 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4265;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4265.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4265.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4265.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4265.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4265.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4265.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4265.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4265.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4265.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4265.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4265.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4265.svc;check="$$(dig +notcp +noall +answer +search 229.47.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.47.229_udp@PTR;check="$$(dig +tcp +noall +answer +search 229.47.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.47.229_tcp@PTR;sleep 1; done
   @ 09/04/23 14:39:20.495
  STEP: creating a pod to probe DNS @ 09/04/23 14:39:20.495
  STEP: submitting the pod to kubernetes @ 09/04/23 14:39:20.495
  E0904 14:39:21.058822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:22.058999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:23.059092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:24.059609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:25.060629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:26.061478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:27.062125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:28.062145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:29.062954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:30.063112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:31.063966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:32.064107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:33.064252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:34.064356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/23 14:39:34.517
  STEP: looking for the results for each expected name from probers @ 09/04/23 14:39:34.519
  Sep  4 14:39:34.520: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.530: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.537: INFO: Unable to read wheezy_udp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.547: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.557: INFO: Unable to read wheezy_udp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.567: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.577: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.587: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.637: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.647: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.657: INFO: Unable to read jessie_udp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.667: INFO: Unable to read jessie_tcp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.677: INFO: Unable to read jessie_udp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.687: INFO: Unable to read jessie_tcp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.697: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.707: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:34.747: INFO: Lookups using dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4265 wheezy_tcp@dns-test-service.dns-4265 wheezy_udp@dns-test-service.dns-4265.svc wheezy_tcp@dns-test-service.dns-4265.svc wheezy_udp@_http._tcp.dns-test-service.dns-4265.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4265.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4265 jessie_tcp@dns-test-service.dns-4265 jessie_udp@dns-test-service.dns-4265.svc jessie_tcp@dns-test-service.dns-4265.svc jessie_udp@_http._tcp.dns-test-service.dns-4265.svc jessie_tcp@_http._tcp.dns-test-service.dns-4265.svc]

  Sep  4 14:39:34.757: INFO: Pod client logs for webserver: 
  Sep  4 14:39:34.767: INFO: Pod client logs for querier: 
  Sep  4 14:39:34.777: INFO: Pod client logs for jessie-querier: 
  E0904 14:39:35.065004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:36.065962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:37.066886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:38.067090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:39.067214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:39:39.780: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.790: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.800: INFO: Unable to read wheezy_udp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.810: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.820: INFO: Unable to read wheezy_udp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.830: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.840: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.850: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.900: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.910: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.920: INFO: Unable to read jessie_udp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.930: INFO: Unable to read jessie_tcp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.940: INFO: Unable to read jessie_udp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.950: INFO: Unable to read jessie_tcp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.960: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:39.970: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:40.010: INFO: Lookups using dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4265 wheezy_tcp@dns-test-service.dns-4265 wheezy_udp@dns-test-service.dns-4265.svc wheezy_tcp@dns-test-service.dns-4265.svc wheezy_udp@_http._tcp.dns-test-service.dns-4265.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4265.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4265 jessie_tcp@dns-test-service.dns-4265 jessie_udp@dns-test-service.dns-4265.svc jessie_tcp@dns-test-service.dns-4265.svc jessie_udp@_http._tcp.dns-test-service.dns-4265.svc jessie_tcp@_http._tcp.dns-test-service.dns-4265.svc]

  Sep  4 14:39:40.020: INFO: Pod client logs for webserver: 
  Sep  4 14:39:40.030: INFO: Pod client logs for querier: 
  Sep  4 14:39:40.040: INFO: Pod client logs for jessie-querier: 
  E0904 14:39:40.067938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:41.068688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:42.069475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:43.069657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:44.069744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:39:44.780: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.790: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.791: INFO: Unable to read wheezy_udp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.800: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.801: INFO: Unable to read wheezy_udp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.810: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.811: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.820: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.870: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.880: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.890: INFO: Unable to read jessie_udp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.900: INFO: Unable to read jessie_tcp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.910: INFO: Unable to read jessie_udp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.920: INFO: Unable to read jessie_tcp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.930: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.940: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:44.980: INFO: Lookups using dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4265 wheezy_tcp@dns-test-service.dns-4265 wheezy_udp@dns-test-service.dns-4265.svc wheezy_tcp@dns-test-service.dns-4265.svc wheezy_udp@_http._tcp.dns-test-service.dns-4265.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4265.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4265 jessie_tcp@dns-test-service.dns-4265 jessie_udp@dns-test-service.dns-4265.svc jessie_tcp@dns-test-service.dns-4265.svc jessie_udp@_http._tcp.dns-test-service.dns-4265.svc jessie_tcp@_http._tcp.dns-test-service.dns-4265.svc]

  Sep  4 14:39:44.990: INFO: Pod client logs for webserver: 
  Sep  4 14:39:45.000: INFO: Pod client logs for querier: 
  Sep  4 14:39:45.010: INFO: Pod client logs for jessie-querier: 
  E0904 14:39:45.070494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:46.070549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:47.071305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:48.071588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:49.071887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:39:49.779: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.789: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.790: INFO: Unable to read wheezy_udp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.799: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.800: INFO: Unable to read wheezy_udp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.809: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.810: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.819: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.840: INFO: Unable to read jessie_udp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.849: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.859: INFO: Unable to read jessie_udp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.869: INFO: Unable to read jessie_tcp@dns-test-service.dns-4265 from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.879: INFO: Unable to read jessie_udp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.889: INFO: Unable to read jessie_tcp@dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.899: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.909: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4265.svc from pod dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4: the server could not find the requested resource (get pods dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4)
  Sep  4 14:39:49.940: INFO: Lookups using dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4265 wheezy_tcp@dns-test-service.dns-4265 wheezy_udp@dns-test-service.dns-4265.svc wheezy_tcp@dns-test-service.dns-4265.svc wheezy_udp@_http._tcp.dns-test-service.dns-4265.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4265.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4265 jessie_tcp@dns-test-service.dns-4265 jessie_udp@dns-test-service.dns-4265.svc jessie_tcp@dns-test-service.dns-4265.svc jessie_udp@_http._tcp.dns-test-service.dns-4265.svc jessie_tcp@_http._tcp.dns-test-service.dns-4265.svc]

  Sep  4 14:39:49.949: INFO: Pod client logs for webserver: 
  Sep  4 14:39:49.959: INFO: Pod client logs for querier: 
  Sep  4 14:39:49.969: INFO: Pod client logs for jessie-querier: 
  E0904 14:39:50.072688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:51.073480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:52.074293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:53.074410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:54.074506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:39:54.961: INFO: DNS probes using dns-4265/dns-test-1f6046de-95b1-4ff3-832c-5c4aab3051f4 succeeded

  Sep  4 14:39:54.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 14:39:54.963
  STEP: deleting the test service @ 09/04/23 14:39:54.98
  STEP: deleting the test headless service @ 09/04/23 14:39:54.999
  STEP: Destroying namespace "dns-4265" for this suite. @ 09/04/23 14:39:55.031
• [34.596 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 09/04/23 14:39:55.073
  Sep  4 14:39:55.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 14:39:55.074
  E0904 14:39:55.074598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:39:55.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:39:55.127
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/23 14:39:55.166
  Sep  4 14:39:55.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4328 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep  4 14:39:55.397: INFO: stderr: ""
  Sep  4 14:39:55.397: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/04/23 14:39:55.397
  E0904 14:39:56.074713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:57.075547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:58.075998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:39:59.076080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:00.076175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/04/23 14:40:00.448
  Sep  4 14:40:00.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4328 get pod e2e-test-httpd-pod -o json'
  Sep  4 14:40:00.489: INFO: stderr: ""
  Sep  4 14:40:00.489: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-09-04T14:39:55Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4328\",\n        \"resourceVersion\": \"8776\",\n        \"uid\": \"b20f01c9-1057-4ca2-bd13-ac9806727b8c\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-x7mzs\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker-02\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-x7mzs\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-04T14:39:55Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-04T14:39:57Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-04T14:39:57Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-04T14:39:55Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://759d19c2551547b975cb41ec6c9869678f33ee013984699e6933fd5b77847468\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-09-04T14:39:56Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.254.0.10\",\n        \"phase\": \"Running\",\n        \"podIP\": \"172.20.33.116\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.20.33.116\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-09-04T14:39:55Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/04/23 14:40:00.489
  Sep  4 14:40:00.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4328 replace -f -'
  Sep  4 14:40:00.791: INFO: stderr: ""
  Sep  4 14:40:00.791: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 09/04/23 14:40:00.791
  Sep  4 14:40:00.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4328 delete pods e2e-test-httpd-pod'
  E0904 14:40:01.077145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:02.077831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:02.405: INFO: stderr: ""
  Sep  4 14:40:02.405: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep  4 14:40:02.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4328" for this suite. @ 09/04/23 14:40:02.406
• [7.335 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/04/23 14:40:02.408
  Sep  4 14:40:02.408: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename svc-latency @ 09/04/23 14:40:02.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:40:02.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:40:02.415
  Sep  4 14:40:02.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1682 @ 09/04/23 14:40:02.417
  I0904 14:40:02.420012      22 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1682, replica count: 1
  E0904 14:40:03.077983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:40:03.470616      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0904 14:40:04.078058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:40:04.471545      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  4 14:40:04.577: INFO: Created: latency-svc-c7f5x
  Sep  4 14:40:04.580: INFO: Got endpoints: latency-svc-c7f5x [7.894431ms]
  Sep  4 14:40:04.586: INFO: Created: latency-svc-v5fjb
  Sep  4 14:40:04.590: INFO: Got endpoints: latency-svc-v5fjb [9.818379ms]
  Sep  4 14:40:04.590: INFO: Created: latency-svc-vzpcm
  Sep  4 14:40:04.592: INFO: Created: latency-svc-vhg9q
  Sep  4 14:40:04.594: INFO: Got endpoints: latency-svc-vzpcm [13.609049ms]
  Sep  4 14:40:04.595: INFO: Created: latency-svc-8ljfl
  Sep  4 14:40:04.597: INFO: Got endpoints: latency-svc-vhg9q [16.477099ms]
  Sep  4 14:40:04.598: INFO: Got endpoints: latency-svc-8ljfl [17.807761ms]
  Sep  4 14:40:04.601: INFO: Created: latency-svc-592fc
  Sep  4 14:40:04.603: INFO: Got endpoints: latency-svc-592fc [22.406067ms]
  Sep  4 14:40:04.603: INFO: Created: latency-svc-hbzfn
  Sep  4 14:40:04.606: INFO: Got endpoints: latency-svc-hbzfn [26.049325ms]
  Sep  4 14:40:04.607: INFO: Created: latency-svc-gs27x
  Sep  4 14:40:04.609: INFO: Got endpoints: latency-svc-gs27x [28.955841ms]
  Sep  4 14:40:04.611: INFO: Created: latency-svc-h7f66
  Sep  4 14:40:04.614: INFO: Got endpoints: latency-svc-h7f66 [33.918811ms]
  Sep  4 14:40:04.616: INFO: Created: latency-svc-p827d
  Sep  4 14:40:04.618: INFO: Got endpoints: latency-svc-p827d [37.982216ms]
  Sep  4 14:40:04.619: INFO: Created: latency-svc-wl6pl
  Sep  4 14:40:04.623: INFO: Got endpoints: latency-svc-wl6pl [42.643364ms]
  Sep  4 14:40:04.624: INFO: Created: latency-svc-bgzjv
  Sep  4 14:40:04.626: INFO: Got endpoints: latency-svc-bgzjv [46.053053ms]
  Sep  4 14:40:04.628: INFO: Created: latency-svc-lxb47
  Sep  4 14:40:04.630: INFO: Got endpoints: latency-svc-lxb47 [49.535582ms]
  Sep  4 14:40:04.631: INFO: Created: latency-svc-9pf4z
  Sep  4 14:40:04.635: INFO: Got endpoints: latency-svc-9pf4z [54.968157ms]
  Sep  4 14:40:04.635: INFO: Created: latency-svc-vxrps
  Sep  4 14:40:04.637: INFO: Got endpoints: latency-svc-vxrps [56.867777ms]
  Sep  4 14:40:04.639: INFO: Created: latency-svc-5xlg2
  Sep  4 14:40:04.641: INFO: Got endpoints: latency-svc-5xlg2 [60.709127ms]
  Sep  4 14:40:04.643: INFO: Created: latency-svc-mt79r
  Sep  4 14:40:04.645: INFO: Got endpoints: latency-svc-mt79r [55.082394ms]
  Sep  4 14:40:04.646: INFO: Created: latency-svc-jcm2w
  Sep  4 14:40:04.648: INFO: Got endpoints: latency-svc-jcm2w [54.674521ms]
  Sep  4 14:40:04.649: INFO: Created: latency-svc-zcdvm
  Sep  4 14:40:04.652: INFO: Got endpoints: latency-svc-zcdvm [54.954926ms]
  Sep  4 14:40:04.657: INFO: Created: latency-svc-zrzth
  Sep  4 14:40:04.659: INFO: Created: latency-svc-w2rh5
  Sep  4 14:40:04.659: INFO: Got endpoints: latency-svc-zrzth [61.425578ms]
  Sep  4 14:40:04.662: INFO: Created: latency-svc-zjg58
  Sep  4 14:40:04.664: INFO: Got endpoints: latency-svc-w2rh5 [61.388117ms]
  Sep  4 14:40:04.665: INFO: Created: latency-svc-7lrh7
  Sep  4 14:40:04.666: INFO: Got endpoints: latency-svc-zjg58 [59.562526ms]
  Sep  4 14:40:04.668: INFO: Got endpoints: latency-svc-7lrh7 [58.423628ms]
  Sep  4 14:40:04.670: INFO: Created: latency-svc-bhjlz
  Sep  4 14:40:04.672: INFO: Got endpoints: latency-svc-bhjlz [57.748151ms]
  Sep  4 14:40:04.673: INFO: Created: latency-svc-8f2cs
  Sep  4 14:40:04.676: INFO: Got endpoints: latency-svc-8f2cs [58.009699ms]
  Sep  4 14:40:04.678: INFO: Created: latency-svc-mkmwp
  Sep  4 14:40:04.679: INFO: Created: latency-svc-glfv2
  Sep  4 14:40:04.683: INFO: Got endpoints: latency-svc-mkmwp [59.633466ms]
  Sep  4 14:40:04.685: INFO: Got endpoints: latency-svc-glfv2 [58.368198ms]
  Sep  4 14:40:04.686: INFO: Created: latency-svc-vdfcq
  Sep  4 14:40:04.688: INFO: Got endpoints: latency-svc-vdfcq [58.072563ms]
  Sep  4 14:40:04.690: INFO: Created: latency-svc-pgs6x
  Sep  4 14:40:04.692: INFO: Got endpoints: latency-svc-pgs6x [56.732479ms]
  Sep  4 14:40:04.693: INFO: Created: latency-svc-5hx5l
  Sep  4 14:40:04.698: INFO: Got endpoints: latency-svc-5hx5l [60.914556ms]
  Sep  4 14:40:04.699: INFO: Created: latency-svc-hsnk9
  Sep  4 14:40:04.702: INFO: Got endpoints: latency-svc-hsnk9 [61.157297ms]
  Sep  4 14:40:04.702: INFO: Created: latency-svc-q7ttf
  Sep  4 14:40:04.707: INFO: Got endpoints: latency-svc-q7ttf [62.26631ms]
  Sep  4 14:40:04.708: INFO: Created: latency-svc-kdbw8
  Sep  4 14:40:04.709: INFO: Created: latency-svc-c7z5g
  Sep  4 14:40:04.713: INFO: Created: latency-svc-xhwvw
  Sep  4 14:40:04.716: INFO: Created: latency-svc-rp2v4
  Sep  4 14:40:04.718: INFO: Created: latency-svc-2bdz4
  Sep  4 14:40:04.721: INFO: Created: latency-svc-6sqr2
  Sep  4 14:40:04.723: INFO: Created: latency-svc-ltlwr
  Sep  4 14:40:04.726: INFO: Created: latency-svc-4flqw
  Sep  4 14:40:04.728: INFO: Created: latency-svc-vfm9h
  Sep  4 14:40:04.730: INFO: Got endpoints: latency-svc-kdbw8 [81.650605ms]
  Sep  4 14:40:04.732: INFO: Created: latency-svc-m8qlr
  Sep  4 14:40:04.734: INFO: Created: latency-svc-krn8p
  Sep  4 14:40:04.740: INFO: Created: latency-svc-sk7ls
  Sep  4 14:40:04.743: INFO: Created: latency-svc-zz5wt
  Sep  4 14:40:04.746: INFO: Created: latency-svc-bxcw7
  Sep  4 14:40:04.749: INFO: Created: latency-svc-6pdqt
  Sep  4 14:40:04.751: INFO: Created: latency-svc-r7tzt
  Sep  4 14:40:04.781: INFO: Got endpoints: latency-svc-c7z5g [129.59634ms]
  Sep  4 14:40:04.786: INFO: Created: latency-svc-zgrt9
  Sep  4 14:40:04.830: INFO: Got endpoints: latency-svc-xhwvw [171.023647ms]
  Sep  4 14:40:04.836: INFO: Created: latency-svc-2khvw
  Sep  4 14:40:04.880: INFO: Got endpoints: latency-svc-rp2v4 [216.260931ms]
  Sep  4 14:40:04.886: INFO: Created: latency-svc-lt5r8
  Sep  4 14:40:04.931: INFO: Got endpoints: latency-svc-2bdz4 [265.792662ms]
  Sep  4 14:40:04.936: INFO: Created: latency-svc-5kkn8
  Sep  4 14:40:04.982: INFO: Got endpoints: latency-svc-6sqr2 [314.291516ms]
  Sep  4 14:40:04.986: INFO: Created: latency-svc-l8drc
  Sep  4 14:40:05.031: INFO: Got endpoints: latency-svc-ltlwr [358.78476ms]
  Sep  4 14:40:05.035: INFO: Created: latency-svc-ggqr2
  E0904 14:40:05.078668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:05.081: INFO: Got endpoints: latency-svc-4flqw [404.886844ms]
  Sep  4 14:40:05.086: INFO: Created: latency-svc-j2979
  Sep  4 14:40:05.132: INFO: Got endpoints: latency-svc-vfm9h [449.304334ms]
  Sep  4 14:40:05.137: INFO: Created: latency-svc-jtwx4
  Sep  4 14:40:05.183: INFO: Got endpoints: latency-svc-m8qlr [497.925226ms]
  Sep  4 14:40:05.187: INFO: Created: latency-svc-dfh2l
  Sep  4 14:40:05.232: INFO: Got endpoints: latency-svc-krn8p [543.824039ms]
  Sep  4 14:40:05.236: INFO: Created: latency-svc-c48xs
  Sep  4 14:40:05.280: INFO: Got endpoints: latency-svc-sk7ls [588.147086ms]
  Sep  4 14:40:05.286: INFO: Created: latency-svc-25gt6
  Sep  4 14:40:05.331: INFO: Got endpoints: latency-svc-zz5wt [633.205469ms]
  Sep  4 14:40:05.336: INFO: Created: latency-svc-4cxw7
  Sep  4 14:40:05.382: INFO: Got endpoints: latency-svc-bxcw7 [679.896639ms]
  Sep  4 14:40:05.387: INFO: Created: latency-svc-jz48n
  Sep  4 14:40:05.432: INFO: Got endpoints: latency-svc-6pdqt [724.469063ms]
  Sep  4 14:40:05.436: INFO: Created: latency-svc-k6tdg
  Sep  4 14:40:05.481: INFO: Got endpoints: latency-svc-r7tzt [750.436444ms]
  Sep  4 14:40:05.486: INFO: Created: latency-svc-cxrzw
  Sep  4 14:40:05.531: INFO: Got endpoints: latency-svc-zgrt9 [749.694869ms]
  Sep  4 14:40:05.536: INFO: Created: latency-svc-j9zjs
  Sep  4 14:40:05.581: INFO: Got endpoints: latency-svc-2khvw [750.70896ms]
  Sep  4 14:40:05.585: INFO: Created: latency-svc-7g6sz
  Sep  4 14:40:05.632: INFO: Got endpoints: latency-svc-lt5r8 [752.14553ms]
  Sep  4 14:40:05.637: INFO: Created: latency-svc-vsqbf
  Sep  4 14:40:05.680: INFO: Got endpoints: latency-svc-5kkn8 [748.591112ms]
  Sep  4 14:40:05.685: INFO: Created: latency-svc-xmbw2
  Sep  4 14:40:05.731: INFO: Got endpoints: latency-svc-l8drc [749.043442ms]
  Sep  4 14:40:05.735: INFO: Created: latency-svc-knzzq
  Sep  4 14:40:05.781: INFO: Got endpoints: latency-svc-ggqr2 [750.915903ms]
  Sep  4 14:40:05.791: INFO: Created: latency-svc-vtbx5
  Sep  4 14:40:05.830: INFO: Got endpoints: latency-svc-j2979 [748.706001ms]
  Sep  4 14:40:05.834: INFO: Created: latency-svc-6v4tz
  Sep  4 14:40:05.881: INFO: Got endpoints: latency-svc-jtwx4 [748.806032ms]
  Sep  4 14:40:05.886: INFO: Created: latency-svc-p67j4
  Sep  4 14:40:05.931: INFO: Got endpoints: latency-svc-dfh2l [748.378476ms]
  Sep  4 14:40:05.936: INFO: Created: latency-svc-ztvpn
  Sep  4 14:40:05.981: INFO: Got endpoints: latency-svc-c48xs [749.555744ms]
  Sep  4 14:40:05.986: INFO: Created: latency-svc-wp7jk
  Sep  4 14:40:06.030: INFO: Got endpoints: latency-svc-25gt6 [750.107002ms]
  Sep  4 14:40:06.035: INFO: Created: latency-svc-qcxsp
  E0904 14:40:06.079608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:06.081: INFO: Got endpoints: latency-svc-4cxw7 [749.579752ms]
  Sep  4 14:40:06.085: INFO: Created: latency-svc-7mtdh
  Sep  4 14:40:06.131: INFO: Got endpoints: latency-svc-jz48n [748.62737ms]
  Sep  4 14:40:06.135: INFO: Created: latency-svc-8mt4p
  Sep  4 14:40:06.182: INFO: Got endpoints: latency-svc-k6tdg [749.925157ms]
  Sep  4 14:40:06.186: INFO: Created: latency-svc-nq2gq
  Sep  4 14:40:06.230: INFO: Got endpoints: latency-svc-cxrzw [749.425141ms]
  Sep  4 14:40:06.235: INFO: Created: latency-svc-g69wr
  Sep  4 14:40:06.281: INFO: Got endpoints: latency-svc-j9zjs [750.181945ms]
  Sep  4 14:40:06.286: INFO: Created: latency-svc-66g5d
  Sep  4 14:40:06.331: INFO: Got endpoints: latency-svc-7g6sz [749.882137ms]
  Sep  4 14:40:06.336: INFO: Created: latency-svc-wnt8r
  Sep  4 14:40:06.382: INFO: Got endpoints: latency-svc-vsqbf [749.503397ms]
  Sep  4 14:40:06.387: INFO: Created: latency-svc-xjql5
  Sep  4 14:40:06.432: INFO: Got endpoints: latency-svc-xmbw2 [751.829814ms]
  Sep  4 14:40:06.437: INFO: Created: latency-svc-d78wr
  Sep  4 14:40:06.481: INFO: Got endpoints: latency-svc-knzzq [750.202012ms]
  Sep  4 14:40:06.487: INFO: Created: latency-svc-t6t7g
  Sep  4 14:40:06.531: INFO: Got endpoints: latency-svc-vtbx5 [749.788079ms]
  Sep  4 14:40:06.535: INFO: Created: latency-svc-7mbdl
  Sep  4 14:40:06.581: INFO: Got endpoints: latency-svc-6v4tz [750.836742ms]
  Sep  4 14:40:06.587: INFO: Created: latency-svc-grrxv
  Sep  4 14:40:06.630: INFO: Got endpoints: latency-svc-p67j4 [749.249119ms]
  Sep  4 14:40:06.635: INFO: Created: latency-svc-kghqv
  Sep  4 14:40:06.682: INFO: Got endpoints: latency-svc-ztvpn [750.795796ms]
  Sep  4 14:40:06.687: INFO: Created: latency-svc-7bc47
  Sep  4 14:40:06.730: INFO: Got endpoints: latency-svc-wp7jk [748.687849ms]
  Sep  4 14:40:06.735: INFO: Created: latency-svc-nm69g
  Sep  4 14:40:06.781: INFO: Got endpoints: latency-svc-qcxsp [750.493244ms]
  Sep  4 14:40:06.785: INFO: Created: latency-svc-7zv4h
  Sep  4 14:40:06.830: INFO: Got endpoints: latency-svc-7mtdh [749.042198ms]
  Sep  4 14:40:06.835: INFO: Created: latency-svc-rb9pt
  Sep  4 14:40:06.881: INFO: Got endpoints: latency-svc-8mt4p [749.933622ms]
  Sep  4 14:40:06.885: INFO: Created: latency-svc-6t2tn
  Sep  4 14:40:06.930: INFO: Got endpoints: latency-svc-nq2gq [748.370162ms]
  Sep  4 14:40:06.935: INFO: Created: latency-svc-glhrw
  Sep  4 14:40:06.982: INFO: Got endpoints: latency-svc-g69wr [752.188494ms]
  Sep  4 14:40:06.987: INFO: Created: latency-svc-msjl5
  Sep  4 14:40:07.031: INFO: Got endpoints: latency-svc-66g5d [749.622522ms]
  Sep  4 14:40:07.036: INFO: Created: latency-svc-7znvf
  E0904 14:40:07.080018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:07.081: INFO: Got endpoints: latency-svc-wnt8r [749.588775ms]
  Sep  4 14:40:07.085: INFO: Created: latency-svc-sgscj
  Sep  4 14:40:07.133: INFO: Got endpoints: latency-svc-xjql5 [750.820389ms]
  Sep  4 14:40:07.137: INFO: Created: latency-svc-5fbxl
  Sep  4 14:40:07.181: INFO: Got endpoints: latency-svc-d78wr [749.11271ms]
  Sep  4 14:40:07.186: INFO: Created: latency-svc-l9dtz
  Sep  4 14:40:07.231: INFO: Got endpoints: latency-svc-t6t7g [749.862834ms]
  Sep  4 14:40:07.237: INFO: Created: latency-svc-85fvr
  Sep  4 14:40:07.281: INFO: Got endpoints: latency-svc-7mbdl [749.60315ms]
  Sep  4 14:40:07.286: INFO: Created: latency-svc-qf98f
  Sep  4 14:40:07.331: INFO: Got endpoints: latency-svc-grrxv [750.212874ms]
  Sep  4 14:40:07.335: INFO: Created: latency-svc-nvkfp
  Sep  4 14:40:07.382: INFO: Got endpoints: latency-svc-kghqv [751.948486ms]
  Sep  4 14:40:07.386: INFO: Created: latency-svc-w7pwc
  Sep  4 14:40:07.432: INFO: Got endpoints: latency-svc-7bc47 [750.479646ms]
  Sep  4 14:40:07.437: INFO: Created: latency-svc-5nh4j
  Sep  4 14:40:07.480: INFO: Got endpoints: latency-svc-nm69g [749.861789ms]
  Sep  4 14:40:07.486: INFO: Created: latency-svc-vrsfc
  Sep  4 14:40:07.531: INFO: Got endpoints: latency-svc-7zv4h [749.909668ms]
  Sep  4 14:40:07.535: INFO: Created: latency-svc-mmzzs
  Sep  4 14:40:07.580: INFO: Got endpoints: latency-svc-rb9pt [750.426562ms]
  Sep  4 14:40:07.584: INFO: Created: latency-svc-s6xsd
  Sep  4 14:40:07.631: INFO: Got endpoints: latency-svc-6t2tn [750.619528ms]
  Sep  4 14:40:07.636: INFO: Created: latency-svc-wgsvp
  Sep  4 14:40:07.680: INFO: Got endpoints: latency-svc-glhrw [750.437044ms]
  Sep  4 14:40:07.685: INFO: Created: latency-svc-mqck6
  Sep  4 14:40:07.731: INFO: Got endpoints: latency-svc-msjl5 [748.50757ms]
  Sep  4 14:40:07.736: INFO: Created: latency-svc-k8tvm
  Sep  4 14:40:07.780: INFO: Got endpoints: latency-svc-7znvf [749.655829ms]
  Sep  4 14:40:07.785: INFO: Created: latency-svc-lpwl7
  Sep  4 14:40:07.830: INFO: Got endpoints: latency-svc-sgscj [749.677529ms]
  Sep  4 14:40:07.835: INFO: Created: latency-svc-tx9ht
  Sep  4 14:40:07.880: INFO: Got endpoints: latency-svc-5fbxl [747.540081ms]
  Sep  4 14:40:07.886: INFO: Created: latency-svc-wq48b
  Sep  4 14:40:07.931: INFO: Got endpoints: latency-svc-l9dtz [749.859531ms]
  Sep  4 14:40:07.937: INFO: Created: latency-svc-qhqqq
  Sep  4 14:40:07.980: INFO: Got endpoints: latency-svc-85fvr [748.705097ms]
  Sep  4 14:40:07.987: INFO: Created: latency-svc-ktmlv
  Sep  4 14:40:08.030: INFO: Got endpoints: latency-svc-qf98f [749.036212ms]
  Sep  4 14:40:08.035: INFO: Created: latency-svc-xxnr7
  E0904 14:40:08.080063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:08.081: INFO: Got endpoints: latency-svc-nvkfp [750.338208ms]
  Sep  4 14:40:08.086: INFO: Created: latency-svc-2sjpr
  Sep  4 14:40:08.130: INFO: Got endpoints: latency-svc-w7pwc [748.273763ms]
  Sep  4 14:40:08.135: INFO: Created: latency-svc-fmn8x
  Sep  4 14:40:08.181: INFO: Got endpoints: latency-svc-5nh4j [748.441435ms]
  Sep  4 14:40:08.186: INFO: Created: latency-svc-qv2n7
  Sep  4 14:40:08.231: INFO: Got endpoints: latency-svc-vrsfc [750.784837ms]
  Sep  4 14:40:08.235: INFO: Created: latency-svc-w6685
  Sep  4 14:40:08.282: INFO: Got endpoints: latency-svc-mmzzs [750.677458ms]
  Sep  4 14:40:08.287: INFO: Created: latency-svc-zx8qd
  Sep  4 14:40:08.332: INFO: Got endpoints: latency-svc-s6xsd [751.039636ms]
  Sep  4 14:40:08.336: INFO: Created: latency-svc-2vrtr
  Sep  4 14:40:08.381: INFO: Got endpoints: latency-svc-wgsvp [749.247441ms]
  Sep  4 14:40:08.385: INFO: Created: latency-svc-z7jrn
  Sep  4 14:40:08.430: INFO: Got endpoints: latency-svc-mqck6 [749.60268ms]
  Sep  4 14:40:08.435: INFO: Created: latency-svc-rtn7b
  Sep  4 14:40:08.480: INFO: Got endpoints: latency-svc-k8tvm [749.249536ms]
  Sep  4 14:40:08.485: INFO: Created: latency-svc-gzx6t
  Sep  4 14:40:08.531: INFO: Got endpoints: latency-svc-lpwl7 [750.112883ms]
  Sep  4 14:40:08.535: INFO: Created: latency-svc-8p7kh
  Sep  4 14:40:08.581: INFO: Got endpoints: latency-svc-tx9ht [750.789077ms]
  Sep  4 14:40:08.593: INFO: Created: latency-svc-k7dmx
  Sep  4 14:40:08.632: INFO: Got endpoints: latency-svc-wq48b [751.187149ms]
  Sep  4 14:40:08.636: INFO: Created: latency-svc-wtgrl
  Sep  4 14:40:08.681: INFO: Got endpoints: latency-svc-qhqqq [749.650073ms]
  Sep  4 14:40:08.686: INFO: Created: latency-svc-vtfzd
  Sep  4 14:40:08.730: INFO: Got endpoints: latency-svc-ktmlv [750.289545ms]
  Sep  4 14:40:08.735: INFO: Created: latency-svc-rts2z
  Sep  4 14:40:08.781: INFO: Got endpoints: latency-svc-xxnr7 [750.559371ms]
  Sep  4 14:40:08.785: INFO: Created: latency-svc-mx8p2
  Sep  4 14:40:08.833: INFO: Got endpoints: latency-svc-2sjpr [751.611435ms]
  Sep  4 14:40:08.837: INFO: Created: latency-svc-trj5j
  Sep  4 14:40:08.881: INFO: Got endpoints: latency-svc-fmn8x [750.575193ms]
  Sep  4 14:40:08.887: INFO: Created: latency-svc-4hljc
  Sep  4 14:40:08.930: INFO: Got endpoints: latency-svc-qv2n7 [749.470026ms]
  Sep  4 14:40:08.936: INFO: Created: latency-svc-2p4cv
  Sep  4 14:40:08.982: INFO: Got endpoints: latency-svc-w6685 [750.892959ms]
  Sep  4 14:40:08.986: INFO: Created: latency-svc-c89sm
  Sep  4 14:40:09.032: INFO: Got endpoints: latency-svc-zx8qd [750.305138ms]
  Sep  4 14:40:09.038: INFO: Created: latency-svc-7m66w
  E0904 14:40:09.080534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:09.080: INFO: Got endpoints: latency-svc-2vrtr [748.923488ms]
  Sep  4 14:40:09.087: INFO: Created: latency-svc-t89v2
  Sep  4 14:40:09.131: INFO: Got endpoints: latency-svc-z7jrn [750.261446ms]
  Sep  4 14:40:09.135: INFO: Created: latency-svc-hztqt
  Sep  4 14:40:09.181: INFO: Got endpoints: latency-svc-rtn7b [750.699162ms]
  Sep  4 14:40:09.185: INFO: Created: latency-svc-rhd48
  Sep  4 14:40:09.231: INFO: Got endpoints: latency-svc-gzx6t [751.040451ms]
  Sep  4 14:40:09.235: INFO: Created: latency-svc-24gjp
  Sep  4 14:40:09.281: INFO: Got endpoints: latency-svc-8p7kh [750.399793ms]
  Sep  4 14:40:09.286: INFO: Created: latency-svc-4b7v4
  Sep  4 14:40:09.331: INFO: Got endpoints: latency-svc-k7dmx [749.660448ms]
  Sep  4 14:40:09.336: INFO: Created: latency-svc-5mbcr
  Sep  4 14:40:09.380: INFO: Got endpoints: latency-svc-wtgrl [748.744624ms]
  Sep  4 14:40:09.385: INFO: Created: latency-svc-xpftb
  Sep  4 14:40:09.431: INFO: Got endpoints: latency-svc-vtfzd [750.689452ms]
  Sep  4 14:40:09.436: INFO: Created: latency-svc-r26bm
  Sep  4 14:40:09.482: INFO: Got endpoints: latency-svc-rts2z [751.332144ms]
  Sep  4 14:40:09.486: INFO: Created: latency-svc-xhr2v
  Sep  4 14:40:09.531: INFO: Got endpoints: latency-svc-mx8p2 [749.807643ms]
  Sep  4 14:40:09.536: INFO: Created: latency-svc-726s6
  Sep  4 14:40:09.581: INFO: Got endpoints: latency-svc-trj5j [747.581315ms]
  Sep  4 14:40:09.585: INFO: Created: latency-svc-g66c5
  Sep  4 14:40:09.629: INFO: Got endpoints: latency-svc-4hljc [748.492879ms]
  Sep  4 14:40:09.634: INFO: Created: latency-svc-6lxwt
  Sep  4 14:40:09.680: INFO: Got endpoints: latency-svc-2p4cv [749.894529ms]
  Sep  4 14:40:09.685: INFO: Created: latency-svc-5fkd9
  Sep  4 14:40:09.730: INFO: Got endpoints: latency-svc-c89sm [748.617386ms]
  Sep  4 14:40:09.735: INFO: Created: latency-svc-2bljn
  Sep  4 14:40:09.781: INFO: Got endpoints: latency-svc-7m66w [748.712346ms]
  Sep  4 14:40:09.786: INFO: Created: latency-svc-7mdzx
  Sep  4 14:40:09.831: INFO: Got endpoints: latency-svc-t89v2 [750.316091ms]
  Sep  4 14:40:09.835: INFO: Created: latency-svc-pjlx7
  Sep  4 14:40:09.881: INFO: Got endpoints: latency-svc-hztqt [750.528015ms]
  Sep  4 14:40:09.886: INFO: Created: latency-svc-czcm2
  Sep  4 14:40:09.932: INFO: Got endpoints: latency-svc-rhd48 [750.658433ms]
  Sep  4 14:40:09.936: INFO: Created: latency-svc-fz5x6
  Sep  4 14:40:09.981: INFO: Got endpoints: latency-svc-24gjp [749.413909ms]
  Sep  4 14:40:09.985: INFO: Created: latency-svc-97gkn
  Sep  4 14:40:10.030: INFO: Got endpoints: latency-svc-4b7v4 [748.911169ms]
  Sep  4 14:40:10.035: INFO: Created: latency-svc-f7ng7
  E0904 14:40:10.081543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:10.081: INFO: Got endpoints: latency-svc-5mbcr [750.298747ms]
  Sep  4 14:40:10.086: INFO: Created: latency-svc-fccfd
  Sep  4 14:40:10.130: INFO: Got endpoints: latency-svc-xpftb [749.710702ms]
  Sep  4 14:40:10.134: INFO: Created: latency-svc-86hqp
  Sep  4 14:40:10.180: INFO: Got endpoints: latency-svc-r26bm [748.74179ms]
  Sep  4 14:40:10.185: INFO: Created: latency-svc-7lngb
  Sep  4 14:40:10.231: INFO: Got endpoints: latency-svc-xhr2v [749.525258ms]
  Sep  4 14:40:10.236: INFO: Created: latency-svc-nvtxt
  Sep  4 14:40:10.282: INFO: Got endpoints: latency-svc-726s6 [751.067327ms]
  Sep  4 14:40:10.287: INFO: Created: latency-svc-zxpzv
  Sep  4 14:40:10.330: INFO: Got endpoints: latency-svc-g66c5 [749.311774ms]
  Sep  4 14:40:10.335: INFO: Created: latency-svc-f7rdw
  Sep  4 14:40:10.381: INFO: Got endpoints: latency-svc-6lxwt [752.007671ms]
  Sep  4 14:40:10.386: INFO: Created: latency-svc-mnd7q
  Sep  4 14:40:10.429: INFO: Got endpoints: latency-svc-5fkd9 [749.038837ms]
  Sep  4 14:40:10.434: INFO: Created: latency-svc-jwvsj
  Sep  4 14:40:10.481: INFO: Got endpoints: latency-svc-2bljn [750.600019ms]
  Sep  4 14:40:10.486: INFO: Created: latency-svc-4fldg
  Sep  4 14:40:10.531: INFO: Got endpoints: latency-svc-7mdzx [749.867959ms]
  Sep  4 14:40:10.537: INFO: Created: latency-svc-dbmft
  Sep  4 14:40:10.581: INFO: Got endpoints: latency-svc-pjlx7 [750.528169ms]
  Sep  4 14:40:10.586: INFO: Created: latency-svc-6v5zb
  Sep  4 14:40:10.631: INFO: Got endpoints: latency-svc-czcm2 [749.061577ms]
  Sep  4 14:40:10.635: INFO: Created: latency-svc-nw247
  Sep  4 14:40:10.682: INFO: Got endpoints: latency-svc-fz5x6 [750.259778ms]
  Sep  4 14:40:10.686: INFO: Created: latency-svc-w6pj9
  Sep  4 14:40:10.730: INFO: Got endpoints: latency-svc-97gkn [749.494023ms]
  Sep  4 14:40:10.735: INFO: Created: latency-svc-btr52
  Sep  4 14:40:10.781: INFO: Got endpoints: latency-svc-f7ng7 [750.802895ms]
  Sep  4 14:40:10.785: INFO: Created: latency-svc-jbbcr
  Sep  4 14:40:10.830: INFO: Got endpoints: latency-svc-fccfd [749.255239ms]
  Sep  4 14:40:10.835: INFO: Created: latency-svc-k9cgt
  Sep  4 14:40:10.880: INFO: Got endpoints: latency-svc-86hqp [749.77392ms]
  Sep  4 14:40:10.885: INFO: Created: latency-svc-xvxbs
  Sep  4 14:40:10.931: INFO: Got endpoints: latency-svc-7lngb [751.107038ms]
  Sep  4 14:40:10.937: INFO: Created: latency-svc-gnxcl
  Sep  4 14:40:10.981: INFO: Got endpoints: latency-svc-nvtxt [750.269788ms]
  Sep  4 14:40:10.986: INFO: Created: latency-svc-959gf
  Sep  4 14:40:11.032: INFO: Got endpoints: latency-svc-zxpzv [750.285766ms]
  Sep  4 14:40:11.036: INFO: Created: latency-svc-t99hg
  Sep  4 14:40:11.080: INFO: Got endpoints: latency-svc-f7rdw [750.493752ms]
  E0904 14:40:11.081923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:11.086: INFO: Created: latency-svc-2j2lc
  Sep  4 14:40:11.131: INFO: Got endpoints: latency-svc-mnd7q [749.514634ms]
  Sep  4 14:40:11.135: INFO: Created: latency-svc-9hgm4
  Sep  4 14:40:11.180: INFO: Got endpoints: latency-svc-jwvsj [750.331164ms]
  Sep  4 14:40:11.186: INFO: Created: latency-svc-g9dkx
  Sep  4 14:40:11.232: INFO: Got endpoints: latency-svc-4fldg [751.223626ms]
  Sep  4 14:40:11.237: INFO: Created: latency-svc-278f7
  Sep  4 14:40:11.280: INFO: Got endpoints: latency-svc-dbmft [749.86644ms]
  Sep  4 14:40:11.285: INFO: Created: latency-svc-w99sx
  Sep  4 14:40:11.330: INFO: Got endpoints: latency-svc-6v5zb [749.070181ms]
  Sep  4 14:40:11.335: INFO: Created: latency-svc-g4wvm
  Sep  4 14:40:11.380: INFO: Got endpoints: latency-svc-nw247 [749.909185ms]
  Sep  4 14:40:11.386: INFO: Created: latency-svc-k9zsk
  Sep  4 14:40:11.431: INFO: Got endpoints: latency-svc-w6pj9 [749.368279ms]
  Sep  4 14:40:11.436: INFO: Created: latency-svc-pbgqd
  Sep  4 14:40:11.480: INFO: Got endpoints: latency-svc-btr52 [750.133063ms]
  Sep  4 14:40:11.485: INFO: Created: latency-svc-578sl
  Sep  4 14:40:11.531: INFO: Got endpoints: latency-svc-jbbcr [750.445894ms]
  Sep  4 14:40:11.536: INFO: Created: latency-svc-c5r9n
  Sep  4 14:40:11.581: INFO: Got endpoints: latency-svc-k9cgt [750.752716ms]
  Sep  4 14:40:11.587: INFO: Created: latency-svc-lfq2s
  Sep  4 14:40:11.631: INFO: Got endpoints: latency-svc-xvxbs [750.567167ms]
  Sep  4 14:40:11.635: INFO: Created: latency-svc-nlr6b
  Sep  4 14:40:11.681: INFO: Got endpoints: latency-svc-gnxcl [750.186828ms]
  Sep  4 14:40:11.686: INFO: Created: latency-svc-jh255
  Sep  4 14:40:11.730: INFO: Got endpoints: latency-svc-959gf [748.374621ms]
  Sep  4 14:40:11.734: INFO: Created: latency-svc-n4rhq
  Sep  4 14:40:11.781: INFO: Got endpoints: latency-svc-t99hg [749.391598ms]
  Sep  4 14:40:11.787: INFO: Created: latency-svc-jkp7n
  Sep  4 14:40:11.830: INFO: Got endpoints: latency-svc-2j2lc [749.597265ms]
  Sep  4 14:40:11.835: INFO: Created: latency-svc-vds8k
  Sep  4 14:40:11.881: INFO: Got endpoints: latency-svc-9hgm4 [749.674233ms]
  Sep  4 14:40:11.885: INFO: Created: latency-svc-mr9vl
  Sep  4 14:40:11.932: INFO: Got endpoints: latency-svc-g9dkx [752.472649ms]
  Sep  4 14:40:11.937: INFO: Created: latency-svc-lrjtz
  Sep  4 14:40:11.980: INFO: Got endpoints: latency-svc-278f7 [747.821631ms]
  Sep  4 14:40:11.986: INFO: Created: latency-svc-7t89h
  Sep  4 14:40:12.030: INFO: Got endpoints: latency-svc-w99sx [749.660116ms]
  Sep  4 14:40:12.035: INFO: Created: latency-svc-llcqz
  E0904 14:40:12.082014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:12.082: INFO: Got endpoints: latency-svc-g4wvm [751.481848ms]
  Sep  4 14:40:12.087: INFO: Created: latency-svc-jhmxm
  Sep  4 14:40:12.131: INFO: Got endpoints: latency-svc-k9zsk [750.269102ms]
  Sep  4 14:40:12.141: INFO: Created: latency-svc-q8hjv
  Sep  4 14:40:12.180: INFO: Got endpoints: latency-svc-pbgqd [748.646645ms]
  Sep  4 14:40:12.184: INFO: Created: latency-svc-fsd97
  Sep  4 14:40:12.231: INFO: Got endpoints: latency-svc-578sl [750.480026ms]
  Sep  4 14:40:12.235: INFO: Created: latency-svc-8mvxp
  Sep  4 14:40:12.282: INFO: Got endpoints: latency-svc-c5r9n [750.548042ms]
  Sep  4 14:40:12.287: INFO: Created: latency-svc-h96jd
  Sep  4 14:40:12.332: INFO: Got endpoints: latency-svc-lfq2s [750.375879ms]
  Sep  4 14:40:12.336: INFO: Created: latency-svc-pk2vr
  Sep  4 14:40:12.381: INFO: Got endpoints: latency-svc-nlr6b [750.725194ms]
  Sep  4 14:40:12.386: INFO: Created: latency-svc-kbw7q
  Sep  4 14:40:12.431: INFO: Got endpoints: latency-svc-jh255 [749.655612ms]
  Sep  4 14:40:12.484: INFO: Got endpoints: latency-svc-n4rhq [754.039802ms]
  Sep  4 14:40:12.532: INFO: Got endpoints: latency-svc-jkp7n [750.138672ms]
  Sep  4 14:40:12.581: INFO: Got endpoints: latency-svc-vds8k [750.650808ms]
  Sep  4 14:40:12.631: INFO: Got endpoints: latency-svc-mr9vl [750.065888ms]
  Sep  4 14:40:12.681: INFO: Got endpoints: latency-svc-lrjtz [748.391317ms]
  Sep  4 14:40:12.732: INFO: Got endpoints: latency-svc-7t89h [752.410807ms]
  Sep  4 14:40:12.782: INFO: Got endpoints: latency-svc-llcqz [751.813075ms]
  Sep  4 14:40:12.831: INFO: Got endpoints: latency-svc-jhmxm [749.024679ms]
  Sep  4 14:40:12.881: INFO: Got endpoints: latency-svc-q8hjv [750.189026ms]
  Sep  4 14:40:12.931: INFO: Got endpoints: latency-svc-fsd97 [750.576797ms]
  Sep  4 14:40:12.980: INFO: Got endpoints: latency-svc-8mvxp [749.583897ms]
  Sep  4 14:40:13.030: INFO: Got endpoints: latency-svc-h96jd [748.230404ms]
  Sep  4 14:40:13.081: INFO: Got endpoints: latency-svc-pk2vr [749.086907ms]
  E0904 14:40:13.082108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:13.130: INFO: Got endpoints: latency-svc-kbw7q [748.748507ms]
  Sep  4 14:40:13.130: INFO: Latencies: [9.818379ms 13.609049ms 16.477099ms 17.807761ms 22.406067ms 26.049325ms 28.955841ms 33.918811ms 37.982216ms 42.643364ms 46.053053ms 49.535582ms 54.674521ms 54.954926ms 54.968157ms 55.082394ms 56.732479ms 56.867777ms 57.748151ms 58.009699ms 58.072563ms 58.368198ms 58.423628ms 59.562526ms 59.633466ms 60.709127ms 60.914556ms 61.157297ms 61.388117ms 61.425578ms 62.26631ms 81.650605ms 129.59634ms 171.023647ms 216.260931ms 265.792662ms 314.291516ms 358.78476ms 404.886844ms 449.304334ms 497.925226ms 543.824039ms 588.147086ms 633.205469ms 679.896639ms 724.469063ms 747.540081ms 747.581315ms 747.821631ms 748.230404ms 748.273763ms 748.370162ms 748.374621ms 748.378476ms 748.391317ms 748.441435ms 748.492879ms 748.50757ms 748.591112ms 748.617386ms 748.62737ms 748.646645ms 748.687849ms 748.705097ms 748.706001ms 748.712346ms 748.74179ms 748.744624ms 748.748507ms 748.806032ms 748.911169ms 748.923488ms 749.024679ms 749.036212ms 749.038837ms 749.042198ms 749.043442ms 749.061577ms 749.070181ms 749.086907ms 749.11271ms 749.247441ms 749.249119ms 749.249536ms 749.255239ms 749.311774ms 749.368279ms 749.391598ms 749.413909ms 749.425141ms 749.470026ms 749.494023ms 749.503397ms 749.514634ms 749.525258ms 749.555744ms 749.579752ms 749.583897ms 749.588775ms 749.597265ms 749.60268ms 749.60315ms 749.622522ms 749.650073ms 749.655612ms 749.655829ms 749.660116ms 749.660448ms 749.674233ms 749.677529ms 749.694869ms 749.710702ms 749.77392ms 749.788079ms 749.807643ms 749.859531ms 749.861789ms 749.862834ms 749.86644ms 749.867959ms 749.882137ms 749.894529ms 749.909185ms 749.909668ms 749.925157ms 749.933622ms 750.065888ms 750.107002ms 750.112883ms 750.133063ms 750.138672ms 750.181945ms 750.186828ms 750.189026ms 750.202012ms 750.212874ms 750.259778ms 750.261446ms 750.269102ms 750.269788ms 750.285766ms 750.289545ms 750.298747ms 750.305138ms 750.316091ms 750.331164ms 750.338208ms 750.375879ms 750.399793ms 750.426562ms 750.436444ms 750.437044ms 750.445894ms 750.479646ms 750.480026ms 750.493244ms 750.493752ms 750.528015ms 750.528169ms 750.548042ms 750.559371ms 750.567167ms 750.575193ms 750.576797ms 750.600019ms 750.619528ms 750.650808ms 750.658433ms 750.677458ms 750.689452ms 750.699162ms 750.70896ms 750.725194ms 750.752716ms 750.784837ms 750.789077ms 750.795796ms 750.802895ms 750.820389ms 750.836742ms 750.892959ms 750.915903ms 751.039636ms 751.040451ms 751.067327ms 751.107038ms 751.187149ms 751.223626ms 751.332144ms 751.481848ms 751.611435ms 751.813075ms 751.829814ms 751.948486ms 752.007671ms 752.14553ms 752.188494ms 752.410807ms 752.472649ms 754.039802ms]
  Sep  4 14:40:13.130: INFO: 50 %ile: 749.60268ms
  Sep  4 14:40:13.130: INFO: 90 %ile: 750.892959ms
  Sep  4 14:40:13.130: INFO: 99 %ile: 752.472649ms
  Sep  4 14:40:13.130: INFO: Total sample count: 200
  Sep  4 14:40:13.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1682" for this suite. @ 09/04/23 14:40:13.133
• [10.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/04/23 14:40:13.136
  Sep  4 14:40:13.136: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/23 14:40:13.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:40:13.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:40:13.145
  E0904 14:40:14.082906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:15.083921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:15.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3654" for this suite. @ 09/04/23 14:40:15.158
• [2.025 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/04/23 14:40:15.161
  Sep  4 14:40:15.161: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename daemonsets @ 09/04/23 14:40:15.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:40:15.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:40:15.168
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/04/23 14:40:15.176
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/23 14:40:15.177
  Sep  4 14:40:15.183: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:40:15.183: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:40:16.084776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:16.188: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  4 14:40:16.188: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:40:17.085457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:17.188: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  4 14:40:17.188: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/04/23 14:40:17.189
  Sep  4 14:40:17.196: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  4 14:40:17.196: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/04/23 14:40:17.196
  E0904 14:40:18.085620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/23 14:40:18.209
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3269, will wait for the garbage collector to delete the pods @ 09/04/23 14:40:18.209
  Sep  4 14:40:18.266: INFO: Deleting DaemonSet.extensions daemon-set took: 3.36748ms
  Sep  4 14:40:18.366: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.48435ms
  E0904 14:40:19.085922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:19.569: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:40:19.569: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  4 14:40:19.571: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10519"},"items":null}

  Sep  4 14:40:19.574: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10520"},"items":null}

  Sep  4 14:40:19.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3269" for this suite. @ 09/04/23 14:40:19.583
• [4.426 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 09/04/23 14:40:19.587
  Sep  4 14:40:19.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename job @ 09/04/23 14:40:19.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:40:19.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:40:19.598
  STEP: Creating a suspended job @ 09/04/23 14:40:19.602
  STEP: Patching the Job @ 09/04/23 14:40:19.606
  STEP: Watching for Job to be patched @ 09/04/23 14:40:19.622
  Sep  4 14:40:19.623: INFO: Event ADDED observed for Job e2e-g2mcl in namespace job-708 with labels: map[e2e-job-label:e2e-g2mcl] and annotations: map[]
  Sep  4 14:40:19.623: INFO: Event MODIFIED found for Job e2e-g2mcl in namespace job-708 with labels: map[e2e-g2mcl:patched e2e-job-label:e2e-g2mcl] and annotations: map[]
  STEP: Updating the job @ 09/04/23 14:40:19.623
  STEP: Watching for Job to be updated @ 09/04/23 14:40:19.629
  Sep  4 14:40:19.632: INFO: Event MODIFIED found for Job e2e-g2mcl in namespace job-708 with labels: map[e2e-g2mcl:patched e2e-job-label:e2e-g2mcl] and annotations: map[updated:true]
  Sep  4 14:40:19.632: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/04/23 14:40:19.632
  Sep  4 14:40:19.636: INFO: Job: e2e-g2mcl as labels: map[e2e-g2mcl:patched e2e-job-label:e2e-g2mcl]
  STEP: Waiting for job to complete @ 09/04/23 14:40:19.636
  E0904 14:40:20.085962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:21.086933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:22.087649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:23.087687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:24.088278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:25.088398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/04/23 14:40:25.638
  STEP: Watching for Job to be deleted @ 09/04/23 14:40:25.641
  Sep  4 14:40:25.642: INFO: Event MODIFIED observed for Job e2e-g2mcl in namespace job-708 with labels: map[e2e-g2mcl:patched e2e-job-label:e2e-g2mcl] and annotations: map[updated:true]
  Sep  4 14:40:25.642: INFO: Event MODIFIED observed for Job e2e-g2mcl in namespace job-708 with labels: map[e2e-g2mcl:patched e2e-job-label:e2e-g2mcl] and annotations: map[updated:true]
  Sep  4 14:40:25.642: INFO: Event MODIFIED observed for Job e2e-g2mcl in namespace job-708 with labels: map[e2e-g2mcl:patched e2e-job-label:e2e-g2mcl] and annotations: map[updated:true]
  Sep  4 14:40:25.642: INFO: Event MODIFIED observed for Job e2e-g2mcl in namespace job-708 with labels: map[e2e-g2mcl:patched e2e-job-label:e2e-g2mcl] and annotations: map[updated:true]
  Sep  4 14:40:25.642: INFO: Event MODIFIED observed for Job e2e-g2mcl in namespace job-708 with labels: map[e2e-g2mcl:patched e2e-job-label:e2e-g2mcl] and annotations: map[updated:true]
  Sep  4 14:40:25.642: INFO: Event DELETED found for Job e2e-g2mcl in namespace job-708 with labels: map[e2e-g2mcl:patched e2e-job-label:e2e-g2mcl] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/04/23 14:40:25.642
  Sep  4 14:40:25.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-708" for this suite. @ 09/04/23 14:40:25.647
• [6.065 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 09/04/23 14:40:25.652
  Sep  4 14:40:25.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename gc @ 09/04/23 14:40:25.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:40:25.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:40:25.66
  STEP: create the rc1 @ 09/04/23 14:40:25.663
  STEP: create the rc2 @ 09/04/23 14:40:25.665
  E0904 14:40:26.088920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:27.089643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:28.093935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:29.093482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:30.094006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:31.094071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/04/23 14:40:31.669
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/04/23 14:40:31.881
  STEP: wait for the rc to be deleted @ 09/04/23 14:40:31.884
  E0904 14:40:32.094420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:33.095236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:34.096182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:35.096298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:36.096461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:36.892: INFO: 68 pods remaining
  Sep  4 14:40:36.892: INFO: 67 pods has nil DeletionTimestamp
  Sep  4 14:40:36.892: INFO: 
  E0904 14:40:37.097271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:38.097479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:39.098556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:40.098702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:41.098764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/04/23 14:40:41.889
  W0904 14:40:41.891549      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  4 14:40:41.891: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  4 14:40:41.891: INFO: Deleting pod "simpletest-rc-to-be-deleted-25ggc" in namespace "gc-773"
  Sep  4 14:40:41.901: INFO: Deleting pod "simpletest-rc-to-be-deleted-2ls4v" in namespace "gc-773"
  Sep  4 14:40:41.908: INFO: Deleting pod "simpletest-rc-to-be-deleted-2pcrb" in namespace "gc-773"
  Sep  4 14:40:41.913: INFO: Deleting pod "simpletest-rc-to-be-deleted-2qcpr" in namespace "gc-773"
  Sep  4 14:40:41.918: INFO: Deleting pod "simpletest-rc-to-be-deleted-2r2ls" in namespace "gc-773"
  Sep  4 14:40:41.924: INFO: Deleting pod "simpletest-rc-to-be-deleted-2wss7" in namespace "gc-773"
  Sep  4 14:40:41.929: INFO: Deleting pod "simpletest-rc-to-be-deleted-2z97w" in namespace "gc-773"
  Sep  4 14:40:41.936: INFO: Deleting pod "simpletest-rc-to-be-deleted-47rtg" in namespace "gc-773"
  Sep  4 14:40:41.941: INFO: Deleting pod "simpletest-rc-to-be-deleted-4dvds" in namespace "gc-773"
  Sep  4 14:40:41.946: INFO: Deleting pod "simpletest-rc-to-be-deleted-4hkb2" in namespace "gc-773"
  Sep  4 14:40:41.952: INFO: Deleting pod "simpletest-rc-to-be-deleted-4mdkr" in namespace "gc-773"
  Sep  4 14:40:41.960: INFO: Deleting pod "simpletest-rc-to-be-deleted-52z2s" in namespace "gc-773"
  Sep  4 14:40:41.977: INFO: Deleting pod "simpletest-rc-to-be-deleted-57g9h" in namespace "gc-773"
  Sep  4 14:40:41.982: INFO: Deleting pod "simpletest-rc-to-be-deleted-5sj8s" in namespace "gc-773"
  Sep  4 14:40:41.993: INFO: Deleting pod "simpletest-rc-to-be-deleted-5st69" in namespace "gc-773"
  Sep  4 14:40:42.000: INFO: Deleting pod "simpletest-rc-to-be-deleted-646jh" in namespace "gc-773"
  Sep  4 14:40:42.009: INFO: Deleting pod "simpletest-rc-to-be-deleted-6b7hz" in namespace "gc-773"
  Sep  4 14:40:42.019: INFO: Deleting pod "simpletest-rc-to-be-deleted-6m7pn" in namespace "gc-773"
  Sep  4 14:40:42.027: INFO: Deleting pod "simpletest-rc-to-be-deleted-6n7lz" in namespace "gc-773"
  Sep  4 14:40:42.038: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zk2r" in namespace "gc-773"
  Sep  4 14:40:42.045: INFO: Deleting pod "simpletest-rc-to-be-deleted-74t25" in namespace "gc-773"
  Sep  4 14:40:42.054: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bmjm" in namespace "gc-773"
  Sep  4 14:40:42.062: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mzx4" in namespace "gc-773"
  Sep  4 14:40:42.067: INFO: Deleting pod "simpletest-rc-to-be-deleted-8fsbg" in namespace "gc-773"
  Sep  4 14:40:42.076: INFO: Deleting pod "simpletest-rc-to-be-deleted-8tkgt" in namespace "gc-773"
  Sep  4 14:40:42.086: INFO: Deleting pod "simpletest-rc-to-be-deleted-97zjd" in namespace "gc-773"
  Sep  4 14:40:42.098: INFO: Deleting pod "simpletest-rc-to-be-deleted-9d88p" in namespace "gc-773"
  E0904 14:40:42.098890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:42.109: INFO: Deleting pod "simpletest-rc-to-be-deleted-9nhdl" in namespace "gc-773"
  Sep  4 14:40:42.120: INFO: Deleting pod "simpletest-rc-to-be-deleted-b5nvx" in namespace "gc-773"
  Sep  4 14:40:42.130: INFO: Deleting pod "simpletest-rc-to-be-deleted-bq5rn" in namespace "gc-773"
  Sep  4 14:40:42.141: INFO: Deleting pod "simpletest-rc-to-be-deleted-brlxt" in namespace "gc-773"
  Sep  4 14:40:42.153: INFO: Deleting pod "simpletest-rc-to-be-deleted-btj5s" in namespace "gc-773"
  Sep  4 14:40:42.164: INFO: Deleting pod "simpletest-rc-to-be-deleted-cb5qv" in namespace "gc-773"
  Sep  4 14:40:42.173: INFO: Deleting pod "simpletest-rc-to-be-deleted-cg5mp" in namespace "gc-773"
  Sep  4 14:40:42.180: INFO: Deleting pod "simpletest-rc-to-be-deleted-cvcwf" in namespace "gc-773"
  Sep  4 14:40:42.187: INFO: Deleting pod "simpletest-rc-to-be-deleted-d45ms" in namespace "gc-773"
  Sep  4 14:40:42.196: INFO: Deleting pod "simpletest-rc-to-be-deleted-db9ks" in namespace "gc-773"
  Sep  4 14:40:42.208: INFO: Deleting pod "simpletest-rc-to-be-deleted-dd9dv" in namespace "gc-773"
  Sep  4 14:40:42.216: INFO: Deleting pod "simpletest-rc-to-be-deleted-dkdvj" in namespace "gc-773"
  Sep  4 14:40:42.235: INFO: Deleting pod "simpletest-rc-to-be-deleted-dt5kp" in namespace "gc-773"
  Sep  4 14:40:42.253: INFO: Deleting pod "simpletest-rc-to-be-deleted-dxtj8" in namespace "gc-773"
  Sep  4 14:40:42.266: INFO: Deleting pod "simpletest-rc-to-be-deleted-f49sh" in namespace "gc-773"
  Sep  4 14:40:42.297: INFO: Deleting pod "simpletest-rc-to-be-deleted-f5m27" in namespace "gc-773"
  Sep  4 14:40:42.313: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdzzz" in namespace "gc-773"
  Sep  4 14:40:42.357: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4vnx" in namespace "gc-773"
  Sep  4 14:40:42.369: INFO: Deleting pod "simpletest-rc-to-be-deleted-g5lqb" in namespace "gc-773"
  Sep  4 14:40:42.382: INFO: Deleting pod "simpletest-rc-to-be-deleted-g5rh5" in namespace "gc-773"
  Sep  4 14:40:42.408: INFO: Deleting pod "simpletest-rc-to-be-deleted-gjxld" in namespace "gc-773"
  Sep  4 14:40:42.432: INFO: Deleting pod "simpletest-rc-to-be-deleted-gnzsc" in namespace "gc-773"
  Sep  4 14:40:42.442: INFO: Deleting pod "simpletest-rc-to-be-deleted-gtmff" in namespace "gc-773"
  Sep  4 14:40:42.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-773" for this suite. @ 09/04/23 14:40:42.497
• [16.863 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 09/04/23 14:40:42.516
  Sep  4 14:40:42.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/23 14:40:42.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:40:42.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:40:42.589
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/04/23 14:40:42.592
  Sep  4 14:40:42.593: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:40:43.099494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:43.899: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:40:44.100545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:45.101007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:46.101723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:47.101777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:48.102440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:48.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-549" for this suite. @ 09/04/23 14:40:48.614
• [6.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/04/23 14:40:48.618
  Sep  4 14:40:48.618: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename daemonsets @ 09/04/23 14:40:48.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:40:48.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:40:48.624
  Sep  4 14:40:48.632: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/04/23 14:40:48.634
  Sep  4 14:40:48.643: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:40:48.643: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/04/23 14:40:48.643
  Sep  4 14:40:48.651: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:40:48.651: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:40:49.102589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:49.652: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  4 14:40:49.652: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/04/23 14:40:49.653
  Sep  4 14:40:49.660: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  4 14:40:49.660: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0904 14:40:50.103403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:50.662: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:40:50.662: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/04/23 14:40:50.662
  Sep  4 14:40:50.666: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:40:50.666: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:40:51.103424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:51.669: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  4 14:40:51.669: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/23 14:40:51.671
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2350, will wait for the garbage collector to delete the pods @ 09/04/23 14:40:51.671
  Sep  4 14:40:51.724: INFO: Deleting DaemonSet.extensions daemon-set took: 2.278084ms
  Sep  4 14:40:51.824: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.095889ms
  E0904 14:40:52.104394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:53.104621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:53.326: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:40:53.326: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  4 14:40:53.327: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13220"},"items":null}

  Sep  4 14:40:53.328: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13220"},"items":null}

  Sep  4 14:40:53.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2350" for this suite. @ 09/04/23 14:40:53.342
• [4.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 09/04/23 14:40:53.345
  Sep  4 14:40:53.345: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/23 14:40:53.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:40:53.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:40:53.355
  E0904 14:40:54.105478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:55.106544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:40:55.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5313" for this suite. @ 09/04/23 14:40:55.371
• [2.028 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 09/04/23 14:40:55.374
  Sep  4 14:40:55.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 14:40:55.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:40:55.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:40:55.383
  STEP: Creating resourceQuota "e2e-rq-status-t6v7k" @ 09/04/23 14:40:55.386
  Sep  4 14:40:55.389: INFO: Resource quota "e2e-rq-status-t6v7k" reports spec: hard cpu limit of 500m
  Sep  4 14:40:55.389: INFO: Resource quota "e2e-rq-status-t6v7k" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-t6v7k" /status @ 09/04/23 14:40:55.389
  STEP: Confirm /status for "e2e-rq-status-t6v7k" resourceQuota via watch @ 09/04/23 14:40:55.408
  Sep  4 14:40:55.409: INFO: observed resourceQuota "e2e-rq-status-t6v7k" in namespace "resourcequota-3184" with hard status: v1.ResourceList(nil)
  Sep  4 14:40:55.409: INFO: Found resourceQuota "e2e-rq-status-t6v7k" in namespace "resourcequota-3184" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep  4 14:40:55.409: INFO: ResourceQuota "e2e-rq-status-t6v7k" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/04/23 14:40:55.41
  Sep  4 14:40:55.417: INFO: Resource quota "e2e-rq-status-t6v7k" reports spec: hard cpu limit of 1
  Sep  4 14:40:55.417: INFO: Resource quota "e2e-rq-status-t6v7k" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-t6v7k" /status @ 09/04/23 14:40:55.417
  STEP: Confirm /status for "e2e-rq-status-t6v7k" resourceQuota via watch @ 09/04/23 14:40:55.42
  Sep  4 14:40:55.421: INFO: observed resourceQuota "e2e-rq-status-t6v7k" in namespace "resourcequota-3184" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep  4 14:40:55.421: INFO: Found resourceQuota "e2e-rq-status-t6v7k" in namespace "resourcequota-3184" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Sep  4 14:40:55.421: INFO: ResourceQuota "e2e-rq-status-t6v7k" /status was patched
  STEP: Get "e2e-rq-status-t6v7k" /status @ 09/04/23 14:40:55.421
  Sep  4 14:40:55.422: INFO: Resourcequota "e2e-rq-status-t6v7k" reports status: hard cpu of 1
  Sep  4 14:40:55.422: INFO: Resourcequota "e2e-rq-status-t6v7k" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-t6v7k" /status before checking Spec is unchanged @ 09/04/23 14:40:55.423
  Sep  4 14:40:55.425: INFO: Resourcequota "e2e-rq-status-t6v7k" reports status: hard cpu of 2
  Sep  4 14:40:55.425: INFO: Resourcequota "e2e-rq-status-t6v7k" reports status: hard memory of 2Gi
  Sep  4 14:40:55.426: INFO: Found resourceQuota "e2e-rq-status-t6v7k" in namespace "resourcequota-3184" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0904 14:40:56.106961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:57.107267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:58.107347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:40:59.107587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:00.108548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:01.108611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:02.109482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:03.110112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:04.110203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:05.110333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:06.111376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:07.111464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:08.112481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:09.113471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:10.114288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:11.115098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:12.115167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:13.115253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:14.115369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:15.115449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:16.116404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:17.116437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:18.117069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:19.117158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:20.117478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:21.117847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:22.117962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:23.118179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:24.118260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:25.118889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:26.119263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:27.119734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:28.119851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:29.119974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:30.120025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:31.120150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:32.120230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:33.120409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:34.121472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:35.121556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:36.122416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:37.123187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:38.124258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:39.125083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:40.125477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:41.125560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:42.125682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:43.125728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:44.125857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:45.126761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:46.127790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:47.128634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:48.129480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:49.129607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:50.129978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:51.130726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:52.130962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:53.131180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:54.131307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:55.131429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:56.132083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:57.132853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:58.133688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:41:59.134591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:00.134713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:01.135506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:02.135627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:03.135791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:04.135910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:05.136462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:06.137476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:07.137592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:08.138331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:09.139192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:10.139267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:11.140231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:12.140367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:13.140407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:14.140503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:15.141484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:16.141913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:17.141943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:18.142169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:19.142301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:20.142389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:21.143178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:22.143272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:23.143492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:24.143619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:25.143657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:26.144470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:27.145475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:28.145553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:29.145807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:30.145930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:31.146649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:32.146750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:33.146984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:34.147074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:35.147196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:36.148054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:37.148119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:38.148216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:39.148359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:40.148433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:41.149471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:42.149970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:43.150077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:44.150199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:45.150457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:46.151309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:47.152359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:48.153414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:49.153432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:50.153499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:51.154418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:52.154536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:53.155535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:54.155624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:55.155744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:56.155830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:57.155910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:58.156176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:42:59.156294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:00.156410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:01.157477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:02.157601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:03.157693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:04.157822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:05.157952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:06.158790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:07.158882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:08.158927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:09.159046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:10.159130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:11.159794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:12.159914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:13.160745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:14.161480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:15.162249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:16.162796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:17.163743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:18.164137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:19.164259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:20.164782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:21.165472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:22.165592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:23.165827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:24.165918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:25.166048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:26.166798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:27.167017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:28.168041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:29.168179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:30.168306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:31.169257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:32.169477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:33.169560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:34.169682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:35.169825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:36.170431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:37.170554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:38.171059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:39.171463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:40.171584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:41.172627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:42.173475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:43.173692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:44.173813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:45.173895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:46.174796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:47.174930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:48.175383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:49.175550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:50.175605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:51.175946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:52.176029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:53.176246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:54.177060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:55.177474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:56.178378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:57.179411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:58.179462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:43:59.179542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:00.179955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:01.180706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:02.181471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:03.181671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:04.181753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:05.181902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:06.181982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:07.182108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:08.182250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:09.182389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:10.182478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:11.183368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:12.183489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:13.183731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:14.183856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:15.183977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:16.184415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:17.185472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:18.185773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:19.186749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:20.187241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:21.187877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:22.188201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:23.188417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:24.188508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:25.189489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:26.190018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:27.190096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:28.190168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:29.190286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:30.190406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:31.190482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:32.190600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:33.190766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:34.190898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:35.191024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:36.191606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:37.191691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:38.191960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:39.192023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:40.192140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:41.192415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:42.193471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:43.194524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:44.194606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:45.194723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:46.194811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:47.195131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:48.195280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:49.195498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:50.195814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:51.196777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:52.196870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:53.197475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:54.197899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:55.198024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:56.198896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:57.199620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:58.200374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:44:59.200417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:00.201478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:01.202063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:02.202184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:03.202429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:04.203296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:05.203378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:06.203590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:07.204387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:08.204438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:09.205472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:10.205594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:11.206038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:12.206168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:13.206498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:14.206805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:15.206927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:16.207429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:17.208093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:18.208253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:19.208646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:20.209476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:45:20.429: INFO: ResourceQuota "e2e-rq-status-t6v7k" Spec was unchanged and /status reset
  Sep  4 14:45:20.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3184" for this suite. @ 09/04/23 14:45:20.431
• [265.060 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 09/04/23 14:45:20.434
  Sep  4 14:45:20.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 14:45:20.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:45:20.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:45:20.442
  Sep  4 14:45:20.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-9406 version'
  Sep  4 14:45:20.478: INFO: stderr: ""
  Sep  4 14:45:20.478: INFO: stdout: "Client Version: v1.28.1\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.1\n"
  Sep  4 14:45:20.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9406" for this suite. @ 09/04/23 14:45:20.48
• [0.048 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/04/23 14:45:20.482
  Sep  4 14:45:20.482: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:45:20.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:45:20.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:45:20.488
  STEP: Creating configMap with name projected-configmap-test-volume-dd01835a-ab93-4a8e-b7db-fb9849acd966 @ 09/04/23 14:45:20.49
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:45:20.491
  E0904 14:45:21.209727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:22.210364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:23.210553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:24.211526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:45:24.501
  Sep  4 14:45:24.502: INFO: Trying to get logs from node worker-02 pod pod-projected-configmaps-f9a14f89-24d7-4af7-b238-df4504b603ad container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:45:24.512
  Sep  4 14:45:24.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8552" for this suite. @ 09/04/23 14:45:24.519
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 09/04/23 14:45:24.521
  Sep  4 14:45:24.521: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename statefulset @ 09/04/23 14:45:24.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:45:24.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:45:24.528
  STEP: Creating service test in namespace statefulset-9400 @ 09/04/23 14:45:24.529
  STEP: Creating statefulset ss in namespace statefulset-9400 @ 09/04/23 14:45:24.531
  Sep  4 14:45:24.540: INFO: Found 0 stateful pods, waiting for 1
  E0904 14:45:25.211957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:26.212091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:27.212871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:28.213067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:29.213481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:30.213567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:31.213894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:32.213979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:33.214161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:34.214287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:45:34.542: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/04/23 14:45:34.544
  STEP: updating a scale subresource @ 09/04/23 14:45:34.545
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/04/23 14:45:34.548
  STEP: Patch a scale subresource @ 09/04/23 14:45:34.549
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/04/23 14:45:34.552
  Sep  4 14:45:34.553: INFO: Deleting all statefulset in ns statefulset-9400
  Sep  4 14:45:34.554: INFO: Scaling statefulset ss to 0
  E0904 14:45:35.214843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:36.214983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:37.215097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:38.215308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:39.215439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:40.215949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:41.216103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:42.216226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:43.216409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:44.216531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:45:44.562: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  4 14:45:44.563: INFO: Deleting statefulset ss
  Sep  4 14:45:44.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9400" for this suite. @ 09/04/23 14:45:44.569
• [20.050 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 09/04/23 14:45:44.572
  Sep  4 14:45:44.572: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename security-context-test @ 09/04/23 14:45:44.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:45:44.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:45:44.58
  E0904 14:45:45.217487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:46.218258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:47.218722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:48.219008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:45:48.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8221" for this suite. @ 09/04/23 14:45:48.604
• [4.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 09/04/23 14:45:48.606
  Sep  4 14:45:48.606: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 14:45:48.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:45:48.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:45:48.613
  STEP: Discovering how many secrets are in namespace by default @ 09/04/23 14:45:48.617
  E0904 14:45:49.219205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:50.219435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:51.220302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:52.221176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:53.221681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/04/23 14:45:53.62
  E0904 14:45:54.221926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:55.222710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:56.223514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:57.223550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:45:58.224327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/23 14:45:58.622
  STEP: Ensuring resource quota status is calculated @ 09/04/23 14:45:58.624
  E0904 14:45:59.224421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:00.225470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/04/23 14:46:00.627
  STEP: Ensuring resource quota status captures secret creation @ 09/04/23 14:46:00.632
  E0904 14:46:01.225935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:02.226070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/04/23 14:46:02.634
  STEP: Ensuring resource quota status released usage @ 09/04/23 14:46:02.636
  E0904 14:46:03.226684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:04.226823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:46:04.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1448" for this suite. @ 09/04/23 14:46:04.64
• [16.036 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/04/23 14:46:04.643
  Sep  4 14:46:04.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 14:46:04.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:04.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:04.65
  STEP: Creating configMap with name configmap-test-volume-ef3d476d-5d74-4686-bf18-0fb40f36a33e @ 09/04/23 14:46:04.652
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:46:04.653
  E0904 14:46:05.226896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:06.227243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:07.227416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:08.227744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:46:08.662
  Sep  4 14:46:08.663: INFO: Trying to get logs from node worker-02 pod pod-configmaps-7f8e5cb2-062a-43ca-b1b1-bf9aa6e8f3d3 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 14:46:08.665
  Sep  4 14:46:08.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2297" for this suite. @ 09/04/23 14:46:08.672
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 09/04/23 14:46:08.675
  Sep  4 14:46:08.675: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename field-validation @ 09/04/23 14:46:08.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:08.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:08.684
  Sep  4 14:46:08.687: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:46:09.228100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:10.228360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:11.228414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:46:11.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9948" for this suite. @ 09/04/23 14:46:11.749
• [3.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 09/04/23 14:46:11.753
  Sep  4 14:46:11.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 14:46:11.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:11.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:11.76
  STEP: Setting up server cert @ 09/04/23 14:46:11.772
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 14:46:12.022
  STEP: Deploying the webhook pod @ 09/04/23 14:46:12.026
  STEP: Wait for the deployment to be ready @ 09/04/23 14:46:12.031
  Sep  4 14:46:12.033: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0904 14:46:12.228719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:13.229483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:46:14.038
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:46:14.043
  E0904 14:46:14.229511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:46:15.043: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/04/23 14:46:15.046
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/23 14:46:15.053
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/04/23 14:46:15.057
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/23 14:46:15.061
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/04/23 14:46:15.065
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/23 14:46:15.068
  Sep  4 14:46:15.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4628" for this suite. @ 09/04/23 14:46:15.089
  STEP: Destroying namespace "webhook-markers-7717" for this suite. @ 09/04/23 14:46:15.092
• [3.344 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/04/23 14:46:15.097
  Sep  4 14:46:15.097: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename certificates @ 09/04/23 14:46:15.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:15.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:15.106
  E0904 14:46:15.230557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 09/04/23 14:46:15.656
  STEP: getting /apis/certificates.k8s.io @ 09/04/23 14:46:15.659
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/04/23 14:46:15.659
  STEP: creating @ 09/04/23 14:46:15.66
  STEP: getting @ 09/04/23 14:46:15.668
  STEP: listing @ 09/04/23 14:46:15.669
  STEP: watching @ 09/04/23 14:46:15.67
  Sep  4 14:46:15.670: INFO: starting watch
  STEP: patching @ 09/04/23 14:46:15.67
  STEP: updating @ 09/04/23 14:46:15.673
  Sep  4 14:46:15.675: INFO: waiting for watch events with expected annotations
  Sep  4 14:46:15.675: INFO: saw patched and updated annotations
  STEP: getting /approval @ 09/04/23 14:46:15.675
  STEP: patching /approval @ 09/04/23 14:46:15.676
  STEP: updating /approval @ 09/04/23 14:46:15.679
  STEP: getting /status @ 09/04/23 14:46:15.682
  STEP: patching /status @ 09/04/23 14:46:15.683
  STEP: updating /status @ 09/04/23 14:46:15.686
  STEP: deleting @ 09/04/23 14:46:15.689
  STEP: deleting a collection @ 09/04/23 14:46:15.693
  Sep  4 14:46:15.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5447" for this suite. @ 09/04/23 14:46:15.699
• [0.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 09/04/23 14:46:15.702
  Sep  4 14:46:15.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/23 14:46:15.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:15.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:15.71
  STEP: set up a multi version CRD @ 09/04/23 14:46:15.712
  Sep  4 14:46:15.712: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:46:16.231288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:17.231982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:18.232829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/04/23 14:46:18.722
  STEP: check the unserved version gets removed @ 09/04/23 14:46:18.732
  E0904 14:46:19.233209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/04/23 14:46:19.413
  E0904 14:46:20.234072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:21.234994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:46:21.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6366" for this suite. @ 09/04/23 14:46:21.772
• [6.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 09/04/23 14:46:21.776
  Sep  4 14:46:21.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename security-context-test @ 09/04/23 14:46:21.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:21.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:21.784
  E0904 14:46:22.235169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:23.235465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:24.235696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:25.236251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:46:25.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1403" for this suite. @ 09/04/23 14:46:25.794
• [4.020 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/04/23 14:46:25.797
  Sep  4 14:46:25.797: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:46:25.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:25.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:25.81
  STEP: Creating configMap with name projected-configmap-test-volume-c17b2af1-c916-463f-ad20-b7d8fad1891c @ 09/04/23 14:46:25.811
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:46:25.813
  E0904 14:46:26.236755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:27.236823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:28.237483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:29.237578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:46:29.822
  Sep  4 14:46:29.823: INFO: Trying to get logs from node control-panel-01 pod pod-projected-configmaps-bf2c6cd4-7b6d-47c0-a228-4c11170aae97 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:46:29.825
  Sep  4 14:46:29.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5185" for this suite. @ 09/04/23 14:46:29.833
• [4.038 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 09/04/23 14:46:29.835
  Sep  4 14:46:29.835: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 14:46:29.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:29.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:29.842
  Sep  4 14:46:29.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-7543 create -f -'
  Sep  4 14:46:29.968: INFO: stderr: ""
  Sep  4 14:46:29.968: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Sep  4 14:46:29.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-7543 create -f -'
  Sep  4 14:46:30.093: INFO: stderr: ""
  Sep  4 14:46:30.093: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/23 14:46:30.093
  E0904 14:46:30.237633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:46:31.095: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  4 14:46:31.095: INFO: Found 0 / 1
  E0904 14:46:31.238628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:46:32.097: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  4 14:46:32.097: INFO: Found 1 / 1
  Sep  4 14:46:32.097: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep  4 14:46:32.098: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  4 14:46:32.098: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep  4 14:46:32.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-7543 describe pod agnhost-primary-mxb8j'
  Sep  4 14:46:32.141: INFO: stderr: ""
  Sep  4 14:46:32.141: INFO: stdout: "Name:             agnhost-primary-mxb8j\nNamespace:        kubectl-7543\nPriority:         0\nService Account:  default\nNode:             worker-02/10.254.0.10\nStart Time:       Mon, 04 Sep 2023 14:46:29 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               172.20.33.96\nIPs:\n  IP:           172.20.33.96\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://f757de174ed753ba0870a1a938e43305b0e4a21bc3db630f8d1b741e4b1e403a\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 04 Sep 2023 14:46:30 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-5pjvj (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-5pjvj:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-7543/agnhost-primary-mxb8j to worker-02\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Sep  4 14:46:32.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-7543 describe rc agnhost-primary'
  Sep  4 14:46:32.185: INFO: stderr: ""
  Sep  4 14:46:32.185: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7543\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-mxb8j\n"
  Sep  4 14:46:32.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-7543 describe service agnhost-primary'
  Sep  4 14:46:32.232: INFO: stderr: ""
  Sep  4 14:46:32.232: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-7543\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.68.38.210\nIPs:               10.68.38.210\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         172.20.33.96:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Sep  4 14:46:32.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-7543 describe node control-panel-01'
  E0904 14:46:32.238716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:46:32.286: INFO: stderr: ""
  Sep  4 14:46:32.286: INFO: stdout: "Name:               control-panel-01\nRoles:              master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=control-panel-01\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=master\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 04 Sep 2023 14:10:21 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  control-panel-01\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 04 Sep 2023 14:46:25 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 04 Sep 2023 14:11:16 +0000   Mon, 04 Sep 2023 14:11:16 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Mon, 04 Sep 2023 14:45:56 +0000   Mon, 04 Sep 2023 14:10:21 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 04 Sep 2023 14:45:56 +0000   Mon, 04 Sep 2023 14:10:21 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 04 Sep 2023 14:45:56 +0000   Mon, 04 Sep 2023 14:10:21 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 04 Sep 2023 14:45:56 +0000   Mon, 04 Sep 2023 14:10:22 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.254.0.8\n  Hostname:    control-panel-01\nCapacity:\n  cpu:                  4\n  ephemeral-storage:    40901312Ki\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  memory:               7471424Ki\n  pods:                 110\nAllocatable:\n  cpu:                  4\n  ephemeral-storage:    37694649077\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  memory:               7164224Ki\n  pods:                 110\nSystem Info:\n  Machine ID:                 8da0ace235c5435eb33ae56a538def68\n  System UUID:                a05300e5-541c-469f-ab71-0dd03df78972\n  Boot ID:                    2797b55a-025f-4dc2-b4e5-becd77a8d1b6\n  Kernel Version:             5.15.0-73-generic\n  OS Image:                   Ubuntu 22.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.23\n  Kubelet Version:            v1.28.1\n  Kube-Proxy Version:         v1.28.1\nPodCIDR:                      172.20.0.0/24\nPodCIDRs:                     172.20.0.0/24\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-xrnwn                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         35m\n  kube-system                 dashboard-metrics-scraper-77b667b99d-kp24j                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         35m\n  kube-system                 metrics-server-dfb478476-crb6q                             100m (2%)     0 (0%)      200Mi (2%)       0 (0%)         35m\n  kube-system                 node-local-dns-9x8s5                                       25m (0%)      0 (0%)      5Mi (0%)         0 (0%)         35m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-stzx5    0 (0%)        0 (0%)      0 (0%)           0 (0%)         34m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource             Requests    Limits\n  --------             --------    ------\n  cpu                  375m (9%)   0 (0%)\n  memory               205Mi (2%)  0 (0%)\n  ephemeral-storage    0 (0%)      0 (0%)\n  hugepages-1Gi        0 (0%)      0 (0%)\n  hugepages-2Mi        0 (0%)      0 (0%)\n  example.com/fakecpu  0           0\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 36m                kube-proxy       \n  Normal   Starting                 36m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      36m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  36m (x2 over 36m)  kubelet          Node control-panel-01 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    36m (x2 over 36m)  kubelet          Node control-panel-01 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     36m (x2 over 36m)  kubelet          Node control-panel-01 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  36m                kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeReady                36m                kubelet          Node control-panel-01 status is now: NodeReady\n  Normal   RegisteredNode           36m                node-controller  Node control-panel-01 event: Registered Node control-panel-01 in Controller\n"
  Sep  4 14:46:32.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-7543 describe namespace kubectl-7543'
  Sep  4 14:46:32.327: INFO: stderr: ""
  Sep  4 14:46:32.327: INFO: stdout: "Name:         kubectl-7543\nLabels:       e2e-framework=kubectl\n              e2e-run=af886277-93c3-4f48-a25e-c7b1e5af3713\n              kubernetes.io/metadata.name=kubectl-7543\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Sep  4 14:46:32.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7543" for this suite. @ 09/04/23 14:46:32.329
• [2.496 seconds]
------------------------------
SS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/04/23 14:46:32.331
  Sep  4 14:46:32.331: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/04/23 14:46:32.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:32.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:32.338
  STEP: Setting up the test @ 09/04/23 14:46:32.339
  STEP: Creating hostNetwork=false pod @ 09/04/23 14:46:32.339
  E0904 14:46:33.239282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:34.239469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/04/23 14:46:34.348
  E0904 14:46:35.240060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:36.240152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/04/23 14:46:36.355
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/04/23 14:46:36.355
  Sep  4 14:46:36.355: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5648 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:46:36.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:46:36.355: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:46:36.355: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5648/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep  4 14:46:36.407: INFO: Exec stderr: ""
  Sep  4 14:46:36.407: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5648 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:46:36.407: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:46:36.407: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:46:36.408: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5648/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep  4 14:46:36.431: INFO: Exec stderr: ""
  Sep  4 14:46:36.431: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5648 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:46:36.431: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:46:36.431: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:46:36.431: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5648/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep  4 14:46:36.454: INFO: Exec stderr: ""
  Sep  4 14:46:36.454: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5648 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:46:36.454: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:46:36.454: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:46:36.454: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5648/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep  4 14:46:36.499: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/04/23 14:46:36.499
  Sep  4 14:46:36.499: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5648 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:46:36.499: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:46:36.499: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:46:36.499: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5648/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep  4 14:46:36.524: INFO: Exec stderr: ""
  Sep  4 14:46:36.524: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5648 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:46:36.524: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:46:36.524: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:46:36.524: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5648/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep  4 14:46:36.567: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/04/23 14:46:36.567
  Sep  4 14:46:36.567: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5648 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:46:36.567: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:46:36.567: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:46:36.567: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5648/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep  4 14:46:36.620: INFO: Exec stderr: ""
  Sep  4 14:46:36.620: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5648 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:46:36.620: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:46:36.621: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:46:36.621: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5648/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep  4 14:46:36.654: INFO: Exec stderr: ""
  Sep  4 14:46:36.654: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5648 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:46:36.654: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:46:36.654: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:46:36.654: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5648/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep  4 14:46:36.707: INFO: Exec stderr: ""
  Sep  4 14:46:36.707: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5648 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:46:36.707: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:46:36.708: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:46:36.708: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5648/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep  4 14:46:36.732: INFO: Exec stderr: ""
  Sep  4 14:46:36.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5648" for this suite. @ 09/04/23 14:46:36.734
• [4.406 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 09/04/23 14:46:36.738
  Sep  4 14:46:36.738: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename job @ 09/04/23 14:46:36.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:36.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:36.746
  STEP: Creating a job @ 09/04/23 14:46:36.747
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/04/23 14:46:36.749
  E0904 14:46:37.241040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:38.242051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:39.242850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:40.242946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/04/23 14:46:40.752
  STEP: updating /status @ 09/04/23 14:46:40.757
  STEP: get /status @ 09/04/23 14:46:40.759
  Sep  4 14:46:40.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-563" for this suite. @ 09/04/23 14:46:40.762
• [4.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 09/04/23 14:46:40.765
  Sep  4 14:46:40.765: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename field-validation @ 09/04/23 14:46:40.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:40.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:40.773
  STEP: apply creating a deployment @ 09/04/23 14:46:40.774
  Sep  4 14:46:40.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6180" for this suite. @ 09/04/23 14:46:40.779
• [0.016 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/04/23 14:46:40.782
  Sep  4 14:46:40.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 14:46:40.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:40.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:40.789
  STEP: Creating secret with name secret-test-map-9d9393a4-6f58-4d15-a6c0-ba81d936c6c8 @ 09/04/23 14:46:40.79
  STEP: Creating a pod to test consume secrets @ 09/04/23 14:46:40.792
  E0904 14:46:41.243059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:42.243435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:43.243494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:44.243638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:46:44.801
  Sep  4 14:46:44.803: INFO: Trying to get logs from node worker-01 pod pod-secrets-8abf0f47-307b-4d7b-8f28-d712cb1840df container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 14:46:44.812
  Sep  4 14:46:44.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4033" for this suite. @ 09/04/23 14:46:44.819
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 09/04/23 14:46:44.822
  Sep  4 14:46:44.822: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename statefulset @ 09/04/23 14:46:44.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:44.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:44.83
  STEP: Creating service test in namespace statefulset-7405 @ 09/04/23 14:46:44.832
  STEP: Looking for a node to schedule stateful set and pod @ 09/04/23 14:46:44.834
  STEP: Creating pod with conflicting port in namespace statefulset-7405 @ 09/04/23 14:46:44.836
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7405 @ 09/04/23 14:46:44.844
  E0904 14:46:45.243719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:46.243856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-7405 @ 09/04/23 14:46:46.847
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7405 @ 09/04/23 14:46:46.85
  Sep  4 14:46:46.857: INFO: Observed stateful pod in namespace: statefulset-7405, name: ss-0, uid: ccdd94ba-aa28-40b9-9bcb-e6a13ef47b2a, status phase: Pending. Waiting for statefulset controller to delete.
  Sep  4 14:46:46.864: INFO: Observed stateful pod in namespace: statefulset-7405, name: ss-0, uid: ccdd94ba-aa28-40b9-9bcb-e6a13ef47b2a, status phase: Failed. Waiting for statefulset controller to delete.
  Sep  4 14:46:46.868: INFO: Observed stateful pod in namespace: statefulset-7405, name: ss-0, uid: ccdd94ba-aa28-40b9-9bcb-e6a13ef47b2a, status phase: Failed. Waiting for statefulset controller to delete.
  Sep  4 14:46:46.871: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-7405
  STEP: Removing pod with conflicting port in namespace statefulset-7405 @ 09/04/23 14:46:46.871
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7405 and will be in running state @ 09/04/23 14:46:46.881
  E0904 14:46:47.243943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:48.244037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:46:48.887: INFO: Deleting all statefulset in ns statefulset-7405
  Sep  4 14:46:48.888: INFO: Scaling statefulset ss to 0
  E0904 14:46:49.244504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:50.245494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:51.245629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:52.245769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:53.246784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:54.246951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:55.247947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:56.248019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:57.248152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:46:58.248375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:46:58.905: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  4 14:46:58.906: INFO: Deleting statefulset ss
  Sep  4 14:46:58.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7405" for this suite. @ 09/04/23 14:46:58.917
• [14.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 09/04/23 14:46:58.92
  Sep  4 14:46:58.920: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:46:58.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:46:58.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:46:58.929
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/04/23 14:46:58.93
  E0904 14:46:59.248868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:00.249004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:01.249475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:02.250100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:47:02.941
  Sep  4 14:47:02.942: INFO: Trying to get logs from node control-panel-01 pod pod-7a8c91ad-6dcf-495f-b43a-69c499d6fc59 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:47:02.944
  Sep  4 14:47:02.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5453" for this suite. @ 09/04/23 14:47:02.952
• [4.034 seconds]
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 09/04/23 14:47:02.954
  Sep  4 14:47:02.954: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename dns @ 09/04/23 14:47:02.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:02.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:02.961
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4304.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4304.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/04/23 14:47:02.962
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4304.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4304.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/04/23 14:47:02.962
  STEP: creating a pod to probe /etc/hosts @ 09/04/23 14:47:02.962
  STEP: submitting the pod to kubernetes @ 09/04/23 14:47:02.962
  E0904 14:47:03.250668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:04.250786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/23 14:47:04.969
  STEP: looking for the results for each expected name from probers @ 09/04/23 14:47:04.97
  Sep  4 14:47:04.987: INFO: DNS probes using dns-4304/dns-test-110093aa-ab7c-4cde-a826-98a2297cfcf4 succeeded

  Sep  4 14:47:04.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 14:47:04.989
  STEP: Destroying namespace "dns-4304" for this suite. @ 09/04/23 14:47:04.995
• [2.047 seconds]
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/04/23 14:47:05.001
  Sep  4 14:47:05.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename deployment @ 09/04/23 14:47:05.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:05.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:05.01
  STEP: creating a Deployment @ 09/04/23 14:47:05.013
  STEP: waiting for Deployment to be created @ 09/04/23 14:47:05.015
  STEP: waiting for all Replicas to be Ready @ 09/04/23 14:47:05.016
  Sep  4 14:47:05.016: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  4 14:47:05.016: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  4 14:47:05.031: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  4 14:47:05.031: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  4 14:47:05.042: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  4 14:47:05.042: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  4 14:47:05.052: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep  4 14:47:05.052: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0904 14:47:05.250806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:05.852: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep  4 14:47:05.852: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep  4 14:47:06.213: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/04/23 14:47:06.213
  Sep  4 14:47:06.219: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/04/23 14:47:06.219
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 0
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:06.220: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:06.225: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:06.225: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:06.233: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:06.233: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:06.238: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  Sep  4 14:47:06.238: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  Sep  4 14:47:06.247: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  Sep  4 14:47:06.247: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  E0904 14:47:06.251207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:06.857: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:06.857: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:06.870: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  STEP: listing Deployments @ 09/04/23 14:47:06.87
  Sep  4 14:47:06.872: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/04/23 14:47:06.872
  Sep  4 14:47:06.879: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/04/23 14:47:06.88
  Sep  4 14:47:06.889: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  4 14:47:06.893: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  4 14:47:06.905: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  4 14:47:06.923: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  4 14:47:06.932: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0904 14:47:07.251973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:07.878: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  4 14:47:07.886: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  4 14:47:07.890: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep  4 14:47:07.894: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0904 14:47:08.252413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:09.228: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/04/23 14:47:09.239
  STEP: fetching the DeploymentStatus @ 09/04/23 14:47:09.243
  Sep  4 14:47:09.246: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  Sep  4 14:47:09.246: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  Sep  4 14:47:09.246: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  Sep  4 14:47:09.246: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  Sep  4 14:47:09.246: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 1
  Sep  4 14:47:09.246: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:09.246: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:09.246: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:09.246: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 2
  Sep  4 14:47:09.246: INFO: observed Deployment test-deployment in namespace deployment-3407 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/04/23 14:47:09.246
  E0904 14:47:09.252387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.253: INFO: observed event type MODIFIED
  Sep  4 14:47:09.254: INFO: Log out all the ReplicaSets if there is no deployment created
  Sep  4 14:47:09.256: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e44bee30-675b-4ab4-9c5c-7b7d013a5a51",
      ResourceVersion: (string) (len=5) "14894",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "f4ca4917-ce38-42e9-92f3-307119a072d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 34 63 61  34 39 31 37 2d 63 65 33  |":\"f4ca4917-ce3|
              00000130  38 2d 34 32 65 39 2d 39  32 66 33 2d 33 30 37 31  |8-42e9-92f3-3071|
              00000140  31 39 61 30 37 32 64 34  5c 22 7d 22 3a 7b 7d 7d  |19a072d4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep  4 14:47:09.265: INFO: pod: "test-deployment-64fd565c98-8862b":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-8862b",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-3407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "874a640a-12c2-4fb6-94a6-27fed8eba158",
      ResourceVersion: (string) (len=5) "14887",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435631,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "e44bee30-675b-4ab4-9c5c-7b7d013a5a51",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 34 34 62 65 65 33 30  |uid\":\"e44bee30|
              000000a0  2d 36 37 35 62 2d 34 61  62 34 2d 39 63 35 63 2d  |-675b-4ab4-9c5c-|
              000000b0  37 62 37 64 30 31 33 61  35 61 35 31 5c 22 7d 22  |7b7d013a5a51\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 37 34 5c 22  |172.20.132.174\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l7g2h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l7g2h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829435626,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://06d681e09c3b2d3f2f7b6ce302588b603a21bc9b20ff10e6aeb28951554d181d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep  4 14:47:09.266: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25e9afb3-73b8-40fb-b5f6-3af5a3845338",
      ResourceVersion: (string) (len=5) "14779",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435625,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "f4ca4917-ce38-42e9-92f3-307119a072d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 34 63 61  34 39 31 37 2d 63 65 33  |":\"f4ca4917-ce3|
              00000130  38 2d 34 32 65 39 2d 39  32 66 33 2d 33 30 37 31  |8-42e9-92f3-3071|
              00000140  31 39 61 30 37 32 64 34  5c 22 7d 22 3a 7b 7d 7d  |19a072d4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep  4 14:47:09.277: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf0d7a88-e496-4c1d-89a8-1861287244e7",
      ResourceVersion: (string) (len=5) "14883",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "f4ca4917-ce38-42e9-92f3-307119a072d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 66 34 63 61  34 39 31 37 2d 63 65 33  |":\"f4ca4917-ce3|
              00000130  38 2d 34 32 65 39 2d 39  32 66 33 2d 33 30 37 31  |8-42e9-92f3-3071|
              00000140  31 39 61 30 37 32 64 34  5c 22 7d 22 3a 7b 7d 7d  |19a072d4\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep  4 14:47:09.280: INFO: pod: "test-deployment-79ff746c4-dbpjf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-dbpjf",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-3407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8839796c-293c-46c7-8eef-d4ba664c1522",
      ResourceVersion: (string) (len=5) "14903",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435630,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "cf0d7a88-e496-4c1d-89a8-1861287244e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 66 30 64 37 61 38 38  |uid\":\"cf0d7a88|
              000000a0  2d 65 34 39 36 2d 34 63  31 64 2d 38 39 61 38 2d  |-e496-4c1d-89a8-|
              000000b0  31 38 36 31 32 38 37 32  34 34 65 37 5c 22 7d 22  |1861287244e7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 33  33 2e 31 30 30 5c 22 7d  |172.20.33.100\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6l4vk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6l4vk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.20.33.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.33.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829435628,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://63e0ff7461f0d03563ea27c1a292da3bb9d15aa362250bc6727b5d228ca4ce9e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep  4 14:47:09.281: INFO: pod: "test-deployment-79ff746c4-lztqb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-lztqb",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-3407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11e0cd35-4b15-4cbc-8402-9c35fb22e881",
      ResourceVersion: (string) (len=5) "14902",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435630,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "cf0d7a88-e496-4c1d-89a8-1861287244e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 66 30 64 37 61 38 38  |uid\":\"cf0d7a88|
              000000a0  2d 65 34 39 36 2d 34 63  31 64 2d 38 39 61 38 2d  |-e496-4c1d-89a8-|
              000000b0  31 38 36 31 32 38 37 32  34 34 65 37 5c 22 7d 22  |1861287244e7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 37 35 5c 22  |172.20.132.175\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hsdct",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hsdct",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829435627,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cd4c2cc5d9af238fee2d9ad3b9927c8da507c60447a324d101abbb12d08bc2cf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep  4 14:47:09.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3407" for this suite. @ 09/04/23 14:47:09.284
• [4.286 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 09/04/23 14:47:09.287
  Sep  4 14:47:09.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename daemonsets @ 09/04/23 14:47:09.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:09.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:09.298
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/23 14:47:09.306
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/23 14:47:09.308
  Sep  4 14:47:09.311: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:47:09.311: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:47:10.252484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:10.315: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  4 14:47:10.315: INFO: Node worker-01 is running 0 daemon pod, expected 1
  E0904 14:47:11.253446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:11.315: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  4 14:47:11.315: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/04/23 14:47:11.316
  Sep  4 14:47:11.317: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/04/23 14:47:11.317
  Sep  4 14:47:11.320: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/04/23 14:47:11.32
  Sep  4 14:47:11.321: INFO: Observed &DaemonSet event: ADDED
  Sep  4 14:47:11.321: INFO: Observed &DaemonSet event: MODIFIED
  Sep  4 14:47:11.321: INFO: Observed &DaemonSet event: MODIFIED
  Sep  4 14:47:11.322: INFO: Observed &DaemonSet event: MODIFIED
  Sep  4 14:47:11.322: INFO: Observed &DaemonSet event: MODIFIED
  Sep  4 14:47:11.322: INFO: Found daemon set daemon-set in namespace daemonsets-8759 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep  4 14:47:11.322: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/04/23 14:47:11.322
  STEP: watching for the daemon set status to be patched @ 09/04/23 14:47:11.325
  Sep  4 14:47:11.326: INFO: Observed &DaemonSet event: ADDED
  Sep  4 14:47:11.326: INFO: Observed &DaemonSet event: MODIFIED
  Sep  4 14:47:11.326: INFO: Observed &DaemonSet event: MODIFIED
  Sep  4 14:47:11.326: INFO: Observed &DaemonSet event: MODIFIED
  Sep  4 14:47:11.326: INFO: Observed &DaemonSet event: MODIFIED
  Sep  4 14:47:11.326: INFO: Observed daemon set daemon-set in namespace daemonsets-8759 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep  4 14:47:11.326: INFO: Observed &DaemonSet event: MODIFIED
  Sep  4 14:47:11.326: INFO: Found daemon set daemon-set in namespace daemonsets-8759 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Sep  4 14:47:11.326: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/23 14:47:11.327
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8759, will wait for the garbage collector to delete the pods @ 09/04/23 14:47:11.328
  Sep  4 14:47:11.381: INFO: Deleting DaemonSet.extensions daemon-set took: 2.238153ms
  Sep  4 14:47:11.482: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.529551ms
  E0904 14:47:12.254372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:13.089: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:47:13.089: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  4 14:47:13.089: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15029"},"items":null}

  Sep  4 14:47:13.099: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15029"},"items":null}

  Sep  4 14:47:13.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8759" for this suite. @ 09/04/23 14:47:13.104
• [3.819 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/04/23 14:47:13.106
  Sep  4 14:47:13.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 14:47:13.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:13.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:13.113
  Sep  4 14:47:13.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9738" for this suite. @ 09/04/23 14:47:13.128
• [0.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 09/04/23 14:47:13.131
  Sep  4 14:47:13.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:47:13.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:13.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:13.138
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/04/23 14:47:13.139
  E0904 14:47:13.254424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:14.255462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:47:15.144
  Sep  4 14:47:15.145: INFO: Trying to get logs from node control-panel-01 pod pod-5e9717e7-6fa6-4a8e-b746-1d59f7a44c12 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:47:15.147
  Sep  4 14:47:15.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6240" for this suite. @ 09/04/23 14:47:15.154
• [2.025 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 09/04/23 14:47:15.157
  Sep  4 14:47:15.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replicaset @ 09/04/23 14:47:15.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:15.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:15.163
  STEP: Create a Replicaset @ 09/04/23 14:47:15.166
  STEP: Verify that the required pods have come up. @ 09/04/23 14:47:15.168
  Sep  4 14:47:15.174: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0904 14:47:15.255622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:16.255927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:17.256020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:18.256295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:19.256428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:20.176: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/23 14:47:20.176
  STEP: Getting /status @ 09/04/23 14:47:20.176
  Sep  4 14:47:20.178: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/04/23 14:47:20.178
  Sep  4 14:47:20.182: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/04/23 14:47:20.182
  Sep  4 14:47:20.183: INFO: Observed &ReplicaSet event: ADDED
  Sep  4 14:47:20.183: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  4 14:47:20.183: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  4 14:47:20.183: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  4 14:47:20.183: INFO: Found replicaset test-rs in namespace replicaset-5310 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep  4 14:47:20.183: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/04/23 14:47:20.183
  Sep  4 14:47:20.183: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep  4 14:47:20.187: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/04/23 14:47:20.187
  Sep  4 14:47:20.188: INFO: Observed &ReplicaSet event: ADDED
  Sep  4 14:47:20.188: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  4 14:47:20.188: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  4 14:47:20.188: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  4 14:47:20.188: INFO: Observed replicaset test-rs in namespace replicaset-5310 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  4 14:47:20.188: INFO: Observed &ReplicaSet event: MODIFIED
  Sep  4 14:47:20.188: INFO: Found replicaset test-rs in namespace replicaset-5310 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Sep  4 14:47:20.188: INFO: Replicaset test-rs has a patched status
  Sep  4 14:47:20.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5310" for this suite. @ 09/04/23 14:47:20.189
• [5.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 09/04/23 14:47:20.192
  Sep  4 14:47:20.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/23 14:47:20.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:20.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:20.201
  STEP: Performing setup for networking test in namespace pod-network-test-2200 @ 09/04/23 14:47:20.202
  STEP: creating a selector @ 09/04/23 14:47:20.202
  STEP: Creating the service pods in kubernetes @ 09/04/23 14:47:20.202
  Sep  4 14:47:20.202: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0904 14:47:20.256452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:21.257133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:22.257887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:23.258051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:24.258553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:25.258647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:26.259360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:27.259508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:28.259877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:29.260004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:30.260979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:31.261701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/04/23 14:47:32.235
  E0904 14:47:32.262403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:33.262614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:34.242: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep  4 14:47:34.242: INFO: Breadth first check of 172.20.132.178 on host 10.254.0.8...
  Sep  4 14:47:34.242: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.132.180:9080/dial?request=hostname&protocol=http&host=172.20.132.178&port=8083&tries=1'] Namespace:pod-network-test-2200 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:47:34.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:47:34.243: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:47:34.243: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2200/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.132.180%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.132.178%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0904 14:47:34.263343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:34.301: INFO: Waiting for responses: map[]
  Sep  4 14:47:34.301: INFO: reached 172.20.132.178 after 0/1 tries
  Sep  4 14:47:34.301: INFO: Breadth first check of 172.20.249.177 on host 10.254.0.9...
  Sep  4 14:47:34.303: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.132.180:9080/dial?request=hostname&protocol=http&host=172.20.249.177&port=8083&tries=1'] Namespace:pod-network-test-2200 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:47:34.303: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:47:34.303: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:47:34.303: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2200/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.132.180%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.249.177%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  4 14:47:34.329: INFO: Waiting for responses: map[]
  Sep  4 14:47:34.329: INFO: reached 172.20.249.177 after 0/1 tries
  Sep  4 14:47:34.329: INFO: Breadth first check of 172.20.33.102 on host 10.254.0.10...
  Sep  4 14:47:34.330: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.132.180:9080/dial?request=hostname&protocol=http&host=172.20.33.102&port=8083&tries=1'] Namespace:pod-network-test-2200 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:47:34.330: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:47:34.330: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:47:34.330: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2200/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.132.180%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.33.102%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  4 14:47:34.356: INFO: Waiting for responses: map[]
  Sep  4 14:47:34.356: INFO: reached 172.20.33.102 after 0/1 tries
  Sep  4 14:47:34.356: INFO: Going to retry 0 out of 3 pods....
  Sep  4 14:47:34.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2200" for this suite. @ 09/04/23 14:47:34.357
• [14.167 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/04/23 14:47:34.36
  Sep  4 14:47:34.360: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 14:47:34.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:34.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:34.369
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 14:47:34.37
  E0904 14:47:35.264181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:36.264857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:37.265532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:38.265631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:47:38.379
  Sep  4 14:47:38.380: INFO: Trying to get logs from node worker-02 pod downwardapi-volume-d1bce6eb-c293-4da2-abfa-7af0c8bf9873 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 14:47:38.383
  Sep  4 14:47:38.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8554" for this suite. @ 09/04/23 14:47:38.39
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 09/04/23 14:47:38.393
  Sep  4 14:47:38.393: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename security-context-test @ 09/04/23 14:47:38.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:38.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:38.4
  E0904 14:47:39.265712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:40.266047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:41.266532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:42.266618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:42.415: INFO: Got logs for pod "busybox-privileged-false-6b86e9c8-c095-4cd2-b96c-d52f2e8b796d": "ip: RTNETLINK answers: Operation not permitted\n"
  Sep  4 14:47:42.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-774" for this suite. @ 09/04/23 14:47:42.416
• [4.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 09/04/23 14:47:42.42
  Sep  4 14:47:42.420: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/23 14:47:42.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:42.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:42.427
  Sep  4 14:47:42.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:47:43.266841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:44.267144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:45.267791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:45.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1332" for this suite. @ 09/04/23 14:47:45.498
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 09/04/23 14:47:45.502
  Sep  4 14:47:45.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:47:45.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:45.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:45.511
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/04/23 14:47:45.512
  E0904 14:47:46.268425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:47.268744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:48.269481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:49.269615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:47:49.52
  Sep  4 14:47:49.521: INFO: Trying to get logs from node control-panel-01 pod pod-fe419ee5-a51e-494a-b43a-59475694e270 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:47:49.524
  Sep  4 14:47:49.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4553" for this suite. @ 09/04/23 14:47:49.532
• [4.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 09/04/23 14:47:49.534
  Sep  4 14:47:49.534: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 14:47:49.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:49.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:49.541
  STEP: validating api versions @ 09/04/23 14:47:49.542
  Sep  4 14:47:49.542: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2780 api-versions'
  Sep  4 14:47:49.581: INFO: stderr: ""
  Sep  4 14:47:49.581: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Sep  4 14:47:49.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2780" for this suite. @ 09/04/23 14:47:49.583
• [0.051 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/04/23 14:47:49.585
  Sep  4 14:47:49.585: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 14:47:49.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:49.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:49.592
  STEP: creating the pod @ 09/04/23 14:47:49.594
  STEP: submitting the pod to kubernetes @ 09/04/23 14:47:49.594
  W0904 14:47:49.597612      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0904 14:47:50.270127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:51.270270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/04/23 14:47:51.602
  STEP: updating the pod @ 09/04/23 14:47:51.603
  Sep  4 14:47:52.109: INFO: Successfully updated pod "pod-update-activedeadlineseconds-7382cfb9-ff06-481d-88a8-ff631d63c3d0"
  E0904 14:47:52.270616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:53.270871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:54.271867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:55.272008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:56.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7116" for this suite. @ 09/04/23 14:47:56.117
• [6.534 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 09/04/23 14:47:56.119
  Sep  4 14:47:56.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 14:47:56.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:47:56.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:47:56.127
  STEP: creating service multi-endpoint-test in namespace services-380 @ 09/04/23 14:47:56.129
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-380 to expose endpoints map[] @ 09/04/23 14:47:56.133
  Sep  4 14:47:56.134: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0904 14:47:56.272924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:47:57.139: INFO: successfully validated that service multi-endpoint-test in namespace services-380 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-380 @ 09/04/23 14:47:57.139
  E0904 14:47:57.273483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:47:58.273698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-380 to expose endpoints map[pod1:[100]] @ 09/04/23 14:47:59.146
  Sep  4 14:47:59.149: INFO: successfully validated that service multi-endpoint-test in namespace services-380 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-380 @ 09/04/23 14:47:59.149
  E0904 14:47:59.274302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:00.274538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-380 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/04/23 14:48:01.155
  Sep  4 14:48:01.160: INFO: successfully validated that service multi-endpoint-test in namespace services-380 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/04/23 14:48:01.16
  Sep  4 14:48:01.160: INFO: Creating new exec pod
  E0904 14:48:01.275031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:02.275130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:03.275708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:04.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-380 exec execpodgd2mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Sep  4 14:48:04.262: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Sep  4 14:48:04.262: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:48:04.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-380 exec execpodgd2mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.122.188 80'
  E0904 14:48:04.275734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:04.353: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.122.188 80\nConnection to 10.68.122.188 80 port [tcp/http] succeeded!\n"
  Sep  4 14:48:04.353: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:48:04.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-380 exec execpodgd2mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Sep  4 14:48:04.435: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Sep  4 14:48:04.435: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:48:04.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-380 exec execpodgd2mj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.122.188 81'
  Sep  4 14:48:04.525: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.122.188 81\nConnection to 10.68.122.188 81 port [tcp/*] succeeded!\n"
  Sep  4 14:48:04.525: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-380 @ 09/04/23 14:48:04.525
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-380 to expose endpoints map[pod2:[101]] @ 09/04/23 14:48:04.533
  E0904 14:48:05.276118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:05.542: INFO: successfully validated that service multi-endpoint-test in namespace services-380 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-380 @ 09/04/23 14:48:05.542
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-380 to expose endpoints map[] @ 09/04/23 14:48:05.548
  E0904 14:48:06.276433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:06.556: INFO: successfully validated that service multi-endpoint-test in namespace services-380 exposes endpoints map[]
  Sep  4 14:48:06.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-380" for this suite. @ 09/04/23 14:48:06.564
• [10.450 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 09/04/23 14:48:06.569
  Sep  4 14:48:06.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 14:48:06.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:06.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:06.582
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4376 @ 09/04/23 14:48:06.584
  STEP: changing the ExternalName service to type=NodePort @ 09/04/23 14:48:06.586
  STEP: creating replication controller externalname-service in namespace services-4376 @ 09/04/23 14:48:06.593
  I0904 14:48:06.597718      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4376, replica count: 2
  E0904 14:48:07.276765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:08.277440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:09.277712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:48:09.648064      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  4 14:48:09.648: INFO: Creating new exec pod
  E0904 14:48:10.278191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:11.279051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:12.279821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:12.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-4376 exec execpods7hwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep  4 14:48:12.764: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep  4 14:48:12.764: INFO: stdout: ""
  E0904 14:48:13.280331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:13.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-4376 exec execpods7hwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep  4 14:48:13.849: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep  4 14:48:13.849: INFO: stdout: "externalname-service-7v7kr"
  Sep  4 14:48:13.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-4376 exec execpods7hwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.132.59 80'
  Sep  4 14:48:13.937: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.132.59 80\nConnection to 10.68.132.59 80 port [tcp/http] succeeded!\n"
  Sep  4 14:48:13.937: INFO: stdout: "externalname-service-zwbf9"
  Sep  4 14:48:13.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-4376 exec execpods7hwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.254.0.9 30196'
  Sep  4 14:48:14.030: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.254.0.9 30196\nConnection to 10.254.0.9 30196 port [tcp/*] succeeded!\n"
  Sep  4 14:48:14.030: INFO: stdout: "externalname-service-zwbf9"
  Sep  4 14:48:14.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-4376 exec execpods7hwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.254.0.8 30196'
  Sep  4 14:48:14.133: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.254.0.8 30196\nConnection to 10.254.0.8 30196 port [tcp/*] succeeded!\n"
  Sep  4 14:48:14.133: INFO: stdout: "externalname-service-zwbf9"
  Sep  4 14:48:14.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 14:48:14.135: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-4376" for this suite. @ 09/04/23 14:48:14.144
• [7.578 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/04/23 14:48:14.148
  Sep  4 14:48:14.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-runtime @ 09/04/23 14:48:14.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:14.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:14.157
  STEP: create the container @ 09/04/23 14:48:14.158
  W0904 14:48:14.161921      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/04/23 14:48:14.162
  E0904 14:48:14.280681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:15.280959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:16.281738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/04/23 14:48:17.169
  STEP: the container should be terminated @ 09/04/23 14:48:17.17
  STEP: the termination message should be set @ 09/04/23 14:48:17.17
  Sep  4 14:48:17.170: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/04/23 14:48:17.17
  Sep  4 14:48:17.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8497" for this suite. @ 09/04/23 14:48:17.177
• [3.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 09/04/23 14:48:17.18
  Sep  4 14:48:17.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename disruption @ 09/04/23 14:48:17.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:17.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:17.188
  STEP: Creating a kubernetes client @ 09/04/23 14:48:17.189
  Sep  4 14:48:17.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename disruption-2 @ 09/04/23 14:48:17.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:17.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:17.196
  STEP: Waiting for the pdb to be processed @ 09/04/23 14:48:17.199
  E0904 14:48:17.281951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:18.282394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/04/23 14:48:19.206
  E0904 14:48:19.283420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:20.283560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/04/23 14:48:21.212
  E0904 14:48:21.284395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:22.284482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 09/04/23 14:48:23.216
  STEP: listing a collection of PDBs in namespace disruption-8988 @ 09/04/23 14:48:23.217
  STEP: deleting a collection of PDBs @ 09/04/23 14:48:23.218
  STEP: Waiting for the PDB collection to be deleted @ 09/04/23 14:48:23.225
  Sep  4 14:48:23.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 14:48:23.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9919" for this suite. @ 09/04/23 14:48:23.229
  STEP: Destroying namespace "disruption-8988" for this suite. @ 09/04/23 14:48:23.231
• [6.053 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/04/23 14:48:23.233
  Sep  4 14:48:23.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 14:48:23.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:23.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:23.24
  STEP: creating pod @ 09/04/23 14:48:23.242
  E0904 14:48:23.285045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:24.285609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:25.251: INFO: Pod pod-hostip-b19b5f2e-6b49-408f-950d-dd8b24fdef5e has hostIP: 10.254.0.10
  Sep  4 14:48:25.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8379" for this suite. @ 09/04/23 14:48:25.252
• [2.021 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/04/23 14:48:25.254
  Sep  4 14:48:25.254: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename var-expansion @ 09/04/23 14:48:25.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:25.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:25.262
  E0904 14:48:25.285779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:26.285982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:27.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 14:48:27.273: INFO: Deleting pod "var-expansion-6603b2ab-f3fe-495b-9fa0-6d20511a9b35" in namespace "var-expansion-7827"
  Sep  4 14:48:27.275: INFO: Wait up to 5m0s for pod "var-expansion-6603b2ab-f3fe-495b-9fa0-6d20511a9b35" to be fully deleted
  E0904 14:48:27.286016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:28.286324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-7827" for this suite. @ 09/04/23 14:48:29.279
• [4.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/04/23 14:48:29.282
  Sep  4 14:48:29.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 14:48:29.282
  E0904 14:48:29.286518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:29.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:29.29
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 14:48:29.292
  E0904 14:48:30.287383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:31.287743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:48:31.299
  Sep  4 14:48:31.300: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-4ab32f55-4641-44af-9a98-166f10e157ef container client-container: <nil>
  STEP: delete the pod @ 09/04/23 14:48:31.304
  Sep  4 14:48:31.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-334" for this suite. @ 09/04/23 14:48:31.311
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 09/04/23 14:48:31.313
  Sep  4 14:48:31.313: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 14:48:31.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:31.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:31.321
  STEP: Setting up server cert @ 09/04/23 14:48:31.33
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 14:48:31.546
  STEP: Deploying the webhook pod @ 09/04/23 14:48:31.549
  STEP: Wait for the deployment to be ready @ 09/04/23 14:48:31.554
  Sep  4 14:48:31.564: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0904 14:48:32.287773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:33.288633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:48:33.57
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:48:33.574
  E0904 14:48:34.288726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:34.575: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/04/23 14:48:34.577
  STEP: create a pod that should be updated by the webhook @ 09/04/23 14:48:34.586
  Sep  4 14:48:34.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2453" for this suite. @ 09/04/23 14:48:34.621
  STEP: Destroying namespace "webhook-markers-6109" for this suite. @ 09/04/23 14:48:34.623
• [3.312 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/04/23 14:48:34.626
  Sep  4 14:48:34.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:48:34.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:34.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:34.684
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 14:48:34.686
  E0904 14:48:35.289488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:36.289831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:37.290166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:38.291143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:48:38.695
  Sep  4 14:48:38.696: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-a0972938-9bef-4afc-87f4-f863c6a76312 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 14:48:38.698
  Sep  4 14:48:38.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5906" for this suite. @ 09/04/23 14:48:38.706
• [4.083 seconds]
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/04/23 14:48:38.709
  Sep  4 14:48:38.709: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 14:48:38.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:38.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:38.718
  STEP: creating a Pod with a static label @ 09/04/23 14:48:38.724
  STEP: watching for Pod to be ready @ 09/04/23 14:48:38.727
  Sep  4 14:48:38.728: INFO: observed Pod pod-test in namespace pods-3226 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Sep  4 14:48:38.730: INFO: observed Pod pod-test in namespace pods-3226 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:48:38 +0000 UTC  }]
  Sep  4 14:48:38.738: INFO: observed Pod pod-test in namespace pods-3226 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:48:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:48:38 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:48:38 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:48:38 +0000 UTC  }]
  E0904 14:48:39.291966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:40.034: INFO: Found Pod pod-test in namespace pods-3226 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:48:38 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:48:40 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:48:40 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-04 14:48:38 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/04/23 14:48:40.035
  STEP: getting the Pod and ensuring that it's patched @ 09/04/23 14:48:40.04
  STEP: replacing the Pod's status Ready condition to False @ 09/04/23 14:48:40.041
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/04/23 14:48:40.046
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/04/23 14:48:40.046
  STEP: watching for the Pod to be deleted @ 09/04/23 14:48:40.049
  Sep  4 14:48:40.050: INFO: observed event type MODIFIED
  E0904 14:48:40.292990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:41.293227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:41.901: INFO: observed event type MODIFIED
  Sep  4 14:48:42.041: INFO: observed event type MODIFIED
  Sep  4 14:48:42.199: INFO: observed event type MODIFIED
  E0904 14:48:42.293488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:43.043: INFO: observed event type MODIFIED
  Sep  4 14:48:43.047: INFO: observed event type MODIFIED
  Sep  4 14:48:43.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3226" for this suite. @ 09/04/23 14:48:43.05
• [4.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/04/23 14:48:43.054
  Sep  4 14:48:43.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename daemonsets @ 09/04/23 14:48:43.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:43.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:43.062
  Sep  4 14:48:43.070: INFO: Create a RollingUpdate DaemonSet
  Sep  4 14:48:43.073: INFO: Check that daemon pods launch on every node of the cluster
  Sep  4 14:48:43.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:48:43.075: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:48:43.294187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:44.079: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  4 14:48:44.079: INFO: Node worker-01 is running 0 daemon pod, expected 1
  E0904 14:48:44.294577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:45.079: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  4 14:48:45.079: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Sep  4 14:48:45.079: INFO: Update the DaemonSet to trigger a rollout
  Sep  4 14:48:45.083: INFO: Updating DaemonSet daemon-set
  E0904 14:48:45.295586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:46.090: INFO: Roll back the DaemonSet before rollout is complete
  Sep  4 14:48:46.094: INFO: Updating DaemonSet daemon-set
  Sep  4 14:48:46.094: INFO: Make sure DaemonSet rollback is complete
  Sep  4 14:48:46.095: INFO: Wrong image for pod: daemon-set-xmkqx. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Sep  4 14:48:46.095: INFO: Pod daemon-set-xmkqx is not available
  E0904 14:48:46.296020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:47.296986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:48.297482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:49.098: INFO: Pod daemon-set-h5sk5 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/23 14:48:49.101
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6434, will wait for the garbage collector to delete the pods @ 09/04/23 14:48:49.101
  Sep  4 14:48:49.154: INFO: Deleting DaemonSet.extensions daemon-set took: 2.08551ms
  Sep  4 14:48:49.255: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.86109ms
  E0904 14:48:49.297983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:50.298097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:51.157: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:48:51.157: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  4 14:48:51.158: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16322"},"items":null}

  Sep  4 14:48:51.159: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16322"},"items":null}

  Sep  4 14:48:51.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6434" for this suite. @ 09/04/23 14:48:51.164
• [8.112 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/04/23 14:48:51.166
  Sep  4 14:48:51.166: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/04/23 14:48:51.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:48:51.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:48:51.173
  STEP: Creating 50 configmaps @ 09/04/23 14:48:51.174
  E0904 14:48:51.298748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/23 14:48:51.419
  Sep  4 14:48:51.532: INFO: Pod name wrapped-volume-race-a2e2713d-6003-48e5-b9b5-4679fe4aca74: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/23 14:48:51.532
  E0904 14:48:52.299327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:53.300261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/23 14:48:53.577
  Sep  4 14:48:53.587: INFO: Pod name wrapped-volume-race-7c700a82-7d7b-41eb-81c3-8838135813dc: Found 0 pods out of 5
  E0904 14:48:54.300413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:55.301479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:56.301616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:57.301687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:48:58.301812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:48:58.592: INFO: Pod name wrapped-volume-race-7c700a82-7d7b-41eb-81c3-8838135813dc: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/23 14:48:58.592
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/23 14:48:58.6
  Sep  4 14:48:58.607: INFO: Pod name wrapped-volume-race-4e0a37ce-b5eb-44b1-a6b1-3a72db4757c6: Found 0 pods out of 5
  E0904 14:48:59.302481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:00.302612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:01.302697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:02.303197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:03.303308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:49:03.612: INFO: Pod name wrapped-volume-race-4e0a37ce-b5eb-44b1-a6b1-3a72db4757c6: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/23 14:49:03.612
  Sep  4 14:49:03.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-4e0a37ce-b5eb-44b1-a6b1-3a72db4757c6 in namespace emptydir-wrapper-5901, will wait for the garbage collector to delete the pods @ 09/04/23 14:49:03.62
  Sep  4 14:49:03.674: INFO: Deleting ReplicationController wrapped-volume-race-4e0a37ce-b5eb-44b1-a6b1-3a72db4757c6 took: 2.726342ms
  Sep  4 14:49:03.775: INFO: Terminating ReplicationController wrapped-volume-race-4e0a37ce-b5eb-44b1-a6b1-3a72db4757c6 pods took: 100.47763ms
  E0904 14:49:04.303662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-7c700a82-7d7b-41eb-81c3-8838135813dc in namespace emptydir-wrapper-5901, will wait for the garbage collector to delete the pods @ 09/04/23 14:49:04.576
  Sep  4 14:49:04.631: INFO: Deleting ReplicationController wrapped-volume-race-7c700a82-7d7b-41eb-81c3-8838135813dc took: 2.76781ms
  Sep  4 14:49:04.731: INFO: Terminating ReplicationController wrapped-volume-race-7c700a82-7d7b-41eb-81c3-8838135813dc pods took: 100.13083ms
  E0904 14:49:05.303999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-a2e2713d-6003-48e5-b9b5-4679fe4aca74 in namespace emptydir-wrapper-5901, will wait for the garbage collector to delete the pods @ 09/04/23 14:49:06.232
  Sep  4 14:49:06.287: INFO: Deleting ReplicationController wrapped-volume-race-a2e2713d-6003-48e5-b9b5-4679fe4aca74 took: 2.333912ms
  E0904 14:49:06.304673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:49:06.387: INFO: Terminating ReplicationController wrapped-volume-race-a2e2713d-6003-48e5-b9b5-4679fe4aca74 pods took: 100.258134ms
  E0904 14:49:07.305663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/04/23 14:49:07.388
  STEP: Destroying namespace "emptydir-wrapper-5901" for this suite. @ 09/04/23 14:49:07.476
• [16.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 09/04/23 14:49:07.48
  Sep  4 14:49:07.480: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 14:49:07.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:49:07.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:49:07.487
  STEP: Creating a pod to test downward api env vars @ 09/04/23 14:49:07.488
  E0904 14:49:08.306580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:09.307315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:10.307868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:11.308004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:49:11.496
  Sep  4 14:49:11.498: INFO: Trying to get logs from node control-panel-01 pod downward-api-cb5f6afd-e03f-49cb-be99-b22ba9a628f1 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/23 14:49:11.5
  Sep  4 14:49:11.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8406" for this suite. @ 09/04/23 14:49:11.507
• [4.030 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 09/04/23 14:49:11.509
  Sep  4 14:49:11.510: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 14:49:11.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:49:11.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:49:11.517
  STEP: Setting up server cert @ 09/04/23 14:49:11.525
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 14:49:11.797
  STEP: Deploying the webhook pod @ 09/04/23 14:49:11.8
  STEP: Wait for the deployment to be ready @ 09/04/23 14:49:11.806
  Sep  4 14:49:11.810: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 14:49:12.309019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:13.309381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:49:13.814
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:49:13.819
  E0904 14:49:14.309776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:49:14.819: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/04/23 14:49:14.822
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/04/23 14:49:14.83
  STEP: Creating a dummy validating-webhook-configuration object @ 09/04/23 14:49:14.837
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/04/23 14:49:14.841
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/04/23 14:49:14.842
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/04/23 14:49:14.845
  Sep  4 14:49:14.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9955" for this suite. @ 09/04/23 14:49:14.869
  STEP: Destroying namespace "webhook-markers-6456" for this suite. @ 09/04/23 14:49:14.872
• [3.365 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/04/23 14:49:14.875
  Sep  4 14:49:14.875: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename deployment @ 09/04/23 14:49:14.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:49:14.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:49:14.885
  Sep  4 14:49:14.886: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Sep  4 14:49:14.893: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0904 14:49:15.310740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:16.311194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:17.312035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:18.312324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:19.312423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:49:19.897: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/23 14:49:19.897
  Sep  4 14:49:19.897: INFO: Creating deployment "test-rolling-update-deployment"
  Sep  4 14:49:19.899: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Sep  4 14:49:19.902: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0904 14:49:20.312958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:21.313496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:49:21.906: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Sep  4 14:49:21.906: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Sep  4 14:49:21.910: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b80f041-8385-4e70-9f16-f918e6986464",
      ResourceVersion: (string) (len=5) "17116",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435759,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435761,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435761,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  4 14:49:21.911: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c46d5d88-2bc8-497f-b81f-a63c60c09b0e",
      ResourceVersion: (string) (len=5) "17106",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435759,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "0b80f041-8385-4e70-9f16-f918e6986464",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 62 38 30 66 30  34 31 2d 38 33 38 35 2d  |\"0b80f041-8385-|
              00000120  34 65 37 30 2d 39 66 31  36 2d 66 39 31 38 65 36  |4e70-9f16-f918e6|
              00000130  39 38 36 34 36 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |986464\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435761,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 14:49:21.912: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Sep  4 14:49:21.912: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41650947-a34b-4b30-9cae-a9c217e969d0",
      ResourceVersion: (string) (len=5) "17115",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435754,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "0b80f041-8385-4e70-9f16-f918e6986464",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435754,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435761,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 30 62 38 30 66 30 34  |"uid\":\"0b80f04|
              000000b0  31 2d 38 33 38 35 2d 34  65 37 30 2d 39 66 31 36  |1-8385-4e70-9f16|
              000000c0  2d 66 39 31 38 65 36 39  38 36 34 36 34 5c 22 7d  |-f918e6986464\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435761,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 14:49:21.914: INFO: Pod "test-rolling-update-deployment-7f5c55c64-zs7sp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-zs7sp",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-7650",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9ad5ce7-68e1-42f4-887c-108dc12152ec",
      ResourceVersion: (string) (len=5) "17105",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435759,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "c46d5d88-2bc8-497f-b81f-a63c60c09b0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 34  36 64 35 64 38 38 2d 32  |d\":\"c46d5d88-2|
              00000090  62 63 38 2d 34 39 37 66  2d 62 38 31 66 2d 61 36  |bc8-497f-b81f-a6|
              000000a0  33 63 36 30 63 30 39 62  30 65 5c 22 7d 22 3a 7b  |3c60c09b0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435761,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 35 31 5c 22  |172.20.132.151\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d7tbf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d7tbf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435761,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435761,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829435759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829435759,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829435760,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://51e35888a7374f09f16a5c7eb8344f1f59faa94673a7dce0c6c1c53a942dd612",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 14:49:21.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7650" for this suite. @ 09/04/23 14:49:21.916
• [7.044 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 09/04/23 14:49:21.919
  Sep  4 14:49:21.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 14:49:21.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:49:21.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:49:21.928
  STEP: Setting up server cert @ 09/04/23 14:49:21.938
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 14:49:22.188
  STEP: Deploying the webhook pod @ 09/04/23 14:49:22.191
  STEP: Wait for the deployment to be ready @ 09/04/23 14:49:22.196
  Sep  4 14:49:22.200: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 14:49:22.313577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:23.313639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:49:24.205
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:49:24.21
  E0904 14:49:24.314046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:49:25.211: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/04/23 14:49:25.241
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/23 14:49:25.267
  STEP: Deleting the collection of validation webhooks @ 09/04/23 14:49:25.29
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/23 14:49:25.309
  Sep  4 14:49:25.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 14:49:25.314018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1880" for this suite. @ 09/04/23 14:49:25.33
  STEP: Destroying namespace "webhook-markers-8508" for this suite. @ 09/04/23 14:49:25.334
• [3.418 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/04/23 14:49:25.338
  Sep  4 14:49:25.338: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:49:25.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:49:25.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:49:25.347
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 14:49:25.348
  E0904 14:49:26.314146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:27.314541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:28.314950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:29.315016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:49:29.358
  Sep  4 14:49:29.360: INFO: Trying to get logs from node worker-02 pod downwardapi-volume-24503d5c-c1ce-42b3-9114-0c975f49db29 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 14:49:29.368
  Sep  4 14:49:29.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-549" for this suite. @ 09/04/23 14:49:29.375
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 09/04/23 14:49:29.378
  Sep  4 14:49:29.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename namespaces @ 09/04/23 14:49:29.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:49:29.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:49:29.385
  STEP: creating a Namespace @ 09/04/23 14:49:29.387
  STEP: patching the Namespace @ 09/04/23 14:49:29.392
  STEP: get the Namespace and ensuring it has the label @ 09/04/23 14:49:29.394
  Sep  4 14:49:29.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2516" for this suite. @ 09/04/23 14:49:29.397
  STEP: Destroying namespace "nspatchtest-b1f63c3b-1f5c-49ed-8ded-84e8121ee880-8211" for this suite. @ 09/04/23 14:49:29.399
• [0.023 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 09/04/23 14:49:29.401
  Sep  4 14:49:29.401: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/23 14:49:29.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:49:29.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:49:29.409
  STEP: Creating a pod to test service account token:  @ 09/04/23 14:49:29.41
  E0904 14:49:30.315656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:31.315875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:32.316152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:33.316422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:49:33.42
  Sep  4 14:49:33.425: INFO: Trying to get logs from node worker-02 pod test-pod-ced2d3eb-303c-423a-8c0c-d872d0206c8f container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:49:33.427
  Sep  4 14:49:33.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1355" for this suite. @ 09/04/23 14:49:33.434
• [4.035 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 09/04/23 14:49:33.437
  Sep  4 14:49:33.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename statefulset @ 09/04/23 14:49:33.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:49:33.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:49:33.445
  STEP: Creating service test in namespace statefulset-5676 @ 09/04/23 14:49:33.446
  Sep  4 14:49:33.458: INFO: Found 0 stateful pods, waiting for 1
  E0904 14:49:34.317463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:35.317530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:36.317674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:37.317990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:38.318133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:39.319180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:40.319244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:41.320232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:42.320365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:43.320416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:49:43.460: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/04/23 14:49:43.462
  W0904 14:49:43.476625      22 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Sep  4 14:49:43.479: INFO: Found 1 stateful pods, waiting for 2
  E0904 14:49:44.321500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:45.321656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:46.321667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:47.322058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:48.322154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:49.322225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:50.322350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:51.322495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:52.322628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:53.322858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:49:53.482: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 14:49:53.482: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/04/23 14:49:53.484
  STEP: Delete all of the StatefulSets @ 09/04/23 14:49:53.485
  STEP: Verify that StatefulSets have been deleted @ 09/04/23 14:49:53.488
  Sep  4 14:49:53.489: INFO: Deleting all statefulset in ns statefulset-5676
  Sep  4 14:49:53.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5676" for this suite. @ 09/04/23 14:49:53.493
• [20.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 09/04/23 14:49:53.497
  Sep  4 14:49:53.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename job @ 09/04/23 14:49:53.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:49:53.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:49:53.52
  STEP: Creating a job @ 09/04/23 14:49:53.521
  STEP: Ensuring job reaches completions @ 09/04/23 14:49:53.523
  E0904 14:49:54.323469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:55.324548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:56.325219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:57.325478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:58.326438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:49:59.326528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:00.326857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:01.327002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:50:01.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1433" for this suite. @ 09/04/23 14:50:01.527
• [8.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 09/04/23 14:50:01.531
  Sep  4 14:50:01.531: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:50:01.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:01.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:01.537
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/04/23 14:50:01.539
  E0904 14:50:02.327757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:03.328084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:50:03.546
  Sep  4 14:50:03.547: INFO: Trying to get logs from node control-panel-01 pod pod-da993f48-fa94-4a9c-81bb-e78cbb21c587 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:50:03.55
  Sep  4 14:50:03.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4836" for this suite. @ 09/04/23 14:50:03.557
• [2.028 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 09/04/23 14:50:03.559
  Sep  4 14:50:03.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:50:03.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:03.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:03.566
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/04/23 14:50:03.567
  E0904 14:50:04.329069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:05.329128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:50:05.574
  Sep  4 14:50:05.575: INFO: Trying to get logs from node control-panel-01 pod pod-42aca17b-6f54-45c1-983b-1bab0f1909e0 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:50:05.577
  Sep  4 14:50:05.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4636" for this suite. @ 09/04/23 14:50:05.585
• [2.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 09/04/23 14:50:05.587
  Sep  4 14:50:05.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:50:05.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:05.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:05.594
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/04/23 14:50:05.596
  E0904 14:50:06.329211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:07.330200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:08.330933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:09.331061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:50:09.605
  Sep  4 14:50:09.606: INFO: Trying to get logs from node worker-02 pod pod-b4a424d5-c94d-43b8-8304-81b1246de250 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:50:09.608
  Sep  4 14:50:09.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9318" for this suite. @ 09/04/23 14:50:09.616
• [4.030 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/04/23 14:50:09.618
  Sep  4 14:50:09.618: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 14:50:09.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:09.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:09.625
  Sep  4 14:50:09.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: creating the pod @ 09/04/23 14:50:09.627
  STEP: submitting the pod to kubernetes @ 09/04/23 14:50:09.627
  E0904 14:50:10.331150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:11.331213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:50:11.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1267" for this suite. @ 09/04/23 14:50:11.694
• [2.079 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/04/23 14:50:11.697
  Sep  4 14:50:11.697: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:50:11.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:11.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:11.704
  STEP: Creating configMap with name projected-configmap-test-volume-a7f1c032-5deb-4490-bba8-6a61b0747b86 @ 09/04/23 14:50:11.706
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:50:11.707
  E0904 14:50:12.332129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:13.332411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:14.333488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:15.333652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:50:15.717
  Sep  4 14:50:15.718: INFO: Trying to get logs from node control-panel-01 pod pod-projected-configmaps-cd9ea6b2-fec5-48be-b096-7a8932645328 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:50:15.721
  Sep  4 14:50:15.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6633" for this suite. @ 09/04/23 14:50:15.727
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/04/23 14:50:15.737
  Sep  4 14:50:15.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:50:15.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:15.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:15.746
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 14:50:15.747
  E0904 14:50:16.333939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:17.334162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:18.334174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:19.334427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:50:19.755
  Sep  4 14:50:19.756: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-19308d7c-3ae6-4119-8457-2ff05c0526a9 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 14:50:19.759
  Sep  4 14:50:19.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9871" for this suite. @ 09/04/23 14:50:19.766
• [4.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/04/23 14:50:19.769
  Sep  4 14:50:19.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 14:50:19.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:19.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:19.777
  E0904 14:50:20.334552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:21.335274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:22.336072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:23.336335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:24.336420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:25.336512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:50:25.805
  Sep  4 14:50:25.806: INFO: Trying to get logs from node control-panel-01 pod client-envvars-9839e109-b222-43e3-ad4e-03ffca8f98d6 container env3cont: <nil>
  STEP: delete the pod @ 09/04/23 14:50:25.809
  Sep  4 14:50:25.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2143" for this suite. @ 09/04/23 14:50:25.816
• [6.050 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 09/04/23 14:50:25.819
  Sep  4 14:50:25.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename cronjob @ 09/04/23 14:50:25.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:25.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:25.826
  STEP: Creating a cronjob @ 09/04/23 14:50:25.828
  STEP: creating @ 09/04/23 14:50:25.828
  STEP: getting @ 09/04/23 14:50:25.83
  STEP: listing @ 09/04/23 14:50:25.831
  STEP: watching @ 09/04/23 14:50:25.832
  Sep  4 14:50:25.832: INFO: starting watch
  STEP: cluster-wide listing @ 09/04/23 14:50:25.832
  STEP: cluster-wide watching @ 09/04/23 14:50:25.833
  Sep  4 14:50:25.833: INFO: starting watch
  STEP: patching @ 09/04/23 14:50:25.834
  STEP: updating @ 09/04/23 14:50:25.837
  Sep  4 14:50:25.840: INFO: waiting for watch events with expected annotations
  Sep  4 14:50:25.840: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/04/23 14:50:25.84
  STEP: updating /status @ 09/04/23 14:50:25.843
  STEP: get /status @ 09/04/23 14:50:25.845
  STEP: deleting @ 09/04/23 14:50:25.846
  STEP: deleting a collection @ 09/04/23 14:50:25.857
  Sep  4 14:50:25.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4384" for this suite. @ 09/04/23 14:50:25.862
• [0.045 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 09/04/23 14:50:25.864
  Sep  4 14:50:25.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 14:50:25.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:25.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:25.873
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4768 @ 09/04/23 14:50:25.874
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/04/23 14:50:25.88
  STEP: creating service externalsvc in namespace services-4768 @ 09/04/23 14:50:25.88
  STEP: creating replication controller externalsvc in namespace services-4768 @ 09/04/23 14:50:25.886
  I0904 14:50:25.889975      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4768, replica count: 2
  E0904 14:50:26.337103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:27.337879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:28.338117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:50:28.941424      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/04/23 14:50:28.943
  Sep  4 14:50:28.950: INFO: Creating new exec pod
  E0904 14:50:29.339141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:30.339221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:50:30.955: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-4768 exec execpodp5w7s -- /bin/sh -x -c nslookup nodeport-service.services-4768.svc.cluster.local'
  Sep  4 14:50:31.063: INFO: stderr: "+ nslookup nodeport-service.services-4768.svc.cluster.local\n"
  Sep  4 14:50:31.063: INFO: stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-4768.svc.cluster.local\tcanonical name = externalsvc.services-4768.svc.cluster.local.\nName:\texternalsvc.services-4768.svc.cluster.local\nAddress: 10.68.21.203\n\n"
  Sep  4 14:50:31.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-4768, will wait for the garbage collector to delete the pods @ 09/04/23 14:50:31.065
  Sep  4 14:50:31.119: INFO: Deleting ReplicationController externalsvc took: 2.804903ms
  Sep  4 14:50:31.220: INFO: Terminating ReplicationController externalsvc pods took: 100.798599ms
  E0904 14:50:31.339842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:32.340718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:33.341516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:50:34.332: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-4768" for this suite. @ 09/04/23 14:50:34.337
• [8.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/04/23 14:50:34.341
  Sep  4 14:50:34.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 14:50:34.341
  E0904 14:50:34.341965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:34.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:34.348
  STEP: Creating configMap with name configmap-test-volume-map-0ebce975-51a1-4546-a351-1d7fa7e69ce3 @ 09/04/23 14:50:34.35
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:50:34.351
  E0904 14:50:35.342259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:36.342387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:37.343290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:38.343414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:50:38.36
  Sep  4 14:50:38.361: INFO: Trying to get logs from node control-panel-01 pod pod-configmaps-a5809365-d986-4311-8363-d977b79d9ff9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:50:38.363
  Sep  4 14:50:38.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5621" for this suite. @ 09/04/23 14:50:38.371
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 09/04/23 14:50:38.374
  Sep  4 14:50:38.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename gc @ 09/04/23 14:50:38.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:38.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:38.381
  STEP: create the rc @ 09/04/23 14:50:38.384
  W0904 14:50:38.387105      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0904 14:50:39.344421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:40.344458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:41.345187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:42.347362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:43.348382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:44.348432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/04/23 14:50:44.389
  STEP: wait for the rc to be deleted @ 09/04/23 14:50:44.391
  E0904 14:50:45.348572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:50:45.403: INFO: 80 pods remaining
  Sep  4 14:50:45.403: INFO: 80 pods has nil DeletionTimestamp
  Sep  4 14:50:45.403: INFO: 
  E0904 14:50:46.349511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:50:46.404: INFO: 71 pods remaining
  Sep  4 14:50:46.404: INFO: 70 pods has nil DeletionTimestamp
  Sep  4 14:50:46.404: INFO: 
  E0904 14:50:47.349577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:50:47.400: INFO: 60 pods remaining
  Sep  4 14:50:47.400: INFO: 60 pods has nil DeletionTimestamp
  Sep  4 14:50:47.400: INFO: 
  E0904 14:50:48.350586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:50:48.401: INFO: 40 pods remaining
  Sep  4 14:50:48.401: INFO: 40 pods has nil DeletionTimestamp
  Sep  4 14:50:48.401: INFO: 
  E0904 14:50:49.350681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:50:49.397: INFO: 31 pods remaining
  Sep  4 14:50:49.397: INFO: 30 pods has nil DeletionTimestamp
  Sep  4 14:50:49.397: INFO: 
  E0904 14:50:50.351133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:50:50.395: INFO: 20 pods remaining
  Sep  4 14:50:50.395: INFO: 20 pods has nil DeletionTimestamp
  Sep  4 14:50:50.395: INFO: 
  E0904 14:50:51.351464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/04/23 14:50:51.396
  W0904 14:50:51.400256      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  4 14:50:51.400: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  4 14:50:51.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7102" for this suite. @ 09/04/23 14:50:51.402
• [13.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 09/04/23 14:50:51.408
  Sep  4 14:50:51.408: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 14:50:51.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:51.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:51.422
  STEP: creating a Service @ 09/04/23 14:50:51.427
  STEP: watching for the Service to be added @ 09/04/23 14:50:51.433
  Sep  4 14:50:51.434: INFO: Found Service test-service-js88t in namespace services-2958 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Sep  4 14:50:51.434: INFO: Service test-service-js88t created
  STEP: Getting /status @ 09/04/23 14:50:51.434
  Sep  4 14:50:51.435: INFO: Service test-service-js88t has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/04/23 14:50:51.435
  STEP: watching for the Service to be patched @ 09/04/23 14:50:51.438
  Sep  4 14:50:51.440: INFO: observed Service test-service-js88t in namespace services-2958 with annotations: map[] & LoadBalancer: {[]}
  Sep  4 14:50:51.440: INFO: Found Service test-service-js88t in namespace services-2958 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Sep  4 14:50:51.440: INFO: Service test-service-js88t has service status patched
  STEP: updating the ServiceStatus @ 09/04/23 14:50:51.44
  Sep  4 14:50:51.444: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/04/23 14:50:51.444
  Sep  4 14:50:51.445: INFO: Observed Service test-service-js88t in namespace services-2958 with annotations: map[] & Conditions: {[]}
  Sep  4 14:50:51.445: INFO: Observed event: &Service{ObjectMeta:{test-service-js88t  services-2958  bd02034c-cb16-4eb2-8de1-9e863ba9fc9b 19837 0 2023-09-04 14:50:51 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-09-04 14:50:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-09-04 14:50:51 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.68.9.125,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.68.9.125],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Sep  4 14:50:51.445: INFO: Found Service test-service-js88t in namespace services-2958 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep  4 14:50:51.445: INFO: Service test-service-js88t has service status updated
  STEP: patching the service @ 09/04/23 14:50:51.445
  STEP: watching for the Service to be patched @ 09/04/23 14:50:51.463
  Sep  4 14:50:51.468: INFO: observed Service test-service-js88t in namespace services-2958 with labels: map[test-service-static:true]
  Sep  4 14:50:51.468: INFO: observed Service test-service-js88t in namespace services-2958 with labels: map[test-service-static:true]
  Sep  4 14:50:51.468: INFO: observed Service test-service-js88t in namespace services-2958 with labels: map[test-service-static:true]
  Sep  4 14:50:51.468: INFO: Found Service test-service-js88t in namespace services-2958 with labels: map[test-service:patched test-service-static:true]
  Sep  4 14:50:51.468: INFO: Service test-service-js88t patched
  STEP: deleting the service @ 09/04/23 14:50:51.468
  STEP: watching for the Service to be deleted @ 09/04/23 14:50:51.497
  Sep  4 14:50:51.498: INFO: Observed event: ADDED
  Sep  4 14:50:51.498: INFO: Observed event: MODIFIED
  Sep  4 14:50:51.498: INFO: Observed event: MODIFIED
  Sep  4 14:50:51.498: INFO: Observed event: MODIFIED
  Sep  4 14:50:51.500: INFO: Found Service test-service-js88t in namespace services-2958 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Sep  4 14:50:51.500: INFO: Service test-service-js88t deleted
  Sep  4 14:50:51.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2958" for this suite. @ 09/04/23 14:50:51.508
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/04/23 14:50:51.52
  Sep  4 14:50:51.520: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 14:50:51.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:51.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:51.545
  STEP: Creating configMap with name configmap-test-upd-13e96c06-db90-46ff-a3cd-a105c3b1bc4c @ 09/04/23 14:50:51.554
  STEP: Creating the pod @ 09/04/23 14:50:51.56
  E0904 14:50:52.352333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:53.352417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/04/23 14:50:53.589
  STEP: Waiting for pod with binary data @ 09/04/23 14:50:53.593
  Sep  4 14:50:53.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3724" for this suite. @ 09/04/23 14:50:53.596
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 09/04/23 14:50:53.602
  Sep  4 14:50:53.602: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 14:50:53.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:53.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:53.611
  STEP: Creating a pod to test downward api env vars @ 09/04/23 14:50:53.612
  E0904 14:50:54.353479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:55.353606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:56.354596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:57.355232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:50:57.621
  Sep  4 14:50:57.622: INFO: Trying to get logs from node worker-02 pod downward-api-8b87ab55-2e5d-4a3a-89d6-f4c69b6351da container dapi-container: <nil>
  STEP: delete the pod @ 09/04/23 14:50:57.626
  Sep  4 14:50:57.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4671" for this suite. @ 09/04/23 14:50:57.632
• [4.033 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 09/04/23 14:50:57.635
  Sep  4 14:50:57.635: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename endpointslice @ 09/04/23 14:50:57.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:57.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:57.643
  STEP: getting /apis @ 09/04/23 14:50:57.644
  STEP: getting /apis/discovery.k8s.io @ 09/04/23 14:50:57.65
  STEP: getting /apis/discovery.k8s.iov1 @ 09/04/23 14:50:57.65
  STEP: creating @ 09/04/23 14:50:57.651
  STEP: getting @ 09/04/23 14:50:57.658
  STEP: listing @ 09/04/23 14:50:57.659
  STEP: watching @ 09/04/23 14:50:57.661
  Sep  4 14:50:57.661: INFO: starting watch
  STEP: cluster-wide listing @ 09/04/23 14:50:57.661
  STEP: cluster-wide watching @ 09/04/23 14:50:57.663
  Sep  4 14:50:57.663: INFO: starting watch
  STEP: patching @ 09/04/23 14:50:57.663
  STEP: updating @ 09/04/23 14:50:57.667
  Sep  4 14:50:57.679: INFO: waiting for watch events with expected annotations
  Sep  4 14:50:57.679: INFO: saw patched and updated annotations
  STEP: deleting @ 09/04/23 14:50:57.68
  STEP: deleting a collection @ 09/04/23 14:50:57.684
  Sep  4 14:50:57.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3978" for this suite. @ 09/04/23 14:50:57.691
• [0.059 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 09/04/23 14:50:57.694
  Sep  4 14:50:57.694: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/23 14:50:57.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:50:57.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:50:57.702
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/23 14:50:57.704
  E0904 14:50:58.356009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:50:59.356793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/04/23 14:50:59.712
  E0904 14:51:00.357479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:01.357559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/04/23 14:51:01.719
  STEP: delete the pod with lifecycle hook @ 09/04/23 14:51:01.721
  E0904 14:51:02.358170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:03.358373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:03.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-931" for this suite. @ 09/04/23 14:51:03.729
• [6.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/04/23 14:51:03.731
  Sep  4 14:51:03.731: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 14:51:03.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:03.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:03.74
  STEP: Creating secret with name secret-test-caffe789-0f12-4f0a-b626-9edf778a1f15 @ 09/04/23 14:51:03.741
  STEP: Creating a pod to test consume secrets @ 09/04/23 14:51:03.743
  E0904 14:51:04.359121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:05.359799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:06.360802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:07.361489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:51:07.752
  Sep  4 14:51:07.753: INFO: Trying to get logs from node worker-02 pod pod-secrets-e9f2aacf-2aed-4541-a846-c3ca37cb6448 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 14:51:07.756
  Sep  4 14:51:07.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6569" for this suite. @ 09/04/23 14:51:07.763
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/04/23 14:51:07.767
  Sep  4 14:51:07.767: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename daemonsets @ 09/04/23 14:51:07.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:07.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:07.775
  Sep  4 14:51:07.782: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/23 14:51:07.784
  Sep  4 14:51:07.791: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:51:07.791: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:51:08.361940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:08.796: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  4 14:51:08.796: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:51:09.362393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:09.795: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  4 14:51:09.795: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/04/23 14:51:09.799
  STEP: Check that daemon pods images are updated. @ 09/04/23 14:51:09.803
  Sep  4 14:51:09.805: INFO: Wrong image for pod: daemon-set-2f2cp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep  4 14:51:09.805: INFO: Wrong image for pod: daemon-set-8cmdq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep  4 14:51:09.805: INFO: Wrong image for pod: daemon-set-spd69. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0904 14:51:10.363091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:10.808: INFO: Wrong image for pod: daemon-set-2f2cp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep  4 14:51:10.808: INFO: Pod daemon-set-h45rf is not available
  Sep  4 14:51:10.808: INFO: Wrong image for pod: daemon-set-spd69. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0904 14:51:11.363922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:11.809: INFO: Pod daemon-set-mdcc8 is not available
  Sep  4 14:51:11.809: INFO: Wrong image for pod: daemon-set-spd69. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0904 14:51:12.364806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:13.365494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:13.808: INFO: Pod daemon-set-hrlvz is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/04/23 14:51:13.809
  Sep  4 14:51:13.812: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  4 14:51:13.812: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:51:14.366299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:14.815: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  4 14:51:14.815: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/23 14:51:14.821
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8272, will wait for the garbage collector to delete the pods @ 09/04/23 14:51:14.821
  Sep  4 14:51:14.874: INFO: Deleting DaemonSet.extensions daemon-set took: 2.321508ms
  Sep  4 14:51:14.975: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.488242ms
  E0904 14:51:15.367294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:16.285: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:51:16.285: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep  4 14:51:16.286: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20539"},"items":null}

  Sep  4 14:51:16.287: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20539"},"items":null}

  Sep  4 14:51:16.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8272" for this suite. @ 09/04/23 14:51:16.293
• [8.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/04/23 14:51:16.295
  Sep  4 14:51:16.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename var-expansion @ 09/04/23 14:51:16.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:16.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:16.305
  STEP: Creating a pod to test substitution in container's args @ 09/04/23 14:51:16.306
  E0904 14:51:16.367535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:17.367668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:18.367961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:19.368034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:51:20.315
  Sep  4 14:51:20.316: INFO: Trying to get logs from node control-panel-01 pod var-expansion-27abbf35-1b7c-425d-972f-aa0af346302e container dapi-container: <nil>
  STEP: delete the pod @ 09/04/23 14:51:20.324
  Sep  4 14:51:20.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9557" for this suite. @ 09/04/23 14:51:20.331
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 09/04/23 14:51:20.337
  Sep  4 14:51:20.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 14:51:20.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:20.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:20.345
  STEP: Setting up server cert @ 09/04/23 14:51:20.356
  E0904 14:51:20.368245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 14:51:20.596
  STEP: Deploying the webhook pod @ 09/04/23 14:51:20.599
  STEP: Wait for the deployment to be ready @ 09/04/23 14:51:20.604
  Sep  4 14:51:20.611: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0904 14:51:21.368413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:22.369470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:51:22.615
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:51:22.619
  E0904 14:51:23.369566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:23.620: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep  4 14:51:23.623: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1144-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/23 14:51:24.138
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/04/23 14:51:24.146
  E0904 14:51:24.370527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:25.370610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:26.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 14:51:26.371103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-3880" for this suite. @ 09/04/23 14:51:26.698
  STEP: Destroying namespace "webhook-markers-3001" for this suite. @ 09/04/23 14:51:26.7
• [6.365 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 09/04/23 14:51:26.702
  Sep  4 14:51:26.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 14:51:26.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:26.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:26.71
  STEP: creating Agnhost RC @ 09/04/23 14:51:26.712
  Sep  4 14:51:26.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-7279 create -f -'
  Sep  4 14:51:26.842: INFO: stderr: ""
  Sep  4 14:51:26.842: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/23 14:51:26.842
  E0904 14:51:27.371873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:27.844: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  4 14:51:27.844: INFO: Found 0 / 1
  E0904 14:51:28.372126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:28.844: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  4 14:51:28.844: INFO: Found 1 / 1
  Sep  4 14:51:28.844: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/04/23 14:51:28.844
  Sep  4 14:51:28.845: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  4 14:51:28.845: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep  4 14:51:28.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-7279 patch pod agnhost-primary-wf7cj -p {"metadata":{"annotations":{"x":"y"}}}'
  Sep  4 14:51:28.890: INFO: stderr: ""
  Sep  4 14:51:28.890: INFO: stdout: "pod/agnhost-primary-wf7cj patched\n"
  STEP: checking annotations @ 09/04/23 14:51:28.89
  Sep  4 14:51:28.891: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  4 14:51:28.891: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep  4 14:51:28.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7279" for this suite. @ 09/04/23 14:51:28.893
• [2.192 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 09/04/23 14:51:28.895
  Sep  4 14:51:28.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 14:51:28.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:28.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:28.902
  STEP: creating the pod @ 09/04/23 14:51:28.904
  Sep  4 14:51:28.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2482 create -f -'
  Sep  4 14:51:29.033: INFO: stderr: ""
  Sep  4 14:51:29.033: INFO: stdout: "pod/pause created\n"
  E0904 14:51:29.372490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:30.372543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/04/23 14:51:31.038
  Sep  4 14:51:31.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2482 label pods pause testing-label=testing-label-value'
  Sep  4 14:51:31.081: INFO: stderr: ""
  Sep  4 14:51:31.081: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/04/23 14:51:31.081
  Sep  4 14:51:31.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2482 get pod pause -L testing-label'
  Sep  4 14:51:31.121: INFO: stderr: ""
  Sep  4 14:51:31.121: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/04/23 14:51:31.121
  Sep  4 14:51:31.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2482 label pods pause testing-label-'
  Sep  4 14:51:31.167: INFO: stderr: ""
  Sep  4 14:51:31.167: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/04/23 14:51:31.167
  Sep  4 14:51:31.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2482 get pod pause -L testing-label'
  Sep  4 14:51:31.206: INFO: stderr: ""
  Sep  4 14:51:31.206: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/04/23 14:51:31.206
  Sep  4 14:51:31.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2482 delete --grace-period=0 --force -f -'
  Sep  4 14:51:31.252: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  4 14:51:31.252: INFO: stdout: "pod \"pause\" force deleted\n"
  Sep  4 14:51:31.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2482 get rc,svc -l name=pause --no-headers'
  Sep  4 14:51:31.293: INFO: stderr: "No resources found in kubectl-2482 namespace.\n"
  Sep  4 14:51:31.293: INFO: stdout: ""
  Sep  4 14:51:31.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2482 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep  4 14:51:31.341: INFO: stderr: ""
  Sep  4 14:51:31.341: INFO: stdout: ""
  Sep  4 14:51:31.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2482" for this suite. @ 09/04/23 14:51:31.343
• [2.451 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/04/23 14:51:31.346
  Sep  4 14:51:31.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename events @ 09/04/23 14:51:31.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:31.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:31.353
  STEP: creating a test event @ 09/04/23 14:51:31.354
  STEP: listing events in all namespaces @ 09/04/23 14:51:31.357
  STEP: listing events in test namespace @ 09/04/23 14:51:31.359
  STEP: listing events with field selection filtering on source @ 09/04/23 14:51:31.36
  STEP: listing events with field selection filtering on reportingController @ 09/04/23 14:51:31.361
  STEP: getting the test event @ 09/04/23 14:51:31.362
  STEP: patching the test event @ 09/04/23 14:51:31.364
  STEP: getting the test event @ 09/04/23 14:51:31.368
  STEP: updating the test event @ 09/04/23 14:51:31.369
  STEP: getting the test event @ 09/04/23 14:51:31.371
  STEP: deleting the test event @ 09/04/23 14:51:31.372
  E0904 14:51:31.373186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing events in all namespaces @ 09/04/23 14:51:31.374
  STEP: listing events in test namespace @ 09/04/23 14:51:31.376
  Sep  4 14:51:31.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4151" for this suite. @ 09/04/23 14:51:31.378
• [0.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 09/04/23 14:51:31.381
  Sep  4 14:51:31.381: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename daemonsets @ 09/04/23 14:51:31.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:31.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:31.388
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/23 14:51:31.395
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/23 14:51:31.397
  Sep  4 14:51:31.407: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep  4 14:51:31.407: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:51:32.373551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:32.410: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep  4 14:51:32.410: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:51:33.373753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:33.411: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep  4 14:51:33.411: INFO: Node control-panel-01 is running 0 daemon pod, expected 1
  E0904 14:51:34.374255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:34.410: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep  4 14:51:34.410: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/04/23 14:51:34.411
  STEP: DeleteCollection of the DaemonSets @ 09/04/23 14:51:34.412
  STEP: Verify that ReplicaSets have been deleted @ 09/04/23 14:51:34.415
  Sep  4 14:51:34.421: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20865"},"items":null}

  Sep  4 14:51:34.424: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20868"},"items":[{"metadata":{"name":"daemon-set-2twrq","generateName":"daemon-set-","namespace":"daemonsets-831","uid":"24347ea2-6e14-4622-af72-a9a705adbead","resourceVersion":"20865","creationTimestamp":"2023-09-04T14:51:31Z","deletionTimestamp":"2023-09-04T14:52:04Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5e93372c-bd79-4892-87cc-0d98709d7f06","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-04T14:51:31Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5e93372c-bd79-4892-87cc-0d98709d7f06\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-04T14:51:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.249.164\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-w9rbb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-w9rbb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:31Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:32Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:32Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:31Z"}],"hostIP":"10.254.0.9","podIP":"172.20.249.164","podIPs":[{"ip":"172.20.249.164"}],"startTime":"2023-09-04T14:51:31Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-04T14:51:31Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://78f48b41c956a99a0fb87c586f82f2e9dcf81365af187072614873e93bc115e6","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-78kkg","generateName":"daemon-set-","namespace":"daemonsets-831","uid":"aa780931-57bf-4461-83ff-40671ea8b8f7","resourceVersion":"20867","creationTimestamp":"2023-09-04T14:51:31Z","deletionTimestamp":"2023-09-04T14:52:04Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5e93372c-bd79-4892-87cc-0d98709d7f06","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-04T14:51:31Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5e93372c-bd79-4892-87cc-0d98709d7f06\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-04T14:51:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.33.106\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vpfgq","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vpfgq","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:31Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:32Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:32Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:31Z"}],"hostIP":"10.254.0.10","podIP":"172.20.33.106","podIPs":[{"ip":"172.20.33.106"}],"startTime":"2023-09-04T14:51:31Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-04T14:51:31Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://50f579c24e28d8150eac442e4858916e96e909882175325d79743de74ce0385e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kfc2m","generateName":"daemon-set-","namespace":"daemonsets-831","uid":"530cd251-555b-465d-adad-1c8a75607a12","resourceVersion":"20868","creationTimestamp":"2023-09-04T14:51:31Z","deletionTimestamp":"2023-09-04T14:52:04Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5e93372c-bd79-4892-87cc-0d98709d7f06","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-04T14:51:31Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5e93372c-bd79-4892-87cc-0d98709d7f06\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-04T14:51:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.132.138\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rwhsm","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rwhsm","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"control-panel-01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["control-panel-01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:31Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:34Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:34Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-04T14:51:31Z"}],"hostIP":"10.254.0.8","podIP":"172.20.132.138","podIPs":[{"ip":"172.20.132.138"}],"startTime":"2023-09-04T14:51:31Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-04T14:51:33Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://b78c25318a25ac2f2db2a4ee2cb9c5fe58ae5ef08960b3918192015558322ac7","started":true}],"qosClass":"BestEffort"}}]}

  Sep  4 14:51:34.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-831" for this suite. @ 09/04/23 14:51:34.43
• [3.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 09/04/23 14:51:34.433
  Sep  4 14:51:34.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 14:51:34.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:34.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:34.44
  STEP: Setting up server cert @ 09/04/23 14:51:34.451
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 14:51:34.958
  STEP: Deploying the webhook pod @ 09/04/23 14:51:34.96
  STEP: Wait for the deployment to be ready @ 09/04/23 14:51:34.965
  Sep  4 14:51:34.967: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0904 14:51:35.375164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:36.375323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:51:36.972
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:51:36.976
  E0904 14:51:37.376269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:37.976: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep  4 14:51:37.979: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:51:38.377233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/04/23 14:51:38.486
  STEP: Creating a custom resource that should be denied by the webhook @ 09/04/23 14:51:38.495
  E0904 14:51:39.377695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:40.377815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/04/23 14:51:40.507
  STEP: Updating the custom resource with disallowed data should be denied @ 09/04/23 14:51:40.51
  STEP: Deleting the custom resource should be denied @ 09/04/23 14:51:40.514
  STEP: Remove the offending key and value from the custom resource data @ 09/04/23 14:51:40.516
  STEP: Deleting the updated custom resource should be successful @ 09/04/23 14:51:40.519
  Sep  4 14:51:40.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1170" for this suite. @ 09/04/23 14:51:41.048
  STEP: Destroying namespace "webhook-markers-7086" for this suite. @ 09/04/23 14:51:41.05
• [6.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/04/23 14:51:41.054
  Sep  4 14:51:41.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/04/23 14:51:41.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:41.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:41.062
  STEP: mirroring a new custom Endpoint @ 09/04/23 14:51:41.068
  Sep  4 14:51:41.071: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0904 14:51:41.378736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:42.378854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/04/23 14:51:43.073
  Sep  4 14:51:43.076: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0904 14:51:43.378941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:44.379372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 09/04/23 14:51:45.078
  Sep  4 14:51:45.083: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0904 14:51:45.379507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:46.379644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:51:47.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4301" for this suite. @ 09/04/23 14:51:47.087
• [6.035 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/04/23 14:51:47.089
  Sep  4 14:51:47.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 14:51:47.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:47.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:47.098
  STEP: Creating secret with name secret-test-82529ca2-b5fb-4101-b839-4eaaa1bfad0c @ 09/04/23 14:51:47.1
  STEP: Creating a pod to test consume secrets @ 09/04/23 14:51:47.102
  E0904 14:51:47.379861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:48.380180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:49.380928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:50.381451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:51:51.111
  Sep  4 14:51:51.112: INFO: Trying to get logs from node control-panel-01 pod pod-secrets-a584c495-e717-4a57-a574-2069f6ade2e1 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 14:51:51.115
  Sep  4 14:51:51.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8770" for this suite. @ 09/04/23 14:51:51.122
• [4.034 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 09/04/23 14:51:51.124
  Sep  4 14:51:51.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:51:51.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:51.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:51.131
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/04/23 14:51:51.133
  E0904 14:51:51.381460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:52.382355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:53.383400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:54.383486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:51:55.14
  Sep  4 14:51:55.142: INFO: Trying to get logs from node control-panel-01 pod pod-9ae1ca69-fa5b-4206-861d-a960b1a6cf10 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:51:55.144
  Sep  4 14:51:55.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8132" for this suite. @ 09/04/23 14:51:55.151
• [4.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/04/23 14:51:55.154
  Sep  4 14:51:55.154: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename var-expansion @ 09/04/23 14:51:55.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:55.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:55.163
  STEP: Creating a pod to test env composition @ 09/04/23 14:51:55.164
  E0904 14:51:55.384075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:56.384206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:57.384328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:51:58.384437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:51:59.174
  Sep  4 14:51:59.175: INFO: Trying to get logs from node worker-02 pod var-expansion-1fb93fbd-b9c3-42c9-a931-d7dce7de2298 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/23 14:51:59.178
  Sep  4 14:51:59.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3690" for this suite. @ 09/04/23 14:51:59.185
• [4.033 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 09/04/23 14:51:59.187
  Sep  4 14:51:59.187: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename gc @ 09/04/23 14:51:59.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:51:59.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:51:59.193
  STEP: create the deployment @ 09/04/23 14:51:59.195
  W0904 14:51:59.198035      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/04/23 14:51:59.198
  E0904 14:51:59.385218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/04/23 14:51:59.706
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/04/23 14:51:59.709
  STEP: Gathering metrics @ 09/04/23 14:52:00.217
  W0904 14:52:00.219567      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  4 14:52:00.219: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  4 14:52:00.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6063" for this suite. @ 09/04/23 14:52:00.222
• [1.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 09/04/23 14:52:00.225
  Sep  4 14:52:00.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 14:52:00.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:52:00.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:52:00.232
  STEP: Setting up server cert @ 09/04/23 14:52:00.242
  E0904 14:52:00.385394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 14:52:00.585
  STEP: Deploying the webhook pod @ 09/04/23 14:52:00.588
  STEP: Wait for the deployment to be ready @ 09/04/23 14:52:00.593
  Sep  4 14:52:00.597: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 14:52:01.386116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:02.386251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:52:02.601
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:52:02.605
  E0904 14:52:03.387105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:52:03.605: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/04/23 14:52:03.608
  STEP: create a configmap that should be updated by the webhook @ 09/04/23 14:52:03.615
  Sep  4 14:52:03.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9810" for this suite. @ 09/04/23 14:52:03.644
  STEP: Destroying namespace "webhook-markers-4097" for this suite. @ 09/04/23 14:52:03.648
• [3.425 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 09/04/23 14:52:03.651
  Sep  4 14:52:03.651: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 14:52:03.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:52:03.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:52:03.659
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/04/23 14:52:03.66
  E0904 14:52:04.387705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:05.387799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:52:05.668
  Sep  4 14:52:05.669: INFO: Trying to get logs from node control-panel-01 pod pod-62c7d938-3c8b-4232-95f5-03490fb651d3 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 14:52:05.672
  Sep  4 14:52:05.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7622" for this suite. @ 09/04/23 14:52:05.679
• [2.031 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 09/04/23 14:52:05.682
  Sep  4 14:52:05.682: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 14:52:05.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:52:05.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:52:05.69
  STEP: creating a secret @ 09/04/23 14:52:05.691
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/04/23 14:52:05.694
  STEP: patching the secret @ 09/04/23 14:52:05.695
  STEP: deleting the secret using a LabelSelector @ 09/04/23 14:52:05.698
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/04/23 14:52:05.7
  Sep  4 14:52:05.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7119" for this suite. @ 09/04/23 14:52:05.709
• [0.029 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 09/04/23 14:52:05.712
  Sep  4 14:52:05.712: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename cronjob @ 09/04/23 14:52:05.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:52:05.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:52:05.719
  STEP: Creating a ReplaceConcurrent cronjob @ 09/04/23 14:52:05.72
  STEP: Ensuring a job is scheduled @ 09/04/23 14:52:05.723
  E0904 14:52:06.387896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:07.388050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:08.388578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:09.389496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:10.389791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:11.389926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:12.390345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:13.390703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:14.391194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:15.391328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:16.391790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:17.391923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:18.392427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:19.393482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:20.394380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:21.394522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:22.395330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:23.395558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:24.395776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:25.396426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:26.396868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:27.396944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:28.397902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:29.398603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:30.399279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:31.399623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:32.400491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:33.400539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:34.401535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:35.402474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:36.402956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:37.403889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:38.404805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:39.405475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:40.405587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:41.406301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:42.406952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:43.407123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:44.407500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:45.407623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:46.408540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:47.409477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:48.409756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:49.410125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:50.410205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:51.410324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:52.410394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:53.411186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:54.412230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:55.412361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:56.412563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:57.413475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:58.414287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:52:59.414427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:00.415233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:01.416281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/04/23 14:53:01.725
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/04/23 14:53:01.726
  STEP: Ensuring the job is replaced with a new one @ 09/04/23 14:53:01.728
  E0904 14:53:02.416410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:03.417475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:04.418373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:05.418492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:06.419267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:07.419390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:08.419420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:09.420391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:10.421349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:11.421475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:12.421557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:13.421639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:14.422257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:15.422378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:16.423042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:17.423163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:18.423665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:19.424458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:20.425357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:21.425626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:22.426455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:23.426810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:24.427373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:25.427406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:26.428063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:27.428349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:28.428366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:29.429042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:30.429708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:31.429826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:32.430497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:33.430576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:34.430656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:35.431759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:36.432217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:37.432355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:38.432854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:39.433471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:40.434343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:41.435277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:42.435915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:43.436067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:44.436975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:45.437941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:46.438017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:47.438139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:48.439093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:49.439175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:50.439899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:51.440027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:52.440357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:53.440409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:54.441319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:55.441453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:56.441634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:57.441754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:58.441850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:53:59.442052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:00.442846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:01.442962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/04/23 14:54:01.73
  Sep  4 14:54:01.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3458" for this suite. @ 09/04/23 14:54:01.733
• [116.025 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 09/04/23 14:54:01.737
  Sep  4 14:54:01.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-webhook @ 09/04/23 14:54:01.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:54:01.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:54:01.747
  STEP: Setting up server cert @ 09/04/23 14:54:01.748
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/04/23 14:54:02.03
  STEP: Deploying the custom resource conversion webhook pod @ 09/04/23 14:54:02.036
  STEP: Wait for the deployment to be ready @ 09/04/23 14:54:02.042
  Sep  4 14:54:02.044: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0904 14:54:02.443794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:03.444032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 14:54:04.049
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 14:54:04.054
  E0904 14:54:04.444574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:54:05.054: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep  4 14:54:05.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 14:54:05.445342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:06.445856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:07.446555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/04/23 14:54:07.597
  STEP: Create a v2 custom resource @ 09/04/23 14:54:07.604
  STEP: List CRs in v1 @ 09/04/23 14:54:07.622
  STEP: List CRs in v2 @ 09/04/23 14:54:07.623
  Sep  4 14:54:07.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2543" for this suite. @ 09/04/23 14:54:08.149
• [6.416 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 09/04/23 14:54:08.153
  Sep  4 14:54:08.153: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/23 14:54:08.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:54:08.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:54:08.162
  Sep  4 14:54:08.164: INFO: Got root ca configmap in namespace "svcaccounts-5754"
  Sep  4 14:54:08.166: INFO: Deleted root ca configmap in namespace "svcaccounts-5754"
  E0904 14:54:08.447325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 09/04/23 14:54:08.667
  Sep  4 14:54:08.669: INFO: Recreated root ca configmap in namespace "svcaccounts-5754"
  Sep  4 14:54:08.671: INFO: Updated root ca configmap in namespace "svcaccounts-5754"
  STEP: waiting for the root ca configmap reconciled @ 09/04/23 14:54:09.172
  Sep  4 14:54:09.173: INFO: Reconciled root ca configmap in namespace "svcaccounts-5754"
  Sep  4 14:54:09.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5754" for this suite. @ 09/04/23 14:54:09.175
• [1.023 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 09/04/23 14:54:09.177
  Sep  4 14:54:09.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 14:54:09.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:54:09.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:54:09.185
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/23 14:54:09.186
  Sep  4 14:54:09.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-6206 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep  4 14:54:09.228: INFO: stderr: ""
  Sep  4 14:54:09.228: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/04/23 14:54:09.228
  Sep  4 14:54:09.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-6206 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Sep  4 14:54:09.269: INFO: stderr: ""
  Sep  4 14:54:09.269: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/23 14:54:09.269
  Sep  4 14:54:09.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-6206 delete pods e2e-test-httpd-pod'
  E0904 14:54:09.448010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:10.448085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:54:11.252: INFO: stderr: ""
  Sep  4 14:54:11.252: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep  4 14:54:11.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6206" for this suite. @ 09/04/23 14:54:11.254
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 09/04/23 14:54:11.256
  Sep  4 14:54:11.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 14:54:11.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:54:11.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:54:11.263
  STEP: Counting existing ResourceQuota @ 09/04/23 14:54:11.265
  E0904 14:54:11.448402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:12.449199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:13.449780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:14.450527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:15.451353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/23 14:54:16.269
  STEP: Ensuring resource quota status is calculated @ 09/04/23 14:54:16.271
  E0904 14:54:16.452100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:17.452711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:54:18.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-873" for this suite. @ 09/04/23 14:54:18.275
• [7.021 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 09/04/23 14:54:18.277
  Sep  4 14:54:18.277: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename dns @ 09/04/23 14:54:18.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:54:18.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:54:18.287
  STEP: Creating a test externalName service @ 09/04/23 14:54:18.288
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6215.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local; sleep 1; done
   @ 09/04/23 14:54:18.29
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6215.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local; sleep 1; done
   @ 09/04/23 14:54:18.29
  STEP: creating a pod to probe DNS @ 09/04/23 14:54:18.29
  STEP: submitting the pod to kubernetes @ 09/04/23 14:54:18.29
  E0904 14:54:18.452760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:19.453762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/23 14:54:20.297
  STEP: looking for the results for each expected name from probers @ 09/04/23 14:54:20.298
  Sep  4 14:54:20.310: INFO: DNS probes using dns-test-3bdeb521-a75c-4d34-b730-910f3d907b1f succeeded

  STEP: changing the externalName to bar.example.com @ 09/04/23 14:54:20.31
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6215.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local; sleep 1; done
   @ 09/04/23 14:54:20.314
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6215.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local; sleep 1; done
   @ 09/04/23 14:54:20.314
  STEP: creating a second pod to probe DNS @ 09/04/23 14:54:20.314
  STEP: submitting the pod to kubernetes @ 09/04/23 14:54:20.314
  E0904 14:54:20.453827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:21.454026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:22.454951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:23.455174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:24.455637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:25.455845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:26.456271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:27.456413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:28.457448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:29.458254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:30.458758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:31.458902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:32.459209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:33.459416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/23 14:54:34.333
  STEP: looking for the results for each expected name from probers @ 09/04/23 14:54:34.334
  Sep  4 14:54:34.341: INFO: File wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local from pod  dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep  4 14:54:34.343: INFO: File jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local from pod  dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep  4 14:54:34.343: INFO: Lookups using dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 failed for: [wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local]

  Sep  4 14:54:34.351: INFO: Pod client logs for webserver: 
  Sep  4 14:54:34.355: INFO: Pod client logs for querier: 
  Sep  4 14:54:34.365: INFO: Pod client logs for jessie-querier: 
  E0904 14:54:34.460057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:35.460193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:36.460325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:37.460411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:38.461489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:54:39.378: INFO: File wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local from pod  dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep  4 14:54:39.389: INFO: File jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local from pod  dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep  4 14:54:39.389: INFO: Lookups using dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 failed for: [wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local]

  Sep  4 14:54:39.391: INFO: Pod client logs for webserver: 
  Sep  4 14:54:39.401: INFO: Pod client logs for querier: 
  Sep  4 14:54:39.411: INFO: Pod client logs for jessie-querier: 
  E0904 14:54:39.462435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:40.462544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:41.462622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:42.463587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:43.464356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:54:44.368: INFO: File wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local from pod  dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep  4 14:54:44.378: INFO: File jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local from pod  dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep  4 14:54:44.378: INFO: Lookups using dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 failed for: [wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local]

  Sep  4 14:54:44.388: INFO: Pod client logs for webserver: 
  Sep  4 14:54:44.398: INFO: Pod client logs for querier: 
  Sep  4 14:54:44.400: INFO: Pod client logs for jessie-querier: 
  E0904 14:54:44.464752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:45.465495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:46.466196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:47.466287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:48.466522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:54:49.367: INFO: File wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local from pod  dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep  4 14:54:49.377: INFO: File jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local from pod  dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep  4 14:54:49.377: INFO: Lookups using dns-6215/dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 failed for: [wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local]

  Sep  4 14:54:49.380: INFO: Pod client logs for webserver: 
  Sep  4 14:54:49.389: INFO: Pod client logs for querier: 
  Sep  4 14:54:49.399: INFO: Pod client logs for jessie-querier: 
  E0904 14:54:49.467086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:50.467228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:51.467380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:52.467523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:53.467541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:54:54.378: INFO: DNS probes using dns-test-48a5c840-e935-43b0-9fa2-8b8cefb41656 succeeded

  STEP: changing the service to type=ClusterIP @ 09/04/23 14:54:54.378
  W0904 14:54:54.386708      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6215.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-6215.svc.cluster.local; sleep 1; done
   @ 09/04/23 14:54:54.386
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6215.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6215.svc.cluster.local; sleep 1; done
   @ 09/04/23 14:54:54.386
  STEP: creating a third pod to probe DNS @ 09/04/23 14:54:54.386
  STEP: submitting the pod to kubernetes @ 09/04/23 14:54:54.388
  E0904 14:54:54.467785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:55.468743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:56.469648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:57.470626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:58.471605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:54:59.472423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:00.473112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:01.473478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:02.474309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:03.474560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:04.475408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:05.475946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:06.476089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:07.477119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/23 14:55:08.409
  STEP: looking for the results for each expected name from probers @ 09/04/23 14:55:08.41
  Sep  4 14:55:08.421: INFO: DNS probes using dns-test-016629b6-b47f-4a46-894d-d459f085da01 succeeded

  Sep  4 14:55:08.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 14:55:08.423
  STEP: deleting the pod @ 09/04/23 14:55:08.428
  STEP: deleting the pod @ 09/04/23 14:55:08.438
  STEP: deleting the test externalName service @ 09/04/23 14:55:08.444
  STEP: Destroying namespace "dns-6215" for this suite. @ 09/04/23 14:55:08.455
• [50.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/04/23 14:55:08.458
  Sep  4 14:55:08.458: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:55:08.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:55:08.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:55:08.468
  STEP: Creating projection with secret that has name projected-secret-test-0c7c37d2-add8-4344-b6f6-438fddb8bf9f @ 09/04/23 14:55:08.47
  STEP: Creating a pod to test consume secrets @ 09/04/23 14:55:08.472
  E0904 14:55:08.477797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:09.478708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:10.479205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:11.479271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:12.479408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:55:12.484
  Sep  4 14:55:12.485: INFO: Trying to get logs from node control-panel-01 pod pod-projected-secrets-151b3e45-46ce-4272-b636-280814948c79 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 14:55:12.493
  Sep  4 14:55:12.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9594" for this suite. @ 09/04/23 14:55:12.503
• [4.047 seconds]
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 09/04/23 14:55:12.505
  Sep  4 14:55:12.505: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replicaset @ 09/04/23 14:55:12.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:55:12.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:55:12.514
  Sep  4 14:55:12.523: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0904 14:55:13.480407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:14.480486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:15.480576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:16.481484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:17.481555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:17.525: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/23 14:55:17.525
  STEP: Scaling up "test-rs" replicaset  @ 09/04/23 14:55:17.525
  Sep  4 14:55:17.528: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/04/23 14:55:17.528
  Sep  4 14:55:17.534: INFO: observed ReplicaSet test-rs in namespace replicaset-2346 with ReadyReplicas 1, AvailableReplicas 1
  Sep  4 14:55:17.545: INFO: observed ReplicaSet test-rs in namespace replicaset-2346 with ReadyReplicas 1, AvailableReplicas 1
  Sep  4 14:55:17.552: INFO: observed ReplicaSet test-rs in namespace replicaset-2346 with ReadyReplicas 1, AvailableReplicas 1
  Sep  4 14:55:17.555: INFO: observed ReplicaSet test-rs in namespace replicaset-2346 with ReadyReplicas 1, AvailableReplicas 1
  E0904 14:55:18.481858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:18.602: INFO: observed ReplicaSet test-rs in namespace replicaset-2346 with ReadyReplicas 2, AvailableReplicas 2
  Sep  4 14:55:19.022: INFO: observed Replicaset test-rs in namespace replicaset-2346 with ReadyReplicas 3 found true
  Sep  4 14:55:19.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2346" for this suite. @ 09/04/23 14:55:19.024
• [6.521 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 09/04/23 14:55:19.026
  Sep  4 14:55:19.026: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 14:55:19.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:55:19.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:55:19.033
  STEP: Creating configMap that has name configmap-test-emptyKey-142c421c-2986-466e-9314-d0f241ab89ac @ 09/04/23 14:55:19.034
  Sep  4 14:55:19.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3849" for this suite. @ 09/04/23 14:55:19.037
• [0.013 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/04/23 14:55:19.041
  Sep  4 14:55:19.041: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/04/23 14:55:19.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:55:19.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:55:19.048
  STEP: creating a target pod @ 09/04/23 14:55:19.05
  E0904 14:55:19.482128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:20.482265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/04/23 14:55:21.058
  E0904 14:55:21.483174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:22.483383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:23.484240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:24.484384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/04/23 14:55:25.069
  Sep  4 14:55:25.069: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5473 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 14:55:25.069: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 14:55:25.069: INFO: ExecWithOptions: Clientset creation
  Sep  4 14:55:25.069: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-5473/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep  4 14:55:25.115: INFO: Exec stderr: ""
  Sep  4 14:55:25.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5473" for this suite. @ 09/04/23 14:55:25.125
• [6.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 09/04/23 14:55:25.128
  Sep  4 14:55:25.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 14:55:25.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:55:25.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:55:25.136
  STEP: creating service in namespace services-2625 @ 09/04/23 14:55:25.137
  STEP: creating service affinity-clusterip-transition in namespace services-2625 @ 09/04/23 14:55:25.137
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2625 @ 09/04/23 14:55:25.141
  I0904 14:55:25.145920      22 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-2625, replica count: 3
  E0904 14:55:25.485190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:26.485434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:27.486466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 14:55:28.197432      22 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  4 14:55:28.199: INFO: Creating new exec pod
  E0904 14:55:28.486610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:29.486832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:30.487702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:31.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-2625 exec execpod-affinitytcqcw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Sep  4 14:55:31.291: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Sep  4 14:55:31.291: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:55:31.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-2625 exec execpod-affinitytcqcw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.136.237 80'
  Sep  4 14:55:31.369: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.136.237 80\nConnection to 10.68.136.237 80 port [tcp/http] succeeded!\n"
  Sep  4 14:55:31.369: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 14:55:31.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-2625 exec execpod-affinitytcqcw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.136.237:80/ ; done'
  E0904 14:55:31.488377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:31.501: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n"
  Sep  4 14:55:31.501: INFO: stdout: "\naffinity-clusterip-transition-2dq88\naffinity-clusterip-transition-w9ggz\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-2dq88\naffinity-clusterip-transition-w9ggz\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-2dq88\naffinity-clusterip-transition-w9ggz\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-2dq88\naffinity-clusterip-transition-w9ggz\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-2dq88\naffinity-clusterip-transition-w9ggz\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-2dq88"
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-2dq88
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-w9ggz
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-2dq88
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-w9ggz
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-2dq88
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-w9ggz
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-2dq88
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-w9ggz
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-2dq88
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-w9ggz
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.501: INFO: Received response from host: affinity-clusterip-transition-2dq88
  Sep  4 14:55:31.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-2625 exec execpod-affinitytcqcw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.136.237:80/ ; done'
  Sep  4 14:55:31.633: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.136.237:80/\n"
  Sep  4 14:55:31.633: INFO: stdout: "\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd\naffinity-clusterip-transition-s7gqd"
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Received response from host: affinity-clusterip-transition-s7gqd
  Sep  4 14:55:31.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 14:55:31.635: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2625, will wait for the garbage collector to delete the pods @ 09/04/23 14:55:31.639
  Sep  4 14:55:31.693: INFO: Deleting ReplicationController affinity-clusterip-transition took: 2.130158ms
  Sep  4 14:55:31.794: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.607209ms
  E0904 14:55:32.488895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:33.489878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:34.490076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-2625" for this suite. @ 09/04/23 14:55:34.701
• [9.576 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 09/04/23 14:55:34.704
  Sep  4 14:55:34.704: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename limitrange @ 09/04/23 14:55:34.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:55:34.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:55:34.714
  STEP: Creating LimitRange "e2e-limitrange-bwqmf" in namespace "limitrange-1671" @ 09/04/23 14:55:34.716
  STEP: Creating another limitRange in another namespace @ 09/04/23 14:55:34.719
  Sep  4 14:55:34.726: INFO: Namespace "e2e-limitrange-bwqmf-9040" created
  Sep  4 14:55:34.726: INFO: Creating LimitRange "e2e-limitrange-bwqmf" in namespace "e2e-limitrange-bwqmf-9040"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-bwqmf" @ 09/04/23 14:55:34.729
  Sep  4 14:55:34.731: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-bwqmf" in "limitrange-1671" namespace @ 09/04/23 14:55:34.731
  Sep  4 14:55:34.734: INFO: LimitRange "e2e-limitrange-bwqmf" has been patched
  STEP: Delete LimitRange "e2e-limitrange-bwqmf" by Collection with labelSelector: "e2e-limitrange-bwqmf=patched" @ 09/04/23 14:55:34.734
  STEP: Confirm that the limitRange "e2e-limitrange-bwqmf" has been deleted @ 09/04/23 14:55:34.737
  Sep  4 14:55:34.737: INFO: Requesting list of LimitRange to confirm quantity
  Sep  4 14:55:34.738: INFO: Found 0 LimitRange with label "e2e-limitrange-bwqmf=patched"
  Sep  4 14:55:34.738: INFO: LimitRange "e2e-limitrange-bwqmf" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-bwqmf" @ 09/04/23 14:55:34.738
  Sep  4 14:55:34.739: INFO: Found 1 limitRange
  Sep  4 14:55:34.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1671" for this suite. @ 09/04/23 14:55:34.741
  STEP: Destroying namespace "e2e-limitrange-bwqmf-9040" for this suite. @ 09/04/23 14:55:34.743
• [0.042 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 09/04/23 14:55:34.746
  Sep  4 14:55:34.746: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 14:55:34.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:55:34.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:55:34.755
  STEP: creating a ConfigMap @ 09/04/23 14:55:34.756
  STEP: fetching the ConfigMap @ 09/04/23 14:55:34.758
  STEP: patching the ConfigMap @ 09/04/23 14:55:34.759
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/04/23 14:55:34.762
  STEP: deleting the ConfigMap by collection with a label selector @ 09/04/23 14:55:34.764
  STEP: listing all ConfigMaps in test namespace @ 09/04/23 14:55:34.767
  Sep  4 14:55:34.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8097" for this suite. @ 09/04/23 14:55:34.775
• [0.031 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 09/04/23 14:55:34.777
  Sep  4 14:55:34.777: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replicaset @ 09/04/23 14:55:34.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:55:34.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:55:34.835
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/04/23 14:55:34.836
  E0904 14:55:35.490155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:36.490354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/04/23 14:55:36.844
  STEP: Then the orphan pod is adopted @ 09/04/23 14:55:36.847
  E0904 14:55:37.490450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/04/23 14:55:37.85
  Sep  4 14:55:37.851: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/04/23 14:55:37.856
  E0904 14:55:38.490517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:38.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2587" for this suite. @ 09/04/23 14:55:38.861
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/04/23 14:55:38.864
  Sep  4 14:55:38.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-probe @ 09/04/23 14:55:38.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:55:38.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:55:38.876
  STEP: Creating pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658 @ 09/04/23 14:55:38.877
  E0904 14:55:39.491385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:40.491521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/23 14:55:40.884
  Sep  4 14:55:40.885: INFO: Initial restart count of pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f is 0
  Sep  4 14:55:40.886: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:55:41.492480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:42.492560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:42.888: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:55:43.493406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:44.493538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:44.890: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:55:45.494340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:46.494952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:46.892: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:55:47.495182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:48.495514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:48.894: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:55:49.496282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:50.496412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:50.896: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:55:51.497152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:52.497844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:52.899: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:55:53.497919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:54.498878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:54.902: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:55:55.499777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:56.499844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:56.903: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:55:57.499942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:55:58.500255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:55:58.906: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:55:59.501089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:00.501378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:00.908: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:01.502083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:02.503022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:02.911: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:03.503894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:04.504641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:04.914: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:05.504651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:06.505509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:06.916: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:07.506062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:08.506270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:08.918: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:09.506961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:10.507034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:10.920: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:11.507387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:12.508413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:12.923: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:13.508427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:14.508515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:14.925: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:15.509468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:16.509610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:16.927: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:17.509687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:18.510392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:18.929: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:19.510735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:20.511184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:20.931: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:21.511997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:22.512127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:22.933: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:23.512361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:24.512418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:24.935: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:25.513363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:26.513496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:26.937: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:27.513842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:28.514178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:28.939: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:29.514452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:30.514929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:30.940: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:31.515280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:32.515429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:32.943: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:33.516351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:34.516419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:34.944: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:35.517488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:36.517509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:36.946: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:37.518284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:38.518568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:38.948: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:39.519270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:40.519336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:40.950: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:41.520215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:42.520349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:42.952: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:43.521369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:44.522453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:44.954: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:45.523196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:46.523334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:46.957: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:47.523950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:48.524300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:48.959: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:49.525174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:50.525482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:50.961: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:51.526197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:52.526281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:52.963: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:53.526378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:54.526518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:54.965: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:55.527429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:56.527517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:56.967: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:57.527924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:56:58.528233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:56:58.969: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:56:59.529053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:00.529140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:00.971: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:01.529223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:02.529475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:02.974: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:03.529756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:04.529948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:04.976: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:05.530738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:06.530861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:06.977: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:07.531602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:08.531679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:08.979: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:09.532617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:10.532711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:10.981: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:11.532935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:12.533492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:12.983: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:13.534474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:14.534605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:14.985: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:15.535363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:16.535423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:16.987: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:17.536189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:18.536424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:18.989: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:19.537235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:20.537494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:20.991: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:21.537555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:22.537695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:22.994: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:23.538737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:24.539473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:24.996: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:25.540385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:26.540449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:26.998: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:27.541480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:28.541534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:29.000: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:29.541620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:30.542339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:31.002: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:31.543196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:32.543286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:33.004: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:33.543307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:34.543503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:35.006: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:35.543643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:36.544121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:37.009: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:37.544415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:38.544507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:39.011: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:39.545159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:40.545477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:41.013: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:41.546230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:42.546354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:43.016: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:43.546533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:44.546653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:45.017: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:45.547280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:46.547403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:47.019: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:47.547871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:48.548066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:49.020: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:49.548411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:50.549474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:51.022: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:51.550295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:52.550869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:53.025: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:53.550946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:54.551067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:55.027: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:55.551923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:56.552637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:57.029: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:57.552857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:57:58.553490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:57:59.031: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:57:59.553569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:00.554081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:01.033: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:01.554586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:02.555354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:03.035: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:03.556182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:04.556307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:05.037: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:05.556967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:06.557474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:07.039: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:07.558119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:08.558501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:09.041: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:09.559024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:10.559515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:11.043: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:11.560327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:12.560518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:13.045: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:13.561246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:14.561467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:15.047: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:15.562118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:16.562243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:17.049: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:17.563151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:18.563294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:19.051: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:19.564238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:20.564470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:21.053: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:21.565410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:22.565534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:23.055: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:23.566547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:24.566670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:25.057: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:25.567574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:26.567591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:27.059: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:27.568309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:28.568542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:29.061: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:29.569085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:30.569481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:31.063: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:31.569845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:32.569930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:33.066: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:33.570668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:34.570755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:35.067: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:35.571584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:36.571664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:37.069: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:37.572449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:38.573472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:39.071: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:39.574403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:40.575267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:41.074: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:41.576054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:42.576298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:43.076: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:43.576417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:44.577476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:45.078: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:45.578331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:46.579249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:47.081: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:47.579625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:48.579741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:49.082: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:49.580474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:50.581478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:51.084: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:51.582233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:52.582468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:53.086: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:53.583174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:54.584238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:55.089: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:55.584812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:56.585539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:57.091: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:57.586303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:58:58.586419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:58:59.093: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:58:59.587463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:00.587609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:01.096: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:01.587970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:02.588233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:03.099: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:03.588987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:04.589472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:05.101: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:05.590126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:06.590348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:07.103: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:07.590731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:08.591408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:09.105: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:09.591816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:10.591899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:11.108: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:11.592946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:12.593994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:13.111: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:13.594742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:14.594859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:15.114: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:15.595347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:16.595475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:17.116: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:17.596180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:18.596271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:19.118: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:19.596918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:20.597023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:21.120: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:21.597081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:22.597441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:23.123: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:23.597522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:24.597605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:25.126: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:25.598591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:26.598952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:27.128: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:27.599793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:28.600014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:29.130: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:29.600629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:30.601470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:31.132: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:31.602206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:32.602708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:33.134: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:33.603496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:34.603575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:35.137: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:35.603691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:36.604083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:37.139: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:37.604812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:38.605801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:39.141: INFO: Get pod test-webserver-d7db7dce-b558-4f4e-9ee8-5f738614e81f in namespace container-probe-7658
  E0904 14:59:39.606804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:40.607573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 14:59:41.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 14:59:41.144
  STEP: Destroying namespace "container-probe-7658" for this suite. @ 09/04/23 14:59:41.149
• [242.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/04/23 14:59:41.152
  Sep  4 14:59:41.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename containers @ 09/04/23 14:59:41.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:59:41.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:59:41.165
  STEP: Creating a pod to test override all @ 09/04/23 14:59:41.166
  E0904 14:59:41.608420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:42.608705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:43.609356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:44.610322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:59:45.174
  Sep  4 14:59:45.175: INFO: Trying to get logs from node worker-02 pod client-containers-9ea929b8-98fc-476e-bb44-c66da915bc57 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:59:45.193
  Sep  4 14:59:45.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4762" for this suite. @ 09/04/23 14:59:45.199
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/04/23 14:59:45.202
  Sep  4 14:59:45.202: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:59:45.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:59:45.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:59:45.209
  STEP: Creating configMap with name projected-configmap-test-volume-map-4f2b5769-5000-45ac-90fa-85b4ac00f204 @ 09/04/23 14:59:45.211
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:59:45.212
  E0904 14:59:45.610941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:46.610977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:47.611684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:48.611823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:59:49.22
  Sep  4 14:59:49.221: INFO: Trying to get logs from node worker-02 pod pod-projected-configmaps-c2f0f5ab-ad4f-4b76-9051-5fc6190c1817 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:59:49.223
  Sep  4 14:59:49.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8999" for this suite. @ 09/04/23 14:59:49.23
• [4.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/04/23 14:59:49.233
  Sep  4 14:59:49.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:59:49.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:59:49.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:59:49.24
  STEP: Creating secret with name projected-secret-test-b1b7c511-523e-4f1c-9bd1-706d308f62fc @ 09/04/23 14:59:49.241
  STEP: Creating a pod to test consume secrets @ 09/04/23 14:59:49.244
  E0904 14:59:49.612421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:50.613452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:51.614214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:52.614453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:59:53.252
  Sep  4 14:59:53.253: INFO: Trying to get logs from node worker-02 pod pod-projected-secrets-d00d9203-e617-4181-872c-566c50e1f899 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 14:59:53.255
  Sep  4 14:59:53.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8204" for this suite. @ 09/04/23 14:59:53.262
• [4.032 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 09/04/23 14:59:53.264
  Sep  4 14:59:53.264: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 14:59:53.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:59:53.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:59:53.272
  STEP: Creating a ResourceQuota @ 09/04/23 14:59:53.273
  STEP: Getting a ResourceQuota @ 09/04/23 14:59:53.276
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/04/23 14:59:53.277
  STEP: Patching the ResourceQuota @ 09/04/23 14:59:53.278
  STEP: Deleting a Collection of ResourceQuotas @ 09/04/23 14:59:53.28
  STEP: Verifying the deleted ResourceQuota @ 09/04/23 14:59:53.283
  Sep  4 14:59:53.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7772" for this suite. @ 09/04/23 14:59:53.285
• [0.023 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/04/23 14:59:53.288
  Sep  4 14:59:53.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 14:59:53.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:59:53.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:59:53.297
  STEP: Creating configMap with name projected-configmap-test-volume-map-609784b7-0158-4c63-8c6a-b442372bc52d @ 09/04/23 14:59:53.298
  STEP: Creating a pod to test consume configMaps @ 09/04/23 14:59:53.3
  E0904 14:59:53.614505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:54.614705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:55.615434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:56.615573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 14:59:57.308
  Sep  4 14:59:57.309: INFO: Trying to get logs from node worker-02 pod pod-projected-configmaps-16173600-f94d-4694-8af9-82824793750b container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 14:59:57.311
  Sep  4 14:59:57.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7691" for this suite. @ 09/04/23 14:59:57.319
• [4.033 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 09/04/23 14:59:57.321
  Sep  4 14:59:57.321: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename namespaces @ 09/04/23 14:59:57.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:59:57.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 14:59:57.33
  STEP: Creating a test namespace @ 09/04/23 14:59:57.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 14:59:57.336
  STEP: Creating a pod in the namespace @ 09/04/23 14:59:57.338
  STEP: Waiting for the pod to have running status @ 09/04/23 14:59:57.341
  E0904 14:59:57.615591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 14:59:58.615713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/04/23 14:59:59.344
  STEP: Waiting for the namespace to be removed. @ 09/04/23 14:59:59.346
  E0904 14:59:59.615947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:00.616417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:01.617180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:02.617773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:03.617900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:04.618109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:05.618677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:06.619497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:07.620328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:08.620783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:09.621483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/04/23 15:00:10.348
  STEP: Verifying there are no pods in the namespace @ 09/04/23 15:00:10.355
  Sep  4 15:00:10.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4194" for this suite. @ 09/04/23 15:00:10.358
  STEP: Destroying namespace "nsdeletetest-8775" for this suite. @ 09/04/23 15:00:10.36
  Sep  4 15:00:10.361: INFO: Namespace nsdeletetest-8775 was already deleted
  STEP: Destroying namespace "nsdeletetest-5600" for this suite. @ 09/04/23 15:00:10.361
• [13.042 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 09/04/23 15:00:10.364
  Sep  4 15:00:10.364: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename job @ 09/04/23 15:00:10.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:00:10.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:00:10.371
  STEP: Creating a job @ 09/04/23 15:00:10.372
  STEP: Ensuring active pods == parallelism @ 09/04/23 15:00:10.375
  E0904 15:00:10.621837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:11.622718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/04/23 15:00:12.377
  STEP: deleting Job.batch foo in namespace job-8212, will wait for the garbage collector to delete the pods @ 09/04/23 15:00:12.377
  Sep  4 15:00:12.431: INFO: Deleting Job.batch foo took: 2.247371ms
  Sep  4 15:00:12.531: INFO: Terminating Job.batch foo pods took: 100.663442ms
  E0904 15:00:12.623222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:13.624244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:14.625269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:15.625466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:16.626393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:17.626563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:18.627460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:19.627488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:20.628523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:21.629433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:22.629607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:23.630594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:24.631504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:25.632367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:26.633350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:27.633595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:28.634650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:29.635598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:30.636650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:31.637699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:32.638754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:33.639662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:34.640676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:35.640733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:36.641670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:37.641890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:38.642850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:39.643854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:40.644903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:41.645860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:42.646279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:43.646692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/04/23 15:00:43.833
  Sep  4 15:00:43.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8212" for this suite. @ 09/04/23 15:00:43.835
• [33.474 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/04/23 15:00:43.838
  Sep  4 15:00:43.838: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sched-pred @ 09/04/23 15:00:43.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:00:43.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:00:43.846
  Sep  4 15:00:43.847: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep  4 15:00:43.850: INFO: Waiting for terminating namespaces to be deleted...
  Sep  4 15:00:43.851: INFO: 
  Logging pods the apiserver thinks is on node control-panel-01 before test
  Sep  4 15:00:43.853: INFO: calico-node-xrnwn from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.853: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 15:00:43.853: INFO: dashboard-metrics-scraper-77b667b99d-kp24j from kube-system started at 2023-09-04 14:11:31 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.853: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep  4 15:00:43.853: INFO: metrics-server-dfb478476-crb6q from kube-system started at 2023-09-04 14:11:29 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.853: INFO: 	Container metrics-server ready: true, restart count 0
  Sep  4 15:00:43.853: INFO: node-local-dns-9x8s5 from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.853: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 15:00:43.853: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-stzx5 from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 15:00:43.853: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 15:00:43.853: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  4 15:00:43.853: INFO: 
  Logging pods the apiserver thinks is on node worker-01 before test
  Sep  4 15:00:43.855: INFO: calico-kube-controllers-86b55cf789-rxvqz from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.855: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep  4 15:00:43.855: INFO: calico-node-skg92 from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.855: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 15:00:43.855: INFO: kubernetes-dashboard-74fb9f77fb-g9q9c from kube-system started at 2023-09-04 14:11:31 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.855: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep  4 15:00:43.855: INFO: node-local-dns-zpjfs from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.855: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 15:00:43.855: INFO: sonobuoy-e2e-job-95efc8522fa94e6d from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 15:00:43.855: INFO: 	Container e2e ready: true, restart count 0
  Sep  4 15:00:43.855: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 15:00:43.855: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-s8c5l from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 15:00:43.855: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 15:00:43.855: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  4 15:00:43.855: INFO: 
  Logging pods the apiserver thinks is on node worker-02 before test
  Sep  4 15:00:43.857: INFO: calico-node-j5dlh from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.857: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 15:00:43.857: INFO: coredns-7bc88ddb8b-8qz6h from kube-system started at 2023-09-04 14:11:27 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.857: INFO: 	Container coredns ready: true, restart count 0
  Sep  4 15:00:43.857: INFO: node-local-dns-lpzbf from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.857: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 15:00:43.857: INFO: sonobuoy from sonobuoy started at 2023-09-04 14:11:58 +0000 UTC (1 container statuses recorded)
  Sep  4 15:00:43.857: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep  4 15:00:43.857: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-x5kgm from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 15:00:43.857: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 15:00:43.857: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/04/23 15:00:43.857
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1781ba2e872775b9], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] @ 09/04/23 15:00:43.871
  E0904 15:00:44.647272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:00:44.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2889" for this suite. @ 09/04/23 15:00:44.87
• [1.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/04/23 15:00:44.874
  Sep  4 15:00:44.874: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename events @ 09/04/23 15:00:44.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:00:44.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:00:44.881
  STEP: Create set of events @ 09/04/23 15:00:44.882
  STEP: get a list of Events with a label in the current namespace @ 09/04/23 15:00:44.888
  STEP: delete a list of events @ 09/04/23 15:00:44.889
  Sep  4 15:00:44.889: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/04/23 15:00:44.894
  Sep  4 15:00:44.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2119" for this suite. @ 09/04/23 15:00:44.896
• [0.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/04/23 15:00:44.9
  Sep  4 15:00:44.900: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename subjectreview @ 09/04/23 15:00:44.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:00:44.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:00:44.906
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8345" @ 09/04/23 15:00:44.907
  Sep  4 15:00:44.909: INFO: saUsername: "system:serviceaccount:subjectreview-8345:e2e"
  Sep  4 15:00:44.909: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8345"}
  Sep  4 15:00:44.909: INFO: saUID: "d69f8e3f-42cc-4218-bc7a-cc27c6a6a74f"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8345:e2e" @ 09/04/23 15:00:44.909
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8345:e2e" @ 09/04/23 15:00:44.909
  Sep  4 15:00:44.910: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8345:e2e" api 'list' configmaps in "subjectreview-8345" namespace @ 09/04/23 15:00:44.91
  Sep  4 15:00:44.911: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8345:e2e" @ 09/04/23 15:00:44.911
  Sep  4 15:00:44.912: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Sep  4 15:00:44.912: INFO: LocalSubjectAccessReview has been verified
  Sep  4 15:00:44.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8345" for this suite. @ 09/04/23 15:00:44.913
• [0.015 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/04/23 15:00:44.915
  Sep  4 15:00:44.915: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename containers @ 09/04/23 15:00:44.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:00:44.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:00:44.922
  E0904 15:00:45.647991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:46.648095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:00:46.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4475" for this suite. @ 09/04/23 15:00:46.933
• [2.021 seconds]
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/04/23 15:00:46.936
  Sep  4 15:00:46.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:00:46.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:00:46.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:00:46.943
  STEP: Creating configMap with name cm-test-opt-del-4a981700-4ae1-4db5-9137-5bf15f5ed5a9 @ 09/04/23 15:00:46.946
  STEP: Creating configMap with name cm-test-opt-upd-8eb87a8c-6982-4672-8a0f-6deedd70a801 @ 09/04/23 15:00:46.947
  STEP: Creating the pod @ 09/04/23 15:00:46.949
  E0904 15:00:47.648777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:48.649487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-4a981700-4ae1-4db5-9137-5bf15f5ed5a9 @ 09/04/23 15:00:48.97
  STEP: Updating configmap cm-test-opt-upd-8eb87a8c-6982-4672-8a0f-6deedd70a801 @ 09/04/23 15:00:48.972
  STEP: Creating configMap with name cm-test-opt-create-f438fb2b-b288-4ed3-9927-060ddba90735 @ 09/04/23 15:00:48.973
  STEP: waiting to observe update in volume @ 09/04/23 15:00:48.975
  E0904 15:00:49.650155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:50.650287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:51.650498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:52.650724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:53.651398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:54.651491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:55.652007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:56.652913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:57.653466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:58.653558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:00:59.653719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:00.653840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:01.654697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:02.655316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:03.655823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:04.655950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:05.656307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:06.656430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:07.657486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:08.657619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:09.657875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:10.658925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:11.659100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:12.659321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:13.659949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:14.659981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:15.660415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:16.661490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:17.661540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:18.661627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:19.662447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:20.662759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:21.663767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:22.664019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:23.664418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:24.665497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:25.666334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:26.666452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:27.666894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:28.667042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:29.667121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:30.667196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:31.667643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:32.668258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:33.668423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:34.669488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:35.669691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:36.669676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:37.670389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:38.670525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:39.671255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:40.671588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:41.672398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:42.672613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:43.672707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:44.672786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:45.673516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:46.673593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:47.674556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:48.674646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:49.675089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:50.675183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:51.675711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:52.675929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:53.676887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:54.677473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:55.678355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:56.678451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:57.679203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:58.679628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:01:59.680529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:00.681469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:01.681513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:02.682341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:03.682916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:04.682979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:05.683681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:06.683767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:07.684222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:08.684356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:09.684998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:10.685057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:11.685472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:12.685689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:13.686546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:14.687277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:15.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7563" for this suite. @ 09/04/23 15:02:15.153
• [88.219 seconds]
------------------------------
SS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/04/23 15:02:15.155
  Sep  4 15:02:15.155: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename conformance-tests @ 09/04/23 15:02:15.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:02:15.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:02:15.162
  STEP: Getting node addresses @ 09/04/23 15:02:15.163
  Sep  4 15:02:15.164: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Sep  4 15:02:15.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8125" for this suite. @ 09/04/23 15:02:15.167
• [0.014 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 09/04/23 15:02:15.17
  Sep  4 15:02:15.170: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/23 15:02:15.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:02:15.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:02:15.177
  STEP: creating a ServiceAccount @ 09/04/23 15:02:15.178
  STEP: watching for the ServiceAccount to be added @ 09/04/23 15:02:15.182
  STEP: patching the ServiceAccount @ 09/04/23 15:02:15.184
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/04/23 15:02:15.186
  STEP: deleting the ServiceAccount @ 09/04/23 15:02:15.188
  Sep  4 15:02:15.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8976" for this suite. @ 09/04/23 15:02:15.193
• [0.026 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 09/04/23 15:02:15.196
  Sep  4 15:02:15.196: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename field-validation @ 09/04/23 15:02:15.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:02:15.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:02:15.202
  Sep  4 15:02:15.203: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  W0904 15:02:15.204178      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001386f80 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0904 15:02:15.687323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:16.687911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:17.688587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0904 15:02:17.738775      22 warnings.go:70] unknown field "alpha"
  W0904 15:02:17.738789      22 warnings.go:70] unknown field "beta"
  W0904 15:02:17.738792      22 warnings.go:70] unknown field "delta"
  W0904 15:02:17.738795      22 warnings.go:70] unknown field "epsilon"
  W0904 15:02:17.738798      22 warnings.go:70] unknown field "gamma"
  Sep  4 15:02:18.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2750" for this suite. @ 09/04/23 15:02:18.253
• [3.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 09/04/23 15:02:18.255
  Sep  4 15:02:18.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replication-controller @ 09/04/23 15:02:18.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:02:18.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:02:18.264
  Sep  4 15:02:18.265: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0904 15:02:18.688661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/04/23 15:02:19.27
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/04/23 15:02:19.273
  E0904 15:02:19.688759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/04/23 15:02:20.276
  Sep  4 15:02:20.282: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/04/23 15:02:20.282
  Sep  4 15:02:20.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1046" for this suite. @ 09/04/23 15:02:20.29
• [2.045 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/04/23 15:02:20.304
  Sep  4 15:02:20.304: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-probe @ 09/04/23 15:02:20.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:02:20.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:02:20.318
  STEP: Creating pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599 @ 09/04/23 15:02:20.321
  E0904 15:02:20.688892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:21.689066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/23 15:02:22.33
  Sep  4 15:02:22.331: INFO: Initial restart count of pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 is 0
  Sep  4 15:02:22.332: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:22.689939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:23.690041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:24.335: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:24.690125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:25.690258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:26.337: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:26.690828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:27.691169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:28.339: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:28.691743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:29.691843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:30.341: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:30.692377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:31.692414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:32.343: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:32.693349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:33.694246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:34.345: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:34.694962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:35.695025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:36.347: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:36.695088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:37.695306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:38.350: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:38.695388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:39.695634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:40.351: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:40.695719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:41.695838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:42.353: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:42.696594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:43.697788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:44.354: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:44.697915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:45.698060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:46.356: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:46.698814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:47.699654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:48.359: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:48.700382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:49.700852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:50.360: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:50.701387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:51.701464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:52.362: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:52.702311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:53.702478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:54.364: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:54.702780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:55.702871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:56.365: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:56.703428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:57.704404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:02:58.367: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:02:58.705160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:02:59.705468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:03:00.369: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:03:00.705534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:01.705801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:03:02.370: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:03:02.706184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:03.707055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:03:04.373: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:03:04.707106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:05.707361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:03:06.375: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:03:06.708087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:07.709026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:03:08.377: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:03:08.709600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:09.709814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:03:10.378: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  E0904 15:03:10.709985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:11.710102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:03:12.380: INFO: Get pod busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 in namespace container-probe-1599
  Sep  4 15:03:12.380: INFO: Restart count of pod container-probe-1599/busybox-29a29e1b-ab7b-4090-a392-87e0b335d542 is now 1 (50.049576008s elapsed)
  Sep  4 15:03:12.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 15:03:12.382
  STEP: Destroying namespace "container-probe-1599" for this suite. @ 09/04/23 15:03:12.387
• [52.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/04/23 15:03:12.39
  Sep  4 15:03:12.390: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:03:12.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:03:12.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:03:12.397
  STEP: Creating configMap with name configmap-projected-all-test-volume-ee749ce7-b7b2-4791-9914-ba9946eb110c @ 09/04/23 15:03:12.398
  STEP: Creating secret with name secret-projected-all-test-volume-a6115dbb-241c-447e-869c-342122f06c20 @ 09/04/23 15:03:12.4
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/04/23 15:03:12.401
  E0904 15:03:12.711046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:13.711176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:03:14.408
  Sep  4 15:03:14.409: INFO: Trying to get logs from node worker-02 pod projected-volume-e71de140-555f-4f36-bd58-2976638ac8e5 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 15:03:14.423
  Sep  4 15:03:14.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7244" for this suite. @ 09/04/23 15:03:14.43
• [2.042 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 09/04/23 15:03:14.432
  Sep  4 15:03:14.432: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 15:03:14.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:03:14.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:03:14.441
  STEP: Setting up server cert @ 09/04/23 15:03:14.45
  E0904 15:03:14.711554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 15:03:14.894
  STEP: Deploying the webhook pod @ 09/04/23 15:03:14.898
  STEP: Wait for the deployment to be ready @ 09/04/23 15:03:14.909
  Sep  4 15:03:14.911: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0904 15:03:15.712020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:16.712128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 15:03:16.916
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 15:03:16.92
  E0904 15:03:17.712242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:03:17.921: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/04/23 15:03:17.95
  STEP: Creating a configMap that should be mutated @ 09/04/23 15:03:17.956
  STEP: Deleting the collection of validation webhooks @ 09/04/23 15:03:17.968
  STEP: Creating a configMap that should not be mutated @ 09/04/23 15:03:17.982
  Sep  4 15:03:17.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-864" for this suite. @ 09/04/23 15:03:18.003
  STEP: Destroying namespace "webhook-markers-7165" for this suite. @ 09/04/23 15:03:18.006
• [3.579 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 09/04/23 15:03:18.012
  Sep  4 15:03:18.012: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sysctl @ 09/04/23 15:03:18.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:03:18.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:03:18.021
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/04/23 15:03:18.023
  Sep  4 15:03:18.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5347" for this suite. @ 09/04/23 15:03:18.027
• [0.017 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 09/04/23 15:03:18.03
  Sep  4 15:03:18.030: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 15:03:18.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:03:18.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:03:18.039
  STEP: Setting up server cert @ 09/04/23 15:03:18.053
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 15:03:18.262
  STEP: Deploying the webhook pod @ 09/04/23 15:03:18.264
  STEP: Wait for the deployment to be ready @ 09/04/23 15:03:18.27
  Sep  4 15:03:18.273: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 15:03:18.712661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:19.713479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 15:03:20.278
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 15:03:20.283
  E0904 15:03:20.714084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:03:21.283: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/04/23 15:03:21.286
  STEP: create a pod that should be denied by the webhook @ 09/04/23 15:03:21.294
  STEP: create a pod that causes the webhook to hang @ 09/04/23 15:03:21.3
  E0904 15:03:21.714262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:22.714325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:23.714648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:24.715417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:25.716003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:26.716837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:27.717473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:28.717507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:29.717579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:30.717708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/04/23 15:03:31.304
  STEP: create a configmap that should be admitted by the webhook @ 09/04/23 15:03:31.318
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/04/23 15:03:31.323
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/04/23 15:03:31.325
  STEP: create a namespace that bypass the webhook @ 09/04/23 15:03:31.327
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/04/23 15:03:31.335
  Sep  4 15:03:31.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9971" for this suite. @ 09/04/23 15:03:31.358
  STEP: Destroying namespace "webhook-markers-2755" for this suite. @ 09/04/23 15:03:31.364
  STEP: Destroying namespace "exempted-namespace-9590" for this suite. @ 09/04/23 15:03:31.367
• [13.339 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/04/23 15:03:31.371
  Sep  4 15:03:31.371: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-watch @ 09/04/23 15:03:31.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:03:31.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:03:31.381
  Sep  4 15:03:31.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 15:03:31.717827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:32.717970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:33.718411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/04/23 15:03:33.916
  Sep  4 15:03:33.918: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-04T15:03:33Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-04T15:03:33Z]] name:name1 resourceVersion:24140 uid:0dce198e-6e8d-4ff5-9c9c-48a73f7da1d9] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 15:03:34.718537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:35.718838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:36.718792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:37.719180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:38.719249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:39.719442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:40.720417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:41.721476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:42.722491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:43.722903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/04/23 15:03:43.919
  Sep  4 15:03:43.921: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-04T15:03:43Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-04T15:03:43Z]] name:name2 resourceVersion:24186 uid:0ac1c32e-aeb9-4693-8ea2-2365e1421e04] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 15:03:44.723935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:45.724057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:46.724408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:47.724786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:48.725476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:49.725613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:50.725739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:51.725865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:52.726383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:53.726466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/04/23 15:03:53.922
  Sep  4 15:03:53.926: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-04T15:03:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-04T15:03:53Z]] name:name1 resourceVersion:24202 uid:0dce198e-6e8d-4ff5-9c9c-48a73f7da1d9] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 15:03:54.727020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:55.727154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:56.728029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:57.728362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:58.728423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:03:59.729479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:00.729621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:01.729864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:02.729994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:03.730116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/04/23 15:04:03.926
  Sep  4 15:04:03.929: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-04T15:03:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-04T15:04:03Z]] name:name2 resourceVersion:24218 uid:0ac1c32e-aeb9-4693-8ea2-2365e1421e04] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 15:04:04.730741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:05.731182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:06.731591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:07.732411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:08.732420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:09.733478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:10.733597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:11.733713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:12.733873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:13.733960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/04/23 15:04:13.93
  Sep  4 15:04:13.933: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-04T15:03:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-04T15:03:53Z]] name:name1 resourceVersion:24235 uid:0dce198e-6e8d-4ff5-9c9c-48a73f7da1d9] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 15:04:14.734038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:15.734153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:16.734279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:17.734844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:18.734963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:19.735460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:20.735581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:21.735697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:22.736402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:23.736423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/04/23 15:04:23.934
  Sep  4 15:04:23.938: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-04T15:03:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-04T15:04:03Z]] name:name2 resourceVersion:24252 uid:0ac1c32e-aeb9-4693-8ea2-2365e1421e04] num:map[num1:9223372036854775807 num2:1000000]]}
  E0904 15:04:24.737459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:25.737543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:26.737676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:27.738284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:28.738411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:29.738540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:30.738627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:31.739232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:32.739397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:33.740187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:04:34.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4145" for this suite. @ 09/04/23 15:04:34.447
• [63.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 09/04/23 15:04:34.449
  Sep  4 15:04:34.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/23 15:04:34.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:04:34.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:04:34.457
  Sep  4 15:04:34.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5236" for this suite. @ 09/04/23 15:04:34.462
• [0.015 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 09/04/23 15:04:34.465
  Sep  4 15:04:34.465: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename lease-test @ 09/04/23 15:04:34.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:04:34.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:04:34.471
  Sep  4 15:04:34.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5290" for this suite. @ 09/04/23 15:04:34.492
• [0.029 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/04/23 15:04:34.494
  Sep  4 15:04:34.494: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 15:04:34.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:04:34.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:04:34.502
  STEP: Creating the pod @ 09/04/23 15:04:34.503
  E0904 15:04:34.740989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:35.741227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:36.741470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:04:37.020: INFO: Successfully updated pod "labelsupdate3e052b7c-e12d-4231-80fc-65e71e79b429"
  E0904 15:04:37.742447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:38.742583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:39.742766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:40.742888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:04:41.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7637" for this suite. @ 09/04/23 15:04:41.032
• [6.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 09/04/23 15:04:41.035
  Sep  4 15:04:41.035: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/23 15:04:41.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:04:41.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:04:41.042
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/23 15:04:41.045
  E0904 15:04:41.743240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:42.743397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/04/23 15:04:43.053
  E0904 15:04:43.744394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:44.744421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/04/23 15:04:45.061
  E0904 15:04:45.745288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:46.745425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/04/23 15:04:47.068
  Sep  4 15:04:47.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9440" for this suite. @ 09/04/23 15:04:47.077
• [6.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 09/04/23 15:04:47.081
  Sep  4 15:04:47.081: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename security-context @ 09/04/23 15:04:47.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:04:47.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:04:47.138
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/04/23 15:04:47.139
  E0904 15:04:47.745527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:48.745579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:49.745640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:50.745767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:04:51.148
  Sep  4 15:04:51.149: INFO: Trying to get logs from node worker-02 pod security-context-d4adbceb-d054-4ecb-aa5f-a0cfde38342f container test-container: <nil>
  STEP: delete the pod @ 09/04/23 15:04:51.153
  Sep  4 15:04:51.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5166" for this suite. @ 09/04/23 15:04:51.16
• [4.082 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 09/04/23 15:04:51.162
  Sep  4 15:04:51.162: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename emptydir @ 09/04/23 15:04:51.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:04:51.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:04:51.172
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/04/23 15:04:51.173
  E0904 15:04:51.746526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:52.747406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:53.747941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:54.748077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:04:55.182
  Sep  4 15:04:55.183: INFO: Trying to get logs from node worker-02 pod pod-93fe5452-17cf-4286-b5d9-2aeb3769ff32 container test-container: <nil>
  STEP: delete the pod @ 09/04/23 15:04:55.186
  Sep  4 15:04:55.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7901" for this suite. @ 09/04/23 15:04:55.193
• [4.033 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 09/04/23 15:04:55.195
  Sep  4 15:04:55.195: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/23 15:04:55.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:04:55.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:04:55.203
  E0904 15:04:55.748993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:56.749098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/04/23 15:04:57.214
  Sep  4 15:04:57.214: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3147 pod-service-account-f432d731-a946-4099-bf90-d2b5507a538c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/04/23 15:04:57.305
  Sep  4 15:04:57.305: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3147 pod-service-account-f432d731-a946-4099-bf90-d2b5507a538c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/04/23 15:04:57.388
  Sep  4 15:04:57.388: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3147 pod-service-account-f432d731-a946-4099-bf90-d2b5507a538c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Sep  4 15:04:57.482: INFO: Got root ca configmap in namespace "svcaccounts-3147"
  Sep  4 15:04:57.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3147" for this suite. @ 09/04/23 15:04:57.484
• [2.291 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 09/04/23 15:04:57.486
  Sep  4 15:04:57.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 15:04:57.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:04:57.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:04:57.494
  STEP: creating an Endpoint @ 09/04/23 15:04:57.497
  STEP: waiting for available Endpoint @ 09/04/23 15:04:57.498
  STEP: listing all Endpoints @ 09/04/23 15:04:57.499
  STEP: updating the Endpoint @ 09/04/23 15:04:57.5
  STEP: fetching the Endpoint @ 09/04/23 15:04:57.502
  STEP: patching the Endpoint @ 09/04/23 15:04:57.503
  STEP: fetching the Endpoint @ 09/04/23 15:04:57.507
  STEP: deleting the Endpoint by Collection @ 09/04/23 15:04:57.508
  STEP: waiting for Endpoint deletion @ 09/04/23 15:04:57.51
  STEP: fetching the Endpoint @ 09/04/23 15:04:57.511
  Sep  4 15:04:57.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4562" for this suite. @ 09/04/23 15:04:57.513
• [0.028 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/04/23 15:04:57.515
  Sep  4 15:04:57.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 15:04:57.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:04:57.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:04:57.521
  STEP: Creating secret with name secret-test-853f831e-a5e9-4d00-ad00-7aac728b07d2 @ 09/04/23 15:04:57.523
  STEP: Creating a pod to test consume secrets @ 09/04/23 15:04:57.524
  E0904 15:04:57.749905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:58.750087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:04:59.750907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:00.750981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:05:01.533
  Sep  4 15:05:01.534: INFO: Trying to get logs from node control-panel-01 pod pod-secrets-a028a54c-a323-4c83-b7df-1def3b776440 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 15:05:01.537
  Sep  4 15:05:01.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7633" for this suite. @ 09/04/23 15:05:01.545
• [4.032 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/04/23 15:05:01.547
  Sep  4 15:05:01.547: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-runtime @ 09/04/23 15:05:01.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:05:01.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:05:01.554
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/04/23 15:05:01.558
  E0904 15:05:01.751742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:02.752516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:03.753290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:04.754083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:05.754829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:06.755203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:07.756152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:08.756997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:09.757416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:10.758161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:11.758289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:12.758423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:13.759179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:14.759814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:15.759887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/04/23 15:05:16.59
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/04/23 15:05:16.591
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/04/23 15:05:16.593
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 09/04/23 15:05:16.593
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/04/23 15:05:16.603
  E0904 15:05:16.760349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:17.761207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/04/23 15:05:18.607
  E0904 15:05:18.762075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/04/23 15:05:19.61
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/04/23 15:05:19.613
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 09/04/23 15:05:19.613
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/04/23 15:05:19.62
  E0904 15:05:19.762977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/04/23 15:05:20.624
  E0904 15:05:20.763514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:21.764023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/04/23 15:05:22.629
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/04/23 15:05:22.631
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 09/04/23 15:05:22.631
  Sep  4 15:05:22.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4933" for this suite. @ 09/04/23 15:05:22.64
• [21.096 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 09/04/23 15:05:22.643
  Sep  4 15:05:22.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/23 15:05:22.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:05:22.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:05:22.651
  Sep  4 15:05:22.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 15:05:22.764388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:23.765367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/23 15:05:23.813
  Sep  4 15:05:23.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-8399 --namespace=crd-publish-openapi-8399 create -f -'
  Sep  4 15:05:24.106: INFO: stderr: ""
  Sep  4 15:05:24.106: INFO: stdout: "e2e-test-crd-publish-openapi-773-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep  4 15:05:24.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-8399 --namespace=crd-publish-openapi-8399 delete e2e-test-crd-publish-openapi-773-crds test-cr'
  Sep  4 15:05:24.147: INFO: stderr: ""
  Sep  4 15:05:24.147: INFO: stdout: "e2e-test-crd-publish-openapi-773-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Sep  4 15:05:24.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-8399 --namespace=crd-publish-openapi-8399 apply -f -'
  Sep  4 15:05:24.235: INFO: stderr: ""
  Sep  4 15:05:24.235: INFO: stdout: "e2e-test-crd-publish-openapi-773-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep  4 15:05:24.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-8399 --namespace=crd-publish-openapi-8399 delete e2e-test-crd-publish-openapi-773-crds test-cr'
  Sep  4 15:05:24.276: INFO: stderr: ""
  Sep  4 15:05:24.276: INFO: stdout: "e2e-test-crd-publish-openapi-773-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/04/23 15:05:24.276
  Sep  4 15:05:24.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-8399 explain e2e-test-crd-publish-openapi-773-crds'
  Sep  4 15:05:24.361: INFO: stderr: ""
  Sep  4 15:05:24.361: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-773-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0904 15:05:24.766427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:05:25.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8399" for this suite. @ 09/04/23 15:05:25.52
• [2.880 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 09/04/23 15:05:25.524
  Sep  4 15:05:25.524: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 15:05:25.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:05:25.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:05:25.53
  STEP: fetching services @ 09/04/23 15:05:25.532
  Sep  4 15:05:25.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2437" for this suite. @ 09/04/23 15:05:25.534
• [0.012 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 09/04/23 15:05:25.536
  Sep  4 15:05:25.536: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl-logs @ 09/04/23 15:05:25.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:05:25.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:05:25.544
  STEP: creating an pod @ 09/04/23 15:05:25.545
  Sep  4 15:05:25.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-logs-7958 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Sep  4 15:05:25.588: INFO: stderr: ""
  Sep  4 15:05:25.588: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/04/23 15:05:25.588
  Sep  4 15:05:25.588: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0904 15:05:25.767374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:26.767512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:05:27.594: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/04/23 15:05:27.594
  Sep  4 15:05:27.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-logs-7958 logs logs-generator logs-generator'
  Sep  4 15:05:27.637: INFO: stderr: ""
  Sep  4 15:05:27.637: INFO: stdout: "I0904 15:05:26.148715       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/fm7 529\nI0904 15:05:26.348790       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/pzr6 312\nI0904 15:05:26.549314       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/j9p 506\nI0904 15:05:26.749591       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/6hc 249\nI0904 15:05:26.948816       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/5mk 385\nI0904 15:05:27.149095       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/n5j9 426\nI0904 15:05:27.349370       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/d6ch 386\nI0904 15:05:27.549643       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/xlh 231\n"
  STEP: limiting log lines @ 09/04/23 15:05:27.637
  Sep  4 15:05:27.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-logs-7958 logs logs-generator logs-generator --tail=1'
  Sep  4 15:05:27.679: INFO: stderr: ""
  Sep  4 15:05:27.679: INFO: stdout: "I0904 15:05:27.549643       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/xlh 231\n"
  Sep  4 15:05:27.679: INFO: got output "I0904 15:05:27.549643       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/xlh 231\n"
  STEP: limiting log bytes @ 09/04/23 15:05:27.679
  Sep  4 15:05:27.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-logs-7958 logs logs-generator logs-generator --limit-bytes=1'
  Sep  4 15:05:27.726: INFO: stderr: ""
  Sep  4 15:05:27.726: INFO: stdout: "I"
  Sep  4 15:05:27.726: INFO: got output "I"
  STEP: exposing timestamps @ 09/04/23 15:05:27.726
  Sep  4 15:05:27.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-logs-7958 logs logs-generator logs-generator --tail=1 --timestamps'
  E0904 15:05:27.767704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:05:27.770: INFO: stderr: ""
  Sep  4 15:05:27.770: INFO: stdout: "2023-09-04T23:05:27.748906111+08:00 I0904 15:05:27.748866       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/5d2b 455\n"
  Sep  4 15:05:27.770: INFO: got output "2023-09-04T23:05:27.748906111+08:00 I0904 15:05:27.748866       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/5d2b 455\n"
  STEP: restricting to a time range @ 09/04/23 15:05:27.77
  E0904 15:05:28.768254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:29.768341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:05:30.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-logs-7958 logs logs-generator logs-generator --since=1s'
  Sep  4 15:05:30.313: INFO: stderr: ""
  Sep  4 15:05:30.313: INFO: stdout: "I0904 15:05:29.349008       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/5sgm 212\nI0904 15:05:29.549283       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/w7zp 219\nI0904 15:05:29.749578       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/vb6h 468\nI0904 15:05:29.948806       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/46f 398\nI0904 15:05:30.149085       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/lv2r 581\n"
  Sep  4 15:05:30.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-logs-7958 logs logs-generator logs-generator --since=24h'
  Sep  4 15:05:30.355: INFO: stderr: ""
  Sep  4 15:05:30.355: INFO: stdout: "I0904 15:05:26.148715       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/fm7 529\nI0904 15:05:26.348790       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/pzr6 312\nI0904 15:05:26.549314       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/j9p 506\nI0904 15:05:26.749591       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/6hc 249\nI0904 15:05:26.948816       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/5mk 385\nI0904 15:05:27.149095       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/n5j9 426\nI0904 15:05:27.349370       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/d6ch 386\nI0904 15:05:27.549643       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/xlh 231\nI0904 15:05:27.748866       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/5d2b 455\nI0904 15:05:27.949146       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/hsv 333\nI0904 15:05:28.149425       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/s4w 205\nI0904 15:05:28.349705       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/629l 349\nI0904 15:05:28.548880       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/4d6g 377\nI0904 15:05:28.749168       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/9l9s 379\nI0904 15:05:28.949446       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/6dqb 587\nI0904 15:05:29.149729       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/vlfr 510\nI0904 15:05:29.349008       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/5sgm 212\nI0904 15:05:29.549283       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/w7zp 219\nI0904 15:05:29.749578       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/vb6h 468\nI0904 15:05:29.948806       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/46f 398\nI0904 15:05:30.149085       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/lv2r 581\nI0904 15:05:30.349361       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/wthh 430\n"
  Sep  4 15:05:30.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-logs-7958 delete pod logs-generator'
  E0904 15:05:30.769165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:05:31.219: INFO: stderr: ""
  Sep  4 15:05:31.219: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Sep  4 15:05:31.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7958" for this suite. @ 09/04/23 15:05:31.22
• [5.686 seconds]
------------------------------
SS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/04/23 15:05:31.222
  Sep  4 15:05:31.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename hostport @ 09/04/23 15:05:31.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:05:31.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:05:31.23
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/04/23 15:05:31.234
  E0904 15:05:31.770172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:32.771093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.254.0.9 on the node which pod1 resides and expect scheduled @ 09/04/23 15:05:33.242
  E0904 15:05:33.771161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:34.772075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.254.0.9 but use UDP protocol on the node which pod2 resides @ 09/04/23 15:05:35.249
  E0904 15:05:35.772286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:36.772423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:37.772704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:38.773712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:39.773728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:40.774451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/04/23 15:05:41.265
  Sep  4 15:05:41.265: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.254.0.9 http://127.0.0.1:54323/hostname] Namespace:hostport-2692 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:05:41.265: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:05:41.266: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:05:41.266: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-2692/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.254.0.9+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.254.0.9, port: 54323 @ 09/04/23 15:05:41.311
  Sep  4 15:05:41.311: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.254.0.9:54323/hostname] Namespace:hostport-2692 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:05:41.311: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:05:41.311: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:05:41.311: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-2692/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.254.0.9%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.254.0.9, port: 54323 UDP @ 09/04/23 15:05:41.337
  Sep  4 15:05:41.338: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.254.0.9 54323] Namespace:hostport-2692 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:05:41.338: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:05:41.338: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:05:41.338: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-2692/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.254.0.9+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0904 15:05:41.774864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:42.775059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:43.775524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:44.775615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:45.775652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:05:46.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2692" for this suite. @ 09/04/23 15:05:46.367
• [15.148 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 09/04/23 15:05:46.371
  Sep  4 15:05:46.371: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename disruption @ 09/04/23 15:05:46.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:05:46.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:05:46.378
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/04/23 15:05:46.379
  STEP: Waiting for the pdb to be processed @ 09/04/23 15:05:46.381
  E0904 15:05:46.776455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:47.776918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/04/23 15:05:48.386
  STEP: Waiting for all pods to be running @ 09/04/23 15:05:48.386
  Sep  4 15:05:48.391: INFO: pods: 0 < 3
  E0904 15:05:48.777484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:49.777536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/04/23 15:05:50.393
  STEP: Updating the pdb to allow a pod to be evicted @ 09/04/23 15:05:50.397
  STEP: Waiting for the pdb to be processed @ 09/04/23 15:05:50.4
  E0904 15:05:50.777732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:51.777795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/04/23 15:05:52.402
  STEP: Waiting for all pods to be running @ 09/04/23 15:05:52.402
  STEP: Waiting for the pdb to observed all healthy pods @ 09/04/23 15:05:52.404
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/04/23 15:05:52.413
  STEP: Waiting for the pdb to be processed @ 09/04/23 15:05:52.425
  E0904 15:05:52.778723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:53.778818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/04/23 15:05:54.428
  STEP: locating a running pod @ 09/04/23 15:05:54.43
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/04/23 15:05:54.433
  STEP: Waiting for the pdb to be deleted @ 09/04/23 15:05:54.435
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/04/23 15:05:54.436
  STEP: Waiting for all pods to be running @ 09/04/23 15:05:54.436
  Sep  4 15:05:54.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-520" for this suite. @ 09/04/23 15:05:54.446
• [8.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 09/04/23 15:05:54.45
  Sep  4 15:05:54.450: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 15:05:54.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:05:54.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:05:54.462
  STEP: Counting existing ResourceQuota @ 09/04/23 15:05:54.464
  E0904 15:05:54.779534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:55.780065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:56.781081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:57.782095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:05:58.782156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/23 15:05:59.465
  STEP: Ensuring resource quota status is calculated @ 09/04/23 15:05:59.468
  E0904 15:05:59.782191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:00.782320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/04/23 15:06:01.47
  STEP: Creating a NodePort Service @ 09/04/23 15:06:01.478
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/04/23 15:06:01.488
  STEP: Ensuring resource quota status captures service creation @ 09/04/23 15:06:01.496
  E0904 15:06:01.783390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:02.783427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/04/23 15:06:03.498
  STEP: Ensuring resource quota status released usage @ 09/04/23 15:06:03.515
  E0904 15:06:03.783917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:04.784072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:06:05.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3330" for this suite. @ 09/04/23 15:06:05.519
• [11.072 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 09/04/23 15:06:05.522
  Sep  4 15:06:05.522: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 15:06:05.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:06:05.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:06:05.53
  STEP: Setting up server cert @ 09/04/23 15:06:05.539
  E0904 15:06:05.784464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 15:06:05.824
  STEP: Deploying the webhook pod @ 09/04/23 15:06:05.829
  STEP: Wait for the deployment to be ready @ 09/04/23 15:06:05.833
  Sep  4 15:06:05.835: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0904 15:06:06.785093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:07.786002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 15:06:07.84
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 15:06:07.844
  E0904 15:06:08.786230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:06:08.845: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/04/23 15:06:08.848
  STEP: create a namespace for the webhook @ 09/04/23 15:06:08.856
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/04/23 15:06:08.863
  Sep  4 15:06:08.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-782" for this suite. @ 09/04/23 15:06:08.892
  STEP: Destroying namespace "webhook-markers-2618" for this suite. @ 09/04/23 15:06:08.895
  STEP: Destroying namespace "fail-closed-namespace-4371" for this suite. @ 09/04/23 15:06:08.899
• [3.379 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/04/23 15:06:08.901
  Sep  4 15:06:08.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 15:06:08.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:06:08.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:06:08.911
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 15:06:08.912
  E0904 15:06:09.786308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:10.786519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:06:10.92
  Sep  4 15:06:10.921: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-da43da5b-5f98-44c4-b3a0-7e81318625eb container client-container: <nil>
  STEP: delete the pod @ 09/04/23 15:06:10.925
  Sep  4 15:06:10.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7162" for this suite. @ 09/04/23 15:06:10.932
• [2.033 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/04/23 15:06:10.935
  Sep  4 15:06:10.935: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 15:06:10.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:06:10.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:06:10.941
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 15:06:10.942
  E0904 15:06:11.787138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:12.787682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:06:12.948
  Sep  4 15:06:12.949: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-4bf0985c-bfbd-4822-93b3-f16b457aa7a1 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 15:06:12.952
  Sep  4 15:06:12.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-55" for this suite. @ 09/04/23 15:06:12.959
• [2.026 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 09/04/23 15:06:12.961
  Sep  4 15:06:12.961: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/23 15:06:12.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:06:12.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:06:12.969
  Sep  4 15:06:12.976: INFO: Waiting up to 1m0s for all nodes to be ready
  E0904 15:06:13.788631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:14.788803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:15.789078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:16.789137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:17.789479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:18.789626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:19.789694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:20.789779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:21.790088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:22.790174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:23.790451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:24.790536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:25.790893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:26.791021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:27.791563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:28.791641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:29.792392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:30.792413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:31.793475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:32.794165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:33.794251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:34.794514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:35.794592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:36.794711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:37.794863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:38.794989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:39.795031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:40.795806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:41.795988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:42.796220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:43.796420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:44.797471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:45.797560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:46.798431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:47.798596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:48.798696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:49.798867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:50.799403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:51.799794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:52.799960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:53.800169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:54.800293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:55.800733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:56.801457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:57.801632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:58.802389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:06:59.802499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:00.803191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:01.803311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:02.803462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:03.803905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:04.804024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:05.804416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:06.805476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:07.805921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:08.806040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:09.806532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:10.806620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:11.806871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:12.807025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:07:12.986: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/04/23 15:07:12.987
  Sep  4 15:07:12.987: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/04/23 15:07:12.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:07:12.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:07:12.994
  Sep  4 15:07:13.001: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Sep  4 15:07:13.002: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Sep  4 15:07:13.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 15:07:13.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7523" for this suite. @ 09/04/23 15:07:13.036
  STEP: Destroying namespace "sched-preemption-4676" for this suite. @ 09/04/23 15:07:13.039
• [60.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 09/04/23 15:07:13.042
  Sep  4 15:07:13.042: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename discovery @ 09/04/23 15:07:13.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:07:13.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:07:13.049
  STEP: Setting up server cert @ 09/04/23 15:07:13.051
  Sep  4 15:07:13.171: INFO: Checking APIGroup: apiregistration.k8s.io
  Sep  4 15:07:13.171: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Sep  4 15:07:13.172: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Sep  4 15:07:13.172: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Sep  4 15:07:13.172: INFO: Checking APIGroup: apps
  Sep  4 15:07:13.172: INFO: PreferredVersion.GroupVersion: apps/v1
  Sep  4 15:07:13.172: INFO: Versions found [{apps/v1 v1}]
  Sep  4 15:07:13.172: INFO: apps/v1 matches apps/v1
  Sep  4 15:07:13.172: INFO: Checking APIGroup: events.k8s.io
  Sep  4 15:07:13.172: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Sep  4 15:07:13.172: INFO: Versions found [{events.k8s.io/v1 v1}]
  Sep  4 15:07:13.172: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Sep  4 15:07:13.172: INFO: Checking APIGroup: authentication.k8s.io
  Sep  4 15:07:13.173: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Sep  4 15:07:13.173: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Sep  4 15:07:13.173: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Sep  4 15:07:13.173: INFO: Checking APIGroup: authorization.k8s.io
  Sep  4 15:07:13.173: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Sep  4 15:07:13.173: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Sep  4 15:07:13.173: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Sep  4 15:07:13.173: INFO: Checking APIGroup: autoscaling
  Sep  4 15:07:13.173: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Sep  4 15:07:13.173: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Sep  4 15:07:13.174: INFO: autoscaling/v2 matches autoscaling/v2
  Sep  4 15:07:13.174: INFO: Checking APIGroup: batch
  Sep  4 15:07:13.174: INFO: PreferredVersion.GroupVersion: batch/v1
  Sep  4 15:07:13.174: INFO: Versions found [{batch/v1 v1}]
  Sep  4 15:07:13.174: INFO: batch/v1 matches batch/v1
  Sep  4 15:07:13.174: INFO: Checking APIGroup: certificates.k8s.io
  Sep  4 15:07:13.174: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Sep  4 15:07:13.174: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Sep  4 15:07:13.174: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Sep  4 15:07:13.174: INFO: Checking APIGroup: networking.k8s.io
  Sep  4 15:07:13.175: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Sep  4 15:07:13.175: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Sep  4 15:07:13.175: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Sep  4 15:07:13.175: INFO: Checking APIGroup: policy
  Sep  4 15:07:13.175: INFO: PreferredVersion.GroupVersion: policy/v1
  Sep  4 15:07:13.175: INFO: Versions found [{policy/v1 v1}]
  Sep  4 15:07:13.175: INFO: policy/v1 matches policy/v1
  Sep  4 15:07:13.175: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Sep  4 15:07:13.175: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Sep  4 15:07:13.175: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Sep  4 15:07:13.175: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Sep  4 15:07:13.175: INFO: Checking APIGroup: storage.k8s.io
  Sep  4 15:07:13.176: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Sep  4 15:07:13.176: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Sep  4 15:07:13.176: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Sep  4 15:07:13.176: INFO: Checking APIGroup: admissionregistration.k8s.io
  Sep  4 15:07:13.176: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Sep  4 15:07:13.176: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Sep  4 15:07:13.176: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Sep  4 15:07:13.176: INFO: Checking APIGroup: apiextensions.k8s.io
  Sep  4 15:07:13.176: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Sep  4 15:07:13.176: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Sep  4 15:07:13.176: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Sep  4 15:07:13.176: INFO: Checking APIGroup: scheduling.k8s.io
  Sep  4 15:07:13.177: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Sep  4 15:07:13.177: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Sep  4 15:07:13.177: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Sep  4 15:07:13.177: INFO: Checking APIGroup: coordination.k8s.io
  Sep  4 15:07:13.177: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Sep  4 15:07:13.177: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Sep  4 15:07:13.177: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Sep  4 15:07:13.177: INFO: Checking APIGroup: node.k8s.io
  Sep  4 15:07:13.178: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Sep  4 15:07:13.178: INFO: Versions found [{node.k8s.io/v1 v1}]
  Sep  4 15:07:13.178: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Sep  4 15:07:13.178: INFO: Checking APIGroup: discovery.k8s.io
  Sep  4 15:07:13.178: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Sep  4 15:07:13.178: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Sep  4 15:07:13.178: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Sep  4 15:07:13.178: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Sep  4 15:07:13.178: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Sep  4 15:07:13.178: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Sep  4 15:07:13.178: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Sep  4 15:07:13.178: INFO: Checking APIGroup: metrics.k8s.io
  Sep  4 15:07:13.181: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Sep  4 15:07:13.181: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Sep  4 15:07:13.181: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Sep  4 15:07:13.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5652" for this suite. @ 09/04/23 15:07:13.182
• [0.142 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 09/04/23 15:07:13.184
  Sep  4 15:07:13.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 15:07:13.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:07:13.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:07:13.192
  STEP: Starting the proxy @ 09/04/23 15:07:13.194
  Sep  4 15:07:13.194: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-7559 proxy --unix-socket=/tmp/kubectl-proxy-unix2010022189/test'
  STEP: retrieving proxy /api/ output @ 09/04/23 15:07:13.224
  Sep  4 15:07:13.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7559" for this suite. @ 09/04/23 15:07:13.226
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 09/04/23 15:07:13.228
  Sep  4 15:07:13.228: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename podtemplate @ 09/04/23 15:07:13.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:07:13.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:07:13.236
  STEP: Create a pod template @ 09/04/23 15:07:13.237
  STEP: Replace a pod template @ 09/04/23 15:07:13.239
  Sep  4 15:07:13.242: INFO: Found updated podtemplate annotation: "true"

  Sep  4 15:07:13.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6835" for this suite. @ 09/04/23 15:07:13.243
• [0.017 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 09/04/23 15:07:13.246
  Sep  4 15:07:13.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename job @ 09/04/23 15:07:13.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:07:13.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:07:13.254
  STEP: Creating a job @ 09/04/23 15:07:13.257
  STEP: Ensuring active pods == parallelism @ 09/04/23 15:07:13.259
  E0904 15:07:13.807968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:14.808182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/04/23 15:07:15.261
  Sep  4 15:07:15.768: INFO: Successfully updated pod "adopt-release-77svq"
  STEP: Checking that the Job readopts the Pod @ 09/04/23 15:07:15.768
  E0904 15:07:15.808407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:16.809486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/04/23 15:07:17.772
  E0904 15:07:17.809527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:07:18.278: INFO: Successfully updated pod "adopt-release-77svq"
  STEP: Checking that the Job releases the Pod @ 09/04/23 15:07:18.278
  E0904 15:07:18.809549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:19.810272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:07:20.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3283" for this suite. @ 09/04/23 15:07:20.284
• [7.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/04/23 15:07:20.287
  Sep  4 15:07:20.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename init-container @ 09/04/23 15:07:20.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:07:20.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:07:20.295
  STEP: creating the pod @ 09/04/23 15:07:20.296
  Sep  4 15:07:20.296: INFO: PodSpec: initContainers in spec.initContainers
  E0904 15:07:20.810298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:21.810810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:22.811463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:07:23.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8939" for this suite. @ 09/04/23 15:07:23.377
• [3.093 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/04/23 15:07:23.38
  Sep  4 15:07:23.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename cronjob @ 09/04/23 15:07:23.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:07:23.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:07:23.388
  STEP: Creating a cronjob @ 09/04/23 15:07:23.389
  STEP: Ensuring more than one job is running at a time @ 09/04/23 15:07:23.392
  E0904 15:07:23.811710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:24.812717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:25.812902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:26.812983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:27.813472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:28.813610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:29.814456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:30.814973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:31.815289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:32.815969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:33.816799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:34.816874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:35.817488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:36.817648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:37.818593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:38.819662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:39.820435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:40.821484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:41.822464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:42.822645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:43.823527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:44.823666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:45.824715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:46.825599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:47.826668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:48.826798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:49.827405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:50.827491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:51.828159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:52.828386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:53.828985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:54.829081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:55.829470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:56.829609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:57.830463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:58.830626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:07:59.831352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:00.831483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:01.832391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:02.832434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:03.833217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:04.833484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:05.834049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:06.834651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:07.835152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:08.835251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:09.836115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:10.836271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:11.837003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:12.837190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:13.838021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:14.838054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:15.838444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:16.838637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:17.839436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:18.839886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:19.840225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:20.840357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:21.841081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:22.841291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:23.841341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:24.841457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:25.841925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:26.842616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:27.843630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:28.843769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:29.844659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:30.845474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:31.845878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:32.846059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:33.846144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:34.846273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:35.846316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:36.846889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:37.847692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:38.847934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:39.848408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:40.849476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:41.850408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:42.850456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:43.850534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:44.850658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:45.851237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:46.851365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:47.852204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:48.852347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:49.852995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:50.853475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:51.853908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:52.854068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:53.854222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:54.854345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:55.854687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:56.854806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:57.855577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:58.855699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:08:59.856179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:00.856305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/04/23 15:09:01.394
  STEP: Removing cronjob @ 09/04/23 15:09:01.395
  Sep  4 15:09:01.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5365" for this suite. @ 09/04/23 15:09:01.399
• [98.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/04/23 15:09:01.401
  Sep  4 15:09:01.401: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 15:09:01.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:09:01.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:09:01.411
  Sep  4 15:09:01.414: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: creating the pod @ 09/04/23 15:09:01.414
  STEP: submitting the pod to kubernetes @ 09/04/23 15:09:01.414
  E0904 15:09:01.856434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:02.856435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:09:03.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6262" for this suite. @ 09/04/23 15:09:03.436
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 09/04/23 15:09:03.439
  Sep  4 15:09:03.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 15:09:03.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:09:03.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:09:03.446
  STEP: creating a collection of services @ 09/04/23 15:09:03.448
  Sep  4 15:09:03.448: INFO: Creating e2e-svc-a-tffhk
  Sep  4 15:09:03.451: INFO: Creating e2e-svc-b-5t8ml
  Sep  4 15:09:03.456: INFO: Creating e2e-svc-c-65mpd
  STEP: deleting service collection @ 09/04/23 15:09:03.462
  Sep  4 15:09:03.475: INFO: Collection of services has been deleted
  Sep  4 15:09:03.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7215" for this suite. @ 09/04/23 15:09:03.477
• [0.041 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/04/23 15:09:03.48
  Sep  4 15:09:03.480: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename cronjob @ 09/04/23 15:09:03.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:09:03.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:09:03.489
  STEP: Creating a suspended cronjob @ 09/04/23 15:09:03.491
  STEP: Ensuring no jobs are scheduled @ 09/04/23 15:09:03.493
  E0904 15:09:03.857491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:04.858523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:05.859050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:06.859418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:07.860367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:08.860423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:09.861229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:10.862290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:11.862859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:12.863592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:13.864582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:14.864664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:15.865396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:16.865607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:17.866475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:18.866542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:19.867073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:20.867634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:21.868007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:22.868082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:23.868413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:24.869484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:25.870490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:26.871362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:27.872222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:28.873079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:29.873492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:30.873771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:31.874059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:32.874282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:33.875180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:34.875331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:35.876361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:36.876429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:37.877223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:38.878117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:39.878163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:40.878302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:41.879027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:42.879211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:43.879526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:44.879842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:45.880160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:46.880875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:47.881475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:48.881610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:49.881676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:50.882543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:51.882897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:52.883041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:53.883363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:54.883516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:55.884150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:56.884406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:57.885052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:58.885480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:09:59.885769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:00.885911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:01.886477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:02.886668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:03.886905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:04.887699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:05.888590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:06.888649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:07.889497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:08.889577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:09.889777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:10.890460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:11.891256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:12.892229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:13.892435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:14.892512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:15.893509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:16.893733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:17.894629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:18.894658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:19.895456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:20.895664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:21.896336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:22.896372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:23.897258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:24.897341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:25.898348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:26.898468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:27.899525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:28.899602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:29.900268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:30.900400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:31.901088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:32.901174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:33.901501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:34.901578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:35.902155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:36.902279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:37.902769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:38.902892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:39.903433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:40.903516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:41.904296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:42.904405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:43.905477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:44.905592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:45.906422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:46.906523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:47.907270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:48.907396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:49.907806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:50.908009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:51.908086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:52.908347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:53.909284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:54.909354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:55.910349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:56.910432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:57.911385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:58.911654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:10:59.912591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:00.912683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:01.913473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:02.913623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:03.914237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:04.914355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:05.914892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:06.914989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:07.915261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:08.915381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:09.916108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:10.916233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:11.916867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:12.917027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:13.917475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:14.918314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:15.919186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:16.919269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:17.920107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:18.920245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:19.920405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:20.921475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:21.922324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:22.922499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:23.923283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:24.923370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:25.924201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:26.924519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:27.925238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:28.925327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:29.925517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:30.925606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:31.926298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:32.926462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:33.927355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:34.927459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:35.928330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:36.928421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:37.929482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:38.929607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:39.930250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:40.930660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:41.931477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:42.931528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:43.932407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:44.932746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:45.933474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:46.933554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:47.934509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:48.934590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:49.934665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:50.934744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:51.935465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:52.936194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:53.936413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:54.936522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:55.936584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:56.937467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:57.938468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:58.939525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:11:59.940077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:00.940196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:01.940411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:02.941479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:03.942432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:04.942562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:05.943419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:06.943546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:07.944514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:08.945478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:09.946141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:10.946232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:11.947232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:12.947386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:13.948174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:14.948200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:15.948423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:16.948500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:17.949339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:18.949469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:19.950328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:20.950444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:21.950707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:22.950933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:23.951263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:24.951639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:25.952400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:26.952425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:27.953478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:28.953561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:29.954395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:30.954780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:31.955335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:32.955555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:33.956153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:34.956276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:35.956415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:36.957471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:37.958405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:38.958497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:39.958967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:40.959064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:41.959391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:42.959550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:43.960381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:44.960429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:45.961316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:46.961754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:47.962246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:48.962366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:49.962381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:50.962511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:51.963087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:52.963099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:53.963179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:54.963302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:55.963879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:56.964497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:57.965477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:58.965600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:12:59.966396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:00.966856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:01.967048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:02.967275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:03.968247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:04.968392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:05.968793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:06.969476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:07.970490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:08.970543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:09.971260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:10.971381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:11.971955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:12.972864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:13.973484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:14.973610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:15.974386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:16.974512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:17.975008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:18.975101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:19.975588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:20.976640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:21.976731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:22.976910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:23.977470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:24.977552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:25.978362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:26.978483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:27.978522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:28.979163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:29.979632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:30.979958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:31.980704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:32.980860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:33.980926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:34.981590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:35.982470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:36.982554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:37.983004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:38.983125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:39.983709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:40.983838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:41.984274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:42.984405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:43.985475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:44.985598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:45.986137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:46.986260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:47.987111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:48.987584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:49.988243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:50.988299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:51.989078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:52.989288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:53.990131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:54.990210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:55.991113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:56.991200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:57.991774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:58.992231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:13:59.992409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:00.992419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:01.993401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:02.994401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/04/23 15:14:03.496
  STEP: Removing cronjob @ 09/04/23 15:14:03.497
  Sep  4 15:14:03.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2786" for this suite. @ 09/04/23 15:14:03.501
• [300.023 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 09/04/23 15:14:03.503
  Sep  4 15:14:03.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 15:14:03.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:14:03.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:14:03.51
  STEP: creating Agnhost RC @ 09/04/23 15:14:03.512
  Sep  4 15:14:03.512: INFO: namespace kubectl-8352
  Sep  4 15:14:03.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8352 create -f -'
  Sep  4 15:14:03.791: INFO: stderr: ""
  Sep  4 15:14:03.791: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/23 15:14:03.791
  E0904 15:14:03.994636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:04.794: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  4 15:14:04.794: INFO: Found 0 / 1
  E0904 15:14:04.995603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:05.793: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  4 15:14:05.793: INFO: Found 1 / 1
  Sep  4 15:14:05.793: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep  4 15:14:05.794: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep  4 15:14:05.794: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep  4 15:14:05.794: INFO: wait on agnhost-primary startup in kubectl-8352 
  Sep  4 15:14:05.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8352 logs agnhost-primary-lvrk5 agnhost-primary'
  Sep  4 15:14:05.852: INFO: stderr: ""
  Sep  4 15:14:05.852: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 09/04/23 15:14:05.852
  Sep  4 15:14:05.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8352 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Sep  4 15:14:05.897: INFO: stderr: ""
  Sep  4 15:14:05.897: INFO: stdout: "service/rm2 exposed\n"
  Sep  4 15:14:05.898: INFO: Service rm2 in namespace kubectl-8352 found.
  E0904 15:14:05.996152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:06.996245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 09/04/23 15:14:07.901
  Sep  4 15:14:07.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8352 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Sep  4 15:14:07.946: INFO: stderr: ""
  Sep  4 15:14:07.946: INFO: stdout: "service/rm3 exposed\n"
  Sep  4 15:14:07.948: INFO: Service rm3 in namespace kubectl-8352 found.
  E0904 15:14:07.997291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:08.997425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:09.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8352" for this suite. @ 09/04/23 15:14:09.952
• [6.451 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/04/23 15:14:09.954
  Sep  4 15:14:09.954: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-runtime @ 09/04/23 15:14:09.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:14:09.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:14:09.963
  STEP: create the container @ 09/04/23 15:14:09.964
  W0904 15:14:09.967855      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/04/23 15:14:09.967
  E0904 15:14:09.998070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:10.998272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:11.998973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/04/23 15:14:12.974
  STEP: the container should be terminated @ 09/04/23 15:14:12.975
  STEP: the termination message should be set @ 09/04/23 15:14:12.975
  Sep  4 15:14:12.975: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/04/23 15:14:12.975
  Sep  4 15:14:12.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6556" for this suite. @ 09/04/23 15:14:12.982
• [3.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/04/23 15:14:12.986
  Sep  4 15:14:12.986: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-probe @ 09/04/23 15:14:12.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:14:12.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:14:12.992
  STEP: Creating pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820 @ 09/04/23 15:14:12.993
  E0904 15:14:12.999898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:14.000869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/23 15:14:15
  E0904 15:14:15.001166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:15.001: INFO: Initial restart count of pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 is 0
  Sep  4 15:14:15.003: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:16.001473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:17.001459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:17.005: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:18.002395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:19.002414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:19.008: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:20.003385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:21.003473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:21.010: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:22.004309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:23.004416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:23.012: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:24.004698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:25.005472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:25.014: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:26.006059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:27.006191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:27.017: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:28.006426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:29.006547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:29.019: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:30.006663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:31.006805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:31.021: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:32.007616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:33.008538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:33.024: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:34.008919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:35.009831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:35.026: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  Sep  4 15:14:35.026: INFO: Restart count of pod container-probe-6820/liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 is now 1 (20.024497648s elapsed)
  E0904 15:14:36.009911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:37.009997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:37.029: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:38.010052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:39.010150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:39.031: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:40.011098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:41.011229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:41.033: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:42.012023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:43.012055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:43.034: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:44.012422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:45.013485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:45.037: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:46.014276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:47.014348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:47.039: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:48.015140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:49.015374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:49.041: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:50.016294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:51.016428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:51.043: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:52.017490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:53.017522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:53.045: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:54.018371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:55.019409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:55.047: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  Sep  4 15:14:55.047: INFO: Restart count of pod container-probe-6820/liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 is now 2 (40.045398002s elapsed)
  E0904 15:14:56.019628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:57.019770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:57.050: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:14:58.019834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:14:59.019908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:14:59.052: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:00.020422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:01.021487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:01.055: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:02.022059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:03.022285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:03.057: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:04.022950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:05.023037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:05.059: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:06.023428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:07.023565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:07.061: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:08.024094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:09.024179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:09.063: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:10.024430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:11.024509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:11.066: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:12.024592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:13.025490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:13.068: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:14.026524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:15.026663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:15.070: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  Sep  4 15:15:15.070: INFO: Restart count of pod container-probe-6820/liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 is now 3 (1m0.068670995s elapsed)
  E0904 15:15:16.027593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:17.027725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:17.072: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:18.027859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:19.027941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:19.074: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:20.028431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:21.029491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:21.077: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:22.030294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:23.030544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:23.079: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:24.030785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:25.030907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:25.081: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:26.030988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:27.031586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:27.084: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:28.032055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:29.032142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:29.087: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:30.032437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:31.033473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:31.089: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:32.034266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:33.035172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:33.091: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:34.035370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:35.035495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:35.094: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  Sep  4 15:15:35.094: INFO: Restart count of pod container-probe-6820/liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 is now 4 (1m20.09250229s elapsed)
  E0904 15:15:36.035981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:37.036119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:37.096: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:38.036707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:39.036776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:39.099: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:40.037515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:41.038105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:41.101: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:42.038700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:43.039734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:43.104: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:44.040432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:45.041491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:45.106: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:46.041636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:47.041782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:47.108: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:48.042751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:49.042883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:49.110: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:50.042973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:51.043110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:51.112: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:52.043904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:53.044615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:53.115: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:54.045492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:55.045626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:55.117: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:56.046470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:57.046556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:57.119: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:15:58.046596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:15:59.046680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:15:59.121: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:00.046918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:01.047008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:01.123: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:02.047866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:03.048208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:03.126: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:04.048649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:05.049476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:05.128: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:06.050200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:07.050329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:07.130: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:08.050579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:09.050714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:09.132: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:10.051462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:11.051598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:11.134: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:12.052284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:13.052413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:13.136: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:14.053462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:15.053596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:15.138: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:16.053841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:17.053817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:17.140: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:18.053881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:19.054186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:19.143: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:20.054574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:21.055497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:21.145: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:22.055949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:23.056058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:23.148: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:24.056416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:25.057473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:25.150: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:26.057960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:27.058089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:27.153: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:28.058109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:29.058238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:29.155: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:30.058403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:31.058486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:31.157: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:32.059122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:33.059328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:33.158: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:34.059411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:35.059538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:35.161: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  E0904 15:16:36.060243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:37.060380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:37.163: INFO: Get pod liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 in namespace container-probe-6820
  Sep  4 15:16:37.163: INFO: Restart count of pod container-probe-6820/liveness-39efbf44-c000-4ed3-bb48-6494e78d4889 is now 5 (2m22.161627335s elapsed)
  Sep  4 15:16:37.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 15:16:37.164
  STEP: Destroying namespace "container-probe-6820" for this suite. @ 09/04/23 15:16:37.17
• [144.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 09/04/23 15:16:37.172
  Sep  4 15:16:37.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename dns @ 09/04/23 15:16:37.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:16:37.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:16:37.18
  STEP: Creating a test headless service @ 09/04/23 15:16:37.182
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7757.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7757.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local;sleep 1; done
   @ 09/04/23 15:16:37.184
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7757.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7757.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local;sleep 1; done
   @ 09/04/23 15:16:37.184
  STEP: creating a pod to probe DNS @ 09/04/23 15:16:37.184
  STEP: submitting the pod to kubernetes @ 09/04/23 15:16:37.185
  E0904 15:16:38.060938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:39.061005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/23 15:16:39.193
  STEP: looking for the results for each expected name from probers @ 09/04/23 15:16:39.195
  Sep  4 15:16:39.203: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:39.213: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:39.215: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:39.223: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:39.224: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:39.234: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:39.244: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:39.245: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:39.245: INFO: Lookups using dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local]

  Sep  4 15:16:39.255: INFO: Pod client logs for webserver: 
  Sep  4 15:16:39.265: INFO: Pod client logs for querier: 
  Sep  4 15:16:39.275: INFO: Pod client logs for jessie-querier: 
  E0904 15:16:40.061712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:41.062197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:42.062809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:43.062965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:44.063099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:44.278: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:44.288: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:44.289: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:44.299: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:44.309: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:44.310: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:44.320: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:44.330: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:44.330: INFO: Lookups using dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local]

  Sep  4 15:16:44.340: INFO: Pod client logs for webserver: 
  Sep  4 15:16:44.350: INFO: Pod client logs for querier: 
  Sep  4 15:16:44.360: INFO: Pod client logs for jessie-querier: 
  E0904 15:16:45.063552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:46.063687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:47.063820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:48.064031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:49.064082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:49.278: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:49.288: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:49.298: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:49.308: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:49.318: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:49.328: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:49.338: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:49.348: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:49.348: INFO: Lookups using dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local]

  Sep  4 15:16:49.358: INFO: Pod client logs for webserver: 
  Sep  4 15:16:49.368: INFO: Pod client logs for querier: 
  Sep  4 15:16:49.378: INFO: Pod client logs for jessie-querier: 
  E0904 15:16:50.064116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:51.064245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:52.064302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:53.064416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:54.065465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:54.278: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:54.288: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:54.298: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:54.308: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:54.318: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:54.328: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:54.338: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:54.348: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:54.348: INFO: Lookups using dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local]

  Sep  4 15:16:54.358: INFO: Pod client logs for webserver: 
  Sep  4 15:16:54.368: INFO: Pod client logs for querier: 
  Sep  4 15:16:54.373: INFO: Pod client logs for jessie-querier: 
  E0904 15:16:55.065545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:56.066373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:57.066459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:58.067389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:16:59.068152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:16:59.282: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:59.283: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:59.285: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:59.295: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:59.305: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:59.315: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:59.325: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:59.335: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:16:59.335: INFO: Lookups using dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local]

  Sep  4 15:16:59.345: INFO: Pod client logs for webserver: 
  Sep  4 15:16:59.355: INFO: Pod client logs for querier: 
  Sep  4 15:16:59.365: INFO: Pod client logs for jessie-querier: 
  E0904 15:17:00.068418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:01.068502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:02.069499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:03.069678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:04.070579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:17:04.278: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:17:04.288: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:17:04.298: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:17:04.300: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:17:04.310: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:17:04.320: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:17:04.330: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:17:04.340: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local from pod dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50: the server could not find the requested resource (get pods dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50)
  Sep  4 15:17:04.340: INFO: Lookups using dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7757.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7757.svc.cluster.local jessie_udp@dns-test-service-2.dns-7757.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7757.svc.cluster.local]

  Sep  4 15:17:04.350: INFO: Pod client logs for webserver: 
  Sep  4 15:17:04.360: INFO: Pod client logs for querier: 
  Sep  4 15:17:04.370: INFO: Pod client logs for jessie-querier: 
  E0904 15:17:05.071504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:06.072191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:07.072532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:08.073481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:09.074041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:17:09.311: INFO: DNS probes using dns-7757/dns-test-f3efad09-d64f-4016-8bd5-caa9aed32e50 succeeded

  Sep  4 15:17:09.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 15:17:09.313
  STEP: deleting the test headless service @ 09/04/23 15:17:09.321
  STEP: Destroying namespace "dns-7757" for this suite. @ 09/04/23 15:17:09.333
• [32.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 09/04/23 15:17:09.337
  Sep  4 15:17:09.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/04/23 15:17:09.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:17:09.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:17:09.348
  Sep  4 15:17:09.349: INFO: Waiting up to 1m0s for all nodes to be ready
  E0904 15:17:10.074672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:11.074874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:12.074990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:13.075299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:14.075601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:15.076211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:16.076428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:17.077476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:18.077968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:19.078104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:20.079005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:21.080015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:22.080424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:23.081276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:24.081368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:25.081503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:26.081883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:27.082738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:28.083154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:29.083800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:30.084248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:31.084403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:32.084412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:33.085485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:34.085897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:35.086910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:36.087000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:37.087123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:38.087587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:39.087658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:40.087739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:41.087894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:42.088704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:43.089651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:44.089952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:45.090040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:46.090498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:47.090618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:48.090929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:49.091058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:50.091392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:51.091467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:52.091554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:53.091710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:54.092115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:55.092251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:56.092430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:57.093471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:58.093857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:17:59.093950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:00.094407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:01.094541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:02.095134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:03.095264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:04.095407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:05.095536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:06.096032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:07.096120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:08.096426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:09.097467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:18:09.358: INFO: Waiting for terminating namespaces to be deleted...
  Sep  4 15:18:09.359: INFO: Starting informer...
  STEP: Starting pods... @ 09/04/23 15:18:09.359
  Sep  4 15:18:09.568: INFO: Pod1 is running on control-panel-01. Tainting Node
  E0904 15:18:10.097724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:11.097763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:18:11.777: INFO: Pod2 is running on control-panel-01. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/04/23 15:18:11.777
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/23 15:18:11.783
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/04/23 15:18:11.785
  E0904 15:18:12.097954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:13.098211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:14.098418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:15.098501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:16.098688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:17.099370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:18:17.528: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0904 15:18:18.100313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:19.100415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:20.101478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:21.101553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:22.101875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:23.102030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:24.102112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:25.102938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:26.103057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:27.103177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:28.104240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:29.104326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:30.104405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:31.104498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:32.105477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:33.105645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:34.106208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:35.106336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:36.106455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:37.107463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:18:37.554: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Sep  4 15:18:37.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/23 15:18:37.562
  STEP: Destroying namespace "taint-multiple-pods-9353" for this suite. @ 09/04/23 15:18:37.563
• [88.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 09/04/23 15:18:37.566
  Sep  4 15:18:37.566: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename statefulset @ 09/04/23 15:18:37.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:18:37.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:18:37.573
  STEP: Creating service test in namespace statefulset-6387 @ 09/04/23 15:18:37.575
  STEP: Creating a new StatefulSet @ 09/04/23 15:18:37.576
  Sep  4 15:18:37.581: INFO: Found 0 stateful pods, waiting for 3
  E0904 15:18:38.107675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:39.108327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:40.108479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:41.108575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:42.108664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:43.109472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:44.109549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:45.110352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:46.110491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:47.111106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:18:47.583: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 15:18:47.583: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 15:18:47.583: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 15:18:47.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6387 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  4 15:18:47.671: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  4 15:18:47.671: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  4 15:18:47.671: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0904 15:18:48.111991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:49.112288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:50.112425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:51.113482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:52.113567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:53.113712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:54.113814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:55.113838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:56.114704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:57.114834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/04/23 15:18:57.677
  Sep  4 15:18:57.692: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/04/23 15:18:57.692
  E0904 15:18:58.115585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:18:59.116591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:00.116678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:01.117695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:02.117831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:03.117856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:04.118355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:05.118437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:06.118566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:07.118697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/04/23 15:19:07.698
  Sep  4 15:19:07.700: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6387 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  4 15:19:07.786: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  4 15:19:07.786: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  4 15:19:07.786: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0904 15:19:08.118781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:09.118868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:10.119847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:11.119913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:12.120107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:13.121070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:14.121155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:15.121491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:16.121618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:17.121696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:18.121782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:19.121908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:20.122005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:21.122748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:22.122835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:23.123776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:24.123900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:25.123976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:26.124344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:27.124414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/04/23 15:19:27.794
  Sep  4 15:19:27.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6387 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  4 15:19:27.884: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  4 15:19:27.884: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  4 15:19:27.884: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0904 15:19:28.125083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:29.125148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:30.125248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:31.125990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:32.126126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:33.126198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:34.126328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:35.126461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:36.126528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:37.126618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:19:37.904: INFO: Updating stateful set ss2
  E0904 15:19:38.127622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:39.127722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:40.127859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:41.128112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:42.128250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:43.128429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:44.128544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:45.129491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:46.129616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:47.129753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/04/23 15:19:47.911
  Sep  4 15:19:47.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6387 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  4 15:19:47.997: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  4 15:19:47.997: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  4 15:19:47.997: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0904 15:19:48.130539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:49.130673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:50.130797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:51.130941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:52.131028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:53.131121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:54.131590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:55.131730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:56.131860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:57.131933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:19:58.006: INFO: Deleting all statefulset in ns statefulset-6387
  Sep  4 15:19:58.007: INFO: Scaling statefulset ss2 to 0
  E0904 15:19:58.132812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:19:59.132891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:00.133552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:01.134006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:02.134077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:03.134358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:04.135183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:05.135743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:06.135814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:07.135944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:08.018: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  4 15:20:08.019: INFO: Deleting statefulset ss2
  Sep  4 15:20:08.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6387" for this suite. @ 09/04/23 15:20:08.025
• [90.462 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 09/04/23 15:20:08.028
  Sep  4 15:20:08.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/23 15:20:08.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:20:08.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:20:08.037
  Sep  4 15:20:08.045: INFO: created pod pod-service-account-defaultsa
  Sep  4 15:20:08.045: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Sep  4 15:20:08.048: INFO: created pod pod-service-account-mountsa
  Sep  4 15:20:08.048: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Sep  4 15:20:08.053: INFO: created pod pod-service-account-nomountsa
  Sep  4 15:20:08.053: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Sep  4 15:20:08.056: INFO: created pod pod-service-account-defaultsa-mountspec
  Sep  4 15:20:08.056: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Sep  4 15:20:08.060: INFO: created pod pod-service-account-mountsa-mountspec
  Sep  4 15:20:08.060: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Sep  4 15:20:08.063: INFO: created pod pod-service-account-nomountsa-mountspec
  Sep  4 15:20:08.063: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Sep  4 15:20:08.067: INFO: created pod pod-service-account-defaultsa-nomountspec
  Sep  4 15:20:08.067: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Sep  4 15:20:08.073: INFO: created pod pod-service-account-mountsa-nomountspec
  Sep  4 15:20:08.073: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Sep  4 15:20:08.078: INFO: created pod pod-service-account-nomountsa-nomountspec
  Sep  4 15:20:08.078: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Sep  4 15:20:08.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8936" for this suite. @ 09/04/23 15:20:08.093
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/04/23 15:20:08.103
  Sep  4 15:20:08.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename deployment @ 09/04/23 15:20:08.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:20:08.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:20:08.118
  Sep  4 15:20:08.134: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0904 15:20:08.135975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:09.136576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:10.137599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:11.137773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:12.138453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:13.137: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/23 15:20:13.137
  Sep  4 15:20:13.137: INFO: Creating deployment test-cleanup-deployment
  E0904 15:20:13.138551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/04/23 15:20:13.141
  Sep  4 15:20:13.146: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4314",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f5cdb78-8310-40fd-a3a5-ffe83212bf0d",
      ResourceVersion: (string) (len=5) "27909",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829437613,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829437613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  4 15:20:13.147: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Sep  4 15:20:13.147: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Sep  4 15:20:13.148: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4314",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e19c431-6eca-4fed-9840-f3df18cbbe6d",
      ResourceVersion: (string) (len=5) "27912",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829437608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "8f5cdb78-8310-40fd-a3a5-ffe83212bf0d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829437608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829437609,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829437613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 38 66 35 63 64 62 37  |"uid\":\"8f5cdb7|
              00000040  38 2d 38 33 31 30 2d 34  30 66 64 2d 61 33 61 35  |8-8310-40fd-a3a5|
              00000050  2d 66 66 65 38 33 32 31  32 62 66 30 64 5c 22 7d  |-ffe83212bf0d\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 15:20:13.151: INFO: Pod "test-cleanup-controller-b6bkn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-b6bkn",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4314",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "613f53d1-9ab1-4559-8731-6c4100dbc7a9",
      ResourceVersion: (string) (len=5) "27837",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829437608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "3e19c431-6eca-4fed-9840-f3df18cbbe6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829437608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  33 65 31 39 63 34 33 31  |uid\":\"3e19c431|
              00000080  2d 36 65 63 61 2d 34 66  65 64 2d 39 38 34 30 2d  |-6eca-4fed-9840-|
              00000090  66 33 64 66 31 38 63 62  62 65 36 64 5c 22 7d 22  |f3df18cbbe6d\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829437609,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 32  34 39 2e 31 34 34 5c 22  |172.20.249.144\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ksnc2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ksnc2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829437608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829437609,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829437609,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829437608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.249.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.249.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829437608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829437608,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://321c17e2b0ee1a496883c235210119225127caf3c6e688202a01715e5651e90a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:20:13.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4314" for this suite. @ 09/04/23 15:20:13.157
• [5.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 09/04/23 15:20:13.165
  Sep  4 15:20:13.165: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 15:20:13.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:20:13.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:20:13.179
  STEP: Setting up server cert @ 09/04/23 15:20:13.203
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 15:20:13.395
  STEP: Deploying the webhook pod @ 09/04/23 15:20:13.402
  STEP: Wait for the deployment to be ready @ 09/04/23 15:20:13.41
  Sep  4 15:20:13.415: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 15:20:14.139166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:15.139428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 15:20:15.419
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 15:20:15.423
  E0904 15:20:16.139646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:16.423: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/04/23 15:20:16.426
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/04/23 15:20:16.435
  Sep  4 15:20:16.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:20:16.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5826" for this suite. @ 09/04/23 15:20:16.458
  STEP: Destroying namespace "webhook-markers-2761" for this suite. @ 09/04/23 15:20:16.462
• [3.300 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/04/23 15:20:16.464
  Sep  4 15:20:16.464: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/04/23 15:20:16.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:20:16.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:20:16.473
  STEP: creating a target pod @ 09/04/23 15:20:16.474
  E0904 15:20:17.140327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:18.140435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/04/23 15:20:18.484
  E0904 15:20:19.141486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:20.141620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/04/23 15:20:20.491
  Sep  4 15:20:20.491: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4021 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:20:20.491: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:20:20.491: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:20:20.491: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-4021/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep  4 15:20:20.539: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/04/23 15:20:20.548
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/04/23 15:20:20.549
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/04/23 15:20:20.554
  Sep  4 15:20:20.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4021" for this suite. @ 09/04/23 15:20:20.557
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 09/04/23 15:20:20.559
  Sep  4 15:20:20.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/23 15:20:20.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:20:20.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:20:20.567
  E0904 15:20:21.142219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:22.142353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:22.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7970" for this suite. @ 09/04/23 15:20:22.579
• [2.022 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 09/04/23 15:20:22.581
  Sep  4 15:20:22.581: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 15:20:22.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:20:22.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:20:22.588
  STEP: validating cluster-info @ 09/04/23 15:20:22.589
  Sep  4 15:20:22.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-1340 cluster-info'
  Sep  4 15:20:22.633: INFO: stderr: ""
  Sep  4 15:20:22.633: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.68.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Sep  4 15:20:22.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1340" for this suite. @ 09/04/23 15:20:22.636
• [0.057 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 09/04/23 15:20:22.639
  Sep  4 15:20:22.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 15:20:22.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:20:22.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:20:22.646
  STEP: Creating secret with name secret-test-d6686172-efe2-4552-97c3-813ea234779d @ 09/04/23 15:20:22.648
  STEP: Creating a pod to test consume secrets @ 09/04/23 15:20:22.649
  E0904 15:20:23.143081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:24.143731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:25.144345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:26.144432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:20:26.658
  Sep  4 15:20:26.659: INFO: Trying to get logs from node control-panel-01 pod pod-secrets-91619d2c-11e5-4f27-b8ae-bafa2e3754a7 container secret-env-test: <nil>
  STEP: delete the pod @ 09/04/23 15:20:26.662
  Sep  4 15:20:26.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3907" for this suite. @ 09/04/23 15:20:26.669
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/04/23 15:20:26.673
  Sep  4 15:20:26.673: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:20:26.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:20:26.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:20:26.681
  STEP: Creating configMap with name projected-configmap-test-volume-d0135098-8c09-4765-97fe-f025e0cb4289 @ 09/04/23 15:20:26.682
  STEP: Creating a pod to test consume configMaps @ 09/04/23 15:20:26.684
  E0904 15:20:27.144505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:28.144706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:29.145481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:30.145608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:20:30.693
  Sep  4 15:20:30.694: INFO: Trying to get logs from node control-panel-01 pod pod-projected-configmaps-d72d1b66-b770-4ece-ac07-520367eef857 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 15:20:30.697
  Sep  4 15:20:30.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9304" for this suite. @ 09/04/23 15:20:30.705
• [4.034 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 09/04/23 15:20:30.708
  Sep  4 15:20:30.708: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/23 15:20:30.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:20:30.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:20:30.715
  STEP: Deleting RuntimeClass runtimeclass-56-delete-me @ 09/04/23 15:20:30.718
  STEP: Waiting for the RuntimeClass to disappear @ 09/04/23 15:20:30.719
  Sep  4 15:20:30.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-56" for this suite. @ 09/04/23 15:20:30.723
• [0.017 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 09/04/23 15:20:30.726
  Sep  4 15:20:30.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename statefulset @ 09/04/23 15:20:30.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:20:30.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:20:30.733
  STEP: Creating service test in namespace statefulset-6592 @ 09/04/23 15:20:30.734
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/04/23 15:20:30.737
  STEP: Creating stateful set ss in namespace statefulset-6592 @ 09/04/23 15:20:30.739
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6592 @ 09/04/23 15:20:30.741
  Sep  4 15:20:30.744: INFO: Found 0 stateful pods, waiting for 1
  E0904 15:20:31.146442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:32.146557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:33.146716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:34.147589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:35.147674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:36.147803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:37.148793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:38.149598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:39.150380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:40.150518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:40.747: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/04/23 15:20:40.747
  Sep  4 15:20:40.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6592 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  4 15:20:40.834: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  4 15:20:40.834: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  4 15:20:40.834: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  4 15:20:40.835: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0904 15:20:41.151402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:42.151491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:43.151581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:44.151718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:45.151852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:46.151995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:47.152959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:48.153476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:49.153604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:20:50.153685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:50.838: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep  4 15:20:50.838: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep  4 15:20:50.844: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999767s
  E0904 15:20:51.153770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:51.847: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997821144s
  E0904 15:20:52.154419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:52.849: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.995192486s
  E0904 15:20:53.155257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:53.852: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.99321268s
  E0904 15:20:54.156240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:54.854: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.990217607s
  E0904 15:20:55.157197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:55.856: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.988268521s
  E0904 15:20:56.157472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:56.858: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.985941223s
  E0904 15:20:57.158125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:57.861: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.983418016s
  E0904 15:20:58.158940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:58.863: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.981531022s
  E0904 15:20:59.159892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:20:59.865: INFO: Verifying statefulset ss doesn't scale past 1 for another 979.632428ms
  E0904 15:21:00.160760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6592 @ 09/04/23 15:21:00.865
  Sep  4 15:21:00.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6592 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  4 15:21:00.953: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  4 15:21:00.953: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  4 15:21:00.953: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  4 15:21:00.954: INFO: Found 1 stateful pods, waiting for 3
  E0904 15:21:01.161730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:02.162549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:03.162715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:04.162845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:05.162963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:06.164015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:07.164099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:08.164230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:09.164288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:10.164416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:10.956: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 15:21:10.957: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 15:21:10.957: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/04/23 15:21:10.957
  STEP: Scale down will halt with unhealthy stateful pod @ 09/04/23 15:21:10.957
  Sep  4 15:21:10.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6592 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  4 15:21:11.045: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  4 15:21:11.045: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  4 15:21:11.045: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  4 15:21:11.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6592 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep  4 15:21:11.130: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  4 15:21:11.130: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  4 15:21:11.130: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  4 15:21:11.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6592 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0904 15:21:11.164789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:11.227: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep  4 15:21:11.227: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep  4 15:21:11.227: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep  4 15:21:11.227: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep  4 15:21:11.228: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0904 15:21:12.165701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:13.165913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:14.166049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:15.166970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:16.167882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:17.168004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:18.168404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:19.169476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:20.169555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:21.169629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:21.233: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep  4 15:21:21.233: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep  4 15:21:21.233: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep  4 15:21:21.237: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999821s
  E0904 15:21:22.170137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:22.240: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.998162118s
  E0904 15:21:23.170221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:23.242: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.996129128s
  E0904 15:21:24.171174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:24.244: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.994175721s
  E0904 15:21:25.171457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:25.246: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.991835374s
  E0904 15:21:26.171983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:26.248: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.989310292s
  E0904 15:21:27.172849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:27.251: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.986433812s
  E0904 15:21:28.173417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:28.254: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.983868506s
  E0904 15:21:29.173468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:29.256: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.981818693s
  E0904 15:21:30.173565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:30.258: INFO: Verifying statefulset ss doesn't scale past 3 for another 979.768952ms
  E0904 15:21:31.173599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6592 @ 09/04/23 15:21:31.258
  Sep  4 15:21:31.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6592 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  4 15:21:31.340: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  4 15:21:31.340: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  4 15:21:31.340: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  4 15:21:31.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6592 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  4 15:21:31.429: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  4 15:21:31.429: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  4 15:21:31.429: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  4 15:21:31.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=statefulset-6592 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep  4 15:21:31.530: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep  4 15:21:31.530: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep  4 15:21:31.530: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep  4 15:21:31.530: INFO: Scaling statefulset ss to 0
  E0904 15:21:32.173639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:33.173658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:34.174699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:35.174785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:36.174928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:37.175060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:38.175341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:39.175484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:40.175559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:41.175728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/04/23 15:21:41.536
  Sep  4 15:21:41.536: INFO: Deleting all statefulset in ns statefulset-6592
  Sep  4 15:21:41.538: INFO: Scaling statefulset ss to 0
  Sep  4 15:21:41.550: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  4 15:21:41.551: INFO: Deleting statefulset ss
  Sep  4 15:21:41.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6592" for this suite. @ 09/04/23 15:21:41.556
• [70.833 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/04/23 15:21:41.559
  Sep  4 15:21:41.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename var-expansion @ 09/04/23 15:21:41.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:21:41.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:21:41.567
  E0904 15:21:42.176758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:43.177472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:43.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 15:21:43.579: INFO: Deleting pod "var-expansion-6d579b68-cb33-4f18-ab56-2efb13d49886" in namespace "var-expansion-1769"
  Sep  4 15:21:43.582: INFO: Wait up to 5m0s for pod "var-expansion-6d579b68-cb33-4f18-ab56-2efb13d49886" to be fully deleted
  E0904 15:21:44.178046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:45.178161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-1769" for this suite. @ 09/04/23 15:21:45.585
• [4.028 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/04/23 15:21:45.587
  Sep  4 15:21:45.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename watch @ 09/04/23 15:21:45.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:21:45.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:21:45.594
  STEP: creating a new configmap @ 09/04/23 15:21:45.596
  STEP: modifying the configmap once @ 09/04/23 15:21:45.598
  STEP: modifying the configmap a second time @ 09/04/23 15:21:45.601
  STEP: deleting the configmap @ 09/04/23 15:21:45.603
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/04/23 15:21:45.605
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/04/23 15:21:45.606
  Sep  4 15:21:45.606: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1305  89e95ac8-46dd-4c72-a7b8-b4f28d172e99 28665 0 2023-09-04 15:21:45 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-04 15:21:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 15:21:45.606: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1305  89e95ac8-46dd-4c72-a7b8-b4f28d172e99 28666 0 2023-09-04 15:21:45 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-04 15:21:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 15:21:45.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1305" for this suite. @ 09/04/23 15:21:45.607
• [0.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 09/04/23 15:21:45.61
  Sep  4 15:21:45.610: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename disruption @ 09/04/23 15:21:45.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:21:45.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:21:45.618
  STEP: Waiting for the pdb to be processed @ 09/04/23 15:21:45.621
  E0904 15:21:46.178460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:47.178537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/04/23 15:21:47.634
  Sep  4 15:21:47.638: INFO: running pods: 0 < 3
  E0904 15:21:48.179399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:49.179478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:21:49.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8915" for this suite. @ 09/04/23 15:21:49.643
• [4.035 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 09/04/23 15:21:49.646
  Sep  4 15:21:49.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 15:21:49.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:21:49.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:21:49.653
  STEP: Creating a pod to test downward api env vars @ 09/04/23 15:21:49.654
  E0904 15:21:50.180430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:51.180488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:52.181427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:53.181643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:21:53.663
  Sep  4 15:21:53.664: INFO: Trying to get logs from node control-panel-01 pod downward-api-c8da8f69-190a-44ff-8eaf-a46d0db5eb5d container dapi-container: <nil>
  STEP: delete the pod @ 09/04/23 15:21:53.667
  Sep  4 15:21:53.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2627" for this suite. @ 09/04/23 15:21:53.675
• [4.031 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 09/04/23 15:21:53.677
  Sep  4 15:21:53.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename disruption @ 09/04/23 15:21:53.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:21:53.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:21:53.685
  STEP: Waiting for the pdb to be processed @ 09/04/23 15:21:53.688
  E0904 15:21:54.182094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:55.183114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/04/23 15:21:55.692
  STEP: Waiting for all pods to be running @ 09/04/23 15:21:55.695
  Sep  4 15:21:55.696: INFO: running pods: 0 < 1
  E0904 15:21:56.183243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:57.183326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/04/23 15:21:57.698
  STEP: Waiting for the pdb to be processed @ 09/04/23 15:21:57.702
  STEP: Patching PodDisruptionBudget status @ 09/04/23 15:21:57.704
  STEP: Waiting for the pdb to be processed @ 09/04/23 15:21:57.708
  Sep  4 15:21:57.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8379" for this suite. @ 09/04/23 15:21:57.711
• [4.037 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/04/23 15:21:57.714
  Sep  4 15:21:57.714: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename var-expansion @ 09/04/23 15:21:57.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:21:57.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:21:57.723
  STEP: creating the pod with failed condition @ 09/04/23 15:21:57.724
  E0904 15:21:58.183798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:21:59.184060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:00.184675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:01.185481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:02.186308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:03.186525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:04.187202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:05.187341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:06.188237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:07.189213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:08.189891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:09.190022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:10.190877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:11.191010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:12.191149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:13.191363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:14.191811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:15.191815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:16.192089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:17.192080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:18.192721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:19.193696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:20.194471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:21.195387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:22.196045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:23.196082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:24.196815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:25.197474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:26.198323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:27.198454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:28.198603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:29.199518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:30.199915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:31.200007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:32.200747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:33.201470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:34.202175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:35.202300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:36.202881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:37.203012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:38.203698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:39.203782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:40.204198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:41.204333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:42.205247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:43.206274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:44.207109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:45.207228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:46.207937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:47.208408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:48.209086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:49.209169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:50.209904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:51.210019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:52.210933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:53.211218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:54.211866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:55.211999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:56.212523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:57.212611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:58.213219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:22:59.213470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:00.214198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:01.214403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:02.215379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:03.215459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:04.216142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:05.216234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:06.216731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:07.216817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:08.217479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:09.217558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:10.218025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:11.218150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:12.218864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:13.219032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:14.219531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:15.219653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:16.220325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:17.220421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:18.221426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:19.221565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:20.221657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:21.222523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:22.222567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:23.222812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:24.223672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:25.223902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:26.224235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:27.225032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:28.225277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:29.225479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:30.225667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:31.226544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:32.227505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:33.227717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:34.227940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:35.228262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:36.228412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:37.228491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:38.229160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:39.229241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:40.229909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:41.230973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:42.231690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:43.232457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:44.232542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:45.232647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:46.233201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:47.233280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:48.233665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:49.233787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:50.234197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:51.234871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:52.235717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:53.235877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:54.236206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:55.237180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:56.237485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:57.238516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/04/23 15:23:57.728
  Sep  4 15:23:58.233: INFO: Successfully updated pod "var-expansion-be0cf956-ba3a-48cc-a95a-a86c50e3fce3"
  STEP: waiting for pod running @ 09/04/23 15:23:58.233
  E0904 15:23:58.238793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:23:59.238908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/04/23 15:24:00.237
  Sep  4 15:24:00.237: INFO: Deleting pod "var-expansion-be0cf956-ba3a-48cc-a95a-a86c50e3fce3" in namespace "var-expansion-7572"
  E0904 15:24:00.239694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:24:00.240: INFO: Wait up to 5m0s for pod "var-expansion-be0cf956-ba3a-48cc-a95a-a86c50e3fce3" to be fully deleted
  E0904 15:24:01.240416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:02.240468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:03.241494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:04.241620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:05.242627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:06.242750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:07.243549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:08.243875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:09.244408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:10.245473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:11.246532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:12.246748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:13.246840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:14.246960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:15.247589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:16.247860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:17.247894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:18.247912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:19.248417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:20.249467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:21.250459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:22.251130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:23.251442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:24.251568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:25.252416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:26.253472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:27.253729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:28.254713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:29.254791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:30.254918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:31.255575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:32.255698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:24:32.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7572" for this suite. @ 09/04/23 15:24:32.279
• [154.568 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 09/04/23 15:24:32.282
  Sep  4 15:24:32.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/23 15:24:32.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:24:32.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:24:32.29
  Sep  4 15:24:32.296: INFO: created pod
  E0904 15:24:33.255965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:34.256037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:24:34.299
  E0904 15:24:35.256429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:36.257484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:37.257613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:38.257946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:39.258081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:40.258210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:41.258339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:42.258941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:43.259114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:44.260104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:45.260238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:46.260365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:47.260422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:48.261479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:49.261933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:50.262055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:51.262181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:52.262299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:53.262514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:54.262668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:55.262788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:56.262909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:57.263587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:58.263949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:24:59.264074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:00.264203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:01.265034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:02.265117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:03.265407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:04.265529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:25:04.299: INFO: polling logs
  Sep  4 15:25:04.308: INFO: Pod logs: 
  I0904 15:24:32.900950       1 log.go:194] OK: Got token
  I0904 15:24:32.900988       1 log.go:194] validating with in-cluster discovery
  I0904 15:24:32.901189       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I0904 15:24:32.901208       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4104:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00012fd00), NotBefore:(*jwt.NumericDate)(0xc00012fde8), IssuedAt:(*jwt.NumericDate)(0xc00012fd10), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4104", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f4c61860-fa66-438f-9426-b22f4cf88b11"}}}
  I0904 15:24:32.906967       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0904 15:24:32.910536       1 log.go:194] OK: Validated signature on JWT
  I0904 15:24:32.910597       1 log.go:194] OK: Got valid claims from token!
  I0904 15:24:32.910619       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4104:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00044a6a0), NotBefore:(*jwt.NumericDate)(0xc00044a6c8), IssuedAt:(*jwt.NumericDate)(0xc00044a6a8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4104", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f4c61860-fa66-438f-9426-b22f4cf88b11"}}}

  Sep  4 15:25:04.308: INFO: completed pod
  Sep  4 15:25:04.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4104" for this suite. @ 09/04/23 15:25:04.311
• [32.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/04/23 15:25:04.318
  Sep  4 15:25:04.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:25:04.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:25:04.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:25:04.326
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-22af34b1-0571-413e-a06f-0fdc049db328 @ 09/04/23 15:25:04.328
  STEP: Creating the pod @ 09/04/23 15:25:04.33
  E0904 15:25:05.265610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:06.265970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-22af34b1-0571-413e-a06f-0fdc049db328 @ 09/04/23 15:25:06.34
  STEP: waiting to observe update in volume @ 09/04/23 15:25:06.342
  E0904 15:25:07.266482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:08.267150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:09.267735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:10.268269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:11.268413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:12.268514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:13.269475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:14.269573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:15.270539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:16.270682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:17.271122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:18.271945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:19.272415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:20.273489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:21.273606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:22.273649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:23.274671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:24.274818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:25.275801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:26.275885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:27.276420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:28.277452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:29.278228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:30.278806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:31.279151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:32.280150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:33.280579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:34.281494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:35.281702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:36.282137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:37.282526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:38.282732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:39.282756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:40.282833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:41.282929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:42.283668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:43.284344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:44.284416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:45.285473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:46.285569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:47.286149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:48.286360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:49.287079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:50.287221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:51.287618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:52.287716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:53.288461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:54.289502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:55.289689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:56.289827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:57.290360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:58.291233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:25:59.292267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:00.292362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:01.292416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:02.292443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:03.293075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:04.293468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:05.294140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:06.294256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:07.295257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:08.295329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:09.296374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:10.296435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:11.297486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:12.297608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:13.298426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:14.298517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:15.298840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:16.299236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:17.299739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:18.300134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:19.300414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:20.301469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:26:20.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3093" for this suite. @ 09/04/23 15:26:20.49
• [76.174 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 09/04/23 15:26:20.492
  Sep  4 15:26:20.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename discovery @ 09/04/23 15:26:20.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:26:20.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:26:20.5
  STEP: Setting up server cert @ 09/04/23 15:26:20.501
  STEP: Requesting APIResourceList from "/api/v1" @ 09/04/23 15:26:21.117
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/04/23 15:26:21.118
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/04/23 15:26:21.118
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/04/23 15:26:21.119
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/04/23 15:26:21.119
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/04/23 15:26:21.12
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/04/23 15:26:21.12
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/04/23 15:26:21.121
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/04/23 15:26:21.121
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/04/23 15:26:21.121
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/04/23 15:26:21.122
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/04/23 15:26:21.122
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/04/23 15:26:21.123
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/04/23 15:26:21.123
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/04/23 15:26:21.123
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/04/23 15:26:21.124
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/04/23 15:26:21.124
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/04/23 15:26:21.125
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/04/23 15:26:21.125
  Sep  4 15:26:21.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1210" for this suite. @ 09/04/23 15:26:21.127
• [0.638 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 09/04/23 15:26:21.13
  Sep  4 15:26:21.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 15:26:21.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:26:21.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:26:21.137
  STEP: creating service in namespace services-7099 @ 09/04/23 15:26:21.139
  STEP: creating service affinity-nodeport-transition in namespace services-7099 @ 09/04/23 15:26:21.139
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7099 @ 09/04/23 15:26:21.145
  I0904 15:26:21.147344      22 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-7099, replica count: 3
  E0904 15:26:21.302041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:22.302695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:23.303582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0904 15:26:24.198401      22 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep  4 15:26:24.201: INFO: Creating new exec pod
  E0904 15:26:24.304523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:25.305490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:26.306394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:26:27.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-7099 exec execpod-affinityr5cnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Sep  4 15:26:27.289: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Sep  4 15:26:27.289: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 15:26:27.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-7099 exec execpod-affinityr5cnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.122.48 80'
  E0904 15:26:27.307218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:26:27.389: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.122.48 80\nConnection to 10.68.122.48 80 port [tcp/http] succeeded!\n"
  Sep  4 15:26:27.389: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 15:26:27.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-7099 exec execpod-affinityr5cnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.254.0.10 32685'
  Sep  4 15:26:27.469: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.254.0.10 32685\nConnection to 10.254.0.10 32685 port [tcp/*] succeeded!\n"
  Sep  4 15:26:27.469: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 15:26:27.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-7099 exec execpod-affinityr5cnp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.254.0.9 32685'
  Sep  4 15:26:27.561: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.254.0.9 32685\nConnection to 10.254.0.9 32685 port [tcp/*] succeeded!\n"
  Sep  4 15:26:27.561: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 15:26:27.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-7099 exec execpod-affinityr5cnp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.254.0.8:32685/ ; done'
  Sep  4 15:26:27.703: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n"
  Sep  4 15:26:27.703: INFO: stdout: "\naffinity-nodeport-transition-45kj9\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-7tjjk\naffinity-nodeport-transition-45kj9\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-7tjjk\naffinity-nodeport-transition-45kj9\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-7tjjk\naffinity-nodeport-transition-45kj9\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-7tjjk\naffinity-nodeport-transition-45kj9\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-7tjjk\naffinity-nodeport-transition-45kj9"
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-45kj9
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-7tjjk
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-45kj9
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-7tjjk
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-45kj9
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-7tjjk
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-45kj9
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-7tjjk
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-45kj9
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-7tjjk
  Sep  4 15:26:27.703: INFO: Received response from host: affinity-nodeport-transition-45kj9
  Sep  4 15:26:27.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-7099 exec execpod-affinityr5cnp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.254.0.8:32685/ ; done'
  Sep  4 15:26:27.843: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.254.0.8:32685/\n"
  Sep  4 15:26:27.843: INFO: stdout: "\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s\naffinity-nodeport-transition-d8z8s"
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Received response from host: affinity-nodeport-transition-d8z8s
  Sep  4 15:26:27.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 15:26:27.844: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7099, will wait for the garbage collector to delete the pods @ 09/04/23 15:26:27.851
  Sep  4 15:26:27.907: INFO: Deleting ReplicationController affinity-nodeport-transition took: 3.570545ms
  Sep  4 15:26:28.008: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.970252ms
  E0904 15:26:28.307813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:29.308794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:30.309688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7099" for this suite. @ 09/04/23 15:26:31.017
• [9.889 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/04/23 15:26:31.019
  Sep  4 15:26:31.019: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:26:31.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:26:31.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:26:31.028
  STEP: Creating projection with secret that has name projected-secret-test-map-2d83aebe-f1a0-4a07-bbf5-05b7a33fc888 @ 09/04/23 15:26:31.029
  STEP: Creating a pod to test consume secrets @ 09/04/23 15:26:31.031
  E0904 15:26:31.310618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:32.310851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:33.311222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:34.311367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:26:35.04
  Sep  4 15:26:35.041: INFO: Trying to get logs from node control-panel-01 pod pod-projected-secrets-8013d60b-a159-40d1-8af2-331c1c105eed container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 15:26:35.044
  Sep  4 15:26:35.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3735" for this suite. @ 09/04/23 15:26:35.051
• [4.034 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/04/23 15:26:35.053
  Sep  4 15:26:35.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:26:35.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:26:35.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:26:35.06
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 15:26:35.062
  E0904 15:26:35.311442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:36.311643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:37.312716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:38.312731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:26:39.073
  Sep  4 15:26:39.074: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-4e539b6f-2fda-46b8-8e7a-686b21e9e54b container client-container: <nil>
  STEP: delete the pod @ 09/04/23 15:26:39.077
  Sep  4 15:26:39.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2996" for this suite. @ 09/04/23 15:26:39.084
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 09/04/23 15:26:39.087
  Sep  4 15:26:39.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/23 15:26:39.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:26:39.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:26:39.094
  STEP: Performing setup for networking test in namespace pod-network-test-2351 @ 09/04/23 15:26:39.095
  STEP: creating a selector @ 09/04/23 15:26:39.095
  STEP: Creating the service pods in kubernetes @ 09/04/23 15:26:39.095
  Sep  4 15:26:39.095: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0904 15:26:39.313712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:40.313853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:41.313881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:42.314011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:43.314844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:44.314981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:45.315049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:46.315191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:47.315272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:48.315398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:49.315678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:50.315904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/04/23 15:26:51.126
  E0904 15:26:51.316358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:52.316418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:26:53.138: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep  4 15:26:53.138: INFO: Going to poll 172.20.132.187 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Sep  4 15:26:53.139: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.132.187 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2351 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:26:53.139: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:26:53.139: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:26:53.139: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2351/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.132.187+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0904 15:26:53.317106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:26:54.193: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep  4 15:26:54.193: INFO: Going to poll 172.20.249.174 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Sep  4 15:26:54.194: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.249.174 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2351 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:26:54.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:26:54.195: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:26:54.195: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2351/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.249.174+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0904 15:26:54.317647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:26:55.252: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep  4 15:26:55.252: INFO: Going to poll 172.20.33.126 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Sep  4 15:26:55.253: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.33.126 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2351 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:26:55.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:26:55.254: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:26:55.254: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-2351/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.33.126+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0904 15:26:55.318393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:26:56.309: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep  4 15:26:56.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2351" for this suite. @ 09/04/23 15:26:56.31
• [17.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 09/04/23 15:26:56.314
  Sep  4 15:26:56.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename limitrange @ 09/04/23 15:26:56.315
  E0904 15:26:56.318775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:26:56.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:26:56.373
  STEP: Creating a LimitRange @ 09/04/23 15:26:56.375
  STEP: Setting up watch @ 09/04/23 15:26:56.375
  STEP: Submitting a LimitRange @ 09/04/23 15:26:56.476
  STEP: Verifying LimitRange creation was observed @ 09/04/23 15:26:56.479
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/04/23 15:26:56.479
  Sep  4 15:26:56.480: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep  4 15:26:56.480: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/04/23 15:26:56.48
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/04/23 15:26:56.482
  Sep  4 15:26:56.483: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep  4 15:26:56.483: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/04/23 15:26:56.483
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/04/23 15:26:56.486
  Sep  4 15:26:56.487: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Sep  4 15:26:56.487: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/04/23 15:26:56.487
  STEP: Failing to create a Pod with more than max resources @ 09/04/23 15:26:56.489
  STEP: Updating a LimitRange @ 09/04/23 15:26:56.49
  STEP: Verifying LimitRange updating is effective @ 09/04/23 15:26:56.493
  E0904 15:26:57.318882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:26:58.318983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/04/23 15:26:58.494
  STEP: Failing to create a Pod with more than max resources @ 09/04/23 15:26:58.497
  STEP: Deleting a LimitRange @ 09/04/23 15:26:58.498
  STEP: Verifying the LimitRange was deleted @ 09/04/23 15:26:58.507
  E0904 15:26:59.319669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:00.320476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:01.321490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:02.322156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:03.322378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:27:03.509: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/04/23 15:27:03.509
  Sep  4 15:27:03.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8328" for this suite. @ 09/04/23 15:27:03.514
• [7.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 09/04/23 15:27:03.519
  Sep  4 15:27:03.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 15:27:03.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:27:03.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:27:03.527
  STEP: creating secret secrets-7536/secret-test-85a4b66a-fd7e-4dab-a7b7-58d75e5cbc8f @ 09/04/23 15:27:03.528
  STEP: Creating a pod to test consume secrets @ 09/04/23 15:27:03.53
  E0904 15:27:04.322479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:05.322706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:27:05.537
  Sep  4 15:27:05.538: INFO: Trying to get logs from node control-panel-01 pod pod-configmaps-4144375e-1d92-4625-8ef9-1e7df1fe0237 container env-test: <nil>
  STEP: delete the pod @ 09/04/23 15:27:05.541
  Sep  4 15:27:05.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7536" for this suite. @ 09/04/23 15:27:05.549
• [2.032 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 09/04/23 15:27:05.551
  Sep  4 15:27:05.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 15:27:05.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:27:05.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:27:05.559
  STEP: create deployment with httpd image @ 09/04/23 15:27:05.562
  Sep  4 15:27:05.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2399 create -f -'
  Sep  4 15:27:05.672: INFO: stderr: ""
  Sep  4 15:27:05.672: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/04/23 15:27:05.672
  Sep  4 15:27:05.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2399 diff -f -'
  Sep  4 15:27:05.759: INFO: rc: 1
  Sep  4 15:27:05.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-2399 delete -f -'
  Sep  4 15:27:05.803: INFO: stderr: ""
  Sep  4 15:27:05.803: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Sep  4 15:27:05.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2399" for this suite. @ 09/04/23 15:27:05.805
• [0.257 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 09/04/23 15:27:05.809
  Sep  4 15:27:05.809: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename gc @ 09/04/23 15:27:05.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:27:05.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:27:05.819
  STEP: create the rc @ 09/04/23 15:27:05.822
  W0904 15:27:05.824937      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0904 15:27:06.323603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:07.323796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:08.324215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:09.324349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:10.324520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:11.325475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/04/23 15:27:11.827
  STEP: wait for the rc to be deleted @ 09/04/23 15:27:11.829
  E0904 15:27:12.326127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:13.326751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:14.326846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:15.326973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:16.327083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/04/23 15:27:16.831
  E0904 15:27:17.327986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:18.328157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:19.328684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:20.329481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:21.329615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:22.330376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:23.330712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:24.330981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:25.331265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:26.331384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:27.331483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:28.331548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:29.331670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:30.331761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:31.332245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:32.333100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:33.333332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:34.333386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:35.333479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:36.333562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:37.333699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:38.333758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:39.333882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:40.334002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:41.334101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:42.334227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:43.334448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:44.335020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:45.335162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:46.335994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/04/23 15:27:46.837
  W0904 15:27:46.840408      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep  4 15:27:46.840: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep  4 15:27:46.840: INFO: Deleting pod "simpletest.rc-2kd48" in namespace "gc-3882"
  Sep  4 15:27:46.844: INFO: Deleting pod "simpletest.rc-2tb74" in namespace "gc-3882"
  Sep  4 15:27:46.849: INFO: Deleting pod "simpletest.rc-2zvht" in namespace "gc-3882"
  Sep  4 15:27:46.854: INFO: Deleting pod "simpletest.rc-4d845" in namespace "gc-3882"
  Sep  4 15:27:46.859: INFO: Deleting pod "simpletest.rc-4h66x" in namespace "gc-3882"
  Sep  4 15:27:46.864: INFO: Deleting pod "simpletest.rc-4trhl" in namespace "gc-3882"
  Sep  4 15:27:46.869: INFO: Deleting pod "simpletest.rc-52l4c" in namespace "gc-3882"
  Sep  4 15:27:46.873: INFO: Deleting pod "simpletest.rc-5tmjw" in namespace "gc-3882"
  Sep  4 15:27:46.881: INFO: Deleting pod "simpletest.rc-65pf9" in namespace "gc-3882"
  Sep  4 15:27:46.885: INFO: Deleting pod "simpletest.rc-66k8r" in namespace "gc-3882"
  Sep  4 15:27:46.891: INFO: Deleting pod "simpletest.rc-6kh8h" in namespace "gc-3882"
  Sep  4 15:27:46.898: INFO: Deleting pod "simpletest.rc-6kjkt" in namespace "gc-3882"
  Sep  4 15:27:46.911: INFO: Deleting pod "simpletest.rc-6ljhb" in namespace "gc-3882"
  Sep  4 15:27:46.918: INFO: Deleting pod "simpletest.rc-6v66c" in namespace "gc-3882"
  Sep  4 15:27:46.925: INFO: Deleting pod "simpletest.rc-78456" in namespace "gc-3882"
  Sep  4 15:27:46.930: INFO: Deleting pod "simpletest.rc-79dt5" in namespace "gc-3882"
  Sep  4 15:27:46.938: INFO: Deleting pod "simpletest.rc-7vth7" in namespace "gc-3882"
  Sep  4 15:27:46.944: INFO: Deleting pod "simpletest.rc-89rsv" in namespace "gc-3882"
  Sep  4 15:27:46.952: INFO: Deleting pod "simpletest.rc-8fsg6" in namespace "gc-3882"
  Sep  4 15:27:46.967: INFO: Deleting pod "simpletest.rc-8jc54" in namespace "gc-3882"
  Sep  4 15:27:46.978: INFO: Deleting pod "simpletest.rc-8lc6s" in namespace "gc-3882"
  Sep  4 15:27:46.990: INFO: Deleting pod "simpletest.rc-9wb7d" in namespace "gc-3882"
  Sep  4 15:27:47.005: INFO: Deleting pod "simpletest.rc-9wfjx" in namespace "gc-3882"
  Sep  4 15:27:47.014: INFO: Deleting pod "simpletest.rc-b6sx6" in namespace "gc-3882"
  Sep  4 15:27:47.024: INFO: Deleting pod "simpletest.rc-b8ldk" in namespace "gc-3882"
  Sep  4 15:27:47.035: INFO: Deleting pod "simpletest.rc-c4xhr" in namespace "gc-3882"
  Sep  4 15:27:47.046: INFO: Deleting pod "simpletest.rc-c5h8w" in namespace "gc-3882"
  Sep  4 15:27:47.053: INFO: Deleting pod "simpletest.rc-crj7q" in namespace "gc-3882"
  Sep  4 15:27:47.064: INFO: Deleting pod "simpletest.rc-cw7zt" in namespace "gc-3882"
  Sep  4 15:27:47.077: INFO: Deleting pod "simpletest.rc-d7lkm" in namespace "gc-3882"
  Sep  4 15:27:47.093: INFO: Deleting pod "simpletest.rc-dblfd" in namespace "gc-3882"
  Sep  4 15:27:47.106: INFO: Deleting pod "simpletest.rc-dvkpq" in namespace "gc-3882"
  Sep  4 15:27:47.119: INFO: Deleting pod "simpletest.rc-fsbj5" in namespace "gc-3882"
  Sep  4 15:27:47.128: INFO: Deleting pod "simpletest.rc-g59c9" in namespace "gc-3882"
  Sep  4 15:27:47.144: INFO: Deleting pod "simpletest.rc-gcgxh" in namespace "gc-3882"
  Sep  4 15:27:47.159: INFO: Deleting pod "simpletest.rc-gkjjc" in namespace "gc-3882"
  Sep  4 15:27:47.171: INFO: Deleting pod "simpletest.rc-gn574" in namespace "gc-3882"
  Sep  4 15:27:47.191: INFO: Deleting pod "simpletest.rc-gpgn4" in namespace "gc-3882"
  Sep  4 15:27:47.209: INFO: Deleting pod "simpletest.rc-gtn6h" in namespace "gc-3882"
  Sep  4 15:27:47.226: INFO: Deleting pod "simpletest.rc-gx8x9" in namespace "gc-3882"
  Sep  4 15:27:47.241: INFO: Deleting pod "simpletest.rc-h4rpj" in namespace "gc-3882"
  Sep  4 15:27:47.256: INFO: Deleting pod "simpletest.rc-h8qbx" in namespace "gc-3882"
  Sep  4 15:27:47.269: INFO: Deleting pod "simpletest.rc-hc59r" in namespace "gc-3882"
  Sep  4 15:27:47.284: INFO: Deleting pod "simpletest.rc-hfcg7" in namespace "gc-3882"
  Sep  4 15:27:47.300: INFO: Deleting pod "simpletest.rc-hjqz5" in namespace "gc-3882"
  Sep  4 15:27:47.314: INFO: Deleting pod "simpletest.rc-hksdd" in namespace "gc-3882"
  Sep  4 15:27:47.323: INFO: Deleting pod "simpletest.rc-j84x5" in namespace "gc-3882"
  E0904 15:27:47.337064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:27:47.348: INFO: Deleting pod "simpletest.rc-jbxx7" in namespace "gc-3882"
  Sep  4 15:27:47.372: INFO: Deleting pod "simpletest.rc-jsl2t" in namespace "gc-3882"
  Sep  4 15:27:47.387: INFO: Deleting pod "simpletest.rc-k59k4" in namespace "gc-3882"
  Sep  4 15:27:47.410: INFO: Deleting pod "simpletest.rc-kfjxh" in namespace "gc-3882"
  Sep  4 15:27:47.434: INFO: Deleting pod "simpletest.rc-kqr27" in namespace "gc-3882"
  Sep  4 15:27:47.444: INFO: Deleting pod "simpletest.rc-ldx5g" in namespace "gc-3882"
  Sep  4 15:27:47.465: INFO: Deleting pod "simpletest.rc-lgb2r" in namespace "gc-3882"
  Sep  4 15:27:47.482: INFO: Deleting pod "simpletest.rc-lrgqm" in namespace "gc-3882"
  Sep  4 15:27:47.493: INFO: Deleting pod "simpletest.rc-ls4hp" in namespace "gc-3882"
  Sep  4 15:27:47.504: INFO: Deleting pod "simpletest.rc-lt6tn" in namespace "gc-3882"
  Sep  4 15:27:47.519: INFO: Deleting pod "simpletest.rc-mjsww" in namespace "gc-3882"
  Sep  4 15:27:47.528: INFO: Deleting pod "simpletest.rc-mndx6" in namespace "gc-3882"
  Sep  4 15:27:47.540: INFO: Deleting pod "simpletest.rc-mr4hn" in namespace "gc-3882"
  Sep  4 15:27:47.590: INFO: Deleting pod "simpletest.rc-msfzf" in namespace "gc-3882"
  Sep  4 15:27:47.655: INFO: Deleting pod "simpletest.rc-n5swp" in namespace "gc-3882"
  Sep  4 15:27:47.674: INFO: Deleting pod "simpletest.rc-n6fvs" in namespace "gc-3882"
  Sep  4 15:27:47.690: INFO: Deleting pod "simpletest.rc-nw7bf" in namespace "gc-3882"
  Sep  4 15:27:47.707: INFO: Deleting pod "simpletest.rc-nx6sg" in namespace "gc-3882"
  Sep  4 15:27:47.753: INFO: Deleting pod "simpletest.rc-p2lvx" in namespace "gc-3882"
  Sep  4 15:27:47.766: INFO: Deleting pod "simpletest.rc-pff5w" in namespace "gc-3882"
  Sep  4 15:27:47.818: INFO: Deleting pod "simpletest.rc-pjvcm" in namespace "gc-3882"
  Sep  4 15:27:47.846: INFO: Deleting pod "simpletest.rc-pl2pm" in namespace "gc-3882"
  Sep  4 15:27:47.907: INFO: Deleting pod "simpletest.rc-pmfsz" in namespace "gc-3882"
  Sep  4 15:27:47.951: INFO: Deleting pod "simpletest.rc-pnbbd" in namespace "gc-3882"
  Sep  4 15:27:47.989: INFO: Deleting pod "simpletest.rc-pqtn2" in namespace "gc-3882"
  Sep  4 15:27:48.059: INFO: Deleting pod "simpletest.rc-pvlzm" in namespace "gc-3882"
  Sep  4 15:27:48.098: INFO: Deleting pod "simpletest.rc-q6btf" in namespace "gc-3882"
  Sep  4 15:27:48.152: INFO: Deleting pod "simpletest.rc-qg57v" in namespace "gc-3882"
  Sep  4 15:27:48.190: INFO: Deleting pod "simpletest.rc-qksqm" in namespace "gc-3882"
  Sep  4 15:27:48.245: INFO: Deleting pod "simpletest.rc-qmrd8" in namespace "gc-3882"
  Sep  4 15:27:48.304: INFO: Deleting pod "simpletest.rc-qt7hc" in namespace "gc-3882"
  E0904 15:27:48.337761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:27:48.353: INFO: Deleting pod "simpletest.rc-rfss4" in namespace "gc-3882"
  Sep  4 15:27:48.393: INFO: Deleting pod "simpletest.rc-rmpzc" in namespace "gc-3882"
  Sep  4 15:27:48.450: INFO: Deleting pod "simpletest.rc-rsv5x" in namespace "gc-3882"
  Sep  4 15:27:48.505: INFO: Deleting pod "simpletest.rc-s4nx6" in namespace "gc-3882"
  Sep  4 15:27:48.548: INFO: Deleting pod "simpletest.rc-s7dww" in namespace "gc-3882"
  Sep  4 15:27:48.597: INFO: Deleting pod "simpletest.rc-sgkbb" in namespace "gc-3882"
  Sep  4 15:27:48.647: INFO: Deleting pod "simpletest.rc-t255m" in namespace "gc-3882"
  Sep  4 15:27:48.704: INFO: Deleting pod "simpletest.rc-t5cbl" in namespace "gc-3882"
  Sep  4 15:27:48.754: INFO: Deleting pod "simpletest.rc-tkrw5" in namespace "gc-3882"
  Sep  4 15:27:48.814: INFO: Deleting pod "simpletest.rc-tzpl5" in namespace "gc-3882"
  Sep  4 15:27:48.861: INFO: Deleting pod "simpletest.rc-vjx5n" in namespace "gc-3882"
  Sep  4 15:27:48.902: INFO: Deleting pod "simpletest.rc-vmdmc" in namespace "gc-3882"
  Sep  4 15:27:48.956: INFO: Deleting pod "simpletest.rc-vzxmw" in namespace "gc-3882"
  Sep  4 15:27:49.018: INFO: Deleting pod "simpletest.rc-wxp4g" in namespace "gc-3882"
  Sep  4 15:27:49.038: INFO: Deleting pod "simpletest.rc-wzkg2" in namespace "gc-3882"
  Sep  4 15:27:49.089: INFO: Deleting pod "simpletest.rc-xhqt9" in namespace "gc-3882"
  Sep  4 15:27:49.156: INFO: Deleting pod "simpletest.rc-z5ltp" in namespace "gc-3882"
  Sep  4 15:27:49.215: INFO: Deleting pod "simpletest.rc-z95gl" in namespace "gc-3882"
  Sep  4 15:27:49.244: INFO: Deleting pod "simpletest.rc-z9hkm" in namespace "gc-3882"
  Sep  4 15:27:49.298: INFO: Deleting pod "simpletest.rc-zhqhn" in namespace "gc-3882"
  E0904 15:27:49.338133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:27:49.371: INFO: Deleting pod "simpletest.rc-zjs6k" in namespace "gc-3882"
  Sep  4 15:27:49.416: INFO: Deleting pod "simpletest.rc-zwkwf" in namespace "gc-3882"
  Sep  4 15:27:49.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3882" for this suite. @ 09/04/23 15:27:49.487
• [43.729 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/04/23 15:27:49.539
  Sep  4 15:27:49.539: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-probe @ 09/04/23 15:27:49.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:27:49.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:27:49.62
  STEP: Creating pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950 @ 09/04/23 15:27:49.623
  E0904 15:27:50.338194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:51.339052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/23 15:27:51.636
  Sep  4 15:27:51.637: INFO: Initial restart count of pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 is 0
  Sep  4 15:27:51.638: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:27:52.339160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:53.339221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:27:53.641: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:27:54.340255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:55.340396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:27:55.643: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:27:56.341206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:57.342032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:27:57.645: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:27:58.342736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:27:59.342844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:27:59.647: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:00.343854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:01.344514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:01.649: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:02.345495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:03.345708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:03.652: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:04.346746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:05.346872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:05.654: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:06.347919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:07.347998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:07.655: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:08.348435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:09.349486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:09.658: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:10.349501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:11.349579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:11.660: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:12.350309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:13.350594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:13.662: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:14.351585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:15.351686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:15.664: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:16.351874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:17.351798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:17.666: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:18.352658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:19.352737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:19.668: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:20.352815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:21.352904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:21.670: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:22.352981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:23.353056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:23.673: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:24.353111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:25.353481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:25.675: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:26.354312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:27.354388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:27.677: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:28.355443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:29.355526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:29.679: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:30.355612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:31.355733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:31.681: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:32.356398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:33.356436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:33.684: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:34.357472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:35.357609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:35.686: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:36.358389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:37.359223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:37.689: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:38.360160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:39.360296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:39.691: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:40.361149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:41.361473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:41.693: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:42.362129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:43.363084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:43.696: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:44.363939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:45.364036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:45.698: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:46.364412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:47.364494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:47.699: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:48.365392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:49.365510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:49.701: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:50.366575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:51.366953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:51.704: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:52.367856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:53.368044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:53.706: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:54.368967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:55.369893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:55.709: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:56.370732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:57.370878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:57.710: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:28:58.371629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:28:59.371752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:28:59.712: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:00.372070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:01.372201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:01.715: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:02.372407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:03.372491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:03.718: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:04.373476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:05.373611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:05.720: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:06.373744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:07.374414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:07.722: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:08.375296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:09.375704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:09.724: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:10.376529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:11.377472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:11.727: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:12.378459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:13.379354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:13.729: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:14.379466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:15.379794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:15.731: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:16.380651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:17.381471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:17.733: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:18.382442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:19.382563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:19.736: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:20.383150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:21.383268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:21.739: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:22.383804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:23.383966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:23.742: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:24.384917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:25.385491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:25.744: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:26.386064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:27.386188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:27.746: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:28.387074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:29.387195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:29.748: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:30.388047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:31.388644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:31.750: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:32.389566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:33.389804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:33.753: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:34.390354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:35.391027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:35.755: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:36.391403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:37.391524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:37.757: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:38.391581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:39.391666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:39.759: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:40.392635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:41.393477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:41.761: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:42.394321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:43.394972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:43.764: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:44.395937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:45.396023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:45.767: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:46.396779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:47.397474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:47.770: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:48.397671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:49.397760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:49.771: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:50.397839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:51.397964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:51.774: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:52.398852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:53.399012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:53.777: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:54.399951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:55.400282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:55.779: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:56.401208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:57.401290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:57.781: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:29:58.402127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:29:59.402209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:29:59.784: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:00.402969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:01.403590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:01.786: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:02.403933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:03.404083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:03.789: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:04.404400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:05.404423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:05.791: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:06.405288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:07.405474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:07.793: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:08.405550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:09.405674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:09.795: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:10.406484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:11.406570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:11.798: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:12.407353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:13.407577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:13.801: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:14.407650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:15.407753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:15.802: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:16.408045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:17.408057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:17.804: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:18.408309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:19.408447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:19.806: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:20.409046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:21.409872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:21.809: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:22.410243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:23.410322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:23.811: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:24.410405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:25.410524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:25.814: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:26.411277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:27.411391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:27.816: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:28.412363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:29.412416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:29.818: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:30.413249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:31.413467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:31.820: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:32.414275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:33.414493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:33.822: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:34.415480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:35.415599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:35.824: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:36.416504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:37.416602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:37.826: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:38.417471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:39.417594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:39.828: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:40.418440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:41.418478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:41.830: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:42.419256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:43.419483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:43.832: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:44.419586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:45.420594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:45.834: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:46.421425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:47.421901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:47.837: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:48.422963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:49.423098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:49.839: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:50.423949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:51.424070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:51.841: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:52.424918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:53.425911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:53.843: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:54.426795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:55.427766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:55.844: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:56.428570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:57.429478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:57.846: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:30:58.430362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:30:59.431294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:30:59.849: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:00.432195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:01.432333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:01.851: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:02.433089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:03.433671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:03.854: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:04.433732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:05.433851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:05.855: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:06.434417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:07.435174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:07.858: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:08.436190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:09.436328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:09.860: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:10.436856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:11.437911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:11.863: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:12.438436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:13.439105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:13.865: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:14.440125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:15.440181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:15.867: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:16.441068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:17.441146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:17.869: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:18.441468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:19.441587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:19.871: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:20.442457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:21.442571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:21.873: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:22.443503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:23.443580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:23.876: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:24.443669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:25.444007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:25.878: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:26.444772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:27.445469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:27.880: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:28.446383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:29.446512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:29.882: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:30.447286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:31.447503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:31.884: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:32.448459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:33.448538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:33.886: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:34.449468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:35.450485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:35.888: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:36.451266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:37.451470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:37.890: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:38.452242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:39.452343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:39.893: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:40.452414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:41.453470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:41.895: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:42.454111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:43.454323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:43.897: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:44.455330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:45.455449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:45.899: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:46.456210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:47.456336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:47.901: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:48.457316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:49.457443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:49.903: INFO: Get pod liveness-b46d8803-2872-4d6f-858c-8bf981c30942 in namespace container-probe-6950
  E0904 15:31:50.458418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:51.458749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:31:51.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 15:31:51.906
  STEP: Destroying namespace "container-probe-6950" for this suite. @ 09/04/23 15:31:51.912
• [242.376 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 09/04/23 15:31:51.915
  Sep  4 15:31:51.915: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 15:31:51.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:31:51.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:31:51.923
  STEP: Counting existing ResourceQuota @ 09/04/23 15:31:51.932
  E0904 15:31:52.459147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:53.460001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:54.460053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:55.460425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:56.461114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/23 15:31:56.934
  STEP: Ensuring resource quota status is calculated @ 09/04/23 15:31:56.937
  E0904 15:31:57.461473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:31:58.461804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/04/23 15:31:58.939
  STEP: Ensuring resource quota status captures replicaset creation @ 09/04/23 15:31:58.944
  E0904 15:31:59.461898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:00.461971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/04/23 15:32:00.947
  STEP: Ensuring resource quota status released usage @ 09/04/23 15:32:00.949
  E0904 15:32:01.463030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:02.463713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:32:02.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-88" for this suite. @ 09/04/23 15:32:02.953
• [11.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 09/04/23 15:32:02.957
  Sep  4 15:32:02.957: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename dns @ 09/04/23 15:32:02.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:32:02.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:32:02.964
  STEP: Creating a test headless service @ 09/04/23 15:32:02.967
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2331.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2331.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/04/23 15:32:02.968
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2331.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2331.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/04/23 15:32:02.968
  STEP: creating a pod to probe DNS @ 09/04/23 15:32:02.968
  STEP: submitting the pod to kubernetes @ 09/04/23 15:32:02.968
  E0904 15:32:03.463777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:04.464082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/23 15:32:04.977
  STEP: looking for the results for each expected name from probers @ 09/04/23 15:32:04.978
  Sep  4 15:32:05.017: INFO: DNS probes using dns-2331/dns-test-c90db146-64d6-4350-bcd0-6773a1970aea succeeded

  Sep  4 15:32:05.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 15:32:05.018
  STEP: deleting the test headless service @ 09/04/23 15:32:05.024
  STEP: Destroying namespace "dns-2331" for this suite. @ 09/04/23 15:32:05.03
• [2.075 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/04/23 15:32:05.033
  Sep  4 15:32:05.033: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename init-container @ 09/04/23 15:32:05.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:32:05.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:32:05.038
  STEP: creating the pod @ 09/04/23 15:32:05.041
  Sep  4 15:32:05.041: INFO: PodSpec: initContainers in spec.initContainers
  E0904 15:32:05.464225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:06.465162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:07.466103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:08.466450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:09.466522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:10.466804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:11.466897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:12.467037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:13.467280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:14.467407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:15.468167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:16.468477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:17.468440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:18.468501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:19.469468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:20.470487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:21.470636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:22.470771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:23.470956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:24.471083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:25.471208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:26.471346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:27.471804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:28.471876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:29.472003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:30.472091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:31.472173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:32.472292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:33.472410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:34.472495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:35.472578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:36.473474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:37.473574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:38.474258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:39.474372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:40.474461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:41.474593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:42.474716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:43.474928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:32:44.352: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-c97fc9cd-e8e3-45a5-a247-d76e81779d77", GenerateName:"", Namespace:"init-container-7192", SelfLink:"", UID:"44b46fd1-0c8e-45cd-9b8e-14e33ff13e97", ResourceVersion:"32990", Generation:0, CreationTimestamp:time.Date(2023, time.September, 4, 15, 32, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"41065178"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 4, 15, 32, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006dae498), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 4, 15, 32, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006dae4e0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-rp8zk", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0042e0f40), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rp8zk", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rp8zk", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-rp8zk", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0030008b8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"control-panel-01", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000726230), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003000940)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003000960)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003000968), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00300096c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00566ec30), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 4, 15, 32, 5, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 4, 15, 32, 5, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 4, 15, 32, 5, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 4, 15, 32, 5, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.254.0.8", HostIPs:[]v1.HostIP(nil), PodIP:"172.20.132.132", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.20.132.132"}}, StartTime:time.Date(2023, time.September, 4, 15, 32, 5, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000726310)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000726380)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://a609f0a848ba1b8d631e12bf1bde8576feac58ded0f4a69541c7bb82cda375f5", Started:(*bool)(0xc003000a0a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0042e0fe0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc003000a1f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0042e0fc0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0030009ef), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Sep  4 15:32:44.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7192" for this suite. @ 09/04/23 15:32:44.355
• [39.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 09/04/23 15:32:44.358
  Sep  4 15:32:44.358: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 15:32:44.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:32:44.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:32:44.365
  STEP: starting the proxy server @ 09/04/23 15:32:44.367
  Sep  4 15:32:44.367: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-9412 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/04/23 15:32:44.397
  Sep  4 15:32:44.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9412" for this suite. @ 09/04/23 15:32:44.403
• [0.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 09/04/23 15:32:44.406
  Sep  4 15:32:44.406: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 15:32:44.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:32:44.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:32:44.413
  STEP: creating a replication controller @ 09/04/23 15:32:44.415
  Sep  4 15:32:44.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 create -f -'
  E0904 15:32:44.475501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:32:44.541: INFO: stderr: ""
  Sep  4 15:32:44.541: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/23 15:32:44.541
  Sep  4 15:32:44.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  4 15:32:44.582: INFO: stderr: ""
  Sep  4 15:32:44.582: INFO: stdout: "update-demo-nautilus-psb26 update-demo-nautilus-qfsrg "
  Sep  4 15:32:44.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get pods update-demo-nautilus-psb26 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:32:44.621: INFO: stderr: ""
  Sep  4 15:32:44.621: INFO: stdout: ""
  Sep  4 15:32:44.621: INFO: update-demo-nautilus-psb26 is created but not running
  E0904 15:32:45.476244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:46.476384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:47.476428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:48.477489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:49.477546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:32:49.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  4 15:32:49.663: INFO: stderr: ""
  Sep  4 15:32:49.663: INFO: stdout: "update-demo-nautilus-psb26 update-demo-nautilus-qfsrg "
  Sep  4 15:32:49.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get pods update-demo-nautilus-psb26 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:32:49.704: INFO: stderr: ""
  Sep  4 15:32:49.704: INFO: stdout: ""
  Sep  4 15:32:49.704: INFO: update-demo-nautilus-psb26 is created but not running
  E0904 15:32:50.477975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:51.478035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:52.478181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:53.479150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:54.479216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:32:54.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  4 15:32:54.746: INFO: stderr: ""
  Sep  4 15:32:54.746: INFO: stdout: "update-demo-nautilus-psb26 update-demo-nautilus-qfsrg "
  Sep  4 15:32:54.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get pods update-demo-nautilus-psb26 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:32:54.785: INFO: stderr: ""
  Sep  4 15:32:54.785: INFO: stdout: "true"
  Sep  4 15:32:54.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get pods update-demo-nautilus-psb26 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  4 15:32:54.825: INFO: stderr: ""
  Sep  4 15:32:54.825: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  4 15:32:54.825: INFO: validating pod update-demo-nautilus-psb26
  Sep  4 15:32:54.829: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  4 15:32:54.829: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  4 15:32:54.829: INFO: update-demo-nautilus-psb26 is verified up and running
  Sep  4 15:32:54.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get pods update-demo-nautilus-qfsrg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:32:54.868: INFO: stderr: ""
  Sep  4 15:32:54.868: INFO: stdout: "true"
  Sep  4 15:32:54.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get pods update-demo-nautilus-qfsrg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  4 15:32:54.911: INFO: stderr: ""
  Sep  4 15:32:54.911: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  4 15:32:54.911: INFO: validating pod update-demo-nautilus-qfsrg
  Sep  4 15:32:54.915: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  4 15:32:54.915: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  4 15:32:54.915: INFO: update-demo-nautilus-qfsrg is verified up and running
  STEP: using delete to clean up resources @ 09/04/23 15:32:54.915
  Sep  4 15:32:54.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 delete --grace-period=0 --force -f -'
  Sep  4 15:32:54.971: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  4 15:32:54.971: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep  4 15:32:54.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get rc,svc -l name=update-demo --no-headers'
  Sep  4 15:32:55.016: INFO: stderr: "No resources found in kubectl-4495 namespace.\n"
  Sep  4 15:32:55.016: INFO: stdout: ""
  Sep  4 15:32:55.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-4495 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep  4 15:32:55.058: INFO: stderr: ""
  Sep  4 15:32:55.058: INFO: stdout: ""
  Sep  4 15:32:55.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4495" for this suite. @ 09/04/23 15:32:55.059
• [10.656 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/04/23 15:32:55.062
  Sep  4 15:32:55.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename var-expansion @ 09/04/23 15:32:55.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:32:55.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:32:55.071
  STEP: Creating a pod to test substitution in volume subpath @ 09/04/23 15:32:55.072
  E0904 15:32:55.479260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:56.479539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:57.480250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:32:58.480679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:32:59.083
  Sep  4 15:32:59.084: INFO: Trying to get logs from node control-panel-01 pod var-expansion-f96abc94-e80a-4eea-8711-f83834e326a6 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/23 15:32:59.093
  Sep  4 15:32:59.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6452" for this suite. @ 09/04/23 15:32:59.102
• [4.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 09/04/23 15:32:59.105
  Sep  4 15:32:59.105: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/23 15:32:59.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:32:59.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:32:59.114
  STEP: Performing setup for networking test in namespace pod-network-test-9337 @ 09/04/23 15:32:59.116
  STEP: creating a selector @ 09/04/23 15:32:59.116
  STEP: Creating the service pods in kubernetes @ 09/04/23 15:32:59.116
  Sep  4 15:32:59.116: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0904 15:32:59.480776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:00.481090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:01.481483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:02.481568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:03.481590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:04.481720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:05.481804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:06.481947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:07.482690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:08.482894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:09.483506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:10.483643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/04/23 15:33:11.15
  E0904 15:33:11.484383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:12.484430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:13.157: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep  4 15:33:13.157: INFO: Breadth first check of 172.20.132.181 on host 10.254.0.8...
  Sep  4 15:33:13.158: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.132.167:9080/dial?request=hostname&protocol=udp&host=172.20.132.181&port=8081&tries=1'] Namespace:pod-network-test-9337 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:33:13.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:33:13.158: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:33:13.158: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9337/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.132.167%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.132.181%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  4 15:33:13.225: INFO: Waiting for responses: map[]
  Sep  4 15:33:13.225: INFO: reached 172.20.132.181 after 0/1 tries
  Sep  4 15:33:13.225: INFO: Breadth first check of 172.20.249.132 on host 10.254.0.9...
  Sep  4 15:33:13.226: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.132.167:9080/dial?request=hostname&protocol=udp&host=172.20.249.132&port=8081&tries=1'] Namespace:pod-network-test-9337 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:33:13.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:33:13.226: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:33:13.226: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9337/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.132.167%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.249.132%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  4 15:33:13.254: INFO: Waiting for responses: map[]
  Sep  4 15:33:13.254: INFO: reached 172.20.249.132 after 0/1 tries
  Sep  4 15:33:13.254: INFO: Breadth first check of 172.20.33.85 on host 10.254.0.10...
  Sep  4 15:33:13.255: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.132.167:9080/dial?request=hostname&protocol=udp&host=172.20.33.85&port=8081&tries=1'] Namespace:pod-network-test-9337 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:33:13.255: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:33:13.255: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:33:13.255: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9337/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.132.167%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.33.85%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep  4 15:33:13.280: INFO: Waiting for responses: map[]
  Sep  4 15:33:13.280: INFO: reached 172.20.33.85 after 0/1 tries
  Sep  4 15:33:13.280: INFO: Going to retry 0 out of 3 pods....
  Sep  4 15:33:13.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9337" for this suite. @ 09/04/23 15:33:13.282
• [14.179 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 09/04/23 15:33:13.284
  Sep  4 15:33:13.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/23 15:33:13.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:33:13.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:33:13.292
  STEP: Performing setup for networking test in namespace pod-network-test-9763 @ 09/04/23 15:33:13.294
  STEP: creating a selector @ 09/04/23 15:33:13.294
  STEP: Creating the service pods in kubernetes @ 09/04/23 15:33:13.294
  Sep  4 15:33:13.294: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0904 15:33:13.485326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:14.486344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:15.486433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:16.486561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:17.487244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:18.487599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:19.488423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:20.488440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:21.489338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:22.489419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:23.490298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:24.490427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/04/23 15:33:25.327
  E0904 15:33:25.490807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:26.490930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:27.338: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Sep  4 15:33:27.338: INFO: Going to poll 172.20.132.170 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Sep  4 15:33:27.339: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.132.170:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9763 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:33:27.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:33:27.339: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:33:27.339: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9763/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.132.170%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  4 15:33:27.385: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep  4 15:33:27.385: INFO: Going to poll 172.20.249.133 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Sep  4 15:33:27.386: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.249.133:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9763 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:33:27.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:33:27.386: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:33:27.386: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9763/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.249.133%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  4 15:33:27.412: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep  4 15:33:27.412: INFO: Going to poll 172.20.33.125 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Sep  4 15:33:27.413: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.33.125:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9763 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:33:27.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:33:27.413: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:33:27.413: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9763/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.33.125%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  4 15:33:27.462: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep  4 15:33:27.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9763" for this suite. @ 09/04/23 15:33:27.464
• [14.181 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/04/23 15:33:27.466
  Sep  4 15:33:27.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-probe @ 09/04/23 15:33:27.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:33:27.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:33:27.474
  STEP: Creating pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898 @ 09/04/23 15:33:27.475
  E0904 15:33:27.491480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:28.491964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/23 15:33:29.481
  Sep  4 15:33:29.482: INFO: Initial restart count of pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 is 0
  Sep  4 15:33:29.483: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:29.492379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:30.492438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:31.484: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:31.492675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:32.493474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:33.485: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:33.494021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:34.494619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:35.488: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:35.494629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:36.495334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:37.490: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:37.495375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:38.495717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:39.492: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:39.496593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:40.497479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:41.494: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:41.497816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:42.498824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:43.496: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:43.499355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:44.500149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:45.499: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:45.500509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:46.501480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:47.501473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:47.501: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:48.501573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:49.501632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:49.504: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:50.502347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:51.502462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:51.506: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:52.503376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:53.503608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:53.508: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:54.504646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:55.505479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:55.510: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:56.505728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:57.506262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:57.512: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:33:58.506343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:33:59.506467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:33:59.515: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:00.507276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:01.507359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:01.517: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:02.507509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:03.507597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:03.519: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:04.508022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:05.508856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:05.522: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:06.509472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:07.509559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:07.524: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:08.510536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:09.510612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:09.526: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:10.510740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:11.510828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:11.528: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:12.511169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:13.511249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:13.531: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:14.512093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:15.512220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:15.533: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:16.512533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:17.512450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:17.536: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:18.513448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:19.513537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:19.538: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:20.514413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:21.514495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:21.540: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:22.514642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:23.514725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:23.542: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:24.515587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:25.515675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:25.544: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:26.516457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:27.516539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:27.547: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:28.516620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:29.517601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:29.549: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:30.518031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:31.519064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:31.551: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:32.519964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:33.520246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:33.554: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:34.520860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:35.521474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:35.556: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:36.521740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:37.521866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:37.558: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:38.522787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:39.522904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:39.560: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:40.523793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:41.524650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:41.563: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:42.525396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:43.525605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:43.565: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:44.526445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:45.526568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:45.567: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:46.526747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:47.526870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:47.569: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:48.527763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:49.527884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:49.571: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:50.528418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:51.529479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:51.574: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:52.530234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:53.530460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:53.576: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:54.530545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:55.530669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:55.578: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:56.531533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:57.531629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:57.580: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:34:58.532418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:34:59.533481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:34:59.581: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:00.533561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:01.534301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:01.584: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:02.534390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:03.534693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:03.586: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:04.535354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:05.535469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:05.589: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:06.536346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:07.536419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:07.591: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:08.537478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:09.537600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:09.594: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:10.538469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:11.539437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:11.597: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:12.540361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:13.540414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:13.599: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:14.541472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:15.541601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:15.601: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:16.541687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:17.541820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:17.603: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:18.542354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:19.542486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:19.606: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:20.542749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:21.543149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:21.608: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:22.543235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:23.543497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:23.610: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:24.544327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:25.544454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:25.612: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:26.544545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:27.545482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:27.615: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:28.546287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:29.546371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:29.617: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:30.546801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:31.547412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:31.619: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:32.548220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:33.548420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:33.621: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:34.549076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:35.549961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:35.624: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:36.550847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:37.550970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:37.625: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:38.551887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:39.551976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:39.627: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:40.552412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:41.553480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:41.630: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:42.554204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:43.554447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:43.632: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:44.555272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:45.555736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:45.635: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:46.555881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:47.555967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:47.636: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:48.556414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:49.556507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:49.639: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:50.557427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:51.557515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:51.641: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:52.558152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:53.558403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:53.642: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:54.558558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:55.559382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:55.645: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:56.559553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:57.559682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:57.647: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:35:58.560691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:35:59.561468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:35:59.650: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:00.562301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:01.562387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:01.652: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:02.562453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:03.563445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:03.654: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:04.563522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:05.563642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:05.656: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:06.563922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:07.564063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:07.659: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:08.564413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:09.565470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:09.661: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:10.566305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:11.566423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:11.663: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:12.567000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:13.567915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:13.665: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:14.568651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:15.569480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:15.668: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:16.569791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:17.570295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:17.671: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:18.571057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:19.572112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:19.672: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:20.572408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:21.573482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:21.675: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:22.574344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:23.574530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:23.677: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:24.575348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:25.575433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:25.679: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:26.575527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:27.575833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:27.681: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:28.576416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:29.577471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:29.684: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:30.578104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:31.578229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:31.686: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:32.579235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:33.579440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:33.688: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:34.580506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:35.581471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:35.690: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:36.581576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:37.581986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:37.692: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:38.582817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:39.582945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:39.694: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:40.583751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:41.583866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:41.696: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:42.584695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:43.585468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:43.699: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:44.585555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:45.585578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:45.702: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:46.586458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:47.587485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:47.704: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:48.587704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:49.588376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:49.706: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:50.588740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:51.589781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:51.708: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:52.590199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:53.590320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:53.711: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:54.590349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:55.590934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:55.713: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:56.591011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:57.591362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:57.715: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:36:58.592160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:36:59.592289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:36:59.717: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:00.593258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:01.593285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:01.719: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:02.593631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:03.593668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:03.721: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:04.594562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:05.594682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:05.723: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:06.594806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:07.595651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:07.726: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:08.596413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:09.597468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:09.728: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:10.598491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:11.598576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:11.730: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:12.599519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:13.599637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:13.732: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:14.600423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:15.601480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:15.734: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:16.601726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:17.602516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:17.737: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:18.603296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:19.603423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:19.739: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:20.604473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:21.605476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:21.741: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:22.606374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:23.606722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:23.743: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:24.607461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:25.607576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:25.745: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:26.607830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:27.608176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:27.748: INFO: Get pod test-grpc-5afb529c-55bd-494c-a152-46467d6f8c51 in namespace container-probe-898
  E0904 15:37:28.608536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:29.608599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:29.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 15:37:29.75
  STEP: Destroying namespace "container-probe-898" for this suite. @ 09/04/23 15:37:29.758
• [242.295 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 09/04/23 15:37:29.761
  Sep  4 15:37:29.761: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/23 15:37:29.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:37:29.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:37:29.771
  Sep  4 15:37:29.773: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:37:30.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2295" for this suite. @ 09/04/23 15:37:30.303
• [0.546 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 09/04/23 15:37:30.307
  Sep  4 15:37:30.307: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 15:37:30.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:37:30.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:37:30.316
  STEP: Creating a ResourceQuota with terminating scope @ 09/04/23 15:37:30.317
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/23 15:37:30.32
  E0904 15:37:30.608704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:31.609434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/04/23 15:37:32.322
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/23 15:37:32.325
  E0904 15:37:32.609763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:33.609825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/04/23 15:37:34.327
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/04/23 15:37:34.332
  E0904 15:37:34.610798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:35.610933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/04/23 15:37:36.334
  E0904 15:37:36.611859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:37.612520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/04/23 15:37:38.336
  STEP: Ensuring resource quota status released the pod usage @ 09/04/23 15:37:38.341
  E0904 15:37:38.613359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:39.613485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/04/23 15:37:40.343
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/04/23 15:37:40.351
  E0904 15:37:40.613651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:41.613726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/04/23 15:37:42.352
  E0904 15:37:42.614349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:43.614420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/04/23 15:37:44.354
  STEP: Ensuring resource quota status released the pod usage @ 09/04/23 15:37:44.36
  E0904 15:37:44.614533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:45.614659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:37:46.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-30" for this suite. @ 09/04/23 15:37:46.364
• [16.059 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 09/04/23 15:37:46.366
  Sep  4 15:37:46.366: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/23 15:37:46.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:37:46.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:37:46.374
  Sep  4 15:37:46.379: INFO: Waiting up to 1m0s for all nodes to be ready
  E0904 15:37:46.614803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:47.615498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:48.615558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:49.615694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:50.615824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:51.615973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:52.616238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:53.616334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:54.616389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:55.617381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:56.617828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:57.618510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:58.619082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:37:59.619947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:00.620393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:01.620420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:02.621075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:03.621467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:04.622040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:05.622171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:06.623030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:07.623341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:08.623808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:09.623894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:10.624408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:11.625470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:12.625910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:13.626054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:14.626612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:15.626746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:16.627188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:17.627059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:18.627465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:19.627975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:20.628467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:21.629472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:22.630107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:23.630224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:24.630807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:25.631321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:26.631893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:27.632051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:28.632713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:29.633701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:30.634245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:31.634492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:32.634840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:33.635674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:34.635783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:35.636003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:36.636453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:37.636763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:38.637391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:39.637520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:40.637915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:41.638228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:42.638753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:43.639582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:44.639728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:45.640171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:38:46.389: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/04/23 15:38:46.39
  Sep  4 15:38:46.398: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep  4 15:38:46.401: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep  4 15:38:46.411: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep  4 15:38:46.416: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep  4 15:38:46.426: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep  4 15:38:46.429: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/04/23 15:38:46.429
  E0904 15:38:46.640759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:47.641636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/04/23 15:38:48.44
  E0904 15:38:48.642207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:49.642346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:50.642870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:51.642955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:38:52.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6392" for this suite. @ 09/04/23 15:38:52.47
• [66.106 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/04/23 15:38:52.472
  Sep  4 15:38:52.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:38:52.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:38:52.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:38:52.479
  STEP: Creating the pod @ 09/04/23 15:38:52.481
  E0904 15:38:52.643411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:53.643959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:54.644701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:38:55.003: INFO: Successfully updated pod "annotationupdatece4ee274-1663-45a4-afa0-17bf9a2fcfd7"
  E0904 15:38:55.644785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:56.645470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:57.645529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:38:58.645761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:38:59.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6929" for this suite. @ 09/04/23 15:38:59.015
• [6.546 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/04/23 15:38:59.018
  Sep  4 15:38:59.018: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sched-pred @ 09/04/23 15:38:59.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:38:59.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:38:59.029
  Sep  4 15:38:59.031: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep  4 15:38:59.036: INFO: Waiting for terminating namespaces to be deleted...
  Sep  4 15:38:59.038: INFO: 
  Logging pods the apiserver thinks is on node control-panel-01 before test
  Sep  4 15:38:59.050: INFO: calico-node-xrnwn from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.050: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 15:38:59.050: INFO: node-local-dns-9x8s5 from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.050: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 15:38:59.050: INFO: annotationupdatece4ee274-1663-45a4-afa0-17bf9a2fcfd7 from projected-6929 started at 2023-09-04 15:38:52 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.050: INFO: 	Container client-container ready: true, restart count 0
  Sep  4 15:38:59.050: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-stzx5 from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 15:38:59.050: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 15:38:59.050: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  4 15:38:59.050: INFO: 
  Logging pods the apiserver thinks is on node worker-01 before test
  Sep  4 15:38:59.058: INFO: calico-kube-controllers-86b55cf789-rxvqz from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.058: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep  4 15:38:59.058: INFO: calico-node-skg92 from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.058: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 15:38:59.058: INFO: kubernetes-dashboard-74fb9f77fb-g9q9c from kube-system started at 2023-09-04 14:11:31 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.058: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Sep  4 15:38:59.058: INFO: node-local-dns-zpjfs from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.058: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 15:38:59.058: INFO: sonobuoy-e2e-job-95efc8522fa94e6d from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 15:38:59.058: INFO: 	Container e2e ready: true, restart count 0
  Sep  4 15:38:59.058: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 15:38:59.058: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-s8c5l from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 15:38:59.058: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 15:38:59.058: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep  4 15:38:59.058: INFO: 
  Logging pods the apiserver thinks is on node worker-02 before test
  Sep  4 15:38:59.067: INFO: calico-node-j5dlh from kube-system started at 2023-09-04 14:11:02 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.067: INFO: 	Container calico-node ready: true, restart count 0
  Sep  4 15:38:59.067: INFO: coredns-7bc88ddb8b-8qz6h from kube-system started at 2023-09-04 14:11:27 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.067: INFO: 	Container coredns ready: true, restart count 0
  Sep  4 15:38:59.067: INFO: dashboard-metrics-scraper-77b667b99d-mc8xl from kube-system started at 2023-09-04 15:18:11 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.067: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Sep  4 15:38:59.067: INFO: metrics-server-dfb478476-hvrrl from kube-system started at 2023-09-04 15:18:11 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.067: INFO: 	Container metrics-server ready: true, restart count 0
  Sep  4 15:38:59.067: INFO: node-local-dns-lpzbf from kube-system started at 2023-09-04 14:11:28 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.067: INFO: 	Container node-cache ready: true, restart count 0
  Sep  4 15:38:59.067: INFO: sonobuoy from sonobuoy started at 2023-09-04 14:11:58 +0000 UTC (1 container statuses recorded)
  Sep  4 15:38:59.067: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep  4 15:38:59.067: INFO: sonobuoy-systemd-logs-daemon-set-0bfe2be3c46f4995-x5kgm from sonobuoy started at 2023-09-04 14:12:05 +0000 UTC (2 container statuses recorded)
  Sep  4 15:38:59.067: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep  4 15:38:59.067: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/23 15:38:59.067
  E0904 15:38:59.646794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:00.647600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/23 15:39:01.078
  STEP: Trying to apply a random label on the found node. @ 09/04/23 15:39:01.084
  STEP: verifying the node has the label kubernetes.io/e2e-562b1dcb-e8fa-4e1a-b7c8-199acfb2007b 42 @ 09/04/23 15:39:01.089
  STEP: Trying to relaunch the pod, now with labels. @ 09/04/23 15:39:01.091
  E0904 15:39:01.648333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:02.649313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-562b1dcb-e8fa-4e1a-b7c8-199acfb2007b off the node control-panel-01 @ 09/04/23 15:39:03.102
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-562b1dcb-e8fa-4e1a-b7c8-199acfb2007b @ 09/04/23 15:39:03.108
  Sep  4 15:39:03.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8904" for this suite. @ 09/04/23 15:39:03.114
• [4.099 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 09/04/23 15:39:03.117
  Sep  4 15:39:03.117: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/23 15:39:03.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:39:03.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:39:03.128
  Sep  4 15:39:03.137: INFO: Waiting up to 1m0s for all nodes to be ready
  E0904 15:39:03.649412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:04.649695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:05.649985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:06.650278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:07.650907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:08.651030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:09.651531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:10.651661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:11.651959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:12.652167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:13.652840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:14.653509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:15.653996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:16.654132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:17.654850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:18.654923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:19.655925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:20.656061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:21.656445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:22.656701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:23.657177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:24.657495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:25.658537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:26.658849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:27.659498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:28.659886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:29.660330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:30.660421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:31.661335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:32.661480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:33.662472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:34.662607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:35.662795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:36.662861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:37.663282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:38.664087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:39.664753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:40.664820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:41.665472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:42.666260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:43.666559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:44.666818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:45.666941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:46.667015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:47.667800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:48.667940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:49.668400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:50.668431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:51.669243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:52.670290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:53.670390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:54.671367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:55.671674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:56.671736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:57.672760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:58.672832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:39:59.673206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:00.673476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:01.673526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:02.673770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:03.146: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/04/23 15:40:03.147
  Sep  4 15:40:03.154: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep  4 15:40:03.157: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep  4 15:40:03.165: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep  4 15:40:03.169: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep  4 15:40:03.179: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep  4 15:40:03.182: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/04/23 15:40:03.182
  E0904 15:40:03.674792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:04.675672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/04/23 15:40:05.191
  E0904 15:40:05.675760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:06.676640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:07.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-792" for this suite. @ 09/04/23 15:40:07.232
• [64.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 09/04/23 15:40:07.235
  Sep  4 15:40:07.235: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename server-version @ 09/04/23 15:40:07.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:07.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:07.246
  STEP: Request ServerVersion @ 09/04/23 15:40:07.247
  STEP: Confirm major version @ 09/04/23 15:40:07.247
  Sep  4 15:40:07.247: INFO: Major version: 1
  STEP: Confirm minor version @ 09/04/23 15:40:07.247
  Sep  4 15:40:07.247: INFO: cleanMinorVersion: 28
  Sep  4 15:40:07.247: INFO: Minor version: 28
  Sep  4 15:40:07.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5490" for this suite. @ 09/04/23 15:40:07.249
• [0.015 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/04/23 15:40:07.251
  Sep  4 15:40:07.251: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 15:40:07.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:07.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:07.257
  STEP: creating the pod @ 09/04/23 15:40:07.259
  STEP: setting up watch @ 09/04/23 15:40:07.259
  STEP: submitting the pod to kubernetes @ 09/04/23 15:40:07.37
  STEP: verifying the pod is in kubernetes @ 09/04/23 15:40:07.374
  STEP: verifying pod creation was observed @ 09/04/23 15:40:07.375
  E0904 15:40:07.676995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:08.677254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/04/23 15:40:09.381
  STEP: verifying pod deletion was observed @ 09/04/23 15:40:09.383
  E0904 15:40:09.677478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:09.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6635" for this suite. @ 09/04/23 15:40:09.992
• [2.744 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/04/23 15:40:09.995
  Sep  4 15:40:09.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 15:40:09.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:10.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:10.002
  Sep  4 15:40:10.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4032" for this suite. @ 09/04/23 15:40:10.018
• [0.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 09/04/23 15:40:10.02
  Sep  4 15:40:10.020: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename field-validation @ 09/04/23 15:40:10.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:10.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:10.027
  Sep  4 15:40:10.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 15:40:10.678025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:11.678128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0904 15:40:12.566402      22 warnings.go:70] unknown field "alpha"
  W0904 15:40:12.566415      22 warnings.go:70] unknown field "beta"
  W0904 15:40:12.566418      22 warnings.go:70] unknown field "delta"
  W0904 15:40:12.566421      22 warnings.go:70] unknown field "epsilon"
  W0904 15:40:12.566423      22 warnings.go:70] unknown field "gamma"
  E0904 15:40:12.679043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:13.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9201" for this suite. @ 09/04/23 15:40:13.083
• [3.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 09/04/23 15:40:13.086
  Sep  4 15:40:13.086: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename job @ 09/04/23 15:40:13.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:13.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:13.092
  STEP: Creating Indexed job @ 09/04/23 15:40:13.096
  STEP: Ensuring job reaches completions @ 09/04/23 15:40:13.098
  E0904 15:40:13.679448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:14.680404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:15.681282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:16.681481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:17.681693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:18.682495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:19.682656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:20.682761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/04/23 15:40:21.1
  Sep  4 15:40:21.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7439" for this suite. @ 09/04/23 15:40:21.103
• [8.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 09/04/23 15:40:21.105
  Sep  4 15:40:21.105: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/23 15:40:21.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:21.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:21.114
  Sep  4 15:40:21.115: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 15:40:21.683811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:22.684385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:23.684740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:24.685018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:25.685270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:26.686304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:27.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8093" for this suite. @ 09/04/23 15:40:27.206
• [6.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 09/04/23 15:40:27.208
  Sep  4 15:40:27.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replicaset @ 09/04/23 15:40:27.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:27.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:27.215
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/04/23 15:40:27.217
  Sep  4 15:40:27.228: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0904 15:40:27.686695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:28.687540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:29.687675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:30.688679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:31.689482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:32.230: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/23 15:40:32.23
  STEP: getting scale subresource @ 09/04/23 15:40:32.23
  STEP: updating a scale subresource @ 09/04/23 15:40:32.231
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/04/23 15:40:32.233
  STEP: Patch a scale subresource @ 09/04/23 15:40:32.235
  Sep  4 15:40:32.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1573" for this suite. @ 09/04/23 15:40:32.241
• [5.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/04/23 15:40:32.247
  Sep  4 15:40:32.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 15:40:32.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:32.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:32.257
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 15:40:32.259
  E0904 15:40:32.690241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:33.691065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:40:34.265
  Sep  4 15:40:34.266: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-c0b093ae-8dcd-4873-9e50-c1ad3f1d325b container client-container: <nil>
  STEP: delete the pod @ 09/04/23 15:40:34.274
  Sep  4 15:40:34.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8195" for this suite. @ 09/04/23 15:40:34.282
• [2.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 09/04/23 15:40:34.285
  Sep  4 15:40:34.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename namespaces @ 09/04/23 15:40:34.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:34.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:34.293
  STEP: Creating namespace "e2e-ns-qwwv5" @ 09/04/23 15:40:34.294
  Sep  4 15:40:34.299: INFO: Namespace "e2e-ns-qwwv5-3752" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-qwwv5-3752" @ 09/04/23 15:40:34.299
  Sep  4 15:40:34.303: INFO: Namespace "e2e-ns-qwwv5-3752" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-qwwv5-3752" @ 09/04/23 15:40:34.303
  Sep  4 15:40:34.306: INFO: Namespace "e2e-ns-qwwv5-3752" has []v1.FinalizerName{"kubernetes"}
  Sep  4 15:40:34.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6275" for this suite. @ 09/04/23 15:40:34.307
  STEP: Destroying namespace "e2e-ns-qwwv5-3752" for this suite. @ 09/04/23 15:40:34.309
• [0.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 09/04/23 15:40:34.311
  Sep  4 15:40:34.311: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename gc @ 09/04/23 15:40:34.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:34.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:34.318
  Sep  4 15:40:34.333: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"6d0d5132-a13b-4aed-901a-31744c9f8fe7", Controller:(*bool)(0xc0053ddd6a), BlockOwnerDeletion:(*bool)(0xc0053ddd6b)}}
  Sep  4 15:40:34.336: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"b30da3a7-ab4d-47a6-9f7e-44765a174677", Controller:(*bool)(0xc003b5c1be), BlockOwnerDeletion:(*bool)(0xc003b5c1bf)}}
  Sep  4 15:40:34.339: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"e967fb84-b7fb-41e4-9a1b-bdd60f612bf7", Controller:(*bool)(0xc006e8eba6), BlockOwnerDeletion:(*bool)(0xc006e8eba7)}}
  E0904 15:40:34.691244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:35.691374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:36.692101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:37.692772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:38.693483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:39.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-850" for this suite. @ 09/04/23 15:40:39.346
• [5.037 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/04/23 15:40:39.349
  Sep  4 15:40:39.349: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/23 15:40:39.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:39.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:39.36
  Sep  4 15:40:39.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1357" for this suite. @ 09/04/23 15:40:39.375
• [0.028 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 09/04/23 15:40:39.377
  Sep  4 15:40:39.377: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename sysctl @ 09/04/23 15:40:39.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:39.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:39.385
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/04/23 15:40:39.388
  STEP: Watching for error events or started pod @ 09/04/23 15:40:39.394
  E0904 15:40:39.693570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:40.693667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/04/23 15:40:41.396
  STEP: Checking that the pod succeeded @ 09/04/23 15:40:41.398
  STEP: Getting logs from the pod @ 09/04/23 15:40:41.398
  STEP: Checking that the sysctl is actually updated @ 09/04/23 15:40:41.401
  Sep  4 15:40:41.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1618" for this suite. @ 09/04/23 15:40:41.402
• [2.027 seconds]
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 09/04/23 15:40:41.404
  Sep  4 15:40:41.404: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename dns @ 09/04/23 15:40:41.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:41.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:41.413
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/04/23 15:40:41.414
  Sep  4 15:40:41.416: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4879  dbefe7dd-acdc-46f8-b7bb-5bcf6e4efc4d 35120 0 2023-09-04 15:40:41 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-09-04 15:40:41 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4pbxs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4pbxs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0904 15:40:41.694494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:42.694813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/04/23 15:40:43.42
  Sep  4 15:40:43.420: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4879 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:40:43.420: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:40:43.420: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:40:43.420: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-4879/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/04/23 15:40:43.472
  Sep  4 15:40:43.472: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4879 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep  4 15:40:43.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  Sep  4 15:40:43.472: INFO: ExecWithOptions: Clientset creation
  Sep  4 15:40:43.472: INFO: ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-4879/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep  4 15:40:43.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep  4 15:40:43.505: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-4879" for this suite. @ 09/04/23 15:40:43.51
• [2.110 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/04/23 15:40:43.514
  Sep  4 15:40:43.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename deployment @ 09/04/23 15:40:43.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:43.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:43.521
  Sep  4 15:40:43.523: INFO: Creating deployment "webserver-deployment"
  Sep  4 15:40:43.525: INFO: Waiting for observed generation 1
  E0904 15:40:43.695870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:44.696041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:45.529: INFO: Waiting for all required pods to come up
  Sep  4 15:40:45.530: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/04/23 15:40:45.53
  E0904 15:40:45.696186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:46.696286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:47.535: INFO: Waiting for deployment "webserver-deployment" to complete
  Sep  4 15:40:47.537: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Sep  4 15:40:47.541: INFO: Updating deployment webserver-deployment
  Sep  4 15:40:47.541: INFO: Waiting for observed generation 2
  E0904 15:40:47.696925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:48.697484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:49.545: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Sep  4 15:40:49.546: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Sep  4 15:40:49.547: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep  4 15:40:49.550: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Sep  4 15:40:49.550: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Sep  4 15:40:49.550: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep  4 15:40:49.552: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Sep  4 15:40:49.552: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Sep  4 15:40:49.559: INFO: Updating deployment webserver-deployment
  Sep  4 15:40:49.559: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Sep  4 15:40:49.560: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Sep  4 15:40:49.562: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  E0904 15:40:49.698018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:50.698089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:51.567: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1a4de9b-4a21-4f53-8580-ce8a81ccef29",
      ResourceVersion: (string) (len=5) "35693",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  4 15:40:51.569: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
      ResourceVersion: (string) (len=5) "35487",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d1a4de9b-4a21-4f53-8580-ce8a81ccef29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 31 61 34 64 65  39 62 2d 34 61 32 31 2d  |\"d1a4de9b-4a21-|
              00000120  34 66 35 33 2d 38 35 38  30 2d 63 65 38 61 38 31  |4f53-8580-ce8a81|
              00000130  63 63 65 66 32 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ccef29\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 15:40:51.569: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Sep  4 15:40:51.570: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
      ResourceVersion: (string) (len=5) "35692",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d1a4de9b-4a21-4f53-8580-ce8a81ccef29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 31 61 34 64 65  39 62 2d 34 61 32 31 2d  |\"d1a4de9b-4a21-|
              00000120  34 66 35 33 2d 38 35 38  30 2d 63 65 38 61 38 31  |4f53-8580-ce8a81|
              00000130  63 63 65 66 32 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ccef29\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 15:40:51.574: INFO: Pod "webserver-deployment-557759b7c7-4dmng" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4dmng",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "990b11c0-78ed-4a6f-b87a-e73673418d10",
      ResourceVersion: (string) (len=5) "35309",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 32  34 39 2e 31 38 38 5c 22  |172.20.249.188\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qdcr2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qdcr2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.249.188",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.249.188"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9539138dde7ca8fb1c87d81ccc65a9090aeb04fccfd7d7ce3e5a2720c5f56c04",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.575: INFO: Pod "webserver-deployment-557759b7c7-79vzd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-79vzd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0ac8c30-04dc-4ac8-8ba0-fafc3389ba09",
      ResourceVersion: (string) (len=5) "35680",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 32  34 39 2e 31 36 32 5c 22  |172.20.249.162\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hxkgw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hxkgw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.249.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.249.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6b2429d63a3669a2f3cf04ecd73e1207ce3f657c8f6ed382d418cc195b68873e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.576: INFO: Pod "webserver-deployment-557759b7c7-7ktnm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7ktnm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "455b4857-d44a-4537-baaa-13e31c17e918",
      ResourceVersion: (string) (len=5) "35669",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 35 32 5c 22  |172.20.132.152\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pchtx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pchtx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cce762ec47e01fe27acc54f96f55c3d03f36d119e92af53b694228c5bf8f7ee6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.577: INFO: Pod "webserver-deployment-557759b7c7-89ztb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-89ztb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "305a6854-2a54-44d1-817f-29f1122ad69f",
      ResourceVersion: (string) (len=5) "35271",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 35 35 5c 22  |172.20.132.155\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fc2mq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fc2mq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://583ca5fc6418cfeb827ce51efb9a705e7c099fef59da6a71f583f2334c3d1307",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.578: INFO: Pod "webserver-deployment-557759b7c7-926fv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-926fv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a563990-724f-4d6d-a0bb-5a08b00a7008",
      ResourceVersion: (string) (len=5) "35663",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 37 32 5c 22  |172.20.132.172\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xvz7f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xvz7f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c494bd0a9ec0cb7214f1c29ce07151323d955d5245851063574829e8a05cf276",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.579: INFO: Pod "webserver-deployment-557759b7c7-ccm6l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ccm6l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7ad6c89-9421-4a21-8f83-1257c418b84e",
      ResourceVersion: (string) (len=5) "35264",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 34 39 5c 22  |172.20.132.149\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-69tx2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-69tx2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438844,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://551126d216d27a15c8f95c2af4ded39900c07a4aec6a977f7adfdfcc1285eb93",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.581: INFO: Pod "webserver-deployment-557759b7c7-d4mgn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-d4mgn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73d4968b-164d-44d7-8467-91190e870167",
      ResourceVersion: (string) (len=5) "35659",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 36 36 5c 22  |172.20.132.166\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v6ldt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v6ldt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6bf73727d553940285dee137b62310f1567f168e15069c253b5ad97be610cf0d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.582: INFO: Pod "webserver-deployment-557759b7c7-dhk68" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dhk68",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23d4c494-9984-4241-9641-41157c184964",
      ResourceVersion: (string) (len=5) "35286",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 33  33 2e 39 32 5c 22 7d 22  |172.20.33.92\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-827n6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-827n6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.20.33.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.33.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://365c87b6c3b4f5bc0b0ecc6f058401d483d1e319130466bfd06cd4554bd1eeb7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.583: INFO: Pod "webserver-deployment-557759b7c7-fbvgg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fbvgg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70e96033-c444-47cc-a279-5fe12330ec65",
      ResourceVersion: (string) (len=5) "35281",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 33  33 2e 39 33 5c 22 7d 22  |172.20.33.93\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fkxwk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fkxwk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.20.33.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.33.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://702f31ed894417a1eee9e7f3a78e86840a6a673e24e272e9e8a67549aff3375c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.584: INFO: Pod "webserver-deployment-557759b7c7-fhh9v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fhh9v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7c54c4e-9af9-4fa6-a5eb-083ad0447f56",
      ResourceVersion: (string) (len=5) "35674",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 32  34 39 2e 31 36 36 5c 22  |172.20.249.166\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qgft6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qgft6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.249.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.249.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e8d7ce3e39158d4535f5b5742b27eca5ca61f4560b4ed1fb81b1a49f529c7178",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.585: INFO: Pod "webserver-deployment-557759b7c7-hlwm9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hlwm9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d222fbb-ff07-4a2e-90a7-7a7547f1b244",
      ResourceVersion: (string) (len=5) "35666",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 34 33 5c 22  |172.20.132.143\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qrlvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qrlvf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7d2ed379f2e9453ca8ea6e21768b9479204b15c9d003e50f350d34dd14b97b41",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.586: INFO: Pod "webserver-deployment-557759b7c7-hsv74" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hsv74",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e67d0152-507e-4061-b04d-665b903e6bde",
      ResourceVersion: (string) (len=5) "35629",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 33  33 2e 38 38 5c 22 7d 22  |172.20.33.88\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6gbw2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6gbw2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.20.33.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.33.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d374be12faac1a1d113e7cd5573eeda65fa4088eeb3c7feb8e57d89a062c608d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.587: INFO: Pod "webserver-deployment-557759b7c7-l4wlm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l4wlm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6936607-9561-42cd-bfb6-9858417424b7",
      ResourceVersion: (string) (len=5) "35311",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 32  34 39 2e 31 36 37 5c 22  |172.20.249.167\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nj2nw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nj2nw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.249.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.249.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ba71bc6838aab9de856f672150285a3985d06b2a4d73a8852b42d57a700fd1ab",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.589: INFO: Pod "webserver-deployment-557759b7c7-l7lpx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l7lpx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5536651-a713-42f4-8d88-0bff3568bcc9",
      ResourceVersion: (string) (len=5) "35690",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 33  33 2e 38 30 5c 22 7d 22  |172.20.33.80\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jwnrp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jwnrp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.20.33.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.33.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2a0291083e5daa5b75fc5b5dfb4dcd5da110f738228eb0f56eee305f01e83a8e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.590: INFO: Pod "webserver-deployment-557759b7c7-ptcfz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ptcfz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26ef843b-f425-415d-a954-c6fdcb617985",
      ResourceVersion: (string) (len=5) "35685",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 33  33 2e 31 31 37 5c 22 7d  |172.20.33.117\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ztx6q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ztx6q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.20.33.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.33.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a648018e8d2bfcd8dd3671d17cb60245943e2c25a06e2f4d895cdc05043eef43",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.591: INFO: Pod "webserver-deployment-557759b7c7-qhq7c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qhq7c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33cb0687-99b2-4a33-8b1e-cbf99ecba2bc",
      ResourceVersion: (string) (len=5) "35687",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 33  33 2e 31 32 33 5c 22 7d  |172.20.33.123\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gj9mg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gj9mg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "172.20.33.123",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.33.123"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2abb880317f2aaa4b67ea7142ba3b0aabc1a2e43f77f64433b798a8364e2e6fc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.592: INFO: Pod "webserver-deployment-557759b7c7-rs6lb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rs6lb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "251065bb-7807-4b68-974c-d3123a0053bf",
      ResourceVersion: (string) (len=5) "35676",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 32  34 39 2e 31 36 34 5c 22  |172.20.249.164\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5n7f8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5n7f8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.249.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.249.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://db87dcb4b48b08477a908bf8f790a6cda2260b69bd841a9974709e9e433dd7db",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.593: INFO: Pod "webserver-deployment-557759b7c7-rwr9x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rwr9x",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5abdc0bf-4c88-4024-8447-26e95c00c73c",
      ResourceVersion: (string) (len=5) "35657",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 35 33 5c 22  |172.20.132.153\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wxnxj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wxnxj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438850,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4b3738d6e173b8ec9a443d4d5398c21d9d78978e460fe31156857c1e87073322",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.594: INFO: Pod "webserver-deployment-557759b7c7-wpt96" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wpt96",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ee45952-6c84-4ca4-a6b2-334f216b4bbe",
      ResourceVersion: (string) (len=5) "35283",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 33  33 2e 37 33 5c 22 7d 22  |172.20.33.73\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5fz7b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5fz7b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.20.33.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.33.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c6ecc22d3fd76e97024fe1eafb6ac4b895e907b9c186717ebf13b5a77f08d592",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.595: INFO: Pod "webserver-deployment-557759b7c7-xcz4q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xcz4q",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52f46c32-980d-4327-b2ef-3941da6a7fc9",
      ResourceVersion: (string) (len=5) "35315",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d6f28685-9dd0-4ba5-8060-65f46c14e0f4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  66 32 38 36 38 35 2d 39  |d\":\"d6f28685-9|
              00000090  64 64 30 2d 34 62 61 35  2d 38 30 36 30 2d 36 35  |dd0-4ba5-8060-65|
              000000a0  66 34 36 63 31 34 65 30  66 34 5c 22 7d 22 3a 7b  |f46c14e0f4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 32  34 39 2e 31 34 31 5c 22  |172.20.249.141\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9qd9s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9qd9s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.249.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.249.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a5e09a6febe7191c92bcc80e9193c49a04279ffdd1eab338106bf0f839ab5244",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.596: INFO: Pod "webserver-deployment-9b4f5bf69-97cgs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-97cgs",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04d8ca2b-125d-4281-8507-4c5b08528b6b",
      ResourceVersion: (string) (len=5) "35604",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 37 32  |"k:{\"ip\":\"172|
              00000200  2e 32 30 2e 32 34 39 2e  31 37 33 5c 22 7d 22 3a  |.20.249.173\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pfz52",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pfz52",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.249.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.249.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.597: INFO: Pod "webserver-deployment-9b4f5bf69-9jqnm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9jqnm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d0350f6-d71a-4b52-bb05-df6429181af1",
      ResourceVersion: (string) (len=5) "35547",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 37 32  |"k:{\"ip\":\"172|
              00000200  2e 32 30 2e 31 33 32 2e  31 33 39 5c 22 7d 22 3a  |.20.132.139\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v5g4x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v5g4x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.598: INFO: Pod "webserver-deployment-9b4f5bf69-9lr7z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9lr7z",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6925fc1f-e6ae-42d6-8f28-6e5d71d4e800",
      ResourceVersion: (string) (len=5) "35488",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kmrth",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kmrth",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.599: INFO: Pod "webserver-deployment-9b4f5bf69-bklcg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bklcg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3ebc210-4acc-40c3-977d-ae9472c81462",
      ResourceVersion: (string) (len=5) "35473",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ggr8r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ggr8r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.600: INFO: Pod "webserver-deployment-9b4f5bf69-dnb7c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dnb7c",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d134788-a670-4d3e-90ac-d4ef6014c080",
      ResourceVersion: (string) (len=5) "35542",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=566) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 37 32  |"k:{\"ip\":\"172|
              00000200  2e 32 30 2e 31 33 32 2e  31 33 30 5c 22 7d 22 3a  |.20.132.130\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000220  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000230  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n5rzr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n5rzr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.130",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.130"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.600: INFO: Pod "webserver-deployment-9b4f5bf69-ff2pn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ff2pn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c345b932-7aa7-46f4-a577-9e73078fca50",
      ResourceVersion: (string) (len=5) "35505",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n5w6s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n5w6s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.601: INFO: Pod "webserver-deployment-9b4f5bf69-g2ckz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-g2ckz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a23d14e-0339-4954-b407-aadc27de2ded",
      ResourceVersion: (string) (len=5) "35516",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p86q4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p86q4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.602: INFO: Pod "webserver-deployment-9b4f5bf69-lr6z4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lr6z4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "546e1089-88b3-449b-a3aa-d2bce815d83f",
      ResourceVersion: (string) (len=5) "35492",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-szmlx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-szmlx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.602: INFO: Pod "webserver-deployment-9b4f5bf69-mkzs2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mkzs2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bb91fee-48cc-4a28-918b-2f6927323ce9",
      ResourceVersion: (string) (len=5) "35500",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6kpvj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6kpvj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.603: INFO: Pod "webserver-deployment-9b4f5bf69-n79nm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-n79nm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d586d48-dc45-4e3e-aafd-91dbf7fffbb3",
      ResourceVersion: (string) (len=5) "35490",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xglpf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xglpf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.9",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.604: INFO: Pod "webserver-deployment-9b4f5bf69-rvfw5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rvfw5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2a4c174-bb11-48ea-aa10-9cbf8c13e6cd",
      ResourceVersion: (string) (len=5) "35510",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7gzx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7gzx8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.605: INFO: Pod "webserver-deployment-9b4f5bf69-wvtf4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wvtf4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8809eaa-c395-4c20-93ab-6e373120a74f",
      ResourceVersion: (string) (len=5) "35634",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=564) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 37 32  |"k:{\"ip\":\"172|
              00000200  2e 32 30 2e 33 33 2e 38  33 5c 22 7d 22 3a 7b 22  |.20.33.83\"}":{"|
              00000210  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000220  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000230  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kbvrx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kbvrx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.20.33.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.33.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.605: INFO: Pod "webserver-deployment-9b4f5bf69-z5s8r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z5s8r",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-5597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fad7c00-bf5e-4ba7-a275-40cad11e1b4a",
      ResourceVersion: (string) (len=5) "35636",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d21e4aaf-3b65-4d88-9377-e262617a505b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  31 65 34 61 61 66 2d 33  |d\":\"d21e4aaf-3|
              00000090  62 36 35 2d 34 64 38 38  2d 39 33 37 37 2d 65 32  |b65-4d88-9377-e2|
              000000a0  36 32 36 31 37 61 35 30  35 62 5c 22 7d 22 3a 7b  |62617a505b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=564) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 37 32  |"k:{\"ip\":\"172|
              00000200  2e 32 30 2e 33 33 2e 39  31 5c 22 7d 22 3a 7b 22  |.20.33.91\"}":{"|
              00000210  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000220  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000230  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-plcmn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-plcmn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.254.0.10",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "172.20.33.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.20.33.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:40:51.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5597" for this suite. @ 09/04/23 15:40:51.608
• [8.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 09/04/23 15:40:51.611
  Sep  4 15:40:51.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 15:40:51.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:51.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:51.619
  STEP: Setting up server cert @ 09/04/23 15:40:51.628
  E0904 15:40:51.698352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 15:40:51.993
  STEP: Deploying the webhook pod @ 09/04/23 15:40:51.996
  STEP: Wait for the deployment to be ready @ 09/04/23 15:40:52.001
  Sep  4 15:40:52.005: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 15:40:52.698803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:53.699755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 15:40:54.01
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 15:40:54.015
  E0904 15:40:54.700274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:55.015: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep  4 15:40:55.018: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9495-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/23 15:40:55.533
  STEP: Creating a custom resource while v1 is storage version @ 09/04/23 15:40:55.541
  E0904 15:40:55.700914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:56.701699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/04/23 15:40:57.594
  STEP: Patching the custom resource while v2 is storage version @ 09/04/23 15:40:57.656
  E0904 15:40:57.701982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:40:57.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-364" for this suite. @ 09/04/23 15:40:58.397
  STEP: Destroying namespace "webhook-markers-1036" for this suite. @ 09/04/23 15:40:58.403
• [6.796 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 09/04/23 15:40:58.407
  Sep  4 15:40:58.407: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 15:40:58.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:40:58.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:40:58.42
  STEP: Creating a pod to test downward api env vars @ 09/04/23 15:40:58.423
  E0904 15:40:58.702639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:40:59.703364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:41:00.432
  Sep  4 15:41:00.434: INFO: Trying to get logs from node control-panel-01 pod downward-api-7dea56cf-5d5c-4818-ab03-b07294e60acc container dapi-container: <nil>
  STEP: delete the pod @ 09/04/23 15:41:00.448
  Sep  4 15:41:00.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4148" for this suite. @ 09/04/23 15:41:00.458
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 09/04/23 15:41:00.461
  Sep  4 15:41:00.461: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename statefulset @ 09/04/23 15:41:00.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:41:00.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:41:00.47
  STEP: Creating service test in namespace statefulset-6269 @ 09/04/23 15:41:00.472
  STEP: Creating a new StatefulSet @ 09/04/23 15:41:00.475
  Sep  4 15:41:00.481: INFO: Found 0 stateful pods, waiting for 3
  E0904 15:41:00.703937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:01.704087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:02.704928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:03.705534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:04.705671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:05.705794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:06.705926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:07.706769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:08.706985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:09.707065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:41:10.483: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 15:41:10.483: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 15:41:10.483: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/04/23 15:41:10.487
  Sep  4 15:41:10.501: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/04/23 15:41:10.501
  E0904 15:41:10.707528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:11.708343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:12.708579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:13.708963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:14.709689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:15.709797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:16.710206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:17.711135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:18.711429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:19.711369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/04/23 15:41:20.507
  STEP: Performing a canary update @ 09/04/23 15:41:20.507
  Sep  4 15:41:20.520: INFO: Updating stateful set ss2
  Sep  4 15:41:20.523: INFO: Waiting for Pod statefulset-6269/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0904 15:41:20.711384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:21.711522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:22.711803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:23.711881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:24.711999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:25.712086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:26.712211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:27.712842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:28.712925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:29.713470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/04/23 15:41:30.526
  Sep  4 15:41:30.545: INFO: Found 1 stateful pods, waiting for 3
  E0904 15:41:30.713566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:31.713705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:32.713958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:33.714094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:34.714248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:35.715093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:36.715245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:37.715828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:38.715907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:39.716029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:41:40.548: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 15:41:40.548: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep  4 15:41:40.548: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/04/23 15:41:40.55
  Sep  4 15:41:40.564: INFO: Updating stateful set ss2
  Sep  4 15:41:40.567: INFO: Waiting for Pod statefulset-6269/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0904 15:41:40.716470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:41.717478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:42.718369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:43.718496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:44.719166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:45.719252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:46.719514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:47.720118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:48.720235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:49.720366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:41:50.585: INFO: Updating stateful set ss2
  Sep  4 15:41:50.588: INFO: Waiting for StatefulSet statefulset-6269/ss2 to complete update
  Sep  4 15:41:50.588: INFO: Waiting for Pod statefulset-6269/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0904 15:41:50.721292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:51.721320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:52.721419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:53.722325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:54.722970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:55.723153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:56.723237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:57.723869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:58.724074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:41:59.724204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:00.591: INFO: Deleting all statefulset in ns statefulset-6269
  Sep  4 15:42:00.592: INFO: Scaling statefulset ss2 to 0
  E0904 15:42:00.725243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:01.726070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:02.726329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:03.726454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:04.726531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:05.727478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:06.727593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:07.727935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:08.728420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:09.729480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:10.600: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  4 15:42:10.601: INFO: Deleting statefulset ss2
  Sep  4 15:42:10.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6269" for this suite. @ 09/04/23 15:42:10.607
• [70.148 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/04/23 15:42:10.609
  Sep  4 15:42:10.609: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename deployment @ 09/04/23 15:42:10.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:10.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:10.617
  Sep  4 15:42:10.619: INFO: Creating simple deployment test-new-deployment
  Sep  4 15:42:10.623: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  E0904 15:42:10.730303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:11.730451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/04/23 15:42:12.627
  STEP: updating a scale subresource @ 09/04/23 15:42:12.628
  STEP: verifying the deployment Spec.Replicas was modified @ 09/04/23 15:42:12.63
  STEP: Patch a scale subresource @ 09/04/23 15:42:12.631
  Sep  4 15:42:12.639: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7415",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6d20ecc-dd77-4119-bc83-371a8590364c",
      ResourceVersion: (string) (len=5) "36656",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  4 15:42:12.642: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7415",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c7d8496-d8c6-49ac-9248-581c8e7a4ef7",
      ResourceVersion: (string) (len=5) "36660",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "d6d20ecc-dd77-4119-bc83-371a8590364c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 36 64 32 30 65  63 63 2d 64 64 37 37 2d  |\"d6d20ecc-dd77-|
              00000120  34 31 31 39 2d 62 63 38  33 2d 33 37 31 61 38 35  |4119-bc83-371a85|
              00000130  39 30 33 36 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |90364c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 15:42:12.648: INFO: Pod "test-new-deployment-557759b7c7-bdhx9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-bdhx9",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7415",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c53335b8-de5d-4f6e-8a89-4fbfd31ca500",
      ResourceVersion: (string) (len=5) "36650",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c7d8496-d8c6-49ac-9248-581c8e7a4ef7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  37 64 38 34 39 36 2d 64  |d\":\"6c7d8496-d|
              00000090  38 63 36 2d 34 39 61 63  2d 39 32 34 38 2d 35 38  |8c6-49ac-9248-58|
              000000a0  31 63 38 65 37 61 34 65  66 37 5c 22 7d 22 3a 7b  |1c8e7a4ef7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 39 31 5c 22  |172.20.132.191\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zh9z7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zh9z7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829438931,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f229fc78cf51692fbdcbe313d8acb4a94b61f586682da84ef7b4868a98b8238d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:42:12.649: INFO: Pod "test-new-deployment-557759b7c7-zpg6w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-zpg6w",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7415",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae4f119c-3d14-4e3a-acec-a85fd934c3ff",
      ResourceVersion: (string) (len=5) "36661",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829438932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c7d8496-d8c6-49ac-9248-581c8e7a4ef7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  37 64 38 34 39 36 2d 64  |d\":\"6c7d8496-d|
              00000090  38 63 36 2d 34 39 61 63  2d 39 32 34 38 2d 35 38  |8c6-49ac-9248-58|
              000000a0  31 63 38 65 37 61 34 65  66 37 5c 22 7d 22 3a 7b  |1c8e7a4ef7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6dzds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6dzds",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=9) "worker-02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829438932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:42:12.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7415" for this suite. @ 09/04/23 15:42:12.653
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 09/04/23 15:42:12.658
  Sep  4 15:42:12.658: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 15:42:12.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:12.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:12.67
  STEP: Setting up server cert @ 09/04/23 15:42:12.679
  E0904 15:42:12.730835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 15:42:12.984
  STEP: Deploying the webhook pod @ 09/04/23 15:42:12.987
  STEP: Wait for the deployment to be ready @ 09/04/23 15:42:12.992
  Sep  4 15:42:12.995: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 15:42:13.731747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:14.731960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 15:42:15
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 15:42:15.004
  E0904 15:42:15.732483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:16.005: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep  4 15:42:16.008: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6189-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/23 15:42:16.522
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/04/23 15:42:16.53
  E0904 15:42:16.733205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:17.733480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:18.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 15:42:18.734121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-3249" for this suite. @ 09/04/23 15:42:19.081
  STEP: Destroying namespace "webhook-markers-1092" for this suite. @ 09/04/23 15:42:19.084
• [6.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 09/04/23 15:42:19.087
  Sep  4 15:42:19.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 15:42:19.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:19.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:19.095
  STEP: creating a replication controller @ 09/04/23 15:42:19.096
  Sep  4 15:42:19.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 create -f -'
  Sep  4 15:42:19.223: INFO: stderr: ""
  Sep  4 15:42:19.223: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/23 15:42:19.223
  Sep  4 15:42:19.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  4 15:42:19.264: INFO: stderr: ""
  Sep  4 15:42:19.264: INFO: stdout: "update-demo-nautilus-7dsmb update-demo-nautilus-z4dtt "
  Sep  4 15:42:19.264: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-7dsmb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:42:19.303: INFO: stderr: ""
  Sep  4 15:42:19.303: INFO: stdout: ""
  Sep  4 15:42:19.303: INFO: update-demo-nautilus-7dsmb is created but not running
  E0904 15:42:19.735188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:20.735923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:21.736224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:22.736347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:23.736422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:24.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  4 15:42:24.345: INFO: stderr: ""
  Sep  4 15:42:24.345: INFO: stdout: "update-demo-nautilus-7dsmb update-demo-nautilus-z4dtt "
  Sep  4 15:42:24.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-7dsmb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:42:24.384: INFO: stderr: ""
  Sep  4 15:42:24.384: INFO: stdout: "true"
  Sep  4 15:42:24.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-7dsmb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  4 15:42:24.422: INFO: stderr: ""
  Sep  4 15:42:24.422: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  4 15:42:24.422: INFO: validating pod update-demo-nautilus-7dsmb
  Sep  4 15:42:24.430: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  4 15:42:24.430: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  4 15:42:24.430: INFO: update-demo-nautilus-7dsmb is verified up and running
  Sep  4 15:42:24.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-z4dtt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:42:24.468: INFO: stderr: ""
  Sep  4 15:42:24.468: INFO: stdout: "true"
  Sep  4 15:42:24.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-z4dtt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  4 15:42:24.507: INFO: stderr: ""
  Sep  4 15:42:24.507: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  4 15:42:24.507: INFO: validating pod update-demo-nautilus-z4dtt
  Sep  4 15:42:24.514: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  4 15:42:24.514: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  4 15:42:24.514: INFO: update-demo-nautilus-z4dtt is verified up and running
  STEP: scaling down the replication controller @ 09/04/23 15:42:24.514
  Sep  4 15:42:24.514: INFO: scanned /root for discovery docs: <nil>
  Sep  4 15:42:24.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0904 15:42:24.737241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:25.561: INFO: stderr: ""
  Sep  4 15:42:25.561: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/23 15:42:25.561
  Sep  4 15:42:25.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  4 15:42:25.602: INFO: stderr: ""
  Sep  4 15:42:25.602: INFO: stdout: "update-demo-nautilus-z4dtt "
  Sep  4 15:42:25.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-z4dtt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:42:25.673: INFO: stderr: ""
  Sep  4 15:42:25.673: INFO: stdout: "true"
  Sep  4 15:42:25.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-z4dtt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  4 15:42:25.713: INFO: stderr: ""
  Sep  4 15:42:25.713: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  4 15:42:25.713: INFO: validating pod update-demo-nautilus-z4dtt
  Sep  4 15:42:25.715: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  4 15:42:25.715: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  4 15:42:25.715: INFO: update-demo-nautilus-z4dtt is verified up and running
  STEP: scaling up the replication controller @ 09/04/23 15:42:25.715
  Sep  4 15:42:25.715: INFO: scanned /root for discovery docs: <nil>
  Sep  4 15:42:25.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0904 15:42:25.737974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:26.738316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:26.762: INFO: stderr: ""
  Sep  4 15:42:26.762: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/23 15:42:26.762
  Sep  4 15:42:26.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  4 15:42:26.803: INFO: stderr: ""
  Sep  4 15:42:26.803: INFO: stdout: "update-demo-nautilus-9v6tj update-demo-nautilus-z4dtt "
  Sep  4 15:42:26.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-9v6tj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:42:26.844: INFO: stderr: ""
  Sep  4 15:42:26.844: INFO: stdout: ""
  Sep  4 15:42:26.844: INFO: update-demo-nautilus-9v6tj is created but not running
  E0904 15:42:27.738907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:28.739588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:29.739870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:30.740005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:31.740145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:31.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep  4 15:42:31.887: INFO: stderr: ""
  Sep  4 15:42:31.887: INFO: stdout: "update-demo-nautilus-9v6tj update-demo-nautilus-z4dtt "
  Sep  4 15:42:31.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-9v6tj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:42:31.928: INFO: stderr: ""
  Sep  4 15:42:31.928: INFO: stdout: "true"
  Sep  4 15:42:31.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-9v6tj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  4 15:42:31.969: INFO: stderr: ""
  Sep  4 15:42:31.969: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  4 15:42:31.969: INFO: validating pod update-demo-nautilus-9v6tj
  Sep  4 15:42:31.976: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  4 15:42:31.976: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  4 15:42:31.976: INFO: update-demo-nautilus-9v6tj is verified up and running
  Sep  4 15:42:31.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-z4dtt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep  4 15:42:32.016: INFO: stderr: ""
  Sep  4 15:42:32.016: INFO: stdout: "true"
  Sep  4 15:42:32.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods update-demo-nautilus-z4dtt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep  4 15:42:32.056: INFO: stderr: ""
  Sep  4 15:42:32.056: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep  4 15:42:32.056: INFO: validating pod update-demo-nautilus-z4dtt
  Sep  4 15:42:32.058: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep  4 15:42:32.058: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep  4 15:42:32.058: INFO: update-demo-nautilus-z4dtt is verified up and running
  STEP: using delete to clean up resources @ 09/04/23 15:42:32.058
  Sep  4 15:42:32.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 delete --grace-period=0 --force -f -'
  Sep  4 15:42:32.100: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  4 15:42:32.100: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep  4 15:42:32.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get rc,svc -l name=update-demo --no-headers'
  Sep  4 15:42:32.143: INFO: stderr: "No resources found in kubectl-3615 namespace.\n"
  Sep  4 15:42:32.143: INFO: stdout: ""
  Sep  4 15:42:32.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-3615 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep  4 15:42:32.184: INFO: stderr: ""
  Sep  4 15:42:32.184: INFO: stdout: ""
  Sep  4 15:42:32.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3615" for this suite. @ 09/04/23 15:42:32.186
• [13.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/04/23 15:42:32.189
  Sep  4 15:42:32.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 15:42:32.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:32.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:32.197
  STEP: Create a pod @ 09/04/23 15:42:32.198
  E0904 15:42:32.740392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:33.740411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/04/23 15:42:34.207
  Sep  4 15:42:34.211: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Sep  4 15:42:34.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-143" for this suite. @ 09/04/23 15:42:34.212
• [2.026 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/04/23 15:42:34.215
  Sep  4 15:42:34.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename init-container @ 09/04/23 15:42:34.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:34.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:34.222
  STEP: creating the pod @ 09/04/23 15:42:34.224
  Sep  4 15:42:34.224: INFO: PodSpec: initContainers in spec.initContainers
  E0904 15:42:34.741489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:35.741594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:36.742322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:37.742856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:38.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8731" for this suite. @ 09/04/23 15:42:38.49
• [4.278 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 09/04/23 15:42:38.493
  Sep  4 15:42:38.493: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/23 15:42:38.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:38.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:38.5
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/23 15:42:38.503
  E0904 15:42:38.742871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:39.743078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/04/23 15:42:40.511
  E0904 15:42:40.743218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:41.743301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/04/23 15:42:42.517
  STEP: delete the pod with lifecycle hook @ 09/04/23 15:42:42.527
  E0904 15:42:42.744070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:43.744143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:44.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-303" for this suite. @ 09/04/23 15:42:44.535
• [6.045 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 09/04/23 15:42:44.538
  Sep  4 15:42:44.538: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replicaset @ 09/04/23 15:42:44.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:44.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:44.546
  Sep  4 15:42:44.547: INFO: Creating ReplicaSet my-hostname-basic-784badd0-e380-4575-868d-5b4496308683
  Sep  4 15:42:44.552: INFO: Pod name my-hostname-basic-784badd0-e380-4575-868d-5b4496308683: Found 0 pods out of 1
  E0904 15:42:44.745016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:45.745170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:46.745257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:47.745483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:48.745614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:49.554: INFO: Pod name my-hostname-basic-784badd0-e380-4575-868d-5b4496308683: Found 1 pods out of 1
  Sep  4 15:42:49.554: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-784badd0-e380-4575-868d-5b4496308683" is running
  Sep  4 15:42:49.555: INFO: Pod "my-hostname-basic-784badd0-e380-4575-868d-5b4496308683-5g59h" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-04 15:42:44 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-04 15:42:45 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-04 15:42:45 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-04 15:42:44 +0000 UTC Reason: Message:}])
  Sep  4 15:42:49.555: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/04/23 15:42:49.555
  Sep  4 15:42:49.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7981" for this suite. @ 09/04/23 15:42:49.56
• [5.026 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/04/23 15:42:49.563
  Sep  4 15:42:49.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 15:42:49.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:49.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:49.572
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 15:42:49.574
  E0904 15:42:49.746070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:50.746182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:42:51.587
  Sep  4 15:42:51.588: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-5058cc9a-b2fb-4d35-8a06-b8821d550579 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 15:42:51.596
  Sep  4 15:42:51.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-325" for this suite. @ 09/04/23 15:42:51.603
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 09/04/23 15:42:51.606
  Sep  4 15:42:51.606: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename replication-controller @ 09/04/23 15:42:51.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:51.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:51.612
  STEP: Creating ReplicationController "e2e-rc-zzg5l" @ 09/04/23 15:42:51.614
  Sep  4 15:42:51.615: INFO: Get Replication Controller "e2e-rc-zzg5l" to confirm replicas
  E0904 15:42:51.746786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:52.618: INFO: Get Replication Controller "e2e-rc-zzg5l" to confirm replicas
  Sep  4 15:42:52.619: INFO: Found 1 replicas for "e2e-rc-zzg5l" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-zzg5l" @ 09/04/23 15:42:52.619
  STEP: Updating a scale subresource @ 09/04/23 15:42:52.62
  STEP: Verifying replicas where modified for replication controller "e2e-rc-zzg5l" @ 09/04/23 15:42:52.622
  Sep  4 15:42:52.622: INFO: Get Replication Controller "e2e-rc-zzg5l" to confirm replicas
  E0904 15:42:52.747121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:53.624: INFO: Get Replication Controller "e2e-rc-zzg5l" to confirm replicas
  Sep  4 15:42:53.625: INFO: Found 2 replicas for "e2e-rc-zzg5l" replication controller
  Sep  4 15:42:53.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1966" for this suite. @ 09/04/23 15:42:53.627
• [2.024 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 09/04/23 15:42:53.63
  Sep  4 15:42:53.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 15:42:53.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:53.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:53.638
  STEP: Creating configMap configmap-83/configmap-test-6439016c-5b57-40c3-9e81-e76468bb1e2c @ 09/04/23 15:42:53.639
  STEP: Creating a pod to test consume configMaps @ 09/04/23 15:42:53.641
  E0904 15:42:53.747184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:54.747265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:42:55.648
  Sep  4 15:42:55.649: INFO: Trying to get logs from node control-panel-01 pod pod-configmaps-2215648f-070c-43c9-9556-38a1a12df0ba container env-test: <nil>
  STEP: delete the pod @ 09/04/23 15:42:55.652
  Sep  4 15:42:55.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-83" for this suite. @ 09/04/23 15:42:55.658
• [2.031 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 09/04/23 15:42:55.661
  Sep  4 15:42:55.661: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename dns @ 09/04/23 15:42:55.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:42:55.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:42:55.67
  STEP: Creating a test headless service @ 09/04/23 15:42:55.671
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7483.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7483.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7483.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7483.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7483.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7483.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7483.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7483.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7483.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 106.164.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.164.106_udp@PTR;check="$$(dig +tcp +noall +answer +search 106.164.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.164.106_tcp@PTR;sleep 1; done
   @ 09/04/23 15:42:55.678
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7483.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7483.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7483.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7483.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7483.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7483.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7483.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7483.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7483.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7483.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 106.164.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.164.106_udp@PTR;check="$$(dig +tcp +noall +answer +search 106.164.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.164.106_tcp@PTR;sleep 1; done
   @ 09/04/23 15:42:55.678
  STEP: creating a pod to probe DNS @ 09/04/23 15:42:55.678
  STEP: submitting the pod to kubernetes @ 09/04/23 15:42:55.678
  E0904 15:42:55.748063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:56.748244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/23 15:42:57.695
  STEP: looking for the results for each expected name from probers @ 09/04/23 15:42:57.696
  Sep  4 15:42:57.705: INFO: Unable to read wheezy_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:42:57.706: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:42:57.715: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:42:57.716: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  E0904 15:42:57.748730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:42:57.766: INFO: Unable to read jessie_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:42:57.776: INFO: Unable to read jessie_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:42:57.786: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:42:57.796: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:42:57.836: INFO: Lookups using dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709 failed for: [wheezy_udp@dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_udp@dns-test-service.dns-7483.svc.cluster.local jessie_tcp@dns-test-service.dns-7483.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local]

  Sep  4 15:42:57.846: INFO: Pod client logs for webserver: 
  Sep  4 15:42:57.856: INFO: Pod client logs for querier: 
  Sep  4 15:42:57.866: INFO: Pod client logs for jessie-querier: 
  E0904 15:42:58.749553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:42:59.749627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:00.749764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:01.750218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:02.750342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:43:02.869: INFO: Unable to read wheezy_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:02.870: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:02.879: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:02.880: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:02.921: INFO: Unable to read jessie_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:02.931: INFO: Unable to read jessie_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:02.941: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:02.951: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:02.980: INFO: Lookups using dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709 failed for: [wheezy_udp@dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_udp@dns-test-service.dns-7483.svc.cluster.local jessie_tcp@dns-test-service.dns-7483.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local]

  Sep  4 15:43:02.989: INFO: Pod client logs for webserver: 
  Sep  4 15:43:02.991: INFO: Pod client logs for querier: 
  Sep  4 15:43:02.999: INFO: Pod client logs for jessie-querier: 
  E0904 15:43:03.750652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:04.750779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:05.750913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:06.751048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:07.751668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:43:07.868: INFO: Unable to read wheezy_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:07.870: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:07.878: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:07.880: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:07.918: INFO: Unable to read jessie_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:07.928: INFO: Unable to read jessie_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:07.938: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:07.948: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:07.988: INFO: Lookups using dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709 failed for: [wheezy_udp@dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_udp@dns-test-service.dns-7483.svc.cluster.local jessie_tcp@dns-test-service.dns-7483.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local]

  Sep  4 15:43:07.998: INFO: Pod client logs for webserver: 
  Sep  4 15:43:08.008: INFO: Pod client logs for querier: 
  Sep  4 15:43:08.018: INFO: Pod client logs for jessie-querier: 
  E0904 15:43:08.752667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:09.752798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:10.752882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:11.753471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:12.753656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:43:12.868: INFO: Unable to read wheezy_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:12.878: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:12.880: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:12.888: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:12.938: INFO: Unable to read jessie_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:12.948: INFO: Unable to read jessie_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:12.958: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:12.968: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:12.994: INFO: Lookups using dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709 failed for: [wheezy_udp@dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_udp@dns-test-service.dns-7483.svc.cluster.local jessie_tcp@dns-test-service.dns-7483.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local]

  Sep  4 15:43:13.002: INFO: Pod client logs for webserver: 
  Sep  4 15:43:13.012: INFO: Pod client logs for querier: 
  Sep  4 15:43:13.022: INFO: Pod client logs for jessie-querier: 
  E0904 15:43:13.754517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:14.754894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:15.755021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:16.755137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:17.755872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:43:17.869: INFO: Unable to read wheezy_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:17.879: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:17.889: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:17.899: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:17.949: INFO: Unable to read jessie_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:17.959: INFO: Unable to read jessie_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:17.969: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:17.979: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:18.019: INFO: Lookups using dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709 failed for: [wheezy_udp@dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_udp@dns-test-service.dns-7483.svc.cluster.local jessie_tcp@dns-test-service.dns-7483.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local]

  Sep  4 15:43:18.029: INFO: Pod client logs for webserver: 
  Sep  4 15:43:18.039: INFO: Pod client logs for querier: 
  Sep  4 15:43:18.049: INFO: Pod client logs for jessie-querier: 
  E0904 15:43:18.756069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:19.756840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:20.756942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:21.757487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:22.757609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:43:22.868: INFO: Unable to read wheezy_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:22.869: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:22.879: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:22.889: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:22.939: INFO: Unable to read jessie_udp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:22.949: INFO: Unable to read jessie_tcp@dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:22.959: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:22.969: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local from pod dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709: the server could not find the requested resource (get pods dns-test-8690690f-27b8-4a90-a980-d92bdbc58709)
  Sep  4 15:43:23.009: INFO: Lookups using dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709 failed for: [wheezy_udp@dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@dns-test-service.dns-7483.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_udp@dns-test-service.dns-7483.svc.cluster.local jessie_tcp@dns-test-service.dns-7483.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7483.svc.cluster.local]

  Sep  4 15:43:23.019: INFO: Pod client logs for webserver: 
  Sep  4 15:43:23.029: INFO: Pod client logs for querier: 
  Sep  4 15:43:23.039: INFO: Pod client logs for jessie-querier: 
  E0904 15:43:23.757770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:24.757867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:25.757951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:26.758073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:27.758245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:43:28.010: INFO: DNS probes using dns-7483/dns-test-8690690f-27b8-4a90-a980-d92bdbc58709 succeeded

  Sep  4 15:43:28.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 15:43:28.012
  STEP: deleting the test service @ 09/04/23 15:43:28.023
  STEP: deleting the test headless service @ 09/04/23 15:43:28.042
  STEP: Destroying namespace "dns-7483" for this suite. @ 09/04/23 15:43:28.05
• [32.392 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/04/23 15:43:28.053
  Sep  4 15:43:28.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:43:28.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:43:28.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:43:28.066
  STEP: Creating projection with secret that has name projected-secret-test-map-f4cddd91-88a2-4bd6-9a58-ffc25692d1e4 @ 09/04/23 15:43:28.068
  STEP: Creating a pod to test consume secrets @ 09/04/23 15:43:28.07
  E0904 15:43:28.759130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:29.759276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:30.759319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:31.759447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:43:32.078
  Sep  4 15:43:32.079: INFO: Trying to get logs from node control-panel-01 pod pod-projected-secrets-3a2f3fae-16bb-474f-a2f2-240e630c1b54 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 15:43:32.082
  Sep  4 15:43:32.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8999" for this suite. @ 09/04/23 15:43:32.09
• [4.039 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 09/04/23 15:43:32.092
  Sep  4 15:43:32.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename field-validation @ 09/04/23 15:43:32.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:43:32.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:43:32.1
  Sep  4 15:43:32.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 15:43:32.759842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:33.759967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0904 15:43:34.626645      22 warnings.go:70] unknown field "alpha"
  W0904 15:43:34.626657      22 warnings.go:70] unknown field "beta"
  W0904 15:43:34.626662      22 warnings.go:70] unknown field "delta"
  W0904 15:43:34.626665      22 warnings.go:70] unknown field "epsilon"
  W0904 15:43:34.626670      22 warnings.go:70] unknown field "gamma"
  E0904 15:43:34.760045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:43:35.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5291" for this suite. @ 09/04/23 15:43:35.153
• [3.062 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 09/04/23 15:43:35.155
  Sep  4 15:43:35.155: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename kubectl @ 09/04/23 15:43:35.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:43:35.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:43:35.163
  STEP: creating all guestbook components @ 09/04/23 15:43:35.166
  Sep  4 15:43:35.166: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Sep  4 15:43:35.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 create -f -'
  Sep  4 15:43:35.288: INFO: stderr: ""
  Sep  4 15:43:35.288: INFO: stdout: "service/agnhost-replica created\n"
  Sep  4 15:43:35.288: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Sep  4 15:43:35.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 create -f -'
  Sep  4 15:43:35.425: INFO: stderr: ""
  Sep  4 15:43:35.425: INFO: stdout: "service/agnhost-primary created\n"
  Sep  4 15:43:35.425: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Sep  4 15:43:35.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 create -f -'
  Sep  4 15:43:35.559: INFO: stderr: ""
  Sep  4 15:43:35.559: INFO: stdout: "service/frontend created\n"
  Sep  4 15:43:35.559: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Sep  4 15:43:35.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 create -f -'
  Sep  4 15:43:35.680: INFO: stderr: ""
  Sep  4 15:43:35.680: INFO: stdout: "deployment.apps/frontend created\n"
  Sep  4 15:43:35.680: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep  4 15:43:35.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 create -f -'
  E0904 15:43:35.760851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:43:35.787: INFO: stderr: ""
  Sep  4 15:43:35.787: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Sep  4 15:43:35.787: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep  4 15:43:35.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 create -f -'
  Sep  4 15:43:35.890: INFO: stderr: ""
  Sep  4 15:43:35.890: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/04/23 15:43:35.89
  Sep  4 15:43:35.890: INFO: Waiting for all frontend pods to be Running.
  E0904 15:43:36.761692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:37.762333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:38.762414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:39.762671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:40.762972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:43:40.942: INFO: Waiting for frontend to serve content.
  Sep  4 15:43:40.955: INFO: Trying to add a new entry to the guestbook.
  Sep  4 15:43:40.965: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/04/23 15:43:40.975
  Sep  4 15:43:40.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 delete --grace-period=0 --force -f -'
  Sep  4 15:43:41.021: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  4 15:43:41.021: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/23 15:43:41.022
  Sep  4 15:43:41.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 delete --grace-period=0 --force -f -'
  Sep  4 15:43:41.075: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  4 15:43:41.075: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/23 15:43:41.075
  Sep  4 15:43:41.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 delete --grace-period=0 --force -f -'
  Sep  4 15:43:41.123: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  4 15:43:41.123: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/23 15:43:41.123
  Sep  4 15:43:41.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 delete --grace-period=0 --force -f -'
  Sep  4 15:43:41.165: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  4 15:43:41.165: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/23 15:43:41.165
  Sep  4 15:43:41.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 delete --grace-period=0 --force -f -'
  Sep  4 15:43:41.227: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  4 15:43:41.227: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/04/23 15:43:41.227
  Sep  4 15:43:41.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=kubectl-8280 delete --grace-period=0 --force -f -'
  Sep  4 15:43:41.280: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep  4 15:43:41.280: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Sep  4 15:43:41.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8280" for this suite. @ 09/04/23 15:43:41.289
• [6.140 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/04/23 15:43:41.295
  Sep  4 15:43:41.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:43:41.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:43:41.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:43:41.306
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 15:43:41.312
  E0904 15:43:41.763910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:42.764927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:43.765474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:44.766149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:43:45.322
  Sep  4 15:43:45.323: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-61fee864-0dc7-404f-a832-b7280be83a57 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 15:43:45.325
  Sep  4 15:43:45.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2885" for this suite. @ 09/04/23 15:43:45.333
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/04/23 15:43:45.335
  Sep  4 15:43:45.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename cronjob @ 09/04/23 15:43:45.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:43:45.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:43:45.342
  STEP: Creating a ForbidConcurrent cronjob @ 09/04/23 15:43:45.345
  STEP: Ensuring a job is scheduled @ 09/04/23 15:43:45.348
  E0904 15:43:45.766978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:46.767405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:47.768013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:48.768404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:49.768657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:50.768748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:51.769472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:52.769548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:53.770302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:54.770405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:55.770709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:56.771583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:57.772355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:58.772423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:43:59.773218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:00.773366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/04/23 15:44:01.351
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/04/23 15:44:01.352
  STEP: Ensuring no more jobs are scheduled @ 09/04/23 15:44:01.353
  E0904 15:44:01.774420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:02.775404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:03.776169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:04.776296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:05.777071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:06.777478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:07.778390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:08.778517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:09.779173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:10.779946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:11.780026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:12.780377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:13.780421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:14.781474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:15.782192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:16.782323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:17.783238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:18.783369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:19.783700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:20.784478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:21.784902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:22.785090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:23.785535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:24.785661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:25.785844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:26.786745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:27.786930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:28.787065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:29.787589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:30.788643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:31.788721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:32.789481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:33.790299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:34.790412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:35.790811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:36.791538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:37.791925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:38.792041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:39.793068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:40.793471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:41.793706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:42.794388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:43.794773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:44.794859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:45.795770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:46.796404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:47.796816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:48.797456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:49.797966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:50.798091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:51.798759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:52.798998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:53.799136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:54.799288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:55.799948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:56.800649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:57.801376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:58.801514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:44:59.802010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:00.802775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:01.803501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:02.803671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:03.804673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:04.805469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:05.805493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:06.805625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:07.806116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:08.806238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:09.806772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:10.806968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:11.807401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:12.808105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:13.808844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:14.809705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:15.810175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:16.810297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:17.810344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:18.810613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:19.811150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:20.811287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:21.812216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:22.812389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:23.813234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:24.813320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:25.813699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:26.813821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:27.814775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:28.815387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:29.816222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:30.816360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:31.817106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:32.817356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:33.818186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:34.818306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:35.819046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:36.819129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:37.819460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:38.819582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:39.819716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:40.819837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:41.820589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:42.820839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:43.821472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:44.821589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:45.822441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:46.822560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:47.823277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:48.823402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:49.824250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:50.824378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:51.825314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:52.825418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:53.825502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:54.825580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:55.826043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:56.826202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:57.827229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:58.827968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:45:59.828232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:00.828362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:01.829287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:02.830160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:03.831070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:04.831209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:05.831948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:06.832030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:07.832952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:08.833477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:09.834279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:10.834405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:11.835204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:12.835401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:13.836067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:14.837045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:15.837770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:16.838646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:17.839438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:18.840491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:19.841227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:20.841691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:21.842491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:22.842725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:23.843777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:24.843898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:25.844541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:26.845478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:27.846452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:28.847415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:29.848346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:30.848415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:31.848913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:32.849006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:33.849483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:34.850363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:35.850454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:36.850575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:37.851585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:38.851707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:39.852404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:40.852496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:41.853248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:42.853413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:43.854225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:44.855266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:45.856204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:46.856347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:47.856392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:48.856424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:49.856646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:50.857478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:51.858210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:52.858452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:53.859139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:54.859253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:55.859888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:56.860405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:57.861436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:58.861759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:46:59.861851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:00.862747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:01.863379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:02.863460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:03.864164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:04.864289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:05.865122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:06.865701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:07.866256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:08.866583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:09.867627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:10.868642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:11.868858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:12.869043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:13.869478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:14.870033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:15.870440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:16.870558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:17.871402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:18.871664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:19.872266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:20.872416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:21.872597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:22.872754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:23.873469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:24.873586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:25.874327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:26.875361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:27.875395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:28.876402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:29.877072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:30.877471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:31.877936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:32.878012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:33.878680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:34.879554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:35.880206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:36.880342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:37.880418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:38.881473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:39.881549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:40.882372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:41.882451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:42.882609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:43.883589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:44.884100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:45.884975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:46.885061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:47.885472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:48.885597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:49.886242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:50.886365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:51.887027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:52.887115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:53.887381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:54.888245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:55.888819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:56.889824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:57.890491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:58.890573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:47:59.891351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:00.891480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:01.892257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:02.892412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:03.893393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:04.893511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:05.893722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:06.893842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:07.894790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:08.894879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:09.895251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:10.895373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:11.896147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:12.896943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:13.897474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:14.897589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:15.898260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:16.898340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:17.898424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:18.899342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:19.899477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:20.899556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:21.900356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:22.900417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:23.900855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:24.900911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:25.901306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:26.901424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:27.901458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:28.901539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:29.902289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:30.902409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:31.903109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:32.903238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:33.904044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:34.904159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:35.905058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:36.905144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:37.906031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:38.906154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:39.906276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:40.906368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:41.906626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:42.907381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:43.908308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:44.908451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:45.909229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:46.910117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:47.910792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:48.911591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:49.911671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:50.911797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:51.911989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:52.912206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:53.913192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:54.913921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:55.914815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:56.914902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:57.915930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:58.916247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:48:59.916414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:00.916488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/04/23 15:49:01.357
  Sep  4 15:49:01.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5346" for this suite. @ 09/04/23 15:49:01.36
• [316.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 09/04/23 15:49:01.363
  Sep  4 15:49:01.363: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 15:49:01.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:49:01.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:49:01.382
  STEP: Creating a pod to test downward api env vars @ 09/04/23 15:49:01.383
  E0904 15:49:01.917175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:02.917398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:03.918217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:04.918363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:49:05.392
  Sep  4 15:49:05.393: INFO: Trying to get logs from node control-panel-01 pod downward-api-114dbb53-e13d-4e86-8bbc-76c09bdbb11c container dapi-container: <nil>
  STEP: delete the pod @ 09/04/23 15:49:05.403
  Sep  4 15:49:05.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7281" for this suite. @ 09/04/23 15:49:05.41
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 09/04/23 15:49:05.413
  Sep  4 15:49:05.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 15:49:05.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:49:05.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:49:05.419
  STEP: Creating a ResourceQuota @ 09/04/23 15:49:05.421
  STEP: Getting a ResourceQuota @ 09/04/23 15:49:05.423
  STEP: Updating a ResourceQuota @ 09/04/23 15:49:05.424
  STEP: Verifying a ResourceQuota was modified @ 09/04/23 15:49:05.427
  STEP: Deleting a ResourceQuota @ 09/04/23 15:49:05.428
  STEP: Verifying the deleted ResourceQuota @ 09/04/23 15:49:05.43
  Sep  4 15:49:05.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6675" for this suite. @ 09/04/23 15:49:05.433
• [0.022 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 09/04/23 15:49:05.435
  Sep  4 15:49:05.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/23 15:49:05.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:49:05.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:49:05.444
  STEP: set up a multi version CRD @ 09/04/23 15:49:05.446
  Sep  4 15:49:05.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 15:49:05.919100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:06.919770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:07.920218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/04/23 15:49:08.434
  STEP: check the new version name is served @ 09/04/23 15:49:08.443
  E0904 15:49:08.920843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/04/23 15:49:09.121
  STEP: check the other version is not changed @ 09/04/23 15:49:09.719
  E0904 15:49:09.921225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:10.921860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:11.922803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:12.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-738" for this suite. @ 09/04/23 15:49:12.111
• [6.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/04/23 15:49:12.114
  Sep  4 15:49:12.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename subpath @ 09/04/23 15:49:12.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:49:12.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:49:12.123
  STEP: Setting up data @ 09/04/23 15:49:12.125
  STEP: Creating pod pod-subpath-test-projected-nbwf @ 09/04/23 15:49:12.129
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/23 15:49:12.129
  E0904 15:49:12.923650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:13.924010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:14.924442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:15.925486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:16.926479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:17.927287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:18.927492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:19.927625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:20.927802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:21.927891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:22.928005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:23.928997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:24.929898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:25.929917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:26.930632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:27.931560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:28.931637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:29.931770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:30.932202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:31.932851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:32.933484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:33.933627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:49:34.159
  Sep  4 15:49:34.160: INFO: Trying to get logs from node control-panel-01 pod pod-subpath-test-projected-nbwf container test-container-subpath-projected-nbwf: <nil>
  STEP: delete the pod @ 09/04/23 15:49:34.163
  STEP: Deleting pod pod-subpath-test-projected-nbwf @ 09/04/23 15:49:34.169
  Sep  4 15:49:34.169: INFO: Deleting pod "pod-subpath-test-projected-nbwf" in namespace "subpath-1170"
  Sep  4 15:49:34.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1170" for this suite. @ 09/04/23 15:49:34.171
• [22.060 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/04/23 15:49:34.174
  Sep  4 15:49:34.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename container-probe @ 09/04/23 15:49:34.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:49:34.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:49:34.181
  STEP: Creating pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954 @ 09/04/23 15:49:34.183
  E0904 15:49:34.933698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:35.933846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/23 15:49:36.19
  Sep  4 15:49:36.191: INFO: Initial restart count of pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 is 0
  Sep  4 15:49:36.192: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  E0904 15:49:36.934838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:37.935697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:38.193: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  E0904 15:49:38.935782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:39.935913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:40.195: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  E0904 15:49:40.936404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:41.936417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:42.198: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  E0904 15:49:42.936736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:43.936842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:44.199: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  E0904 15:49:44.937755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:45.938691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:46.201: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  E0904 15:49:46.939376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:47.939691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:48.203: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  E0904 15:49:48.939792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:49.939928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:50.205: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  E0904 15:49:50.940098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:51.941091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:52.206: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  E0904 15:49:52.941480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:53.941621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:54.208: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  E0904 15:49:54.941852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:55.941967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:49:56.209: INFO: Get pod liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 in namespace container-probe-7954
  Sep  4 15:49:56.209: INFO: Restart count of pod container-probe-7954/liveness-d8e12cb9-d0be-4f4f-8215-3dfc711a9466 is now 1 (20.018876919s elapsed)
  Sep  4 15:49:56.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 15:49:56.211
  STEP: Destroying namespace "container-probe-7954" for this suite. @ 09/04/23 15:49:56.217
• [22.047 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/04/23 15:49:56.221
  Sep  4 15:49:56.221: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:49:56.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:49:56.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:49:56.231
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 15:49:56.232
  E0904 15:49:56.942379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:57.942728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:49:58.24
  Sep  4 15:49:58.241: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-a50826d4-ef5f-4cae-9375-0c0020088591 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 15:49:58.243
  Sep  4 15:49:58.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3654" for this suite. @ 09/04/23 15:49:58.251
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/04/23 15:49:58.253
  Sep  4 15:49:58.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:49:58.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:49:58.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:49:58.262
  STEP: Creating projection with secret that has name projected-secret-test-7c4a8175-9907-48bc-a633-a00d8b6e26e5 @ 09/04/23 15:49:58.263
  STEP: Creating a pod to test consume secrets @ 09/04/23 15:49:58.265
  E0904 15:49:58.943098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:49:59.943242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:50:00.271
  Sep  4 15:50:00.272: INFO: Trying to get logs from node control-panel-01 pod pod-projected-secrets-60eb70f6-5bcc-4441-b443-391578f9f49a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 15:50:00.275
  Sep  4 15:50:00.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3646" for this suite. @ 09/04/23 15:50:00.282
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/04/23 15:50:00.285
  Sep  4 15:50:00.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 15:50:00.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:00.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:00.292
  STEP: Creating secret with name secret-test-c0c12b08-c794-4611-ae63-f3558f17f631 @ 09/04/23 15:50:00.301
  STEP: Creating a pod to test consume secrets @ 09/04/23 15:50:00.303
  E0904 15:50:00.943299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:01.943516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:50:02.309
  Sep  4 15:50:02.310: INFO: Trying to get logs from node control-panel-01 pod pod-secrets-b183ddd7-7722-4faf-a84b-088c21648e6d container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/23 15:50:02.312
  Sep  4 15:50:02.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3176" for this suite. @ 09/04/23 15:50:02.319
  STEP: Destroying namespace "secret-namespace-9931" for this suite. @ 09/04/23 15:50:02.321
• [2.038 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/04/23 15:50:02.323
  Sep  4 15:50:02.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename prestop @ 09/04/23 15:50:02.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:02.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:02.33
  STEP: Creating server pod server in namespace prestop-6203 @ 09/04/23 15:50:02.332
  STEP: Waiting for pods to come up. @ 09/04/23 15:50:02.335
  E0904 15:50:02.944334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:03.944432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-6203 @ 09/04/23 15:50:04.339
  E0904 15:50:04.944503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:05.944576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/04/23 15:50:06.346
  E0904 15:50:06.944661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:07.944976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:08.945054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:09.945479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:10.945550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:11.352: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Sep  4 15:50:11.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 09/04/23 15:50:11.353
  STEP: Destroying namespace "prestop-6203" for this suite. @ 09/04/23 15:50:11.359
• [9.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 09/04/23 15:50:11.363
  Sep  4 15:50:11.363: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/23 15:50:11.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:11.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:11.371
  STEP: Creating ServiceAccount "e2e-sa-mb74p"  @ 09/04/23 15:50:11.373
  Sep  4 15:50:11.374: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-mb74p"  @ 09/04/23 15:50:11.375
  Sep  4 15:50:11.378: INFO: AutomountServiceAccountToken: true
  Sep  4 15:50:11.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6001" for this suite. @ 09/04/23 15:50:11.379
• [0.030 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 09/04/23 15:50:11.393
  Sep  4 15:50:11.393: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 15:50:11.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:11.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:11.404
  STEP: Creating a ResourceQuota with best effort scope @ 09/04/23 15:50:11.406
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/23 15:50:11.407
  E0904 15:50:11.946486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:12.947075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/04/23 15:50:13.409
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/23 15:50:13.411
  E0904 15:50:13.947169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:14.947345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/04/23 15:50:15.413
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/04/23 15:50:15.419
  E0904 15:50:15.948187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:16.948326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/04/23 15:50:17.421
  E0904 15:50:17.948425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:18.949477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/04/23 15:50:19.423
  STEP: Ensuring resource quota status released the pod usage @ 09/04/23 15:50:19.43
  E0904 15:50:19.950287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:20.950417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/04/23 15:50:21.432
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/04/23 15:50:21.437
  E0904 15:50:21.951404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:22.951549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/04/23 15:50:23.439
  E0904 15:50:23.951844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:24.951991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/04/23 15:50:25.441
  STEP: Ensuring resource quota status released the pod usage @ 09/04/23 15:50:25.448
  E0904 15:50:25.952755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:26.953478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:27.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9710" for this suite. @ 09/04/23 15:50:27.452
• [16.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 09/04/23 15:50:27.456
  Sep  4 15:50:27.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 15:50:27.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:27.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:27.463
  STEP: creating service endpoint-test2 in namespace services-775 @ 09/04/23 15:50:27.464
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-775 to expose endpoints map[] @ 09/04/23 15:50:27.468
  Sep  4 15:50:27.471: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0904 15:50:27.954169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:28.475: INFO: successfully validated that service endpoint-test2 in namespace services-775 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-775 @ 09/04/23 15:50:28.475
  E0904 15:50:28.954831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:29.954989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-775 to expose endpoints map[pod1:[80]] @ 09/04/23 15:50:30.484
  Sep  4 15:50:30.487: INFO: successfully validated that service endpoint-test2 in namespace services-775 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/04/23 15:50:30.487
  Sep  4 15:50:30.487: INFO: Creating new exec pod
  E0904 15:50:30.955008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:31.955373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:32.956409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:33.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-775 exec execpodtzgqz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep  4 15:50:33.579: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep  4 15:50:33.579: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 15:50:33.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-775 exec execpodtzgqz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.106.8 80'
  Sep  4 15:50:33.669: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.106.8 80\nConnection to 10.68.106.8 80 port [tcp/http] succeeded!\n"
  Sep  4 15:50:33.669: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-775 @ 09/04/23 15:50:33.669
  E0904 15:50:33.956499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:34.957935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-775 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/04/23 15:50:35.677
  Sep  4 15:50:35.681: INFO: successfully validated that service endpoint-test2 in namespace services-775 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/04/23 15:50:35.681
  E0904 15:50:35.958678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:36.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-775 exec execpodtzgqz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep  4 15:50:36.761: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep  4 15:50:36.761: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 15:50:36.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-775 exec execpodtzgqz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.106.8 80'
  Sep  4 15:50:36.852: INFO: stderr: "+ nc+  -v -t -w 2echo 10.68.106.8 80 hostName\n\nConnection to 10.68.106.8 80 port [tcp/http] succeeded!\n"
  Sep  4 15:50:36.852: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-775 @ 09/04/23 15:50:36.852
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-775 to expose endpoints map[pod2:[80]] @ 09/04/23 15:50:36.859
  E0904 15:50:36.959407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:37.867: INFO: successfully validated that service endpoint-test2 in namespace services-775 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/04/23 15:50:37.867
  E0904 15:50:37.959766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:38.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-775 exec execpodtzgqz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0904 15:50:38.960427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:38.961: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep  4 15:50:38.961: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep  4 15:50:38.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=services-775 exec execpodtzgqz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.106.8 80'
  Sep  4 15:50:39.044: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.106.8 80\nConnection to 10.68.106.8 80 port [tcp/http] succeeded!\n"
  Sep  4 15:50:39.044: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-775 @ 09/04/23 15:50:39.044
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-775 to expose endpoints map[] @ 09/04/23 15:50:39.051
  Sep  4 15:50:39.054: INFO: successfully validated that service endpoint-test2 in namespace services-775 exposes endpoints map[]
  Sep  4 15:50:39.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-775" for this suite. @ 09/04/23 15:50:39.064
• [11.611 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 09/04/23 15:50:39.068
  Sep  4 15:50:39.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename services @ 09/04/23 15:50:39.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:39.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:39.081
  Sep  4 15:50:39.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2747" for this suite. @ 09/04/23 15:50:39.085
• [0.019 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 09/04/23 15:50:39.088
  Sep  4 15:50:39.088: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename events @ 09/04/23 15:50:39.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:39.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:39.098
  STEP: Create set of events @ 09/04/23 15:50:39.099
  Sep  4 15:50:39.101: INFO: created test-event-1
  Sep  4 15:50:39.103: INFO: created test-event-2
  Sep  4 15:50:39.104: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/04/23 15:50:39.104
  STEP: delete collection of events @ 09/04/23 15:50:39.105
  Sep  4 15:50:39.105: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/04/23 15:50:39.111
  Sep  4 15:50:39.112: INFO: requesting list of events to confirm quantity
  Sep  4 15:50:39.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7375" for this suite. @ 09/04/23 15:50:39.114
• [0.028 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/04/23 15:50:39.116
  Sep  4 15:50:39.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 15:50:39.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:39.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:39.125
  STEP: creating the pod @ 09/04/23 15:50:39.126
  STEP: submitting the pod to kubernetes @ 09/04/23 15:50:39.126
  STEP: verifying QOS class is set on the pod @ 09/04/23 15:50:39.129
  Sep  4 15:50:39.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9189" for this suite. @ 09/04/23 15:50:39.132
• [0.020 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 09/04/23 15:50:39.137
  Sep  4 15:50:39.137: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename dns @ 09/04/23 15:50:39.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:39.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:39.146
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/04/23 15:50:39.148
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/04/23 15:50:39.148
  STEP: creating a pod to probe DNS @ 09/04/23 15:50:39.148
  STEP: submitting the pod to kubernetes @ 09/04/23 15:50:39.148
  E0904 15:50:39.961497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:40.961580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/23 15:50:41.162
  STEP: looking for the results for each expected name from probers @ 09/04/23 15:50:41.163
  Sep  4 15:50:41.192: INFO: DNS probes using dns-6925/dns-test-d5e65e41-fa36-48c6-9a5e-0f77cbb94572 succeeded

  Sep  4 15:50:41.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/04/23 15:50:41.194
  STEP: Destroying namespace "dns-6925" for this suite. @ 09/04/23 15:50:41.203
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 09/04/23 15:50:41.206
  Sep  4 15:50:41.206: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename webhook @ 09/04/23 15:50:41.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:41.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:41.221
  STEP: Setting up server cert @ 09/04/23 15:50:41.244
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/23 15:50:41.465
  STEP: Deploying the webhook pod @ 09/04/23 15:50:41.468
  STEP: Wait for the deployment to be ready @ 09/04/23 15:50:41.473
  Sep  4 15:50:41.475: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0904 15:50:41.962554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:42.963623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/23 15:50:43.48
  STEP: Verifying the service has paired with the endpoint @ 09/04/23 15:50:43.485
  E0904 15:50:43.964201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:44.485: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/04/23 15:50:44.49
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/04/23 15:50:44.491
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/04/23 15:50:44.491
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/04/23 15:50:44.491
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/04/23 15:50:44.491
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/04/23 15:50:44.491
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/04/23 15:50:44.492
  Sep  4 15:50:44.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1181" for this suite. @ 09/04/23 15:50:44.512
  STEP: Destroying namespace "webhook-markers-2365" for this suite. @ 09/04/23 15:50:44.515
• [3.313 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/04/23 15:50:44.519
  Sep  4 15:50:44.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename pods @ 09/04/23 15:50:44.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:44.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:44.528
  STEP: Create set of pods @ 09/04/23 15:50:44.53
  Sep  4 15:50:44.533: INFO: created test-pod-1
  Sep  4 15:50:44.536: INFO: created test-pod-2
  Sep  4 15:50:44.541: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/04/23 15:50:44.541
  E0904 15:50:44.964290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:45.964426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/04/23 15:50:46.561
  Sep  4 15:50:46.563: INFO: Pod quantity 3 is different from expected quantity 0
  E0904 15:50:46.964909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:47.565: INFO: Pod quantity 3 is different from expected quantity 0
  E0904 15:50:47.965178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:48.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5537" for this suite. @ 09/04/23 15:50:48.567
• [4.050 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 09/04/23 15:50:48.569
  Sep  4 15:50:48.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/23 15:50:48.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:48.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:48.575
  Sep  4 15:50:48.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 15:50:48.965915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/04/23 15:50:49.751
  Sep  4 15:50:49.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 --namespace=crd-publish-openapi-5000 create -f -'
  E0904 15:50:49.966364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:50.039: INFO: stderr: ""
  Sep  4 15:50:50.039: INFO: stdout: "e2e-test-crd-publish-openapi-543-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep  4 15:50:50.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 --namespace=crd-publish-openapi-5000 delete e2e-test-crd-publish-openapi-543-crds test-foo'
  Sep  4 15:50:50.081: INFO: stderr: ""
  Sep  4 15:50:50.081: INFO: stdout: "e2e-test-crd-publish-openapi-543-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Sep  4 15:50:50.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 --namespace=crd-publish-openapi-5000 apply -f -'
  Sep  4 15:50:50.174: INFO: stderr: ""
  Sep  4 15:50:50.174: INFO: stdout: "e2e-test-crd-publish-openapi-543-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep  4 15:50:50.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 --namespace=crd-publish-openapi-5000 delete e2e-test-crd-publish-openapi-543-crds test-foo'
  Sep  4 15:50:50.216: INFO: stderr: ""
  Sep  4 15:50:50.216: INFO: stdout: "e2e-test-crd-publish-openapi-543-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/04/23 15:50:50.216
  Sep  4 15:50:50.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 --namespace=crd-publish-openapi-5000 create -f -'
  Sep  4 15:50:50.301: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/04/23 15:50:50.301
  Sep  4 15:50:50.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 --namespace=crd-publish-openapi-5000 create -f -'
  Sep  4 15:50:50.386: INFO: rc: 1
  Sep  4 15:50:50.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 --namespace=crd-publish-openapi-5000 apply -f -'
  Sep  4 15:50:50.473: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/04/23 15:50:50.473
  Sep  4 15:50:50.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 --namespace=crd-publish-openapi-5000 create -f -'
  Sep  4 15:50:50.560: INFO: rc: 1
  Sep  4 15:50:50.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 --namespace=crd-publish-openapi-5000 apply -f -'
  Sep  4 15:50:50.647: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/04/23 15:50:50.647
  Sep  4 15:50:50.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 explain e2e-test-crd-publish-openapi-543-crds'
  Sep  4 15:50:50.731: INFO: stderr: ""
  Sep  4 15:50:50.731: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-543-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/04/23 15:50:50.731
  Sep  4 15:50:50.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 explain e2e-test-crd-publish-openapi-543-crds.metadata'
  Sep  4 15:50:50.817: INFO: stderr: ""
  Sep  4 15:50:50.817: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-543-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Sep  4 15:50:50.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 explain e2e-test-crd-publish-openapi-543-crds.spec'
  Sep  4 15:50:50.900: INFO: stderr: ""
  Sep  4 15:50:50.900: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-543-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Sep  4 15:50:50.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 explain e2e-test-crd-publish-openapi-543-crds.spec.bars'
  E0904 15:50:50.966396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:50.987: INFO: stderr: ""
  Sep  4 15:50:50.987: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-543-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/04/23 15:50:50.987
  Sep  4 15:50:50.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3418509852 --namespace=crd-publish-openapi-5000 explain e2e-test-crd-publish-openapi-543-crds.spec.bars2'
  Sep  4 15:50:51.071: INFO: rc: 1
  E0904 15:50:51.967273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:50:52.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5000" for this suite. @ 09/04/23 15:50:52.226
• [3.659 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 09/04/23 15:50:52.229
  Sep  4 15:50:52.229: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename taint-single-pod @ 09/04/23 15:50:52.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:50:52.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:50:52.237
  Sep  4 15:50:52.239: INFO: Waiting up to 1m0s for all nodes to be ready
  E0904 15:50:52.967402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:53.968304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:54.968424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:55.968538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:56.968777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:57.969079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:58.969488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:50:59.969616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:00.970034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:01.970774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:02.971482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:03.971558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:04.972129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:05.972203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:06.972697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:07.973476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:08.973687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:09.974364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:10.974454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:11.974575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:12.975422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:13.975562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:14.975650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:15.975732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:16.976095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:17.976120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:18.977066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:19.977151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:20.977803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:21.977948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:22.978591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:23.978671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:24.979219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:25.979303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:26.979418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:27.980095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:28.980412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:29.981482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:30.982065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:31.983021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:32.983817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:33.983946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:34.984410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:35.985475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:36.985883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:37.986905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:38.987541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:39.987585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:40.988087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:41.988170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:42.989014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:43.989094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:44.989181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:45.989239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:46.989793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:47.990094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:48.990549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:49.991402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:50.991799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:51.991888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:51:52.247: INFO: Waiting for terminating namespaces to be deleted...
  Sep  4 15:51:52.248: INFO: Starting informer...
  STEP: Starting pod... @ 09/04/23 15:51:52.248
  Sep  4 15:51:52.456: INFO: Pod is running on control-panel-01. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/04/23 15:51:52.456
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/23 15:51:52.462
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/04/23 15:51:52.463
  Sep  4 15:51:52.463: INFO: Pod wasn't evicted. Proceeding
  Sep  4 15:51:52.463: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/23 15:51:52.469
  STEP: Waiting some time to make sure that toleration time passed. @ 09/04/23 15:51:52.47
  E0904 15:51:52.992395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:53.992436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:54.993474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:55.994541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:56.994676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:57.994944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:58.995071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:51:59.995193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:00.995281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:01.995365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:02.995530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:03.995616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:04.996121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:05.996639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:06.996722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:07.997744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:08.997892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:09.997984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:10.998472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:11.998562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:12.998632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:13.999646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:14.999774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:16.000715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:17.001473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:18.001573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:19.001696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:20.001785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:21.002352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:22.002473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:23.002635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:24.002725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:25.002768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:26.002930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:27.003059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:28.004090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:29.004213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:30.004850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:31.005482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:32.005610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:33.005845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:34.006358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:35.006459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:36.007448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:37.007520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:38.008282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:39.008417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:40.009473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:41.009599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:42.010649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:43.010803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:44.011639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:45.011758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:46.011884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:47.012003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:48.012087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:49.012204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:50.012289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:51.012410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:52.012430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:53.013486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:54.013628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:55.014585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:56.014706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:57.014843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:58.015818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:52:59.016017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:00.016142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:01.016217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:02.016310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:03.016412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:04.017477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:05.017610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:06.017696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:07.018713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:53:07.471: INFO: Pod wasn't evicted. Test successful
  Sep  4 15:53:07.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8870" for this suite. @ 09/04/23 15:53:07.473
• [135.247 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/04/23 15:53:07.476
  Sep  4 15:53:07.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename watch @ 09/04/23 15:53:07.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:53:07.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:53:07.483
  STEP: creating a watch on configmaps with a certain label @ 09/04/23 15:53:07.484
  STEP: creating a new configmap @ 09/04/23 15:53:07.485
  STEP: modifying the configmap once @ 09/04/23 15:53:07.486
  STEP: changing the label value of the configmap @ 09/04/23 15:53:07.489
  STEP: Expecting to observe a delete notification for the watched object @ 09/04/23 15:53:07.496
  Sep  4 15:53:07.496: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3706  73f2dd4c-cbad-4c19-b4f6-c87de026afe7 39554 0 2023-09-04 15:53:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-04 15:53:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 15:53:07.496: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3706  73f2dd4c-cbad-4c19-b4f6-c87de026afe7 39555 0 2023-09-04 15:53:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-04 15:53:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 15:53:07.497: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3706  73f2dd4c-cbad-4c19-b4f6-c87de026afe7 39556 0 2023-09-04 15:53:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-04 15:53:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/04/23 15:53:07.497
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/04/23 15:53:07.5
  E0904 15:53:08.019313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:09.020277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:10.020444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:11.021470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:12.021744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:13.021902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:14.022027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:15.022112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:16.022932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:17.023016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/04/23 15:53:17.501
  STEP: modifying the configmap a third time @ 09/04/23 15:53:17.505
  STEP: deleting the configmap @ 09/04/23 15:53:17.508
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/04/23 15:53:17.509
  Sep  4 15:53:17.509: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3706  73f2dd4c-cbad-4c19-b4f6-c87de026afe7 39590 0 2023-09-04 15:53:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-04 15:53:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 15:53:17.510: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3706  73f2dd4c-cbad-4c19-b4f6-c87de026afe7 39591 0 2023-09-04 15:53:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-04 15:53:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 15:53:17.510: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3706  73f2dd4c-cbad-4c19-b4f6-c87de026afe7 39592 0 2023-09-04 15:53:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-04 15:53:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep  4 15:53:17.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3706" for this suite. @ 09/04/23 15:53:17.511
• [10.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/04/23 15:53:17.515
  Sep  4 15:53:17.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename deployment @ 09/04/23 15:53:17.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:53:17.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:53:17.523
  STEP: creating a Deployment @ 09/04/23 15:53:17.526
  Sep  4 15:53:17.526: INFO: Creating simple deployment test-deployment-v9ws7
  Sep  4 15:53:17.530: INFO: new replicaset for deployment "test-deployment-v9ws7" is yet to be created
  E0904 15:53:18.023219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:19.023355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/04/23 15:53:19.535
  Sep  4 15:53:19.537: INFO: Deployment test-deployment-v9ws7 has Conditions: [{Available True 2023-09-04 15:53:18 +0000 UTC 2023-09-04 15:53:18 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-09-04 15:53:18 +0000 UTC 2023-09-04 15:53:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v9ws7-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/04/23 15:53:19.537
  Sep  4 15:53:19.540: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 15, 53, 18, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 15, 53, 18, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 4, 15, 53, 18, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 4, 15, 53, 17, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-v9ws7-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/04/23 15:53:19.54
  Sep  4 15:53:19.541: INFO: Observed &Deployment event: ADDED
  Sep  4 15:53:19.541: INFO: Observed Deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-04 15:53:17 +0000 UTC 2023-09-04 15:53:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v9ws7-5d576bd769"}
  Sep  4 15:53:19.541: INFO: Observed &Deployment event: MODIFIED
  Sep  4 15:53:19.541: INFO: Observed Deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-04 15:53:17 +0000 UTC 2023-09-04 15:53:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v9ws7-5d576bd769"}
  Sep  4 15:53:19.541: INFO: Observed Deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-04 15:53:17 +0000 UTC 2023-09-04 15:53:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep  4 15:53:19.541: INFO: Observed &Deployment event: MODIFIED
  Sep  4 15:53:19.541: INFO: Observed Deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-04 15:53:17 +0000 UTC 2023-09-04 15:53:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep  4 15:53:19.541: INFO: Observed Deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-04 15:53:17 +0000 UTC 2023-09-04 15:53:17 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-v9ws7-5d576bd769" is progressing.}
  Sep  4 15:53:19.541: INFO: Observed &Deployment event: MODIFIED
  Sep  4 15:53:19.541: INFO: Observed Deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-04 15:53:18 +0000 UTC 2023-09-04 15:53:18 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep  4 15:53:19.541: INFO: Observed Deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-04 15:53:18 +0000 UTC 2023-09-04 15:53:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v9ws7-5d576bd769" has successfully progressed.}
  Sep  4 15:53:19.541: INFO: Observed &Deployment event: MODIFIED
  Sep  4 15:53:19.541: INFO: Observed Deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-04 15:53:18 +0000 UTC 2023-09-04 15:53:18 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep  4 15:53:19.541: INFO: Observed Deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-04 15:53:18 +0000 UTC 2023-09-04 15:53:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v9ws7-5d576bd769" has successfully progressed.}
  Sep  4 15:53:19.541: INFO: Found Deployment test-deployment-v9ws7 in namespace deployment-538 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  4 15:53:19.541: INFO: Deployment test-deployment-v9ws7 has an updated status
  STEP: patching the Statefulset Status @ 09/04/23 15:53:19.541
  Sep  4 15:53:19.541: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep  4 15:53:19.545: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/04/23 15:53:19.545
  Sep  4 15:53:19.546: INFO: Observed &Deployment event: ADDED
  Sep  4 15:53:19.546: INFO: Observed deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-04 15:53:17 +0000 UTC 2023-09-04 15:53:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v9ws7-5d576bd769"}
  Sep  4 15:53:19.546: INFO: Observed &Deployment event: MODIFIED
  Sep  4 15:53:19.546: INFO: Observed deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-04 15:53:17 +0000 UTC 2023-09-04 15:53:17 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-v9ws7-5d576bd769"}
  Sep  4 15:53:19.546: INFO: Observed deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-04 15:53:17 +0000 UTC 2023-09-04 15:53:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep  4 15:53:19.546: INFO: Observed &Deployment event: MODIFIED
  Sep  4 15:53:19.546: INFO: Observed deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-04 15:53:17 +0000 UTC 2023-09-04 15:53:17 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep  4 15:53:19.546: INFO: Observed deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-04 15:53:17 +0000 UTC 2023-09-04 15:53:17 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-v9ws7-5d576bd769" is progressing.}
  Sep  4 15:53:19.546: INFO: Observed &Deployment event: MODIFIED
  Sep  4 15:53:19.546: INFO: Observed deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-04 15:53:18 +0000 UTC 2023-09-04 15:53:18 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep  4 15:53:19.546: INFO: Observed deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-04 15:53:18 +0000 UTC 2023-09-04 15:53:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v9ws7-5d576bd769" has successfully progressed.}
  Sep  4 15:53:19.546: INFO: Observed &Deployment event: MODIFIED
  Sep  4 15:53:19.546: INFO: Observed deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-04 15:53:18 +0000 UTC 2023-09-04 15:53:18 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep  4 15:53:19.546: INFO: Observed deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-04 15:53:18 +0000 UTC 2023-09-04 15:53:17 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-v9ws7-5d576bd769" has successfully progressed.}
  Sep  4 15:53:19.546: INFO: Observed deployment test-deployment-v9ws7 in namespace deployment-538 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  4 15:53:19.546: INFO: Observed &Deployment event: MODIFIED
  Sep  4 15:53:19.546: INFO: Found deployment test-deployment-v9ws7 in namespace deployment-538 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Sep  4 15:53:19.546: INFO: Deployment test-deployment-v9ws7 has a patched status
  Sep  4 15:53:19.547: INFO: Deployment "test-deployment-v9ws7":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-v9ws7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-538",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b7231d1-5907-4e76-91c8-8803f288aea3",
      ResourceVersion: (string) (len=5) "39629",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829439597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439599,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep  4 15:53:19.549: INFO: New ReplicaSet "test-deployment-v9ws7-5d576bd769" of Deployment "test-deployment-v9ws7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-v9ws7-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-538",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de6b0e5e-f5fd-4c68-934d-1f5354820af8",
      ResourceVersion: (string) (len=5) "39623",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829439597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-v9ws7",
          UID: (types.UID) (len=36) "0b7231d1-5907-4e76-91c8-8803f288aea3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 62 37  |k:{\"uid\":\"0b7|
              00000120  32 33 31 64 31 2d 35 39  30 37 2d 34 65 37 36 2d  |231d1-5907-4e76-|
              00000130  39 31 63 38 2d 38 38 30  33 66 32 38 38 61 65 61  |91c8-8803f288aea|
              00000140  33 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |3\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep  4 15:53:19.551: INFO: Pod "test-deployment-v9ws7-5d576bd769-vn4vw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-v9ws7-5d576bd769-vn4vw",
      GenerateName: (string) (len=33) "test-deployment-v9ws7-5d576bd769-",
      Namespace: (string) (len=14) "deployment-538",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa463720-4663-43f9-999a-77e689d1e566",
      ResourceVersion: (string) (len=5) "39622",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829439597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-v9ws7-5d576bd769",
          UID: (types.UID) (len=36) "de6b0e5e-f5fd-4c68-934d-1f5354820af8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 64 65 36 62 30 65 35  65 2d 66 35 66 64 2d 34  |"de6b0e5e-f5fd-4|
              000000a0  63 36 38 2d 39 33 34 64  2d 31 66 35 33 35 34 38  |c68-934d-1f53548|
              000000b0  32 30 61 66 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |20af8\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=521) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 37 32 2e 32 30 2e 31  33 32 2e 31 36 31 5c 22  |172.20.132.161\"|
              000001e0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 70  |}":{".":{},"f:ip|
              000001f0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 74 61 72 74 54  |":{}}},"f:startT|
              00000200  69 6d 65 22 3a 7b 7d 7d  7d                       |ime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-smqwg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-smqwg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "control-panel-01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439598,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829439597,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.254.0.8",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=14) "172.20.132.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.132.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829439597,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829439598,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4413c49815b0fd4085b759c5c046c6102dfa3f36f05ebdc83b4ca9892d51a644",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep  4 15:53:19.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-538" for this suite. @ 09/04/23 15:53:19.554
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 09/04/23 15:53:19.557
  Sep  4 15:53:19.557: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 15:53:19.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:53:19.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:53:19.564
  STEP: Counting existing ResourceQuota @ 09/04/23 15:53:19.565
  E0904 15:53:20.023791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:21.024401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:22.025322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:23.025456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:24.026050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/23 15:53:24.568
  STEP: Ensuring resource quota status is calculated @ 09/04/23 15:53:24.573
  E0904 15:53:25.026972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:26.027100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/04/23 15:53:26.575
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/04/23 15:53:26.583
  E0904 15:53:27.027774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:28.028650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/04/23 15:53:28.584
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/04/23 15:53:28.586
  STEP: Ensuring a pod cannot update its resource requirements @ 09/04/23 15:53:28.587
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/04/23 15:53:28.589
  E0904 15:53:29.028741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:30.028825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/04/23 15:53:30.591
  STEP: Ensuring resource quota status released the pod usage @ 09/04/23 15:53:30.597
  E0904 15:53:31.029475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:32.029559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:53:32.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-170" for this suite. @ 09/04/23 15:53:32.6
• [13.045 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 09/04/23 15:53:32.602
  Sep  4 15:53:32.602: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/04/23 15:53:32.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:53:32.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:53:32.609
  STEP: getting /apis @ 09/04/23 15:53:32.613
  STEP: getting /apis/storage.k8s.io @ 09/04/23 15:53:32.614
  STEP: getting /apis/storage.k8s.io/v1 @ 09/04/23 15:53:32.619
  STEP: creating @ 09/04/23 15:53:32.62
  STEP: watching @ 09/04/23 15:53:32.626
  Sep  4 15:53:32.626: INFO: starting watch
  STEP: getting @ 09/04/23 15:53:32.629
  STEP: listing in namespace @ 09/04/23 15:53:32.63
  STEP: listing across namespaces @ 09/04/23 15:53:32.631
  STEP: patching @ 09/04/23 15:53:32.632
  STEP: updating @ 09/04/23 15:53:32.634
  Sep  4 15:53:32.636: INFO: waiting for watch events with expected annotations in namespace
  Sep  4 15:53:32.636: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/04/23 15:53:32.636
  STEP: deleting a collection @ 09/04/23 15:53:32.639
  Sep  4 15:53:32.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8579" for this suite. @ 09/04/23 15:53:32.646
• [0.046 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 09/04/23 15:53:32.648
  Sep  4 15:53:32.648: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/23 15:53:32.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:53:32.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:53:32.655
  Sep  4 15:53:32.656: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  E0904 15:53:33.030096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:53:33.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2522" for this suite. @ 09/04/23 15:53:33.677
• [1.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/04/23 15:53:33.68
  Sep  4 15:53:33.680: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename projected @ 09/04/23 15:53:33.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:53:33.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:53:33.687
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 15:53:33.688
  E0904 15:53:34.030944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:35.031291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:53:35.695
  Sep  4 15:53:35.696: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-52ddf692-4d50-4542-a406-9a2858778e99 container client-container: <nil>
  STEP: delete the pod @ 09/04/23 15:53:35.704
  Sep  4 15:53:35.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8823" for this suite. @ 09/04/23 15:53:35.711
• [2.033 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 09/04/23 15:53:35.714
  Sep  4 15:53:35.714: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename resourcequota @ 09/04/23 15:53:35.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:53:35.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:53:35.722
  STEP: Counting existing ResourceQuota @ 09/04/23 15:53:35.723
  E0904 15:53:36.032185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:37.032397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:38.033423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:39.033472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:40.033909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/23 15:53:40.725
  STEP: Ensuring resource quota status is calculated @ 09/04/23 15:53:40.729
  E0904 15:53:41.034415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:42.035371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/04/23 15:53:42.73
  STEP: Ensuring resource quota status captures replication controller creation @ 09/04/23 15:53:42.739
  E0904 15:53:43.035803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:44.035954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/04/23 15:53:44.741
  STEP: Ensuring resource quota status released usage @ 09/04/23 15:53:44.743
  E0904 15:53:45.036974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:46.037481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:53:46.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9965" for this suite. @ 09/04/23 15:53:46.747
• [11.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/04/23 15:53:46.75
  Sep  4 15:53:46.750: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename init-container @ 09/04/23 15:53:46.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:53:46.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:53:46.757
  STEP: creating the pod @ 09/04/23 15:53:46.76
  Sep  4 15:53:46.760: INFO: PodSpec: initContainers in spec.initContainers
  E0904 15:53:47.037892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:48.037982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:49.038545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:50.039349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:53:50.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5470" for this suite. @ 09/04/23 15:53:50.55
• [3.803 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/04/23 15:53:50.553
  Sep  4 15:53:50.553: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 15:53:50.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:53:50.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:53:50.561
  STEP: Creating configMap with name cm-test-opt-del-4c01084f-3d86-447a-be5b-0fed06e4ed7c @ 09/04/23 15:53:50.563
  STEP: Creating configMap with name cm-test-opt-upd-4b4c00be-55ae-4cd6-9361-0b5ee2993f6e @ 09/04/23 15:53:50.565
  STEP: Creating the pod @ 09/04/23 15:53:50.566
  E0904 15:53:51.039846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:52.039999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-4c01084f-3d86-447a-be5b-0fed06e4ed7c @ 09/04/23 15:53:52.581
  STEP: Updating configmap cm-test-opt-upd-4b4c00be-55ae-4cd6-9361-0b5ee2993f6e @ 09/04/23 15:53:52.583
  STEP: Creating configMap with name cm-test-opt-create-0f4decd2-9e6f-4c79-8212-7495906ab106 @ 09/04/23 15:53:52.585
  STEP: waiting to observe update in volume @ 09/04/23 15:53:52.587
  E0904 15:53:53.040871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:54.040961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:55.040976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:56.041482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:57.041752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:58.041837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:53:59.042004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:00.042147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:01.042774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:02.043224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:03.043481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:04.044241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:05.044835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:06.045505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:07.046526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:08.046865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:09.047489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:10.047564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:11.048133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:12.048964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:13.049240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:14.049342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:15.049519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:16.049609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:17.050635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:18.050821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:19.051186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:20.051309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:21.052111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:22.052479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:23.053488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:24.053617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:25.053972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:26.054059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:27.054237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:28.054598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:29.055279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:30.055422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:31.056408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:32.057485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:33.058196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:34.058647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:35.059510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:36.060486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:37.061220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:38.061549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:39.062264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:40.062368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:41.063230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:42.064287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:43.065024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:44.065098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:45.065493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:46.066348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:47.066598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:48.066874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:49.067356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:50.067483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:51.068260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:52.068364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:53.069070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:54.069477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:55.069550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:56.069682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:57.069854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:58.070846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:54:59.071645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:00.071788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:01.071861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:02.072000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:03.073004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:04.073106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:05.074059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:06.075123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:07.076078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:08.076129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:09.076926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:10.077029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:11.077255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:12.077490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:55:12.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1853" for this suite. @ 09/04/23 15:55:12.757
• [82.208 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/04/23 15:55:12.762
  Sep  4 15:55:12.762: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename downward-api @ 09/04/23 15:55:12.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:55:12.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:55:12.774
  STEP: Creating a pod to test downward API volume plugin @ 09/04/23 15:55:12.776
  E0904 15:55:13.077914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:14.078619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:55:14.785
  Sep  4 15:55:14.786: INFO: Trying to get logs from node control-panel-01 pod downwardapi-volume-81e65ecc-9357-40e0-92a3-8bcadbf6332b container client-container: <nil>
  STEP: delete the pod @ 09/04/23 15:55:14.789
  Sep  4 15:55:14.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7359" for this suite. @ 09/04/23 15:55:14.797
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 09/04/23 15:55:14.799
  Sep  4 15:55:14.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename statefulset @ 09/04/23 15:55:14.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:55:14.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:55:14.807
  STEP: Creating service test in namespace statefulset-4619 @ 09/04/23 15:55:14.808
  STEP: Creating statefulset ss in namespace statefulset-4619 @ 09/04/23 15:55:14.811
  Sep  4 15:55:14.819: INFO: Found 0 stateful pods, waiting for 1
  E0904 15:55:15.079293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:16.080350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:17.080430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:18.081500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:19.082353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:20.082472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:21.082587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:22.083142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:23.084132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:24.085120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:55:24.822: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/04/23 15:55:24.824
  STEP: Getting /status @ 09/04/23 15:55:24.829
  Sep  4 15:55:24.830: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/04/23 15:55:24.83
  Sep  4 15:55:24.834: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/04/23 15:55:24.834
  Sep  4 15:55:24.834: INFO: Observed &StatefulSet event: ADDED
  Sep  4 15:55:24.834: INFO: Found Statefulset ss in namespace statefulset-4619 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  4 15:55:24.834: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/04/23 15:55:24.834
  Sep  4 15:55:24.835: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep  4 15:55:24.838: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/04/23 15:55:24.838
  Sep  4 15:55:24.839: INFO: Observed &StatefulSet event: ADDED
  Sep  4 15:55:24.839: INFO: Observed Statefulset ss in namespace statefulset-4619 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep  4 15:55:24.839: INFO: Observed &StatefulSet event: MODIFIED
  Sep  4 15:55:24.839: INFO: Found Statefulset ss in namespace statefulset-4619 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Sep  4 15:55:24.839: INFO: Deleting all statefulset in ns statefulset-4619
  Sep  4 15:55:24.840: INFO: Scaling statefulset ss to 0
  E0904 15:55:25.085269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:26.085478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:27.085743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:28.086596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:29.086822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:30.086959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:31.087116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:32.087243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:33.087500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:34.088568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:55:34.849: INFO: Waiting for statefulset status.replicas updated to 0
  Sep  4 15:55:34.850: INFO: Deleting statefulset ss
  Sep  4 15:55:34.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4619" for this suite. @ 09/04/23 15:55:34.855
• [20.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/04/23 15:55:34.865
  Sep  4 15:55:34.865: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 15:55:34.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:55:34.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:55:34.873
  STEP: Creating configMap with name configmap-test-volume-map-8db86c9d-bc84-4dcf-aa2b-508cb34a3cbb @ 09/04/23 15:55:34.874
  STEP: Creating a pod to test consume configMaps @ 09/04/23 15:55:34.876
  E0904 15:55:35.088939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:36.089141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:55:36.883
  Sep  4 15:55:36.884: INFO: Trying to get logs from node control-panel-01 pod pod-configmaps-92b5933b-5012-410b-a668-beccc4d4c1af container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/23 15:55:36.886
  Sep  4 15:55:36.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-734" for this suite. @ 09/04/23 15:55:36.894
• [2.032 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 09/04/23 15:55:36.897
  Sep  4 15:55:36.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename secrets @ 09/04/23 15:55:36.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:55:36.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:55:36.905
  STEP: Creating projection with secret that has name secret-emptykey-test-76e0e862-0507-4bc5-9a8b-291ec9ccc1d4 @ 09/04/23 15:55:36.906
  Sep  4 15:55:36.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4309" for this suite. @ 09/04/23 15:55:36.908
• [0.013 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 09/04/23 15:55:36.911
  Sep  4 15:55:36.911: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename configmap @ 09/04/23 15:55:36.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:55:36.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:55:36.918
  STEP: Creating configMap configmap-5208/configmap-test-158818d5-6139-4f99-a352-03c76816c64b @ 09/04/23 15:55:36.92
  STEP: Creating a pod to test consume configMaps @ 09/04/23 15:55:36.921
  E0904 15:55:37.089504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:38.089916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:55:38.928
  Sep  4 15:55:38.929: INFO: Trying to get logs from node control-panel-01 pod pod-configmaps-de68f084-6e7f-422e-b6ad-fe1dffc89748 container env-test: <nil>
  STEP: delete the pod @ 09/04/23 15:55:38.932
  Sep  4 15:55:38.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5208" for this suite. @ 09/04/23 15:55:38.939
• [2.030 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/04/23 15:55:38.942
  Sep  4 15:55:38.942: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename subpath @ 09/04/23 15:55:38.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:55:38.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:55:38.95
  STEP: Setting up data @ 09/04/23 15:55:38.952
  STEP: Creating pod pod-subpath-test-configmap-7dwc @ 09/04/23 15:55:38.955
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/23 15:55:38.955
  E0904 15:55:39.090518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:40.090600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:41.091198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:42.091330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:43.091354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:44.091483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:45.092498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:46.092582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:47.093031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:48.093493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:49.094241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:50.094905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:51.095146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:52.095785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:53.096721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:54.097488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:55.097601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:56.097685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:57.098500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:58.098572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:55:59.099239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:56:00.099278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/23 15:56:00.985
  Sep  4 15:56:00.986: INFO: Trying to get logs from node control-panel-01 pod pod-subpath-test-configmap-7dwc container test-container-subpath-configmap-7dwc: <nil>
  STEP: delete the pod @ 09/04/23 15:56:00.989
  STEP: Deleting pod pod-subpath-test-configmap-7dwc @ 09/04/23 15:56:00.995
  Sep  4 15:56:00.995: INFO: Deleting pod "pod-subpath-test-configmap-7dwc" in namespace "subpath-931"
  Sep  4 15:56:00.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-931" for this suite. @ 09/04/23 15:56:00.997
• [22.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/04/23 15:56:00.999
  Sep  4 15:56:00.999: INFO: >>> kubeConfig: /tmp/kubeconfig-3418509852
  STEP: Building a namespace api object, basename proxy @ 09/04/23 15:56:01
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/23 15:56:01.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/23 15:56:01.007
  Sep  4 15:56:01.008: INFO: Creating pod...
  E0904 15:56:01.099985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0904 15:56:02.100326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep  4 15:56:03.015: INFO: Creating service...
  Sep  4 15:56:03.019: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/pods/agnhost/proxy?method=DELETE
  Sep  4 15:56:03.023: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep  4 15:56:03.023: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/pods/agnhost/proxy?method=OPTIONS
  Sep  4 15:56:03.029: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep  4 15:56:03.029: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/pods/agnhost/proxy?method=PATCH
  Sep  4 15:56:03.039: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep  4 15:56:03.039: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/pods/agnhost/proxy?method=POST
  Sep  4 15:56:03.049: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep  4 15:56:03.049: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/pods/agnhost/proxy?method=PUT
  Sep  4 15:56:03.059: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep  4 15:56:03.059: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/services/e2e-proxy-test-service/proxy?method=DELETE
  Sep  4 15:56:03.067: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep  4 15:56:03.067: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Sep  4 15:56:03.069: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep  4 15:56:03.069: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/services/e2e-proxy-test-service/proxy?method=PATCH
  Sep  4 15:56:03.079: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep  4 15:56:03.079: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/services/e2e-proxy-test-service/proxy?method=POST
  Sep  4 15:56:03.081: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep  4 15:56:03.081: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/services/e2e-proxy-test-service/proxy?method=PUT
  Sep  4 15:56:03.091: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep  4 15:56:03.091: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/pods/agnhost/proxy?method=GET
  Sep  4 15:56:03.091: INFO: http.Client request:GET StatusCode:301
  Sep  4 15:56:03.092: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/services/e2e-proxy-test-service/proxy?method=GET
  Sep  4 15:56:03.093: INFO: http.Client request:GET StatusCode:301
  Sep  4 15:56:03.093: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/pods/agnhost/proxy?method=HEAD
  Sep  4 15:56:03.094: INFO: http.Client request:HEAD StatusCode:301
  Sep  4 15:56:03.094: INFO: Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-8126/services/e2e-proxy-test-service/proxy?method=HEAD
  Sep  4 15:56:03.095: INFO: http.Client request:HEAD StatusCode:301
  Sep  4 15:56:03.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8126" for this suite. @ 09/04/23 15:56:03.096
  E0904 15:56:03.100482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Sep  4 15:56:03.101: INFO: Running AfterSuite actions on node 1
  Sep  4 15:56:03.101: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.036 seconds]
------------------------------

Ran 380 of 7387 Specs in 6205.399 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h43m25.634190879s
Test Suite Passed
