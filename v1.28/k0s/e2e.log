  I0927 14:08:58.865237      22 e2e.go:117] Starting e2e run "e834fd57-3420-4fde-a8f4-ee0ee883c5e8" on Ginkgo node 1
  Sep 27 14:08:58.891: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1695823738 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Sep 27 14:08:59.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:08:59.058: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Sep 27 14:09:07.125: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Sep 27 14:09:07.128: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'konnectivity-agent' (0 seconds elapsed)
  Sep 27 14:09:07.128: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Sep 27 14:09:07.128: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-router' (0 seconds elapsed)
  Sep 27 14:09:07.128: INFO: e2e test version: v1.28.2
  Sep 27 14:09:07.129: INFO: kube-apiserver version: v1.28.2+k0s
  Sep 27 14:09:07.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:09:07.132: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [8.075 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 09/27/23 14:09:07.394
  Sep 27 14:09:07.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 14:09:07.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:09:07.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:09:07.413
  STEP: creating all guestbook components @ 09/27/23 14:09:07.415
  Sep 27 14:09:07.415: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Sep 27 14:09:07.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 create -f -'
  Sep 27 14:09:08.153: INFO: stderr: ""
  Sep 27 14:09:08.153: INFO: stdout: "service/agnhost-replica created\n"
  Sep 27 14:09:08.153: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Sep 27 14:09:08.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 create -f -'
  Sep 27 14:09:08.512: INFO: stderr: ""
  Sep 27 14:09:08.512: INFO: stdout: "service/agnhost-primary created\n"
  Sep 27 14:09:08.512: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Sep 27 14:09:08.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 create -f -'
  Sep 27 14:09:09.039: INFO: stderr: ""
  Sep 27 14:09:09.039: INFO: stdout: "service/frontend created\n"
  Sep 27 14:09:09.039: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Sep 27 14:09:09.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 create -f -'
  Sep 27 14:09:09.356: INFO: stderr: ""
  Sep 27 14:09:09.356: INFO: stdout: "deployment.apps/frontend created\n"
  Sep 27 14:09:09.356: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 27 14:09:09.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 create -f -'
  Sep 27 14:09:09.724: INFO: stderr: ""
  Sep 27 14:09:09.724: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Sep 27 14:09:09.724: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 27 14:09:09.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 create -f -'
  Sep 27 14:09:10.033: INFO: stderr: ""
  Sep 27 14:09:10.033: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/27/23 14:09:10.033
  Sep 27 14:09:10.033: INFO: Waiting for all frontend pods to be Running.
  Sep 27 14:09:25.087: INFO: Waiting for frontend to serve content.
  Sep 27 14:09:25.096: INFO: Trying to add a new entry to the guestbook.
  Sep 27 14:09:25.104: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/27/23 14:09:25.109
  Sep 27 14:09:25.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 delete --grace-period=0 --force -f -'
  Sep 27 14:09:25.188: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:09:25.188: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/27/23 14:09:25.188
  Sep 27 14:09:25.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 delete --grace-period=0 --force -f -'
  Sep 27 14:09:25.317: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:09:25.317: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/27/23 14:09:25.317
  Sep 27 14:09:25.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 delete --grace-period=0 --force -f -'
  Sep 27 14:09:25.441: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:09:25.441: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/27/23 14:09:25.441
  Sep 27 14:09:25.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 delete --grace-period=0 --force -f -'
  Sep 27 14:09:25.501: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:09:25.501: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/27/23 14:09:25.501
  Sep 27 14:09:25.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 delete --grace-period=0 --force -f -'
  Sep 27 14:09:25.570: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:09:25.570: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/27/23 14:09:25.571
  Sep 27 14:09:25.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2191 delete --grace-period=0 --force -f -'
  Sep 27 14:09:25.642: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:09:25.643: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Sep 27 14:09:25.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2191" for this suite. @ 09/27/23 14:09:25.647
• [18.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/27/23 14:09:25.657
  Sep 27 14:09:25.657: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:09:25.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:09:25.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:09:25.687
  STEP: Creating configMap with name projected-configmap-test-volume-map-65adf221-9539-40e1-8597-f32031f03977 @ 09/27/23 14:09:25.699
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:09:25.705
  STEP: Saw pod success @ 09/27/23 14:09:29.73
  Sep 27 14:09:29.732: INFO: Trying to get logs from node worker-1 pod pod-projected-configmaps-8350b03f-1dfc-4f09-8687-876bcf5da4db container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:09:29.746
  Sep 27 14:09:29.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1069" for this suite. @ 09/27/23 14:09:29.764
• [4.112 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 09/27/23 14:09:29.771
  Sep 27 14:09:29.771: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 14:09:29.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:09:29.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:09:29.793
  STEP: Creating service test in namespace statefulset-498 @ 09/27/23 14:09:29.796
  Sep 27 14:09:29.813: INFO: Found 0 stateful pods, waiting for 1
  Sep 27 14:09:39.817: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/27/23 14:09:39.821
  W0927 14:09:39.829659      22 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Sep 27 14:09:39.838: INFO: Found 1 stateful pods, waiting for 2
  Sep 27 14:09:49.842: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:09:49.842: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/27/23 14:09:49.845
  STEP: Delete all of the StatefulSets @ 09/27/23 14:09:49.847
  STEP: Verify that StatefulSets have been deleted @ 09/27/23 14:09:49.852
  Sep 27 14:09:49.854: INFO: Deleting all statefulset in ns statefulset-498
  Sep 27 14:09:49.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-498" for this suite. @ 09/27/23 14:09:49.866
• [20.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/27/23 14:09:49.88
  Sep 27 14:09:49.880: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 14:09:49.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:09:49.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:09:49.894
  STEP: Creating pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111 @ 09/27/23 14:09:49.896
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 14:09:51.908
  Sep 27 14:09:51.909: INFO: Initial restart count of pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 is 0
  Sep 27 14:09:51.911: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:09:53.914: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:09:55.918: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:09:57.921: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:09:59.924: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:10:01.928: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:10:03.931: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:10:05.934: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:10:07.937: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:10:09.940: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:10:11.944: INFO: Get pod liveness-4af17cd9-1d01-4971-a3de-9d4178767099 in namespace container-probe-5111
  Sep 27 14:10:11.944: INFO: Restart count of pod container-probe-5111/liveness-4af17cd9-1d01-4971-a3de-9d4178767099 is now 1 (20.034092628s elapsed)
  Sep 27 14:10:11.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:10:11.946
  STEP: Destroying namespace "container-probe-5111" for this suite. @ 09/27/23 14:10:12.018
• [22.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 09/27/23 14:10:12.025
  Sep 27 14:10:12.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename runtimeclass @ 09/27/23 14:10:12.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:10:12.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:10:12.038
  Sep 27 14:10:12.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1599" for this suite. @ 09/27/23 14:10:12.049
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 09/27/23 14:10:12.059
  Sep 27 14:10:12.059: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 14:10:12.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:10:12.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:10:12.071
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5514 @ 09/27/23 14:10:12.076
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/27/23 14:10:12.189
  STEP: creating service externalsvc in namespace services-5514 @ 09/27/23 14:10:12.189
  STEP: creating replication controller externalsvc in namespace services-5514 @ 09/27/23 14:10:12.208
  I0927 14:10:12.219327      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5514, replica count: 2
  I0927 14:10:15.271780      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/27/23 14:10:15.273
  Sep 27 14:10:15.286: INFO: Creating new exec pod
  Sep 27 14:10:17.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5514 exec execpod4bl7q -- /bin/sh -x -c nslookup clusterip-service.services-5514.svc.cluster.local'
  Sep 27 14:10:17.488: INFO: stderr: "+ nslookup clusterip-service.services-5514.svc.cluster.local\n"
  Sep 27 14:10:17.488: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-5514.svc.cluster.local\tcanonical name = externalsvc.services-5514.svc.cluster.local.\nName:\texternalsvc.services-5514.svc.cluster.local\nAddress: 10.100.79.119\n\n"
  Sep 27 14:10:17.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-5514, will wait for the garbage collector to delete the pods @ 09/27/23 14:10:17.491
  Sep 27 14:10:17.549: INFO: Deleting ReplicationController externalsvc took: 6.139076ms
  Sep 27 14:10:17.649: INFO: Terminating ReplicationController externalsvc pods took: 100.11439ms
  Sep 27 14:10:20.169: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-5514" for this suite. @ 09/27/23 14:10:20.177
• [8.122 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/27/23 14:10:20.182
  Sep 27 14:10:20.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 14:10:20.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:10:20.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:10:20.197
  STEP: creating the pod with failed condition @ 09/27/23 14:10:20.199
  STEP: updating the pod @ 09/27/23 14:12:20.207
  Sep 27 14:12:20.719: INFO: Successfully updated pod "var-expansion-f360c121-8c69-4fb9-bd65-1ed982338325"
  STEP: waiting for pod running @ 09/27/23 14:12:20.719
  STEP: deleting the pod gracefully @ 09/27/23 14:12:22.724
  Sep 27 14:12:22.724: INFO: Deleting pod "var-expansion-f360c121-8c69-4fb9-bd65-1ed982338325" in namespace "var-expansion-7915"
  Sep 27 14:12:22.730: INFO: Wait up to 5m0s for pod "var-expansion-f360c121-8c69-4fb9-bd65-1ed982338325" to be fully deleted
  Sep 27 14:12:54.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7915" for this suite. @ 09/27/23 14:12:54.785
• [154.608 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 09/27/23 14:12:54.79
  Sep 27 14:12:54.790: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename podtemplate @ 09/27/23 14:12:54.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:12:54.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:12:54.811
  Sep 27 14:12:54.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7692" for this suite. @ 09/27/23 14:12:54.84
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 09/27/23 14:12:54.846
  Sep 27 14:12:54.846: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 14:12:54.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:12:54.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:12:54.857
  STEP: creating service in namespace services-5249 @ 09/27/23 14:12:54.86
  STEP: creating service affinity-nodeport in namespace services-5249 @ 09/27/23 14:12:54.86
  STEP: creating replication controller affinity-nodeport in namespace services-5249 @ 09/27/23 14:12:54.906
  I0927 14:12:54.912903      22 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-5249, replica count: 3
  I0927 14:12:57.965326      22 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 14:12:57.971: INFO: Creating new exec pod
  Sep 27 14:13:00.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5249 exec execpod-affinityb6h96 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Sep 27 14:13:01.121: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Sep 27 14:13:01.121: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:13:01.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5249 exec execpod-affinityb6h96 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.208.87 80'
  Sep 27 14:13:01.259: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.208.87 80\nConnection to 10.97.208.87 80 port [tcp/http] succeeded!\n"
  Sep 27 14:13:01.259: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:13:01.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5249 exec execpod-affinityb6h96 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.53.207 32561'
  Sep 27 14:13:01.397: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.53.207 32561\nConnection to 10.0.53.207 32561 port [tcp/*] succeeded!\n"
  Sep 27 14:13:01.397: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:13:01.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5249 exec execpod-affinityb6h96 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.51.64 32561'
  Sep 27 14:13:01.552: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.51.64 32561\nConnection to 10.0.51.64 32561 port [tcp/*] succeeded!\n"
  Sep 27 14:13:01.552: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:13:01.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5249 exec execpod-affinityb6h96 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.53.207:32561/ ; done'
  Sep 27 14:13:01.755: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:32561/\n"
  Sep 27 14:13:01.755: INFO: stdout: "\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq\naffinity-nodeport-snzrq"
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Received response from host: affinity-nodeport-snzrq
  Sep 27 14:13:01.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 14:13:01.758: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5249, will wait for the garbage collector to delete the pods @ 09/27/23 14:13:01.771
  Sep 27 14:13:01.828: INFO: Deleting ReplicationController affinity-nodeport took: 4.802407ms
  Sep 27 14:13:01.929: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.177888ms
  STEP: Destroying namespace "services-5249" for this suite. @ 09/27/23 14:13:04.446
• [9.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 09/27/23 14:13:04.453
  Sep 27 14:13:04.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/27/23 14:13:04.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:04.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:04.465
  Sep 27 14:13:04.467: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:13:10.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8168" for this suite. @ 09/27/23 14:13:10.615
• [6.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 09/27/23 14:13:10.624
  Sep 27 14:13:10.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 14:13:10.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:10.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:10.638
  Sep 27 14:13:10.647: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 27 14:13:15.651: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 14:13:15.651
  STEP: Scaling up "test-rs" replicaset  @ 09/27/23 14:13:15.651
  Sep 27 14:13:15.697: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/27/23 14:13:15.697
  Sep 27 14:13:15.706: INFO: observed ReplicaSet test-rs in namespace replicaset-5140 with ReadyReplicas 1, AvailableReplicas 1
  Sep 27 14:13:15.725: INFO: observed ReplicaSet test-rs in namespace replicaset-5140 with ReadyReplicas 1, AvailableReplicas 1
  Sep 27 14:13:15.739: INFO: observed ReplicaSet test-rs in namespace replicaset-5140 with ReadyReplicas 1, AvailableReplicas 1
  Sep 27 14:13:15.753: INFO: observed ReplicaSet test-rs in namespace replicaset-5140 with ReadyReplicas 1, AvailableReplicas 1
  Sep 27 14:13:16.446: INFO: observed ReplicaSet test-rs in namespace replicaset-5140 with ReadyReplicas 2, AvailableReplicas 2
  Sep 27 14:13:17.354: INFO: observed Replicaset test-rs in namespace replicaset-5140 with ReadyReplicas 3 found true
  Sep 27 14:13:17.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5140" for this suite. @ 09/27/23 14:13:17.361
• [6.744 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 09/27/23 14:13:17.368
  Sep 27 14:13:17.368: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 14:13:17.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:17.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:17.386
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-3618 @ 09/27/23 14:13:17.388
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/27/23 14:13:17.401
  STEP: creating service externalsvc in namespace services-3618 @ 09/27/23 14:13:17.401
  STEP: creating replication controller externalsvc in namespace services-3618 @ 09/27/23 14:13:17.412
  I0927 14:13:17.419423      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3618, replica count: 2
  I0927 14:13:20.471415      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/27/23 14:13:20.473
  Sep 27 14:13:20.491: INFO: Creating new exec pod
  Sep 27 14:13:22.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-3618 exec execpod8485q -- /bin/sh -x -c nslookup nodeport-service.services-3618.svc.cluster.local'
  Sep 27 14:13:22.676: INFO: stderr: "+ nslookup nodeport-service.services-3618.svc.cluster.local\n"
  Sep 27 14:13:22.676: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-3618.svc.cluster.local\tcanonical name = externalsvc.services-3618.svc.cluster.local.\nName:\texternalsvc.services-3618.svc.cluster.local\nAddress: 10.100.96.231\n\n"
  Sep 27 14:13:22.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-3618, will wait for the garbage collector to delete the pods @ 09/27/23 14:13:22.678
  Sep 27 14:13:22.735: INFO: Deleting ReplicationController externalsvc took: 4.292217ms
  Sep 27 14:13:22.836: INFO: Terminating ReplicationController externalsvc pods took: 100.73253ms
  Sep 27 14:13:25.553: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-3618" for this suite. @ 09/27/23 14:13:25.562
• [8.200 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/27/23 14:13:25.57
  Sep 27 14:13:25.570: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename tables @ 09/27/23 14:13:25.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:25.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:25.589
  Sep 27 14:13:25.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1262" for this suite. @ 09/27/23 14:13:25.595
• [0.030 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/27/23 14:13:25.6
  Sep 27 14:13:25.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename deployment @ 09/27/23 14:13:25.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:25.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:25.619
  Sep 27 14:13:25.631: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Sep 27 14:13:30.635: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 14:13:30.635
  Sep 27 14:13:30.635: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Sep 27 14:13:32.639: INFO: Creating deployment "test-rollover-deployment"
  Sep 27 14:13:32.645: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Sep 27 14:13:34.649: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Sep 27 14:13:34.653: INFO: Ensure that both replica sets have 1 created replica
  Sep 27 14:13:34.656: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Sep 27 14:13:34.667: INFO: Updating deployment test-rollover-deployment
  Sep 27 14:13:34.667: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Sep 27 14:13:36.671: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Sep 27 14:13:36.675: INFO: Make sure deployment "test-rollover-deployment" is complete
  Sep 27 14:13:36.678: INFO: all replica sets need to contain the pod-template-hash label
  Sep 27 14:13:36.678: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 13, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:13:38.684: INFO: all replica sets need to contain the pod-template-hash label
  Sep 27 14:13:38.684: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 13, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:13:40.683: INFO: all replica sets need to contain the pod-template-hash label
  Sep 27 14:13:40.684: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 13, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:13:42.683: INFO: all replica sets need to contain the pod-template-hash label
  Sep 27 14:13:42.683: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 13, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:13:44.683: INFO: all replica sets need to contain the pod-template-hash label
  Sep 27 14:13:44.683: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 13, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 13, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:13:46.684: INFO: 
  Sep 27 14:13:46.684: INFO: Ensure that both old replica sets have no replicas
  Sep 27 14:13:46.689: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2730",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b5e52f0-d799-4934-b40c-5f7fbfe838cb",
      ResourceVersion: (string) (len=4) "2384",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420812,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 14:13:46.693: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2730",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7b06a88-ac6f-4565-9065-00945aaed222",
      ResourceVersion: (string) (len=4) "2374",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9b5e52f0-d799-4934-b40c-5f7fbfe838cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 35 65 35 32  66 30 2d 64 37 39 39 2d  |\"9b5e52f0-d799-|
              00000120  34 39 33 34 2d 62 34 30  63 2d 35 66 37 66 62 66  |4934-b40c-5f7fbf|
              00000130  65 38 33 38 63 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e838cb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:13:46.694: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Sep 27 14:13:46.694: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2730",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c6595fd-40bf-437e-b851-37f6019665ed",
      ResourceVersion: (string) (len=4) "2383",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420805,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9b5e52f0-d799-4934-b40c-5f7fbfe838cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 62 35 65 35 32 66 30  2d 64 37 39 39 2d 34 39  |9b5e52f0-d799-49|
              000000c0  33 34 2d 62 34 30 63 2d  35 66 37 66 62 66 65 38  |34-b40c-5f7fbfe8|
              000000d0  33 38 63 62 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |38cb\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:13:46.695: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2730",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6ee68e5-82eb-468d-9989-1a6e7a266608",
      ResourceVersion: (string) (len=4) "2335",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420812,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9b5e52f0-d799-4934-b40c-5f7fbfe838cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 35 65 35 32  66 30 2d 64 37 39 39 2d  |\"9b5e52f0-d799-|
              00000120  34 39 33 34 2d 62 34 30  63 2d 35 66 37 66 62 66  |4934-b40c-5f7fbf|
              00000130  65 38 33 38 63 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e838cb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:13:46.703: INFO: Pod "test-rollover-deployment-5d484bf7f9-4wbxg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-4wbxg",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-2730",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5464dddb-cb71-4a7c-9fad-5b6670aeca08",
      ResourceVersion: (string) (len=4) "2351",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "c7b06a88-ac6f-4565-9065-00945aaed222",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 37  62 30 36 61 38 38 2d 61  |d\":\"c7b06a88-a|
              00000090  63 36 66 2d 34 35 36 35  2d 39 30 36 35 2d 30 30  |c6f-4565-9065-00|
              000000a0  39 34 35 61 61 65 64 32  32 32 5c 22 7d 22 3a 7b  |945aaed222\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420815,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 31 36 5c 22 7d 22 3a  |10.244.1.16\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-667m9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-667m9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420815,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420815,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420814,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831420815,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://099247751a3bdcd59bda68388cb243a18f85efd7f1d29dbe4d31776cf0fe5904",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:13:46.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2730" for this suite. @ 09/27/23 14:13:46.707
• [21.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/27/23 14:13:46.714
  Sep 27 14:13:46.714: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 14:13:46.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:46.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:46.73
  STEP: creating the pod @ 09/27/23 14:13:46.732
  STEP: submitting the pod to kubernetes @ 09/27/23 14:13:46.732
  W0927 14:13:46.741067      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 09/27/23 14:13:48.747
  STEP: updating the pod @ 09/27/23 14:13:48.749
  Sep 27 14:13:49.261: INFO: Successfully updated pod "pod-update-activedeadlineseconds-6710f98c-187f-4e08-b302-39df60a9e21c"
  Sep 27 14:13:53.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-293" for this suite. @ 09/27/23 14:13:53.272
• [6.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 09/27/23 14:13:53.279
  Sep 27 14:13:53.279: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 14:13:53.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:53.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:53.289
  STEP: Creating simple DaemonSet "daemon-set" @ 09/27/23 14:13:53.301
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 14:13:53.305
  Sep 27 14:13:53.311: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 14:13:53.311: INFO: Node worker-0 is running 0 daemon pod, expected 1
  Sep 27 14:13:54.317: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 14:13:54.317: INFO: Node worker-0 is running 0 daemon pod, expected 1
  Sep 27 14:13:55.317: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 14:13:55.317: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/27/23 14:13:55.318
  STEP: DeleteCollection of the DaemonSets @ 09/27/23 14:13:55.32
  STEP: Verify that ReplicaSets have been deleted @ 09/27/23 14:13:55.325
  Sep 27 14:13:55.332: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2489"},"items":null}

  Sep 27 14:13:55.335: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2489"},"items":[{"metadata":{"name":"daemon-set-455sd","generateName":"daemon-set-","namespace":"daemonsets-119","uid":"1f9ccd52-9732-4389-835c-3aa2371d02da","resourceVersion":"2481","creationTimestamp":"2023-09-27T14:13:53Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"cf537311-50c6-43e7-a689-6050bc0a36c5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-27T14:13:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"cf537311-50c6-43e7-a689-6050bc0a36c5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-27T14:13:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.23\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-bpnr9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-bpnr9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T14:13:53Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T14:13:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T14:13:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T14:13:53Z"}],"hostIP":"10.0.51.64","podIP":"10.244.0.23","podIPs":[{"ip":"10.244.0.23"}],"startTime":"2023-09-27T14:13:53Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-27T14:13:53Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://48afa37527f6527fdb8b3a514ba0921609b144bc45a11aac3ec68f805769720e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-sslnw","generateName":"daemon-set-","namespace":"daemonsets-119","uid":"e9215b2a-8324-4b33-b882-7df47c8af29b","resourceVersion":"2484","creationTimestamp":"2023-09-27T14:13:53Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"cf537311-50c6-43e7-a689-6050bc0a36c5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-27T14:13:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"cf537311-50c6-43e7-a689-6050bc0a36c5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-27T14:13:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.17\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-c6w7n","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-c6w7n","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T14:13:53Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T14:13:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T14:13:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T14:13:53Z"}],"hostIP":"10.0.53.207","podIP":"10.244.1.17","podIPs":[{"ip":"10.244.1.17"}],"startTime":"2023-09-27T14:13:53Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-27T14:13:53Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4a614fe9a44c2f456b7422f57df69500c4f0d9d06550cc8e873dfe4b9c89e91c","started":true}],"qosClass":"BestEffort"}}]}

  Sep 27 14:13:55.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-119" for this suite. @ 09/27/23 14:13:55.354
• [2.079 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 09/27/23 14:13:55.358
  Sep 27 14:13:55.358: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename discovery @ 09/27/23 14:13:55.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:55.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:55.371
  STEP: Setting up server cert @ 09/27/23 14:13:55.374
  STEP: Requesting APIResourceList from "/api/v1" @ 09/27/23 14:13:55.795
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/27/23 14:13:55.796
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/27/23 14:13:55.797
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/27/23 14:13:55.798
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/27/23 14:13:55.799
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/27/23 14:13:55.8
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/27/23 14:13:55.801
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/27/23 14:13:55.802
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/27/23 14:13:55.803
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/27/23 14:13:55.803
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/27/23 14:13:55.804
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/27/23 14:13:55.805
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/27/23 14:13:55.806
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/27/23 14:13:55.807
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/27/23 14:13:55.808
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/27/23 14:13:55.809
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/27/23 14:13:55.809
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/27/23 14:13:55.81
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/27/23 14:13:55.811
  Sep 27 14:13:55.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2664" for this suite. @ 09/27/23 14:13:55.814
• [0.461 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 09/27/23 14:13:55.819
  Sep 27 14:13:55.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 14:13:55.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:55.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:55.833
  STEP: Creating a pod to test service account token:  @ 09/27/23 14:13:55.835
  STEP: Saw pod success @ 09/27/23 14:13:59.85
  Sep 27 14:13:59.852: INFO: Trying to get logs from node worker-1 pod test-pod-687e7427-3a47-445e-8a6d-d42f450224f9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:13:59.864
  Sep 27 14:13:59.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3305" for this suite. @ 09/27/23 14:13:59.888
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 09/27/23 14:13:59.894
  Sep 27 14:13:59.894: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename lease-test @ 09/27/23 14:13:59.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:59.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:59.908
  Sep 27 14:13:59.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2987" for this suite. @ 09/27/23 14:13:59.951
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/27/23 14:13:59.958
  Sep 27 14:13:59.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 14:13:59.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:13:59.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:13:59.976
  STEP: Creating configMap with name configmap-test-volume-e04157e3-e6ec-409a-859e-8a5131f34f08 @ 09/27/23 14:13:59.979
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:13:59.982
  STEP: Saw pod success @ 09/27/23 14:14:04
  Sep 27 14:14:04.002: INFO: Trying to get logs from node worker-1 pod pod-configmaps-24653034-8193-450b-a068-ce9113d54360 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:14:04.007
  Sep 27 14:14:04.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-267" for this suite. @ 09/27/23 14:14:04.023
• [4.072 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/27/23 14:14:04.031
  Sep 27 14:14:04.031: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubelet-test @ 09/27/23 14:14:04.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:04.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:04.042
  Sep 27 14:14:08.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6437" for this suite. @ 09/27/23 14:14:08.062
• [4.037 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 09/27/23 14:14:08.067
  Sep 27 14:14:08.067: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 14:14:08.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:08.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:08.08
  STEP: creating a ConfigMap @ 09/27/23 14:14:08.084
  STEP: fetching the ConfigMap @ 09/27/23 14:14:08.088
  STEP: patching the ConfigMap @ 09/27/23 14:14:08.09
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/27/23 14:14:08.095
  STEP: deleting the ConfigMap by collection with a label selector @ 09/27/23 14:14:08.097
  STEP: listing all ConfigMaps in test namespace @ 09/27/23 14:14:08.102
  Sep 27 14:14:08.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5057" for this suite. @ 09/27/23 14:14:08.106
• [0.047 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/27/23 14:14:08.115
  Sep 27 14:14:08.115: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 14:14:08.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:08.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:08.136
  STEP: creating pod @ 09/27/23 14:14:08.138
  Sep 27 14:14:10.157: INFO: Pod pod-hostip-6aac7805-43d0-4aa9-8bfa-b60b1061de1f has hostIP: 10.0.51.64
  Sep 27 14:14:10.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1403" for this suite. @ 09/27/23 14:14:10.159
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 09/27/23 14:14:10.166
  Sep 27 14:14:10.166: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 14:14:10.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:10.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:10.184
  STEP: Creating ServiceAccount "e2e-sa-n5hxp"  @ 09/27/23 14:14:10.186
  Sep 27 14:14:10.190: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-n5hxp"  @ 09/27/23 14:14:10.19
  Sep 27 14:14:10.195: INFO: AutomountServiceAccountToken: true
  Sep 27 14:14:10.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5425" for this suite. @ 09/27/23 14:14:10.198
• [0.052 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 09/27/23 14:14:10.219
  Sep 27 14:14:10.219: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 14:14:10.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:10.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:10.247
  STEP: Setting up server cert @ 09/27/23 14:14:10.265
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 14:14:10.648
  STEP: Deploying the webhook pod @ 09/27/23 14:14:10.654
  STEP: Wait for the deployment to be ready @ 09/27/23 14:14:10.665
  Sep 27 14:14:10.668: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/27/23 14:14:12.674
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:14:12.686
  Sep 27 14:14:13.686: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/27/23 14:14:13.69
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/27/23 14:14:13.709
  STEP: Creating a configMap that should not be mutated @ 09/27/23 14:14:13.715
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/27/23 14:14:13.725
  STEP: Creating a configMap that should be mutated @ 09/27/23 14:14:13.732
  Sep 27 14:14:13.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-362" for this suite. @ 09/27/23 14:14:13.922
  STEP: Destroying namespace "webhook-markers-9497" for this suite. @ 09/27/23 14:14:13.93
• [3.716 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/27/23 14:14:13.936
  Sep 27 14:14:13.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:14:13.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:13.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:13.951
  STEP: Creating secret with name projected-secret-test-c5eb08b2-b9b0-4c4e-824e-966a618471ec @ 09/27/23 14:14:13.953
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:14:13.956
  STEP: Saw pod success @ 09/27/23 14:14:17.973
  Sep 27 14:14:17.975: INFO: Trying to get logs from node worker-0 pod pod-projected-secrets-a6015fd2-ee59-4072-875a-d0ed27efc5dd container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:14:17.988
  Sep 27 14:14:17.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9870" for this suite. @ 09/27/23 14:14:18.001
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 09/27/23 14:14:18.009
  Sep 27 14:14:18.009: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-webhook @ 09/27/23 14:14:18.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:18.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:18.025
  STEP: Setting up server cert @ 09/27/23 14:14:18.027
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/27/23 14:14:18.381
  STEP: Deploying the custom resource conversion webhook pod @ 09/27/23 14:14:18.385
  STEP: Wait for the deployment to be ready @ 09/27/23 14:14:18.398
  Sep 27 14:14:18.402: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/27/23 14:14:20.409
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:14:20.429
  Sep 27 14:14:21.430: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 27 14:14:21.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Creating a v1 custom resource @ 09/27/23 14:14:23.993
  STEP: Create a v2 custom resource @ 09/27/23 14:14:24.008
  STEP: List CRs in v1 @ 09/27/23 14:14:24.048
  STEP: List CRs in v2 @ 09/27/23 14:14:24.052
  Sep 27 14:14:24.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-744" for this suite. @ 09/27/23 14:14:24.641
• [6.636 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 09/27/23 14:14:24.645
  Sep 27 14:14:24.645: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 14:14:24.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:24.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:24.665
  STEP: Creating a ResourceQuota @ 09/27/23 14:14:24.667
  STEP: Getting a ResourceQuota @ 09/27/23 14:14:24.672
  STEP: Updating a ResourceQuota @ 09/27/23 14:14:24.673
  STEP: Verifying a ResourceQuota was modified @ 09/27/23 14:14:24.684
  STEP: Deleting a ResourceQuota @ 09/27/23 14:14:24.686
  STEP: Verifying the deleted ResourceQuota @ 09/27/23 14:14:24.691
  Sep 27 14:14:24.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5224" for this suite. @ 09/27/23 14:14:24.695
• [0.054 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 09/27/23 14:14:24.7
  Sep 27 14:14:24.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pod-network-test @ 09/27/23 14:14:24.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:24.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:24.712
  STEP: Performing setup for networking test in namespace pod-network-test-5554 @ 09/27/23 14:14:24.715
  STEP: creating a selector @ 09/27/23 14:14:24.715
  STEP: Creating the service pods in kubernetes @ 09/27/23 14:14:24.715
  Sep 27 14:14:24.715: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/27/23 14:14:36.797
  Sep 27 14:14:38.830: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Sep 27 14:14:38.830: INFO: Going to poll 10.244.1.20 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Sep 27 14:14:38.831: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.20 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5554 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 14:14:38.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:14:38.832: INFO: ExecWithOptions: Clientset creation
  Sep 27 14:14:38.832: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5554/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.20+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 27 14:14:39.927: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 27 14:14:39.927: INFO: Going to poll 10.244.0.29 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Sep 27 14:14:39.929: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.29 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5554 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 14:14:39.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:14:39.930: INFO: ExecWithOptions: Clientset creation
  Sep 27 14:14:39.930: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5554/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.29+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 27 14:14:41.010: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 27 14:14:41.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5554" for this suite. @ 09/27/23 14:14:41.013
• [16.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 09/27/23 14:14:41.019
  Sep 27 14:14:41.019: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 14:14:41.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:41.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:41.039
  STEP: Given a ReplicationController is created @ 09/27/23 14:14:41.042
  STEP: When the matched label of one of its pods change @ 09/27/23 14:14:41.051
  Sep 27 14:14:41.053: INFO: Pod name pod-release: Found 0 pods out of 1
  Sep 27 14:14:46.057: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/27/23 14:14:46.071
  Sep 27 14:14:47.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3308" for this suite. @ 09/27/23 14:14:47.079
• [6.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 09/27/23 14:14:47.087
  Sep 27 14:14:47.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 14:14:47.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:14:47.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:14:47.106
  STEP: Counting existing ResourceQuota @ 09/27/23 14:14:47.108
  STEP: Creating a ResourceQuota @ 09/27/23 14:14:52.113
  STEP: Ensuring resource quota status is calculated @ 09/27/23 14:14:52.121
  STEP: Creating a Pod that fits quota @ 09/27/23 14:14:54.124
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/27/23 14:14:54.142
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/27/23 14:14:56.181
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/27/23 14:14:56.183
  STEP: Ensuring a pod cannot update its resource requirements @ 09/27/23 14:14:56.185
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/27/23 14:14:56.187
  STEP: Deleting the pod @ 09/27/23 14:14:58.19
  STEP: Ensuring resource quota status released the pod usage @ 09/27/23 14:14:58.204
  Sep 27 14:15:00.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-139" for this suite. @ 09/27/23 14:15:00.209
• [13.127 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 09/27/23 14:15:00.215
  Sep 27 14:15:00.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 14:15:00.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:00.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:00.233
  STEP: creating an Endpoint @ 09/27/23 14:15:00.238
  STEP: waiting for available Endpoint @ 09/27/23 14:15:00.242
  STEP: listing all Endpoints @ 09/27/23 14:15:00.243
  STEP: updating the Endpoint @ 09/27/23 14:15:00.245
  STEP: fetching the Endpoint @ 09/27/23 14:15:00.25
  STEP: patching the Endpoint @ 09/27/23 14:15:00.251
  STEP: fetching the Endpoint @ 09/27/23 14:15:00.278
  STEP: deleting the Endpoint by Collection @ 09/27/23 14:15:00.28
  STEP: waiting for Endpoint deletion @ 09/27/23 14:15:00.285
  STEP: fetching the Endpoint @ 09/27/23 14:15:00.286
  Sep 27 14:15:00.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-972" for this suite. @ 09/27/23 14:15:00.29
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/27/23 14:15:00.296
  Sep 27 14:15:00.296: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename deployment @ 09/27/23 14:15:00.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:00.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:00.314
  Sep 27 14:15:00.316: INFO: Creating deployment "webserver-deployment"
  Sep 27 14:15:00.322: INFO: Waiting for observed generation 1
  Sep 27 14:15:02.327: INFO: Waiting for all required pods to come up
  Sep 27 14:15:02.329: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/27/23 14:15:02.329
  Sep 27 14:15:02.330: INFO: Waiting for deployment "webserver-deployment" to complete
  Sep 27 14:15:02.333: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Sep 27 14:15:02.347: INFO: Updating deployment webserver-deployment
  Sep 27 14:15:02.347: INFO: Waiting for observed generation 2
  Sep 27 14:15:04.351: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Sep 27 14:15:04.353: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Sep 27 14:15:04.355: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 27 14:15:04.359: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Sep 27 14:15:04.360: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Sep 27 14:15:04.361: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 27 14:15:04.364: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Sep 27 14:15:04.364: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Sep 27 14:15:04.375: INFO: Updating deployment webserver-deployment
  Sep 27 14:15:04.375: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Sep 27 14:15:04.379: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Sep 27 14:15:04.388: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Sep 27 14:15:04.399: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3ffd09b-7519-4c07-b4c2-b8c99a714e67",
      ResourceVersion: (string) (len=4) "3317",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 14:15:04.413: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2068c30-15e8-4311-a7de-b32a2162c76b",
      ResourceVersion: (string) (len=4) "3323",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "e3ffd09b-7519-4c07-b4c2-b8c99a714e67",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 33 66 66 64 30  39 62 2d 37 35 31 39 2d  |\"e3ffd09b-7519-|
              00000120  34 63 30 37 2d 62 34 63  32 2d 62 38 63 39 39 61  |4c07-b4c2-b8c99a|
              00000130  37 31 34 65 36 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |714e67\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:15:04.414: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Sep 27 14:15:04.414: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
      ResourceVersion: (string) (len=4) "3319",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "e3ffd09b-7519-4c07-b4c2-b8c99a714e67",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 33 66 66 64 30  39 62 2d 37 35 31 39 2d  |\"e3ffd09b-7519-|
              00000120  34 63 30 37 2d 62 34 63  32 2d 62 38 63 39 39 61  |4c07-b4c2-b8c99a|
              00000130  37 31 34 65 36 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |714e67\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:15:04.439: INFO: Pod "webserver-deployment-557759b7c7-2wfbz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2wfbz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "154d04cc-ad96-4855-8a25-9ec66a436bca",
      ResourceVersion: (string) (len=4) "3222",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 30  2e 33 35 5c 22 7d 22 3a  |10.244.0.35\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l4qht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l4qht",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.0.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831420901,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ddf18ee5e9ca0ce791a2cf3a55e1da7bea90f20c59b8baa6174bca7ba89a6ac0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.442: INFO: Pod "webserver-deployment-557759b7c7-4tbl2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4tbl2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87ddcfd0-07ec-478d-9381-6bda7c4c42d1",
      ResourceVersion: (string) (len=4) "3246",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 32 36 5c 22 7d 22 3a  |10.244.1.26\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dcmx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dcmx8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831420901,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c4e7bed59041dc001dd59e2c9025dfeb3389c50163a067cb0755afe4507ec6d0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.444: INFO: Pod "webserver-deployment-557759b7c7-5p2z8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5p2z8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e177504e-ec20-427a-85fc-7eae6328b2e4",
      ResourceVersion: (string) (len=4) "3230",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 32 35 5c 22 7d 22 3a  |10.244.1.25\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hpplq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hpplq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831420901,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0b0e637aa8484d72e26f75baff4d7b51992c51979b2a936d43e451441f4ed458",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.446: INFO: Pod "webserver-deployment-557759b7c7-cr894" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cr894",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d93c268c-806e-4edd-a4bf-d52784dca76b",
      ResourceVersion: (string) (len=4) "3328",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420904,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nns6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nns6b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.449: INFO: Pod "webserver-deployment-557759b7c7-jk8pk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jk8pk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e80a102-8b6a-4a71-b5b4-78ea29d79cea",
      ResourceVersion: (string) (len=4) "3238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 32 32 5c 22 7d 22 3a  |10.244.1.22\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9z9nh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9z9nh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831420901,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b57188934402631d9632eaad7b3618ff94160264185632f3a83a34d7e79b1dae",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.451: INFO: Pod "webserver-deployment-557759b7c7-mtvn9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mtvn9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55d66985-b959-48f9-b43a-9e1baf90ac92",
      ResourceVersion: (string) (len=4) "3331",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420904,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2vs7r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2vs7r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.453: INFO: Pod "webserver-deployment-557759b7c7-pbqqp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pbqqp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a671a77-be55-44e5-9ca3-19aea7ef5449",
      ResourceVersion: (string) (len=4) "3242",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 32 34 5c 22 7d 22 3a  |10.244.1.24\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n92sm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n92sm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831420901,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f23862a6b958c896378f1502defd0647c0c81a5ace092bb310594a8f4494e4c2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.455: INFO: Pod "webserver-deployment-557759b7c7-pp2r7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pp2r7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2ba8509-4d32-4caa-ab2f-73d2958d0e59",
      ResourceVersion: (string) (len=4) "3337",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420904,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nm2zl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nm2zl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.457: INFO: Pod "webserver-deployment-557759b7c7-psfdh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-psfdh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70a73749-7019-4904-ae70-95be21f73f86",
      ResourceVersion: (string) (len=4) "3338",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420904,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qtt58",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qtt58",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.459: INFO: Pod "webserver-deployment-557759b7c7-rx8gb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rx8gb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "144dc6e7-1c07-4240-be51-5cbc462f6cbf",
      ResourceVersion: (string) (len=4) "3340",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420904,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fmznb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fmznb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.460: INFO: Pod "webserver-deployment-557759b7c7-thncn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-thncn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b138db33-1b6e-49cc-8f46-48812a0977eb",
      ResourceVersion: (string) (len=4) "3334",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420904,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vmfcn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vmfcn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.462: INFO: Pod "webserver-deployment-557759b7c7-thprg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-thprg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "641e90de-0bae-4ec9-ab93-4ee2f9e150ba",
      ResourceVersion: (string) (len=4) "3234",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 30  2e 33 36 5c 22 7d 22 3a  |10.244.0.36\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jd7h5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jd7h5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.0.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831420901,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://62fd71bfdce8b2577567c117b1eaaa1e09f48331a0fa1400db4ea85c3c02bbd2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.464: INFO: Pod "webserver-deployment-557759b7c7-vmfs5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vmfs5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d239dff-eaa8-49ea-9ac6-222144b4aa8d",
      ResourceVersion: (string) (len=4) "3235",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 32 33 5c 22 7d 22 3a  |10.244.1.23\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-56km6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-56km6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831420901,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3420d63e386cb5ac4d697b2d7939d66609c16f9adbcca87c73bab6dbc0580ba8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.466: INFO: Pod "webserver-deployment-557759b7c7-z7hb6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z7hb6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d6c48ed-2583-4be1-937f-e9396c80cd1e",
      ResourceVersion: (string) (len=4) "3336",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420904,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-289fj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-289fj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.468: INFO: Pod "webserver-deployment-557759b7c7-z95n8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z95n8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa2c77c9-2654-4104-b9ae-9c96b70e1719",
      ResourceVersion: (string) (len=4) "3220",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "6c31869e-7371-4566-9b80-82f0a7471fb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 63  33 31 38 36 39 65 2d 37  |d\":\"6c31869e-7|
              00000090  33 37 31 2d 34 35 36 36  2d 39 62 38 30 2d 38 32  |371-4566-9b80-82|
              000000a0  66 30 61 37 34 37 31 66  62 33 5c 22 7d 22 3a 7b  |f0a7471fb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 30  2e 33 34 5c 22 7d 22 3a  |10.244.0.34\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4c9hl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4c9hl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.0.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831420901,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b36afa6bdfc48faf387f5cdfd49a75e995130c45ee54ee615623f838d2d8ea79",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.470: INFO: Pod "webserver-deployment-9b4f5bf69-5djz2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5djz2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1a2b758-5858-4944-9077-869707a31c0f",
      ResourceVersion: (string) (len=4) "3312",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d2068c30-15e8-4311-a7de-b32a2162c76b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  30 36 38 63 33 30 2d 31  |d\":\"d2068c30-1|
              00000090  35 65 38 2d 34 33 31 31  2d 61 37 64 65 2d 62 33  |5e8-4311-a7de-b3|
              000000a0  32 61 32 31 36 32 63 37  36 62 5c 22 7d 22 3a 7b  |2a2162c76b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 30 2e 33 37  5c 22 7d 22 3a 7b 22 2e  |244.0.37\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pjrqq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pjrqq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.0.37",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.37"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.472: INFO: Pod "webserver-deployment-9b4f5bf69-8gj7x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8gj7x",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "128bec34-ce79-4296-a13c-7e47d8260607",
      ResourceVersion: (string) (len=4) "3335",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420904,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d2068c30-15e8-4311-a7de-b32a2162c76b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  30 36 38 63 33 30 2d 31  |d\":\"d2068c30-1|
              00000090  35 65 38 2d 34 33 31 31  2d 61 37 64 65 2d 62 33  |5e8-4311-a7de-b3|
              000000a0  32 61 32 31 36 32 63 37  36 62 5c 22 7d 22 3a 7b  |2a2162c76b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qf2jr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qf2jr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.474: INFO: Pod "webserver-deployment-9b4f5bf69-d448w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d448w",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88646d42-b101-43b5-a76f-418fb66ba83d",
      ResourceVersion: (string) (len=4) "3276",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d2068c30-15e8-4311-a7de-b32a2162c76b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  30 36 38 63 33 30 2d 31  |d\":\"d2068c30-1|
              00000090  35 65 38 2d 34 33 31 31  2d 61 37 64 65 2d 62 33  |5e8-4311-a7de-b3|
              000000a0  32 61 32 31 36 32 63 37  36 62 5c 22 7d 22 3a 7b  |2a2162c76b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b2rj5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b2rj5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.476: INFO: Pod "webserver-deployment-9b4f5bf69-fs4zj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fs4zj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c6a0b8c-1204-440c-ae0e-c081869c8f35",
      ResourceVersion: (string) (len=4) "3294",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d2068c30-15e8-4311-a7de-b32a2162c76b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  30 36 38 63 33 30 2d 31  |d\":\"d2068c30-1|
              00000090  35 65 38 2d 34 33 31 31  2d 61 37 64 65 2d 62 33  |5e8-4311-a7de-b3|
              000000a0  32 61 32 31 36 32 63 37  36 62 5c 22 7d 22 3a 7b  |2a2162c76b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b2frf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b2frf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.478: INFO: Pod "webserver-deployment-9b4f5bf69-mv8rw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mv8rw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "abfc51a5-40f7-4f34-a358-6c063a913215",
      ResourceVersion: (string) (len=4) "3339",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420904,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d2068c30-15e8-4311-a7de-b32a2162c76b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  30 36 38 63 33 30 2d 31  |d\":\"d2068c30-1|
              00000090  35 65 38 2d 34 33 31 31  2d 61 37 64 65 2d 62 33  |5e8-4311-a7de-b3|
              000000a0  32 61 32 31 36 32 63 37  36 62 5c 22 7d 22 3a 7b  |2a2162c76b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n8nr9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n8nr9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.480: INFO: Pod "webserver-deployment-9b4f5bf69-r5z49" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-r5z49",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b1c458d-1e2b-4f19-b9a8-b788f9e17859",
      ResourceVersion: (string) (len=4) "3298",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d2068c30-15e8-4311-a7de-b32a2162c76b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  30 36 38 63 33 30 2d 31  |d\":\"d2068c30-1|
              00000090  35 65 38 2d 34 33 31 31  2d 61 37 64 65 2d 62 33  |5e8-4311-a7de-b3|
              000000a0  32 61 32 31 36 32 63 37  36 62 5c 22 7d 22 3a 7b  |2a2162c76b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t4zp7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t4zp7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.482: INFO: Pod "webserver-deployment-9b4f5bf69-tksnn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-tksnn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "791b248e-8df8-480b-985c-19d7574caf21",
      ResourceVersion: (string) (len=4) "3332",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420904,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d2068c30-15e8-4311-a7de-b32a2162c76b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  30 36 38 63 33 30 2d 31  |d\":\"d2068c30-1|
              00000090  35 65 38 2d 34 33 31 31  2d 61 37 64 65 2d 62 33  |5e8-4311-a7de-b3|
              000000a0  32 61 32 31 36 32 63 37  36 62 5c 22 7d 22 3a 7b  |2a2162c76b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wdczt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wdczt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.484: INFO: Pod "webserver-deployment-9b4f5bf69-z4vlh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z4vlh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c98c94e6-401f-4dfa-9b5d-188958ee6c3a",
      ResourceVersion: (string) (len=4) "3280",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d2068c30-15e8-4311-a7de-b32a2162c76b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 32  30 36 38 63 33 30 2d 31  |d\":\"d2068c30-1|
              00000090  35 65 38 2d 34 33 31 31  2d 61 37 64 65 2d 62 33  |5e8-4311-a7de-b3|
              000000a0  32 61 32 31 36 32 63 37  36 62 5c 22 7d 22 3a 7b  |2a2162c76b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7fq5s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7fq5s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420902,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:04.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2894" for this suite. @ 09/27/23 14:15:04.528
• [4.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/27/23 14:15:04.568
  Sep 27 14:15:04.568: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:15:04.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:04.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:04.7
  STEP: Creating configMap with name projected-configmap-test-volume-51eb9b42-c1bf-4837-8587-4acdd19ca82c @ 09/27/23 14:15:04.704
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:15:04.715
  STEP: Saw pod success @ 09/27/23 14:15:08.737
  Sep 27 14:15:08.739: INFO: Trying to get logs from node worker-0 pod pod-projected-configmaps-3429c0b4-5f22-474f-87f8-a368a935514d container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:15:08.744
  Sep 27 14:15:08.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1039" for this suite. @ 09/27/23 14:15:08.766
• [4.204 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 09/27/23 14:15:08.772
  Sep 27 14:15:08.772: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 14:15:08.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:08.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:08.801
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/27/23 14:15:08.803
  STEP: Saw pod success @ 09/27/23 14:15:12.817
  Sep 27 14:15:12.819: INFO: Trying to get logs from node worker-0 pod pod-c3720420-743b-4361-9b41-ec335d504285 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 14:15:12.824
  Sep 27 14:15:12.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2182" for this suite. @ 09/27/23 14:15:12.879
• [4.116 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 09/27/23 14:15:12.889
  Sep 27 14:15:12.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:15:12.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:12.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:12.903
  STEP: creating secret secrets-7541/secret-test-fac34a24-a374-419d-bf5c-942caddfbb59 @ 09/27/23 14:15:12.905
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:15:12.912
  STEP: Saw pod success @ 09/27/23 14:15:14.923
  Sep 27 14:15:14.924: INFO: Trying to get logs from node worker-1 pod pod-configmaps-3ea93e4d-2f0e-41c4-b193-70f10c08d8bc container env-test: <nil>
  STEP: delete the pod @ 09/27/23 14:15:14.932
  Sep 27 14:15:14.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7541" for this suite. @ 09/27/23 14:15:14.956
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 09/27/23 14:15:14.962
  Sep 27 14:15:14.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 14:15:14.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:14.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:14.977
  Sep 27 14:15:14.980: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/27/23 14:15:16.223
  Sep 27 14:15:16.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 --namespace=crd-publish-openapi-6436 create -f -'
  Sep 27 14:15:18.724: INFO: stderr: ""
  Sep 27 14:15:18.724: INFO: stdout: "e2e-test-crd-publish-openapi-6513-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 27 14:15:18.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 --namespace=crd-publish-openapi-6436 delete e2e-test-crd-publish-openapi-6513-crds test-foo'
  Sep 27 14:15:18.788: INFO: stderr: ""
  Sep 27 14:15:18.788: INFO: stdout: "e2e-test-crd-publish-openapi-6513-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Sep 27 14:15:18.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 --namespace=crd-publish-openapi-6436 apply -f -'
  Sep 27 14:15:19.028: INFO: stderr: ""
  Sep 27 14:15:19.028: INFO: stdout: "e2e-test-crd-publish-openapi-6513-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 27 14:15:19.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 --namespace=crd-publish-openapi-6436 delete e2e-test-crd-publish-openapi-6513-crds test-foo'
  Sep 27 14:15:19.089: INFO: stderr: ""
  Sep 27 14:15:19.089: INFO: stdout: "e2e-test-crd-publish-openapi-6513-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/27/23 14:15:19.089
  Sep 27 14:15:19.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 --namespace=crd-publish-openapi-6436 create -f -'
  Sep 27 14:15:19.272: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/27/23 14:15:19.272
  Sep 27 14:15:19.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 --namespace=crd-publish-openapi-6436 create -f -'
  Sep 27 14:15:19.453: INFO: rc: 1
  Sep 27 14:15:19.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 --namespace=crd-publish-openapi-6436 apply -f -'
  Sep 27 14:15:19.625: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/27/23 14:15:19.626
  Sep 27 14:15:19.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 --namespace=crd-publish-openapi-6436 create -f -'
  Sep 27 14:15:19.784: INFO: rc: 1
  Sep 27 14:15:19.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 --namespace=crd-publish-openapi-6436 apply -f -'
  Sep 27 14:15:19.952: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/27/23 14:15:19.952
  Sep 27 14:15:19.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 explain e2e-test-crd-publish-openapi-6513-crds'
  Sep 27 14:15:20.121: INFO: stderr: ""
  Sep 27 14:15:20.121: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6513-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/27/23 14:15:20.121
  Sep 27 14:15:20.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 explain e2e-test-crd-publish-openapi-6513-crds.metadata'
  Sep 27 14:15:20.296: INFO: stderr: ""
  Sep 27 14:15:20.296: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6513-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Sep 27 14:15:20.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 explain e2e-test-crd-publish-openapi-6513-crds.spec'
  Sep 27 14:15:20.456: INFO: stderr: ""
  Sep 27 14:15:20.456: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6513-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Sep 27 14:15:20.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 explain e2e-test-crd-publish-openapi-6513-crds.spec.bars'
  Sep 27 14:15:20.635: INFO: stderr: ""
  Sep 27 14:15:20.635: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6513-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/27/23 14:15:20.635
  Sep 27 14:15:20.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-6436 explain e2e-test-crd-publish-openapi-6513-crds.spec.bars2'
  Sep 27 14:15:20.832: INFO: rc: 1
  Sep 27 14:15:22.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6436" for this suite. @ 09/27/23 14:15:22.084
• [7.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/27/23 14:15:22.092
  Sep 27 14:15:22.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename deployment @ 09/27/23 14:15:22.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:22.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:22.105
  Sep 27 14:15:22.108: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Sep 27 14:15:22.116: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 27 14:15:27.119: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 14:15:27.119
  Sep 27 14:15:27.119: INFO: Creating deployment "test-rolling-update-deployment"
  Sep 27 14:15:27.128: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Sep 27 14:15:27.134: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Sep 27 14:15:29.139: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Sep 27 14:15:29.157: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Sep 27 14:15:29.162: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6702",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4be2aa72-6f0e-4368-ba75-f746323a0a9d",
      ResourceVersion: (string) (len=4) "3799",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420927,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 14:15:29.166: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6702",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5653afc6-7236-41d2-a81d-770588332f91",
      ResourceVersion: (string) (len=4) "3789",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420927,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "4be2aa72-6f0e-4368-ba75-f746323a0a9d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 62 65 32 61 61  37 32 2d 36 66 30 65 2d  |\"4be2aa72-6f0e-|
              00000120  34 33 36 38 2d 62 61 37  35 2d 66 37 34 36 33 32  |4368-ba75-f74632|
              00000130  33 61 30 61 39 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3a0a9d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:15:29.167: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Sep 27 14:15:29.167: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6702",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1849d439-9af5-41bd-8fd3-b0c895737008",
      ResourceVersion: (string) (len=4) "3798",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420922,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "4be2aa72-6f0e-4368-ba75-f746323a0a9d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 34 62 65 32 61 61 37  |"uid\":\"4be2aa7|
              000000b0  32 2d 36 66 30 65 2d 34  33 36 38 2d 62 61 37 35  |2-6f0e-4368-ba75|
              000000c0  2d 66 37 34 36 33 32 33  61 30 61 39 64 5c 22 7d  |-f746323a0a9d\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:15:29.171: INFO: Pod "test-rolling-update-deployment-7f5c55c64-gzmcg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-gzmcg",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-6702",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ca40491-4668-43b7-8bb7-08ff62ed9c16",
      ResourceVersion: (string) (len=4) "3788",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420927,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "5653afc6-7236-41d2-a81d-770588332f91",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  35 33 61 66 63 36 2d 37  |d\":\"5653afc6-7|
              00000090  32 33 36 2d 34 31 64 32  2d 61 38 31 64 2d 37 37  |236-41d2-a81d-77|
              000000a0  30 35 38 38 33 33 32 66  39 31 5c 22 7d 22 3a 7b  |0588332f91\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 33 31 5c 22 7d 22 3a  |10.244.1.31\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n5wms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n5wms",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831420927,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831420927,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831420927,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://6e6fe7e462947708320f9e65c93a1d0b2e7ed42f87b540876e30266c653a59e2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:15:29.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6702" for this suite. @ 09/27/23 14:15:29.175
• [7.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 09/27/23 14:15:29.184
  Sep 27 14:15:29.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sysctl @ 09/27/23 14:15:29.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:29.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:29.2
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/27/23 14:15:29.203
  STEP: Watching for error events or started pod @ 09/27/23 14:15:29.212
  STEP: Waiting for pod completion @ 09/27/23 14:15:31.216
  STEP: Checking that the pod succeeded @ 09/27/23 14:15:33.222
  STEP: Getting logs from the pod @ 09/27/23 14:15:33.222
  STEP: Checking that the sysctl is actually updated @ 09/27/23 14:15:33.227
  Sep 27 14:15:33.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7562" for this suite. @ 09/27/23 14:15:33.23
• [4.051 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/27/23 14:15:33.236
  Sep 27 14:15:33.236: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename proxy @ 09/27/23 14:15:33.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:33.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:33.26
  Sep 27 14:15:33.262: INFO: Creating pod...
  Sep 27 14:15:35.273: INFO: Creating service...
  Sep 27 14:15:35.292: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/pods/agnhost/proxy?method=DELETE
  Sep 27 14:15:35.297: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 27 14:15:35.297: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/pods/agnhost/proxy?method=OPTIONS
  Sep 27 14:15:35.302: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 27 14:15:35.302: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/pods/agnhost/proxy?method=PATCH
  Sep 27 14:15:35.304: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 27 14:15:35.304: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/pods/agnhost/proxy?method=POST
  Sep 27 14:15:35.306: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 27 14:15:35.306: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/pods/agnhost/proxy?method=PUT
  Sep 27 14:15:35.309: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 27 14:15:35.309: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/services/e2e-proxy-test-service/proxy?method=DELETE
  Sep 27 14:15:35.312: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 27 14:15:35.312: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Sep 27 14:15:35.315: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 27 14:15:35.315: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/services/e2e-proxy-test-service/proxy?method=PATCH
  Sep 27 14:15:35.318: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 27 14:15:35.318: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/services/e2e-proxy-test-service/proxy?method=POST
  Sep 27 14:15:35.320: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 27 14:15:35.321: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/services/e2e-proxy-test-service/proxy?method=PUT
  Sep 27 14:15:35.323: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 27 14:15:35.323: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/pods/agnhost/proxy?method=GET
  Sep 27 14:15:35.325: INFO: http.Client request:GET StatusCode:301
  Sep 27 14:15:35.325: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/services/e2e-proxy-test-service/proxy?method=GET
  Sep 27 14:15:35.327: INFO: http.Client request:GET StatusCode:301
  Sep 27 14:15:35.327: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/pods/agnhost/proxy?method=HEAD
  Sep 27 14:15:35.328: INFO: http.Client request:HEAD StatusCode:301
  Sep 27 14:15:35.328: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7164/services/e2e-proxy-test-service/proxy?method=HEAD
  Sep 27 14:15:35.330: INFO: http.Client request:HEAD StatusCode:301
  Sep 27 14:15:35.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7164" for this suite. @ 09/27/23 14:15:35.332
• [2.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 09/27/23 14:15:35.409
  Sep 27 14:15:35.409: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename job @ 09/27/23 14:15:35.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:35.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:35.424
  STEP: Creating Indexed job @ 09/27/23 14:15:35.426
  STEP: Ensuring job reaches completions @ 09/27/23 14:15:35.439
  STEP: Ensuring pods with index for job exist @ 09/27/23 14:15:43.443
  Sep 27 14:15:43.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4858" for this suite. @ 09/27/23 14:15:43.447
• [8.048 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 09/27/23 14:15:43.458
  Sep 27 14:15:43.458: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 14:15:43.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:43.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:43.474
  STEP: Discovering how many secrets are in namespace by default @ 09/27/23 14:15:43.476
  STEP: Counting existing ResourceQuota @ 09/27/23 14:15:48.48
  STEP: Creating a ResourceQuota @ 09/27/23 14:15:53.482
  STEP: Ensuring resource quota status is calculated @ 09/27/23 14:15:53.492
  STEP: Creating a Secret @ 09/27/23 14:15:55.495
  STEP: Ensuring resource quota status captures secret creation @ 09/27/23 14:15:55.51
  STEP: Deleting a secret @ 09/27/23 14:15:57.512
  STEP: Ensuring resource quota status released usage @ 09/27/23 14:15:57.517
  Sep 27 14:15:59.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3708" for this suite. @ 09/27/23 14:15:59.522
• [16.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/27/23 14:15:59.535
  Sep 27 14:15:59.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:15:59.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:15:59.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:15:59.553
  STEP: Creating the pod @ 09/27/23 14:15:59.555
  Sep 27 14:16:02.095: INFO: Successfully updated pod "annotationupdate7aecc02f-bb5c-4ffc-8c9a-9953028fcd60"
  Sep 27 14:16:04.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5847" for this suite. @ 09/27/23 14:16:04.108
• [4.578 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 09/27/23 14:16:04.114
  Sep 27 14:16:04.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename job @ 09/27/23 14:16:04.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:16:04.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:16:04.128
  STEP: Creating a job @ 09/27/23 14:16:04.131
  STEP: Ensuring active pods == parallelism @ 09/27/23 14:16:04.155
  STEP: delete a job @ 09/27/23 14:16:06.159
  STEP: deleting Job.batch foo in namespace job-3614, will wait for the garbage collector to delete the pods @ 09/27/23 14:16:06.159
  Sep 27 14:16:06.217: INFO: Deleting Job.batch foo took: 5.83635ms
  Sep 27 14:16:06.317: INFO: Terminating Job.batch foo pods took: 100.136928ms
  STEP: Ensuring job was deleted @ 09/27/23 14:16:37.018
  Sep 27 14:16:37.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3614" for this suite. @ 09/27/23 14:16:37.022
• [32.918 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 09/27/23 14:16:37.033
  Sep 27 14:16:37.033: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 14:16:37.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:16:37.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:16:37.046
  STEP: creating service endpoint-test2 in namespace services-1641 @ 09/27/23 14:16:37.049
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1641 to expose endpoints map[] @ 09/27/23 14:16:37.063
  Sep 27 14:16:37.066: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Sep 27 14:16:38.071: INFO: successfully validated that service endpoint-test2 in namespace services-1641 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1641 @ 09/27/23 14:16:38.071
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1641 to expose endpoints map[pod1:[80]] @ 09/27/23 14:16:40.084
  Sep 27 14:16:40.090: INFO: successfully validated that service endpoint-test2 in namespace services-1641 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/27/23 14:16:40.09
  Sep 27 14:16:40.090: INFO: Creating new exec pod
  Sep 27 14:16:43.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-1641 exec execpodcj6mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 27 14:16:43.250: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 27 14:16:43.250: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:16:43.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-1641 exec execpodcj6mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.148.58 80'
  Sep 27 14:16:43.380: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.148.58 80\nConnection to 10.98.148.58 80 port [tcp/http] succeeded!\n"
  Sep 27 14:16:43.380: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-1641 @ 09/27/23 14:16:43.38
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1641 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/27/23 14:16:45.397
  Sep 27 14:16:45.404: INFO: successfully validated that service endpoint-test2 in namespace services-1641 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/27/23 14:16:45.404
  Sep 27 14:16:46.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-1641 exec execpodcj6mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 27 14:16:46.549: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 27 14:16:46.549: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:16:46.549: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-1641 exec execpodcj6mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.148.58 80'
  Sep 27 14:16:46.697: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.148.58 80\nConnection to 10.98.148.58 80 port [tcp/http] succeeded!\n"
  Sep 27 14:16:46.697: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1641 @ 09/27/23 14:16:46.697
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1641 to expose endpoints map[pod2:[80]] @ 09/27/23 14:16:46.734
  Sep 27 14:16:46.743: INFO: successfully validated that service endpoint-test2 in namespace services-1641 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/27/23 14:16:46.743
  Sep 27 14:16:47.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-1641 exec execpodcj6mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 27 14:16:47.881: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 27 14:16:47.881: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:16:47.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-1641 exec execpodcj6mw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.148.58 80'
  Sep 27 14:16:48.020: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.148.58 80\nConnection to 10.98.148.58 80 port [tcp/http] succeeded!\n"
  Sep 27 14:16:48.020: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-1641 @ 09/27/23 14:16:48.02
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1641 to expose endpoints map[] @ 09/27/23 14:16:48.043
  Sep 27 14:16:49.052: INFO: successfully validated that service endpoint-test2 in namespace services-1641 exposes endpoints map[]
  Sep 27 14:16:49.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1641" for this suite. @ 09/27/23 14:16:49.07
• [12.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 09/27/23 14:16:49.079
  Sep 27 14:16:49.079: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 14:16:49.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:16:49.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:16:49.098
  STEP: creating service nodeport-test with type=NodePort in namespace services-7703 @ 09/27/23 14:16:49.101
  STEP: creating replication controller nodeport-test in namespace services-7703 @ 09/27/23 14:16:49.119
  I0927 14:16:49.128756      22 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-7703, replica count: 2
  I0927 14:16:52.181358      22 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 14:16:52.181: INFO: Creating new exec pod
  Sep 27 14:16:55.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7703 exec execpodx5lqn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 27 14:16:55.344: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 27 14:16:55.344: INFO: stdout: ""
  Sep 27 14:16:56.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7703 exec execpodx5lqn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 27 14:16:56.489: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 27 14:16:56.489: INFO: stdout: "nodeport-test-q8npz"
  Sep 27 14:16:56.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7703 exec execpodx5lqn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.0.231 80'
  Sep 27 14:16:56.627: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.0.231 80\nConnection to 10.108.0.231 80 port [tcp/http] succeeded!\n"
  Sep 27 14:16:56.628: INFO: stdout: "nodeport-test-q8npz"
  Sep 27 14:16:56.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7703 exec execpodx5lqn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.53.207 30850'
  Sep 27 14:16:56.771: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.53.207 30850\nConnection to 10.0.53.207 30850 port [tcp/*] succeeded!\n"
  Sep 27 14:16:56.771: INFO: stdout: "nodeport-test-q8npz"
  Sep 27 14:16:56.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7703 exec execpodx5lqn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.51.64 30850'
  Sep 27 14:16:56.907: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.51.64 30850\nConnection to 10.0.51.64 30850 port [tcp/*] succeeded!\n"
  Sep 27 14:16:56.907: INFO: stdout: "nodeport-test-q8npz"
  Sep 27 14:16:56.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7703" for this suite. @ 09/27/23 14:16:56.91
• [7.836 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 09/27/23 14:16:56.916
  Sep 27 14:16:56.916: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 14:16:56.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:16:56.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:16:56.939
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/27/23 14:16:56.942
  STEP: Saw pod success @ 09/27/23 14:17:00.958
  Sep 27 14:17:00.960: INFO: Trying to get logs from node worker-1 pod pod-fd5fff9b-7f6f-4a68-9525-76e641c64a55 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 14:17:00.965
  Sep 27 14:17:00.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8876" for this suite. @ 09/27/23 14:17:00.981
• [4.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/27/23 14:17:01.008
  Sep 27 14:17:01.008: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:17:01.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:17:01.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:17:01.067
  STEP: Creating configMap with name projected-configmap-test-volume-9800c1d4-793c-4c16-9be9-060575fca723 @ 09/27/23 14:17:01.069
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:17:01.074
  STEP: Saw pod success @ 09/27/23 14:17:03.095
  Sep 27 14:17:03.097: INFO: Trying to get logs from node worker-1 pod pod-projected-configmaps-f5e3e506-61b8-4de2-a66e-f2a1e496ff23 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:17:03.105
  Sep 27 14:17:03.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4568" for this suite. @ 09/27/23 14:17:03.127
• [2.125 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/27/23 14:17:03.133
  Sep 27 14:17:03.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename cronjob @ 09/27/23 14:17:03.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:17:03.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:17:03.153
  STEP: Creating a cronjob @ 09/27/23 14:17:03.155
  STEP: Ensuring more than one job is running at a time @ 09/27/23 14:17:03.161
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/27/23 14:19:01.163
  STEP: Removing cronjob @ 09/27/23 14:19:01.165
  Sep 27 14:19:01.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7706" for this suite. @ 09/27/23 14:19:01.171
• [118.041 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 09/27/23 14:19:01.175
  Sep 27 14:19:01.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 14:19:01.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:19:01.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:19:01.19
  Sep 27 14:19:01.210: INFO: Got root ca configmap in namespace "svcaccounts-4051"
  Sep 27 14:19:01.215: INFO: Deleted root ca configmap in namespace "svcaccounts-4051"
  STEP: waiting for a new root ca configmap created @ 09/27/23 14:19:01.716
  Sep 27 14:19:01.718: INFO: Recreated root ca configmap in namespace "svcaccounts-4051"
  Sep 27 14:19:01.724: INFO: Updated root ca configmap in namespace "svcaccounts-4051"
  STEP: waiting for the root ca configmap reconciled @ 09/27/23 14:19:02.225
  Sep 27 14:19:02.227: INFO: Reconciled root ca configmap in namespace "svcaccounts-4051"
  Sep 27 14:19:02.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4051" for this suite. @ 09/27/23 14:19:02.229
• [1.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 09/27/23 14:19:02.239
  Sep 27 14:19:02.239: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 14:19:02.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:19:02.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:19:02.252
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/27/23 14:19:02.254
  STEP: Saw pod success @ 09/27/23 14:19:04.319
  Sep 27 14:19:04.321: INFO: Trying to get logs from node worker-1 pod pod-e8b00bc6-159c-43a5-bf93-2901633082f6 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 14:19:04.333
  Sep 27 14:19:04.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9261" for this suite. @ 09/27/23 14:19:04.348
• [2.113 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 09/27/23 14:19:04.353
  Sep 27 14:19:04.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 14:19:04.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:19:04.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:19:04.367
  Sep 27 14:19:04.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-4065 version'
  Sep 27 14:19:04.430: INFO: stderr: ""
  Sep 27 14:19:04.430: INFO: stdout: "Client Version: v1.28.2\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.2+k0s\n"
  Sep 27 14:19:04.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4065" for this suite. @ 09/27/23 14:19:04.433
• [0.085 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/27/23 14:19:04.438
  Sep 27 14:19:04.438: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 14:19:04.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:19:04.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:19:04.449
  STEP: Creating pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258 @ 09/27/23 14:19:04.451
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 14:19:06.462
  Sep 27 14:19:06.464: INFO: Initial restart count of pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece is 0
  Sep 27 14:19:06.465: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:08.469: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:10.472: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:12.475: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:14.478: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:16.483: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:18.485: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:20.489: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:22.492: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:24.495: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:26.498: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:28.501: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:30.505: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:32.508: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:34.512: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:36.515: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:38.518: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:40.522: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:42.525: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:44.528: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:46.532: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:48.536: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:50.538: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:52.540: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:54.543: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:56.547: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:19:58.550: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:00.554: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:02.557: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:04.560: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:06.564: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:08.567: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:10.570: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:12.574: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:14.578: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:16.582: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:18.584: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:20.588: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:22.592: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:24.594: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:26.598: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:28.601: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:30.605: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:32.609: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:34.611: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:36.615: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:38.619: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:40.622: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:42.625: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:44.628: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:46.632: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:48.635: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:50.639: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:52.642: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:54.644: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:56.648: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:20:58.652: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:00.655: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:02.659: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:04.662: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:06.666: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:08.669: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:10.671: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:12.674: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:14.677: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:16.680: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:18.684: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:20.687: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:22.690: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:24.692: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:26.695: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:28.698: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:30.702: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:32.705: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:34.707: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:36.711: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:38.714: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:40.716: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:42.720: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:44.723: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:46.726: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:48.730: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:50.734: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:52.737: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:54.740: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:56.744: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:21:58.747: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:00.750: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:02.753: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:04.756: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:06.759: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:08.762: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:10.765: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:12.768: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:14.770: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:16.774: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:18.777: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:20.781: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:22.783: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:24.787: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:26.790: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:28.793: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:30.796: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:32.799: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:34.801: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:36.805: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:38.809: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:40.812: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:42.816: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:44.819: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:46.823: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:48.827: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:50.829: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:52.833: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:54.835: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:56.839: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:22:58.842: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:23:00.844: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:23:02.848: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:23:04.850: INFO: Get pod busybox-85fbbff9-a195-4816-9b03-575d0a780ece in namespace container-probe-9258
  Sep 27 14:23:06.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:23:06.854
  STEP: Destroying namespace "container-probe-9258" for this suite. @ 09/27/23 14:23:06.865
• [242.434 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 09/27/23 14:23:06.873
  Sep 27 14:23:06.873: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 14:23:06.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:23:06.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:23:06.888
  STEP: Creating a pod to test downward api env vars @ 09/27/23 14:23:06.891
  STEP: Saw pod success @ 09/27/23 14:23:08.901
  Sep 27 14:23:08.902: INFO: Trying to get logs from node worker-1 pod downward-api-d7b514ec-18a6-4a64-b83f-a5624864fc3d container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 14:23:08.918
  Sep 27 14:23:08.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8273" for this suite. @ 09/27/23 14:23:08.932
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 09/27/23 14:23:08.937
  Sep 27 14:23:08.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:23:08.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:23:08.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:23:08.951
  STEP: creating a secret @ 09/27/23 14:23:08.953
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/27/23 14:23:08.956
  STEP: patching the secret @ 09/27/23 14:23:08.958
  STEP: deleting the secret using a LabelSelector @ 09/27/23 14:23:08.964
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/27/23 14:23:08.969
  Sep 27 14:23:08.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9616" for this suite. @ 09/27/23 14:23:08.972
• [0.040 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 09/27/23 14:23:08.978
  Sep 27 14:23:08.978: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 14:23:08.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:23:08.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:23:08.988
  STEP: Create a Replicaset @ 09/27/23 14:23:08.993
  STEP: Verify that the required pods have come up. @ 09/27/23 14:23:08.998
  Sep 27 14:23:09.000: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 27 14:23:14.003: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 14:23:14.003
  STEP: Getting /status @ 09/27/23 14:23:14.003
  Sep 27 14:23:14.006: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/27/23 14:23:14.006
  Sep 27 14:23:14.012: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/27/23 14:23:14.012
  Sep 27 14:23:14.014: INFO: Observed &ReplicaSet event: ADDED
  Sep 27 14:23:14.014: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 14:23:14.014: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 14:23:14.014: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 14:23:14.014: INFO: Found replicaset test-rs in namespace replicaset-5557 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 27 14:23:14.014: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/27/23 14:23:14.014
  Sep 27 14:23:14.014: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 27 14:23:14.021: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/27/23 14:23:14.021
  Sep 27 14:23:14.023: INFO: Observed &ReplicaSet event: ADDED
  Sep 27 14:23:14.023: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 14:23:14.023: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 14:23:14.024: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 14:23:14.024: INFO: Observed replicaset test-rs in namespace replicaset-5557 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 14:23:14.024: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 14:23:14.024: INFO: Found replicaset test-rs in namespace replicaset-5557 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Sep 27 14:23:14.024: INFO: Replicaset test-rs has a patched status
  Sep 27 14:23:14.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5557" for this suite. @ 09/27/23 14:23:14.026
• [5.054 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 09/27/23 14:23:14.032
  Sep 27 14:23:14.032: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 14:23:14.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:23:14.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:23:14.093
  STEP: Counting existing ResourceQuota @ 09/27/23 14:23:14.095
  STEP: Creating a ResourceQuota @ 09/27/23 14:23:19.098
  STEP: Ensuring resource quota status is calculated @ 09/27/23 14:23:19.105
  STEP: Creating a Service @ 09/27/23 14:23:21.108
  STEP: Creating a NodePort Service @ 09/27/23 14:23:21.127
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/27/23 14:23:21.198
  STEP: Ensuring resource quota status captures service creation @ 09/27/23 14:23:21.216
  STEP: Deleting Services @ 09/27/23 14:23:23.219
  STEP: Ensuring resource quota status released usage @ 09/27/23 14:23:23.242
  Sep 27 14:23:25.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2747" for this suite. @ 09/27/23 14:23:25.246
• [11.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/27/23 14:23:25.251
  Sep 27 14:23:25.251: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 14:23:25.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:23:25.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:23:25.264
  STEP: Creating pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317 @ 09/27/23 14:23:25.267
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 14:23:27.281
  Sep 27 14:23:27.282: INFO: Initial restart count of pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 is 0
  Sep 27 14:23:27.284: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:29.287: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:31.290: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:33.294: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:35.296: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:37.300: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:39.315: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:41.319: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:43.322: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:45.325: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:47.329: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:49.331: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:51.334: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:53.337: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:55.340: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:57.344: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:23:59.347: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:01.349: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:03.352: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:05.354: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:07.358: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:09.361: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:11.364: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:13.367: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:15.371: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:17.374: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:19.377: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:21.380: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:23.384: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:25.387: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:27.391: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:29.394: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:31.397: INFO: Get pod test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 in namespace container-probe-2317
  Sep 27 14:24:31.397: INFO: Restart count of pod container-probe-2317/test-grpc-e459ce22-869a-427c-a688-ca915bb518e4 is now 1 (1m4.114602658s elapsed)
  Sep 27 14:24:31.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:24:31.399
  STEP: Destroying namespace "container-probe-2317" for this suite. @ 09/27/23 14:24:31.409
• [66.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 09/27/23 14:24:31.42
  Sep 27 14:24:31.420: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 14:24:31.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:24:31.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:24:31.434
  STEP: Creating replication controller my-hostname-basic-76cd8193-b93a-41cc-9d18-5f6fb5a05716 @ 09/27/23 14:24:31.438
  Sep 27 14:24:31.446: INFO: Pod name my-hostname-basic-76cd8193-b93a-41cc-9d18-5f6fb5a05716: Found 0 pods out of 1
  Sep 27 14:24:36.450: INFO: Pod name my-hostname-basic-76cd8193-b93a-41cc-9d18-5f6fb5a05716: Found 1 pods out of 1
  Sep 27 14:24:36.450: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-76cd8193-b93a-41cc-9d18-5f6fb5a05716" are running
  Sep 27 14:24:36.453: INFO: Pod "my-hostname-basic-76cd8193-b93a-41cc-9d18-5f6fb5a05716-g6cm2" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 14:24:31 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 14:24:32 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 14:24:32 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 14:24:31 +0000 UTC Reason: Message:}])
  Sep 27 14:24:36.453: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/27/23 14:24:36.453
  Sep 27 14:24:36.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5318" for this suite. @ 09/27/23 14:24:36.464
• [5.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 09/27/23 14:24:36.472
  Sep 27 14:24:36.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename gc @ 09/27/23 14:24:36.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:24:36.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:24:36.487
  Sep 27 14:24:36.521: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"474253dc-9141-4de9-907d-7ccee1339757", Controller:(*bool)(0xc0021d3e76), BlockOwnerDeletion:(*bool)(0xc0021d3e77)}}
  Sep 27 14:24:36.528: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"4ae73f63-afe8-4f7d-9085-3f3c87a41eef", Controller:(*bool)(0xc00406b52e), BlockOwnerDeletion:(*bool)(0xc00406b52f)}}
  Sep 27 14:24:36.538: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"422307b7-522a-443d-87d8-34fcc4532b7d", Controller:(*bool)(0xc0044cd756), BlockOwnerDeletion:(*bool)(0xc0044cd757)}}
  Sep 27 14:24:41.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1866" for this suite. @ 09/27/23 14:24:41.55
• [5.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/27/23 14:24:41.558
  Sep 27 14:24:41.558: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 14:24:41.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:24:41.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:24:41.572
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 14:24:41.575
  STEP: Saw pod success @ 09/27/23 14:24:45.594
  Sep 27 14:24:45.596: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-9abd7f05-85eb-4ca2-b414-bf5b0f1e9d4c container client-container: <nil>
  STEP: delete the pod @ 09/27/23 14:24:45.607
  Sep 27 14:24:45.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6079" for this suite. @ 09/27/23 14:24:45.622
• [4.067 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/27/23 14:24:45.626
  Sep 27 14:24:45.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename deployment @ 09/27/23 14:24:45.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:24:45.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:24:45.64
  Sep 27 14:24:45.649: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Sep 27 14:24:50.653: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 14:24:50.653
  Sep 27 14:24:50.653: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/27/23 14:24:50.661
  Sep 27 14:24:50.667: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3149",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e8f2702-b1aa-4890-953f-e3697de5345c",
      ResourceVersion: (string) (len=4) "5759",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831421490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 14:24:50.670: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Sep 27 14:24:50.670: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Sep 27 14:24:50.671: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3149",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d1a95eb-bc01-4fec-bddf-5b88f6199a5f",
      ResourceVersion: (string) (len=4) "5760",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831421485,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9e8f2702-b1aa-4890-953f-e3697de5345c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421485,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 39 65 38 66 32 37 30  |"uid\":\"9e8f270|
              00000040  32 2d 62 31 61 61 2d 34  38 39 30 2d 39 35 33 66  |2-b1aa-4890-953f|
              00000050  2d 65 33 36 39 37 64 65  35 33 34 35 63 5c 22 7d  |-e3697de5345c\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:24:50.678: INFO: Pod "test-cleanup-controller-x7rlq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-x7rlq",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-3149",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7df5e43-722b-41d4-9d30-fde294545b7f",
      ResourceVersion: (string) (len=4) "5746",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831421485,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "3d1a95eb-bc01-4fec-bddf-5b88f6199a5f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421485,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  33 64 31 61 39 35 65 62  |uid\":\"3d1a95eb|
              00000080  2d 62 63 30 31 2d 34 66  65 63 2d 62 64 64 66 2d  |-bc01-4fec-bddf-|
              00000090  35 62 38 38 66 36 31 39  39 61 35 66 5c 22 7d 22  |5b88f6199a5f\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 30  2e 36 31 5c 22 7d 22 3a  |10.244.0.61\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-27wd2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-27wd2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421485,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421485,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.0.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831421485,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831421486,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f627ead36ea290feb3c0ce0938fdb9f95e3b2ec0f45c45c896739e1a42395a8f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:24:50.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3149" for this suite. @ 09/27/23 14:24:50.686
• [5.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 09/27/23 14:24:50.696
  Sep 27 14:24:50.696: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sched-preemption @ 09/27/23 14:24:50.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:24:50.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:24:50.713
  Sep 27 14:24:50.727: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 27 14:25:50.742: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/27/23 14:25:50.744
  Sep 27 14:25:50.744: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/27/23 14:25:50.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:25:50.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:25:50.757
  STEP: Finding an available node @ 09/27/23 14:25:50.759
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/27/23 14:25:50.759
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/27/23 14:25:52.773
  Sep 27 14:25:52.781: INFO: found a healthy node: worker-1
  Sep 27 14:25:58.829: INFO: pods created so far: [1 1 1]
  Sep 27 14:25:58.829: INFO: length of pods created so far: 3
  Sep 27 14:26:00.838: INFO: pods created so far: [2 2 1]
  Sep 27 14:26:07.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 14:26:07.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5238" for this suite. @ 09/27/23 14:26:07.879
  STEP: Destroying namespace "sched-preemption-9323" for this suite. @ 09/27/23 14:26:07.885
• [77.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 09/27/23 14:26:07.891
  Sep 27 14:26:07.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 14:26:07.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:26:07.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:26:07.921
  STEP: Creating service test in namespace statefulset-453 @ 09/27/23 14:26:07.93
  STEP: Creating statefulset ss in namespace statefulset-453 @ 09/27/23 14:26:07.935
  Sep 27 14:26:07.943: INFO: Found 0 stateful pods, waiting for 1
  Sep 27 14:26:17.946: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/27/23 14:26:17.949
  STEP: updating a scale subresource @ 09/27/23 14:26:17.951
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/27/23 14:26:17.956
  STEP: Patch a scale subresource @ 09/27/23 14:26:17.958
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/27/23 14:26:17.965
  Sep 27 14:26:17.970: INFO: Deleting all statefulset in ns statefulset-453
  Sep 27 14:26:17.973: INFO: Scaling statefulset ss to 0
  Sep 27 14:26:27.987: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 14:26:27.989: INFO: Deleting statefulset ss
  Sep 27 14:26:28.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-453" for this suite. @ 09/27/23 14:26:28.002
• [20.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/27/23 14:26:28.01
  Sep 27 14:26:28.010: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename deployment @ 09/27/23 14:26:28.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:26:28.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:26:28.025
  STEP: creating a Deployment @ 09/27/23 14:26:28.029
  Sep 27 14:26:28.029: INFO: Creating simple deployment test-deployment-25xh6
  Sep 27 14:26:28.038: INFO: deployment "test-deployment-25xh6" doesn't have the required revision set
  STEP: Getting /status @ 09/27/23 14:26:30.047
  Sep 27 14:26:30.049: INFO: Deployment test-deployment-25xh6 has Conditions: [{Available True 2023-09-27 14:26:29 +0000 UTC 2023-09-27 14:26:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-09-27 14:26:29 +0000 UTC 2023-09-27 14:26:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-25xh6-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/27/23 14:26:30.049
  Sep 27 14:26:30.055: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 26, 29, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 26, 29, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 26, 29, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 26, 28, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-25xh6-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/27/23 14:26:30.055
  Sep 27 14:26:30.056: INFO: Observed &Deployment event: ADDED
  Sep 27 14:26:30.056: INFO: Observed Deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 14:26:28 +0000 UTC 2023-09-27 14:26:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-25xh6-5d576bd769"}
  Sep 27 14:26:30.057: INFO: Observed &Deployment event: MODIFIED
  Sep 27 14:26:30.057: INFO: Observed Deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 14:26:28 +0000 UTC 2023-09-27 14:26:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-25xh6-5d576bd769"}
  Sep 27 14:26:30.057: INFO: Observed Deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-27 14:26:28 +0000 UTC 2023-09-27 14:26:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 27 14:26:30.057: INFO: Observed &Deployment event: MODIFIED
  Sep 27 14:26:30.057: INFO: Observed Deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-27 14:26:28 +0000 UTC 2023-09-27 14:26:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 27 14:26:30.057: INFO: Observed Deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 14:26:28 +0000 UTC 2023-09-27 14:26:28 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-25xh6-5d576bd769" is progressing.}
  Sep 27 14:26:30.057: INFO: Observed &Deployment event: MODIFIED
  Sep 27 14:26:30.057: INFO: Observed Deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-27 14:26:29 +0000 UTC 2023-09-27 14:26:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 27 14:26:30.057: INFO: Observed Deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 14:26:29 +0000 UTC 2023-09-27 14:26:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-25xh6-5d576bd769" has successfully progressed.}
  Sep 27 14:26:30.057: INFO: Observed &Deployment event: MODIFIED
  Sep 27 14:26:30.057: INFO: Observed Deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-27 14:26:29 +0000 UTC 2023-09-27 14:26:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 27 14:26:30.057: INFO: Observed Deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 14:26:29 +0000 UTC 2023-09-27 14:26:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-25xh6-5d576bd769" has successfully progressed.}
  Sep 27 14:26:30.057: INFO: Found Deployment test-deployment-25xh6 in namespace deployment-7689 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 14:26:30.057: INFO: Deployment test-deployment-25xh6 has an updated status
  STEP: patching the Statefulset Status @ 09/27/23 14:26:30.057
  Sep 27 14:26:30.057: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 27 14:26:30.064: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/27/23 14:26:30.064
  Sep 27 14:26:30.066: INFO: Observed &Deployment event: ADDED
  Sep 27 14:26:30.066: INFO: Observed deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 14:26:28 +0000 UTC 2023-09-27 14:26:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-25xh6-5d576bd769"}
  Sep 27 14:26:30.066: INFO: Observed &Deployment event: MODIFIED
  Sep 27 14:26:30.066: INFO: Observed deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 14:26:28 +0000 UTC 2023-09-27 14:26:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-25xh6-5d576bd769"}
  Sep 27 14:26:30.066: INFO: Observed deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-27 14:26:28 +0000 UTC 2023-09-27 14:26:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 27 14:26:30.066: INFO: Observed &Deployment event: MODIFIED
  Sep 27 14:26:30.066: INFO: Observed deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-27 14:26:28 +0000 UTC 2023-09-27 14:26:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 27 14:26:30.066: INFO: Observed deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 14:26:28 +0000 UTC 2023-09-27 14:26:28 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-25xh6-5d576bd769" is progressing.}
  Sep 27 14:26:30.067: INFO: Observed &Deployment event: MODIFIED
  Sep 27 14:26:30.067: INFO: Observed deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-27 14:26:29 +0000 UTC 2023-09-27 14:26:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 27 14:26:30.067: INFO: Observed deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 14:26:29 +0000 UTC 2023-09-27 14:26:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-25xh6-5d576bd769" has successfully progressed.}
  Sep 27 14:26:30.067: INFO: Observed &Deployment event: MODIFIED
  Sep 27 14:26:30.067: INFO: Observed deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-27 14:26:29 +0000 UTC 2023-09-27 14:26:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 27 14:26:30.067: INFO: Observed deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 14:26:29 +0000 UTC 2023-09-27 14:26:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-25xh6-5d576bd769" has successfully progressed.}
  Sep 27 14:26:30.067: INFO: Observed deployment test-deployment-25xh6 in namespace deployment-7689 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 14:26:30.067: INFO: Observed &Deployment event: MODIFIED
  Sep 27 14:26:30.067: INFO: Found deployment test-deployment-25xh6 in namespace deployment-7689 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Sep 27 14:26:30.067: INFO: Deployment test-deployment-25xh6 has a patched status
  Sep 27 14:26:30.070: INFO: Deployment "test-deployment-25xh6":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-25xh6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7689",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd588947-bb37-42e9-a8fd-bea3bb846c1d",
      ResourceVersion: (string) (len=4) "6258",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831421588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-25xh6-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 14:26:30.073: INFO: New ReplicaSet "test-deployment-25xh6-5d576bd769" of Deployment "test-deployment-25xh6":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-25xh6-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7689",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4f3cb9a-7567-46c5-8a12-5467c40e76d2",
      ResourceVersion: (string) (len=4) "6251",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831421588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-25xh6",
          UID: (types.UID) (len=36) "fd588947-bb37-42e9-a8fd-bea3bb846c1d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 66 64 35  |k:{\"uid\":\"fd5|
              00000120  38 38 39 34 37 2d 62 62  33 37 2d 34 32 65 39 2d  |88947-bb37-42e9-|
              00000130  61 38 66 64 2d 62 65 61  33 62 62 38 34 36 63 31  |a8fd-bea3bb846c1|
              00000140  64 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |d\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:26:30.079: INFO: Pod "test-deployment-25xh6-5d576bd769-829pj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-25xh6-5d576bd769-829pj",
      GenerateName: (string) (len=33) "test-deployment-25xh6-5d576bd769-",
      Namespace: (string) (len=15) "deployment-7689",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4067c72-8b2f-48c5-ad7e-fa4156714ebf",
      ResourceVersion: (string) (len=4) "6250",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831421588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-25xh6-5d576bd769",
          UID: (types.UID) (len=36) "a4f3cb9a-7567-46c5-8a12-5467c40e76d2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 61 34 66 33 63 62 39  61 2d 37 35 36 37 2d 34  |"a4f3cb9a-7567-4|
              000000a0  36 63 35 2d 38 61 31 32  2d 35 34 36 37 63 34 30  |6c5-8a12-5467c40|
              000000b0  65 37 36 64 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |e76d2\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 30  2e 36 37 5c 22 7d 22 3a  |10.244.0.67\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c64ld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c64ld",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831421588,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.0.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831421588,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831421588,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d51830b8f86214c29e0cc3085df12e410b52d536e0366e35eb80d04498924539",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:26:30.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7689" for this suite. @ 09/27/23 14:26:30.083
• [2.077 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/27/23 14:26:30.088
  Sep 27 14:26:30.088: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:26:30.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:26:30.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:26:30.103
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 14:26:30.106
  STEP: Saw pod success @ 09/27/23 14:26:34.121
  Sep 27 14:26:34.123: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-e366dd7f-704e-4c7f-b801-5e1788ca260d container client-container: <nil>
  STEP: delete the pod @ 09/27/23 14:26:34.137
  Sep 27 14:26:34.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5646" for this suite. @ 09/27/23 14:26:34.146
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/27/23 14:26:34.156
  Sep 27 14:26:34.156: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename prestop @ 09/27/23 14:26:34.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:26:34.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:26:34.167
  STEP: Creating server pod server in namespace prestop-4036 @ 09/27/23 14:26:34.17
  STEP: Waiting for pods to come up. @ 09/27/23 14:26:34.177
  STEP: Creating tester pod tester in namespace prestop-4036 @ 09/27/23 14:26:36.184
  STEP: Deleting pre-stop pod @ 09/27/23 14:26:38.196
  Sep 27 14:26:43.211: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Sep 27 14:26:43.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 09/27/23 14:26:43.214
  STEP: Destroying namespace "prestop-4036" for this suite. @ 09/27/23 14:26:43.221
• [9.074 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/27/23 14:26:43.232
  Sep 27 14:26:43.232: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sched-pred @ 09/27/23 14:26:43.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:26:43.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:26:43.248
  Sep 27 14:26:43.251: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 27 14:26:43.255: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 14:26:43.257: INFO: 
  Logging pods the apiserver thinks is on node worker-0 before test
  Sep 27 14:26:43.260: INFO: coredns-85df575cdb-glg7x from kube-system started at 2023-09-27 14:08:27 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.260: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 14:26:43.260: INFO: konnectivity-agent-lm7w4 from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.260: INFO: 	Container konnectivity-agent ready: true, restart count 0
  Sep 27 14:26:43.260: INFO: kube-proxy-x8hwg from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.260: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 27 14:26:43.260: INFO: kube-router-2lqf8 from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.260: INFO: 	Container kube-router ready: true, restart count 0
  Sep 27 14:26:43.260: INFO: sonobuoy-e2e-job-4b71ff61f1034ef7 from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 14:26:43.260: INFO: 	Container e2e ready: true, restart count 0
  Sep 27 14:26:43.260: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 14:26:43.260: INFO: sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-rrrhb from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 14:26:43.260: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 14:26:43.260: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 14:26:43.260: INFO: 
  Logging pods the apiserver thinks is on node worker-1 before test
  Sep 27 14:26:43.264: INFO: coredns-85df575cdb-gcvfh from kube-system started at 2023-09-27 14:08:25 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.264: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 14:26:43.264: INFO: konnectivity-agent-w8ljl from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.264: INFO: 	Container konnectivity-agent ready: true, restart count 0
  Sep 27 14:26:43.264: INFO: kube-proxy-5sdjn from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.264: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 27 14:26:43.264: INFO: kube-router-tzh2q from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.264: INFO: 	Container kube-router ready: true, restart count 0
  Sep 27 14:26:43.264: INFO: metrics-server-7556957bb7-2wzdb from kube-system started at 2023-09-27 14:08:25 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.264: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 27 14:26:43.264: INFO: tester from prestop-4036 started at 2023-09-27 14:26:36 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.264: INFO: 	Container tester ready: true, restart count 0
  Sep 27 14:26:43.264: INFO: sonobuoy from sonobuoy started at 2023-09-27 14:08:35 +0000 UTC (1 container statuses recorded)
  Sep 27 14:26:43.264: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 27 14:26:43.264: INFO: sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-fztjb from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 14:26:43.264: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 14:26:43.264: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/27/23 14:26:43.264
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/27/23 14:26:45.276
  STEP: Trying to apply a random label on the found node. @ 09/27/23 14:26:45.288
  STEP: verifying the node has the label kubernetes.io/e2e-6089803d-fadd-4a8f-8212-2c80ff9dac1f 95 @ 09/27/23 14:26:45.308
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/27/23 14:26:45.312
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.0.53.207 on the node which pod4 resides and expect not scheduled @ 09/27/23 14:26:47.326
  STEP: removing the label kubernetes.io/e2e-6089803d-fadd-4a8f-8212-2c80ff9dac1f off the node worker-0 @ 09/27/23 14:31:47.332
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-6089803d-fadd-4a8f-8212-2c80ff9dac1f @ 09/27/23 14:31:47.34
  Sep 27 14:31:47.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-649" for this suite. @ 09/27/23 14:31:47.344
• [304.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/27/23 14:31:47.356
  Sep 27 14:31:47.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:31:47.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:31:47.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:31:47.37
  STEP: Creating secret with name secret-test-c6313b59-15e1-435c-931f-5b0e12ca9cdd @ 09/27/23 14:31:47.386
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:31:47.391
  STEP: Saw pod success @ 09/27/23 14:31:51.403
  Sep 27 14:31:51.405: INFO: Trying to get logs from node worker-1 pod pod-secrets-35c46f50-466e-49a2-a5f5-fb80f9998f87 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:31:51.418
  Sep 27 14:31:51.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-311" for this suite. @ 09/27/23 14:31:51.434
  STEP: Destroying namespace "secret-namespace-638" for this suite. @ 09/27/23 14:31:51.44
• [4.089 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 09/27/23 14:31:51.445
  Sep 27 14:31:51.445: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 14:31:51.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:31:51.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:31:51.456
  STEP: Creating a pod to test downward api env vars @ 09/27/23 14:31:51.459
  STEP: Saw pod success @ 09/27/23 14:31:55.473
  Sep 27 14:31:55.475: INFO: Trying to get logs from node worker-1 pod downward-api-eb0f33ad-38f5-423d-bfe7-cd2eeb64ceeb container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 14:31:55.48
  Sep 27 14:31:55.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6512" for this suite. @ 09/27/23 14:31:55.493
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 09/27/23 14:31:55.499
  Sep 27 14:31:55.499: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 14:31:55.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:31:55.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:31:55.515
  STEP: Creating simple DaemonSet "daemon-set" @ 09/27/23 14:31:55.528
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 14:31:55.534
  Sep 27 14:31:55.539: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 14:31:55.539: INFO: Node worker-0 is running 0 daemon pod, expected 1
  Sep 27 14:31:56.543: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 14:31:56.543: INFO: Node worker-0 is running 0 daemon pod, expected 1
  Sep 27 14:31:57.544: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 14:31:57.544: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 09/27/23 14:31:57.546
  Sep 27 14:31:57.548: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/27/23 14:31:57.548
  Sep 27 14:31:57.558: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/27/23 14:31:57.558
  Sep 27 14:31:57.560: INFO: Observed &DaemonSet event: ADDED
  Sep 27 14:31:57.560: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 14:31:57.560: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 14:31:57.560: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 14:31:57.560: INFO: Found daemon set daemon-set in namespace daemonsets-138 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 27 14:31:57.560: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/27/23 14:31:57.56
  STEP: watching for the daemon set status to be patched @ 09/27/23 14:31:57.568
  Sep 27 14:31:57.570: INFO: Observed &DaemonSet event: ADDED
  Sep 27 14:31:57.570: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 14:31:57.570: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 14:31:57.570: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 14:31:57.570: INFO: Observed daemon set daemon-set in namespace daemonsets-138 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 27 14:31:57.571: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 14:31:57.571: INFO: Found daemon set daemon-set in namespace daemonsets-138 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Sep 27 14:31:57.571: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 14:31:57.572
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-138, will wait for the garbage collector to delete the pods @ 09/27/23 14:31:57.572
  Sep 27 14:31:57.629: INFO: Deleting DaemonSet.extensions daemon-set took: 4.042955ms
  Sep 27 14:31:57.730: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.755438ms
  Sep 27 14:31:58.832: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 14:31:58.832: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 14:31:58.834: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7170"},"items":null}

  Sep 27 14:31:58.835: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7170"},"items":null}

  Sep 27 14:31:58.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-138" for this suite. @ 09/27/23 14:31:58.842
• [3.348 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 09/27/23 14:31:58.848
  Sep 27 14:31:58.848: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename security-context-test @ 09/27/23 14:31:58.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:31:58.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:31:58.905
  Sep 27 14:32:00.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1521" for this suite. @ 09/27/23 14:32:00.919
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/27/23 14:32:00.926
  Sep 27 14:32:00.926: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 14:32:00.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:32:00.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:32:00.938
  Sep 27 14:32:00.940: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: creating the pod @ 09/27/23 14:32:00.94
  STEP: submitting the pod to kubernetes @ 09/27/23 14:32:00.94
  Sep 27 14:32:03.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1846" for this suite. @ 09/27/23 14:32:03.056
• [2.134 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 09/27/23 14:32:03.061
  Sep 27 14:32:03.061: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 14:32:03.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:32:03.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:32:03.071
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5762 @ 09/27/23 14:32:03.074
  STEP: changing the ExternalName service to type=NodePort @ 09/27/23 14:32:03.077
  STEP: creating replication controller externalname-service in namespace services-5762 @ 09/27/23 14:32:03.091
  I0927 14:32:03.099919      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-5762, replica count: 2
  I0927 14:32:06.151569      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 14:32:06.151: INFO: Creating new exec pod
  Sep 27 14:32:09.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5762 exec execpodvx8r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 14:32:09.306: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 14:32:09.306: INFO: stdout: ""
  Sep 27 14:32:10.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5762 exec execpodvx8r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 14:32:10.461: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 14:32:10.461: INFO: stdout: ""
  Sep 27 14:32:11.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5762 exec execpodvx8r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 14:32:11.458: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 14:32:11.458: INFO: stdout: ""
  Sep 27 14:32:12.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5762 exec execpodvx8r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 14:32:12.449: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 14:32:12.449: INFO: stdout: ""
  Sep 27 14:32:13.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5762 exec execpodvx8r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 14:32:13.449: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 14:32:13.449: INFO: stdout: "externalname-service-sz8ck"
  Sep 27 14:32:13.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5762 exec execpodvx8r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.231.14 80'
  Sep 27 14:32:13.597: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.231.14 80\nConnection to 10.110.231.14 80 port [tcp/http] succeeded!\n"
  Sep 27 14:32:13.597: INFO: stdout: "externalname-service-sz8ck"
  Sep 27 14:32:13.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5762 exec execpodvx8r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.53.207 31094'
  Sep 27 14:32:13.737: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.53.207 31094\nConnection to 10.0.53.207 31094 port [tcp/*] succeeded!\n"
  Sep 27 14:32:13.737: INFO: stdout: "externalname-service-sz8ck"
  Sep 27 14:32:13.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5762 exec execpodvx8r4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.51.64 31094'
  Sep 27 14:32:13.881: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.51.64 31094\nConnection to 10.0.51.64 31094 port [tcp/*] succeeded!\n"
  Sep 27 14:32:13.881: INFO: stdout: "externalname-service-sz8ck"
  Sep 27 14:32:13.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 14:32:13.884: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-5762" for this suite. @ 09/27/23 14:32:13.909
• [10.853 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/27/23 14:32:13.914
  Sep 27 14:32:13.914: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:32:13.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:32:13.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:32:13.93
  STEP: Creating configMap with name cm-test-opt-del-5cc00eee-6a57-4884-b28f-a61549827440 @ 09/27/23 14:32:13.934
  STEP: Creating configMap with name cm-test-opt-upd-0c53fa23-d54d-473b-abe0-a6db3af3fe13 @ 09/27/23 14:32:13.938
  STEP: Creating the pod @ 09/27/23 14:32:13.941
  STEP: Deleting configmap cm-test-opt-del-5cc00eee-6a57-4884-b28f-a61549827440 @ 09/27/23 14:32:15.973
  STEP: Updating configmap cm-test-opt-upd-0c53fa23-d54d-473b-abe0-a6db3af3fe13 @ 09/27/23 14:32:15.977
  STEP: Creating configMap with name cm-test-opt-create-96b27594-bf63-4709-b721-950475f4a193 @ 09/27/23 14:32:15.984
  STEP: waiting to observe update in volume @ 09/27/23 14:32:15.988
  Sep 27 14:33:28.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-735" for this suite. @ 09/27/23 14:33:28.277
• [74.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/27/23 14:33:28.283
  Sep 27 14:33:28.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:33:28.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:33:28.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:33:28.339
  STEP: Creating secret with name secret-test-35eec098-a69f-41cb-832b-35ef315ff4e0 @ 09/27/23 14:33:28.341
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:33:28.345
  STEP: Saw pod success @ 09/27/23 14:33:32.361
  Sep 27 14:33:32.363: INFO: Trying to get logs from node worker-0 pod pod-secrets-33e262a8-d645-4690-9404-4af195053526 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:33:32.377
  Sep 27 14:33:32.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1826" for this suite. @ 09/27/23 14:33:32.394
• [4.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 09/27/23 14:33:32.4
  Sep 27 14:33:32.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 14:33:32.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:33:32.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:33:32.415
  Sep 27 14:33:32.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  W0927 14:33:32.422287      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00138be10 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0927 14:33:34.946610      22 warnings.go:70] unknown field "alpha"
  W0927 14:33:34.946642      22 warnings.go:70] unknown field "beta"
  W0927 14:33:34.946651      22 warnings.go:70] unknown field "delta"
  W0927 14:33:34.946659      22 warnings.go:70] unknown field "epsilon"
  W0927 14:33:34.946666      22 warnings.go:70] unknown field "gamma"
  Sep 27 14:33:35.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5788" for this suite. @ 09/27/23 14:33:35.492
• [3.101 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 09/27/23 14:33:35.501
  Sep 27 14:33:35.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 14:33:35.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:33:35.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:33:35.522
  STEP: creating a ReplicationController @ 09/27/23 14:33:35.526
  STEP: waiting for RC to be added @ 09/27/23 14:33:35.536
  STEP: waiting for available Replicas @ 09/27/23 14:33:35.536
  STEP: patching ReplicationController @ 09/27/23 14:33:37.995
  STEP: waiting for RC to be modified @ 09/27/23 14:33:38.002
  STEP: patching ReplicationController status @ 09/27/23 14:33:38.002
  STEP: waiting for RC to be modified @ 09/27/23 14:33:38.007
  STEP: waiting for available Replicas @ 09/27/23 14:33:38.007
  STEP: fetching ReplicationController status @ 09/27/23 14:33:38.015
  STEP: patching ReplicationController scale @ 09/27/23 14:33:38.017
  STEP: waiting for RC to be modified @ 09/27/23 14:33:38.022
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/27/23 14:33:38.023
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/27/23 14:33:39.991
  STEP: updating ReplicationController status @ 09/27/23 14:33:39.993
  STEP: waiting for RC to be modified @ 09/27/23 14:33:40.001
  STEP: listing all ReplicationControllers @ 09/27/23 14:33:40.001
  STEP: checking that ReplicationController has expected values @ 09/27/23 14:33:40.003
  STEP: deleting ReplicationControllers by collection @ 09/27/23 14:33:40.003
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/27/23 14:33:40.013
  Sep 27 14:33:40.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0927 14:33:40.053955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5015" for this suite. @ 09/27/23 14:33:40.056
• [4.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/27/23 14:33:40.063
  Sep 27 14:33:40.063: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:33:40.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:33:40.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:33:40.077
  STEP: Creating secret with name secret-test-map-83b67399-971d-4d8f-bad1-8519e2ebd548 @ 09/27/23 14:33:40.08
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:33:40.083
  E0927 14:33:41.054098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:42.054325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:43.054437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:44.054759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:33:44.101
  Sep 27 14:33:44.103: INFO: Trying to get logs from node worker-1 pod pod-secrets-8ad610d7-c1ec-4faf-95af-c196744feb81 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:33:44.108
  Sep 27 14:33:44.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9536" for this suite. @ 09/27/23 14:33:44.122
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/27/23 14:33:44.131
  Sep 27 14:33:44.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename watch @ 09/27/23 14:33:44.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:33:44.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:33:44.143
  STEP: creating a watch on configmaps with a certain label @ 09/27/23 14:33:44.145
  STEP: creating a new configmap @ 09/27/23 14:33:44.146
  STEP: modifying the configmap once @ 09/27/23 14:33:44.151
  STEP: changing the label value of the configmap @ 09/27/23 14:33:44.158
  STEP: Expecting to observe a delete notification for the watched object @ 09/27/23 14:33:44.163
  Sep 27 14:33:44.163: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7123  bb4201c9-65d8-47c4-8ab6-cbec967ab774 7696 0 2023-09-27 14:33:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 14:33:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:33:44.163: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7123  bb4201c9-65d8-47c4-8ab6-cbec967ab774 7697 0 2023-09-27 14:33:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 14:33:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:33:44.163: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7123  bb4201c9-65d8-47c4-8ab6-cbec967ab774 7698 0 2023-09-27 14:33:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 14:33:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/27/23 14:33:44.163
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/27/23 14:33:44.168
  E0927 14:33:45.055603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:46.055659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:47.055770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:48.055993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:49.057089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:50.057306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:51.057535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:52.057764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:53.057992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:54.058448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/27/23 14:33:54.168
  STEP: modifying the configmap a third time @ 09/27/23 14:33:54.174
  STEP: deleting the configmap @ 09/27/23 14:33:54.178
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/27/23 14:33:54.181
  Sep 27 14:33:54.181: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7123  bb4201c9-65d8-47c4-8ab6-cbec967ab774 7757 0 2023-09-27 14:33:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 14:33:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:33:54.181: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7123  bb4201c9-65d8-47c4-8ab6-cbec967ab774 7758 0 2023-09-27 14:33:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 14:33:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:33:54.181: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7123  bb4201c9-65d8-47c4-8ab6-cbec967ab774 7759 0 2023-09-27 14:33:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 14:33:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:33:54.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7123" for this suite. @ 09/27/23 14:33:54.184
• [10.058 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/27/23 14:33:54.189
  Sep 27 14:33:54.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sched-pred @ 09/27/23 14:33:54.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:33:54.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:33:54.2
  Sep 27 14:33:54.202: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 27 14:33:54.206: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 14:33:54.208: INFO: 
  Logging pods the apiserver thinks is on node worker-0 before test
  Sep 27 14:33:54.211: INFO: coredns-85df575cdb-glg7x from kube-system started at 2023-09-27 14:08:27 +0000 UTC (1 container statuses recorded)
  Sep 27 14:33:54.211: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 14:33:54.211: INFO: konnectivity-agent-lm7w4 from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:33:54.211: INFO: 	Container konnectivity-agent ready: true, restart count 0
  Sep 27 14:33:54.211: INFO: kube-proxy-x8hwg from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:33:54.211: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 27 14:33:54.211: INFO: kube-router-2lqf8 from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:33:54.211: INFO: 	Container kube-router ready: true, restart count 0
  Sep 27 14:33:54.211: INFO: sonobuoy-e2e-job-4b71ff61f1034ef7 from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 14:33:54.211: INFO: 	Container e2e ready: true, restart count 0
  Sep 27 14:33:54.211: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 14:33:54.211: INFO: sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-rrrhb from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 14:33:54.211: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 14:33:54.211: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 14:33:54.211: INFO: 
  Logging pods the apiserver thinks is on node worker-1 before test
  Sep 27 14:33:54.215: INFO: coredns-85df575cdb-gcvfh from kube-system started at 2023-09-27 14:08:25 +0000 UTC (1 container statuses recorded)
  Sep 27 14:33:54.215: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 14:33:54.215: INFO: konnectivity-agent-w8ljl from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:33:54.215: INFO: 	Container konnectivity-agent ready: true, restart count 0
  Sep 27 14:33:54.215: INFO: kube-proxy-5sdjn from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:33:54.215: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 27 14:33:54.215: INFO: kube-router-tzh2q from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 14:33:54.215: INFO: 	Container kube-router ready: true, restart count 0
  Sep 27 14:33:54.215: INFO: metrics-server-7556957bb7-2wzdb from kube-system started at 2023-09-27 14:08:25 +0000 UTC (1 container statuses recorded)
  Sep 27 14:33:54.215: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 27 14:33:54.215: INFO: sonobuoy from sonobuoy started at 2023-09-27 14:08:35 +0000 UTC (1 container statuses recorded)
  Sep 27 14:33:54.215: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 27 14:33:54.215: INFO: sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-fztjb from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 14:33:54.215: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 14:33:54.215: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/27/23 14:33:54.215
  E0927 14:33:55.058626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:56.058860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/27/23 14:33:56.229
  STEP: Trying to apply a random label on the found node. @ 09/27/23 14:33:56.239
  STEP: verifying the node has the label kubernetes.io/e2e-273de864-6662-498e-a6ac-ee692c69fc4b 42 @ 09/27/23 14:33:56.246
  STEP: Trying to relaunch the pod, now with labels. @ 09/27/23 14:33:56.248
  E0927 14:33:57.059015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:33:58.059227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-273de864-6662-498e-a6ac-ee692c69fc4b off the node worker-1 @ 09/27/23 14:33:58.26
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-273de864-6662-498e-a6ac-ee692c69fc4b @ 09/27/23 14:33:58.269
  Sep 27 14:33:58.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6906" for this suite. @ 09/27/23 14:33:58.273
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 09/27/23 14:33:58.279
  Sep 27 14:33:58.279: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename job @ 09/27/23 14:33:58.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:33:58.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:33:58.292
  STEP: Creating a job @ 09/27/23 14:33:58.294
  STEP: Ensuring active pods == parallelism @ 09/27/23 14:33:58.299
  E0927 14:33:59.060019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:00.060125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/27/23 14:34:00.303
  Sep 27 14:34:00.815: INFO: Successfully updated pod "adopt-release-mmbpv"
  STEP: Checking that the Job readopts the Pod @ 09/27/23 14:34:00.815
  E0927 14:34:01.061032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:02.061124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/27/23 14:34:02.82
  E0927 14:34:03.061857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:34:03.332: INFO: Successfully updated pod "adopt-release-mmbpv"
  STEP: Checking that the Job releases the Pod @ 09/27/23 14:34:03.332
  E0927 14:34:04.062232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:05.062862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:34:05.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7807" for this suite. @ 09/27/23 14:34:05.338
• [7.066 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 09/27/23 14:34:05.345
  Sep 27 14:34:05.345: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/27/23 14:34:05.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:34:05.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:34:05.357
  Sep 27 14:34:05.359: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 14:34:06.063046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:07.063389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:08.063818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:34:08.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4436" for this suite. @ 09/27/23 14:34:08.44
• [3.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 09/27/23 14:34:08.449
  Sep 27 14:34:08.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 14:34:08.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:34:08.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:34:08.461
  STEP: creating a replication controller @ 09/27/23 14:34:08.464
  Sep 27 14:34:08.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 create -f -'
  Sep 27 14:34:08.977: INFO: stderr: ""
  Sep 27 14:34:08.977: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/27/23 14:34:08.977
  Sep 27 14:34:08.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 14:34:09.047: INFO: stderr: ""
  Sep 27 14:34:09.047: INFO: stdout: "update-demo-nautilus-f4n7s update-demo-nautilus-pbc55 "
  Sep 27 14:34:09.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 get pods update-demo-nautilus-f4n7s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0927 14:34:09.064651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:34:09.108: INFO: stderr: ""
  Sep 27 14:34:09.108: INFO: stdout: ""
  Sep 27 14:34:09.108: INFO: update-demo-nautilus-f4n7s is created but not running
  E0927 14:34:10.064733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:11.064834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:12.065040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:13.065285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:14.065702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:34:14.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 14:34:14.173: INFO: stderr: ""
  Sep 27 14:34:14.173: INFO: stdout: "update-demo-nautilus-f4n7s update-demo-nautilus-pbc55 "
  Sep 27 14:34:14.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 get pods update-demo-nautilus-f4n7s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 14:34:14.233: INFO: stderr: ""
  Sep 27 14:34:14.233: INFO: stdout: "true"
  Sep 27 14:34:14.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 get pods update-demo-nautilus-f4n7s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 14:34:14.292: INFO: stderr: ""
  Sep 27 14:34:14.293: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 14:34:14.293: INFO: validating pod update-demo-nautilus-f4n7s
  Sep 27 14:34:14.297: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 14:34:14.298: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 14:34:14.298: INFO: update-demo-nautilus-f4n7s is verified up and running
  Sep 27 14:34:14.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 get pods update-demo-nautilus-pbc55 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 14:34:14.357: INFO: stderr: ""
  Sep 27 14:34:14.357: INFO: stdout: "true"
  Sep 27 14:34:14.358: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 get pods update-demo-nautilus-pbc55 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 14:34:14.418: INFO: stderr: ""
  Sep 27 14:34:14.419: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 14:34:14.419: INFO: validating pod update-demo-nautilus-pbc55
  Sep 27 14:34:14.424: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 14:34:14.424: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 14:34:14.424: INFO: update-demo-nautilus-pbc55 is verified up and running
  STEP: using delete to clean up resources @ 09/27/23 14:34:14.424
  Sep 27 14:34:14.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 delete --grace-period=0 --force -f -'
  Sep 27 14:34:14.491: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:34:14.491: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 27 14:34:14.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 get rc,svc -l name=update-demo --no-headers'
  Sep 27 14:34:14.555: INFO: stderr: "No resources found in kubectl-622 namespace.\n"
  Sep 27 14:34:14.555: INFO: stdout: ""
  Sep 27 14:34:14.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-622 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 27 14:34:14.617: INFO: stderr: ""
  Sep 27 14:34:14.617: INFO: stdout: ""
  Sep 27 14:34:14.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-622" for this suite. @ 09/27/23 14:34:14.623
• [6.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 09/27/23 14:34:14.63
  Sep 27 14:34:14.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:34:14.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:34:14.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:34:14.642
  STEP: Creating secret with name secret-test-517b0381-496e-4a93-a0e0-500c48858b74 @ 09/27/23 14:34:14.647
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:34:14.652
  E0927 14:34:15.066616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:16.067037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:17.067196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:18.067476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:34:18.665
  Sep 27 14:34:18.667: INFO: Trying to get logs from node worker-1 pod pod-secrets-aa251df8-99cd-42a1-99db-77a88efd8d03 container secret-env-test: <nil>
  STEP: delete the pod @ 09/27/23 14:34:18.673
  Sep 27 14:34:18.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9024" for this suite. @ 09/27/23 14:34:18.688
• [4.062 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 09/27/23 14:34:18.693
  Sep 27 14:34:18.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 14:34:18.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:34:18.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:34:18.712
  STEP: Creating service test in namespace statefulset-252 @ 09/27/23 14:34:18.715
  STEP: Creating a new StatefulSet @ 09/27/23 14:34:18.72
  Sep 27 14:34:18.731: INFO: Found 0 stateful pods, waiting for 3
  E0927 14:34:19.067582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:20.067626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:21.068825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:22.068946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:23.069739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:24.070207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:25.070411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:26.070644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:27.070865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:28.071904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:34:28.735: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:34:28.735: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:34:28.735: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:34:28.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-252 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 14:34:28.902: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 14:34:28.902: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 14:34:28.902: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0927 14:34:29.071996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:30.072140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:31.072269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:32.072510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:33.072756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:34.073789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:35.074000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:36.074220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:37.074495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:38.074661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/27/23 14:34:38.912
  Sep 27 14:34:38.930: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/27/23 14:34:38.93
  E0927 14:34:39.074710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:40.074875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:41.074994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:42.075225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:43.075443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:44.075679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:45.075924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:46.076193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:47.076756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:48.076992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/27/23 14:34:48.941
  Sep 27 14:34:48.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-252 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0927 14:34:49.077313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:34:49.085: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 14:34:49.085: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 14:34:49.085: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0927 14:34:50.077399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:51.077630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:52.077949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:53.078107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:54.078645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:55.078858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:56.079276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:57.079585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:58.079644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:34:59.080159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:00.080260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:01.080474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:02.080617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:03.080847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:04.081288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:05.081452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:06.081671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:07.081811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:08.081959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:09.082487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/27/23 14:35:09.098
  Sep 27 14:35:09.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-252 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 14:35:09.239: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 14:35:09.239: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 14:35:09.239: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0927 14:35:10.083373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:11.083568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:12.083851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:13.084096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:14.084510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:15.084737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:16.084986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:17.085247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:18.085446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:19.086102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:35:19.269: INFO: Updating stateful set ss2
  E0927 14:35:20.086488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:21.086735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:22.086934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:23.087088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:24.087643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:25.087868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:26.088734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:27.088956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:28.089306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:29.089502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/27/23 14:35:29.281
  Sep 27 14:35:29.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-252 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 14:35:29.440: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 14:35:29.441: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 14:35:29.441: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0927 14:35:30.089911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:31.090147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:32.090287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:33.090429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:34.090708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:35.090927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:36.091164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:37.091369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:38.091644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:39.092194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:35:39.453: INFO: Deleting all statefulset in ns statefulset-252
  Sep 27 14:35:39.455: INFO: Scaling statefulset ss2 to 0
  E0927 14:35:40.092416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:41.092502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:42.092715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:43.092959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:44.093839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:45.094077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:46.094321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:47.094483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:48.094884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:49.095539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:35:49.465: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 14:35:49.467: INFO: Deleting statefulset ss2
  Sep 27 14:35:49.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-252" for this suite. @ 09/27/23 14:35:49.476
• [90.787 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 09/27/23 14:35:49.481
  Sep 27 14:35:49.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 14:35:49.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:35:49.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:35:49.497
  STEP: creating the pod @ 09/27/23 14:35:49.499
  Sep 27 14:35:49.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-1482 create -f -'
  Sep 27 14:35:49.806: INFO: stderr: ""
  Sep 27 14:35:49.806: INFO: stdout: "pod/pause created\n"
  E0927 14:35:50.095616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:51.095995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/27/23 14:35:51.815
  Sep 27 14:35:51.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-1482 label pods pause testing-label=testing-label-value'
  Sep 27 14:35:51.881: INFO: stderr: ""
  Sep 27 14:35:51.881: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/27/23 14:35:51.881
  Sep 27 14:35:51.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-1482 get pod pause -L testing-label'
  Sep 27 14:35:51.946: INFO: stderr: ""
  Sep 27 14:35:51.946: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/27/23 14:35:51.946
  Sep 27 14:35:51.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-1482 label pods pause testing-label-'
  Sep 27 14:35:52.019: INFO: stderr: ""
  Sep 27 14:35:52.019: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/27/23 14:35:52.019
  Sep 27 14:35:52.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-1482 get pod pause -L testing-label'
  Sep 27 14:35:52.084: INFO: stderr: ""
  Sep 27 14:35:52.084: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 09/27/23 14:35:52.084
  Sep 27 14:35:52.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-1482 delete --grace-period=0 --force -f -'
  E0927 14:35:52.096935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:35:52.153: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:35:52.153: INFO: stdout: "pod \"pause\" force deleted\n"
  Sep 27 14:35:52.153: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-1482 get rc,svc -l name=pause --no-headers'
  Sep 27 14:35:52.221: INFO: stderr: "No resources found in kubectl-1482 namespace.\n"
  Sep 27 14:35:52.221: INFO: stdout: ""
  Sep 27 14:35:52.221: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-1482 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 27 14:35:52.284: INFO: stderr: ""
  Sep 27 14:35:52.284: INFO: stdout: ""
  Sep 27 14:35:52.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1482" for this suite. @ 09/27/23 14:35:52.287
• [2.809 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 09/27/23 14:35:52.292
  Sep 27 14:35:52.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename security-context-test @ 09/27/23 14:35:52.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:35:52.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:35:52.303
  E0927 14:35:53.097045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:54.097128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:55.098172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:56.098303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:35:56.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-867" for this suite. @ 09/27/23 14:35:56.347
• [4.058 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/27/23 14:35:56.351
  Sep 27 14:35:56.351: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/27/23 14:35:56.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:35:56.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:35:56.364
  STEP: Creating 50 configmaps @ 09/27/23 14:35:56.366
  STEP: Creating RC which spawns configmap-volume pods @ 09/27/23 14:35:56.605
  Sep 27 14:35:56.774: INFO: Pod name wrapped-volume-race-c94541f2-bf43-43f7-bd5b-9edc438ef305: Found 3 pods out of 5
  E0927 14:35:57.098872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:58.098958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:35:59.099096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:00.099271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:01.099543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:36:01.779: INFO: Pod name wrapped-volume-race-c94541f2-bf43-43f7-bd5b-9edc438ef305: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/27/23 14:36:01.779
  STEP: Creating RC which spawns configmap-volume pods @ 09/27/23 14:36:01.792
  Sep 27 14:36:01.803: INFO: Pod name wrapped-volume-race-2abec7e8-0eab-4d58-b209-1ba2fe57e220: Found 0 pods out of 5
  E0927 14:36:02.099672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:03.100718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:04.101185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:05.101428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:06.101666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:36:06.809: INFO: Pod name wrapped-volume-race-2abec7e8-0eab-4d58-b209-1ba2fe57e220: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/27/23 14:36:06.809
  STEP: Creating RC which spawns configmap-volume pods @ 09/27/23 14:36:06.821
  Sep 27 14:36:06.835: INFO: Pod name wrapped-volume-race-ca092064-3db1-42cd-a9d6-0b6977eaf73e: Found 0 pods out of 5
  E0927 14:36:07.102396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:08.102634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:09.103214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:10.103427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:11.103653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:36:11.842: INFO: Pod name wrapped-volume-race-ca092064-3db1-42cd-a9d6-0b6977eaf73e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/27/23 14:36:11.842
  Sep 27 14:36:11.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-ca092064-3db1-42cd-a9d6-0b6977eaf73e in namespace emptydir-wrapper-4326, will wait for the garbage collector to delete the pods @ 09/27/23 14:36:11.855
  Sep 27 14:36:11.911: INFO: Deleting ReplicationController wrapped-volume-race-ca092064-3db1-42cd-a9d6-0b6977eaf73e took: 4.046091ms
  Sep 27 14:36:12.012: INFO: Terminating ReplicationController wrapped-volume-race-ca092064-3db1-42cd-a9d6-0b6977eaf73e pods took: 101.13157ms
  E0927 14:36:12.104261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:13.105282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2abec7e8-0eab-4d58-b209-1ba2fe57e220 in namespace emptydir-wrapper-4326, will wait for the garbage collector to delete the pods @ 09/27/23 14:36:13.514
  Sep 27 14:36:13.573: INFO: Deleting ReplicationController wrapped-volume-race-2abec7e8-0eab-4d58-b209-1ba2fe57e220 took: 6.629769ms
  Sep 27 14:36:13.673: INFO: Terminating ReplicationController wrapped-volume-race-2abec7e8-0eab-4d58-b209-1ba2fe57e220 pods took: 100.213176ms
  E0927 14:36:14.106245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-c94541f2-bf43-43f7-bd5b-9edc438ef305 in namespace emptydir-wrapper-4326, will wait for the garbage collector to delete the pods @ 09/27/23 14:36:14.574
  Sep 27 14:36:14.635: INFO: Deleting ReplicationController wrapped-volume-race-c94541f2-bf43-43f7-bd5b-9edc438ef305 took: 7.097106ms
  Sep 27 14:36:14.735: INFO: Terminating ReplicationController wrapped-volume-race-c94541f2-bf43-43f7-bd5b-9edc438ef305 pods took: 100.685019ms
  E0927 14:36:15.109155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/27/23 14:36:15.636
  STEP: Destroying namespace "emptydir-wrapper-4326" for this suite. @ 09/27/23 14:36:15.813
• [19.466 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/27/23 14:36:15.818
  Sep 27 14:36:15.818: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename watch @ 09/27/23 14:36:15.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:36:15.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:36:15.83
  STEP: creating a watch on configmaps @ 09/27/23 14:36:15.832
  STEP: creating a new configmap @ 09/27/23 14:36:15.833
  STEP: modifying the configmap once @ 09/27/23 14:36:15.836
  STEP: closing the watch once it receives two notifications @ 09/27/23 14:36:15.841
  Sep 27 14:36:15.841: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4525  aaf31815-0892-4ef5-b0ac-bb231255ff25 9094 0 2023-09-27 14:36:15 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-27 14:36:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:36:15.841: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4525  aaf31815-0892-4ef5-b0ac-bb231255ff25 9095 0 2023-09-27 14:36:15 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-27 14:36:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/27/23 14:36:15.842
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/27/23 14:36:15.846
  STEP: deleting the configmap @ 09/27/23 14:36:15.847
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/27/23 14:36:15.851
  Sep 27 14:36:15.851: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4525  aaf31815-0892-4ef5-b0ac-bb231255ff25 9096 0 2023-09-27 14:36:15 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-27 14:36:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:36:15.851: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4525  aaf31815-0892-4ef5-b0ac-bb231255ff25 9097 0 2023-09-27 14:36:15 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-27 14:36:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:36:15.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4525" for this suite. @ 09/27/23 14:36:15.854
• [0.039 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/27/23 14:36:15.859
  Sep 27 14:36:15.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename events @ 09/27/23 14:36:15.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:36:15.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:36:15.872
  STEP: creating a test event @ 09/27/23 14:36:15.874
  STEP: listing events in all namespaces @ 09/27/23 14:36:15.878
  STEP: listing events in test namespace @ 09/27/23 14:36:15.882
  STEP: listing events with field selection filtering on source @ 09/27/23 14:36:15.884
  STEP: listing events with field selection filtering on reportingController @ 09/27/23 14:36:15.886
  STEP: getting the test event @ 09/27/23 14:36:15.887
  STEP: patching the test event @ 09/27/23 14:36:15.889
  STEP: getting the test event @ 09/27/23 14:36:15.895
  STEP: updating the test event @ 09/27/23 14:36:15.897
  STEP: getting the test event @ 09/27/23 14:36:15.901
  STEP: deleting the test event @ 09/27/23 14:36:15.902
  STEP: listing events in all namespaces @ 09/27/23 14:36:15.906
  STEP: listing events in test namespace @ 09/27/23 14:36:15.911
  Sep 27 14:36:15.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3093" for this suite. @ 09/27/23 14:36:15.915
• [0.060 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 09/27/23 14:36:15.919
  Sep 27 14:36:15.920: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 14:36:15.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:36:15.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:36:15.93
  Sep 27 14:36:15.933: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 14:36:16.109555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:17.110004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/27/23 14:36:17.171
  Sep 27 14:36:17.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-4796 --namespace=crd-publish-openapi-4796 create -f -'
  Sep 27 14:36:17.676: INFO: stderr: ""
  Sep 27 14:36:17.676: INFO: stdout: "e2e-test-crd-publish-openapi-2447-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 27 14:36:17.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-4796 --namespace=crd-publish-openapi-4796 delete e2e-test-crd-publish-openapi-2447-crds test-cr'
  Sep 27 14:36:17.740: INFO: stderr: ""
  Sep 27 14:36:17.740: INFO: stdout: "e2e-test-crd-publish-openapi-2447-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Sep 27 14:36:17.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-4796 --namespace=crd-publish-openapi-4796 apply -f -'
  Sep 27 14:36:17.931: INFO: stderr: ""
  Sep 27 14:36:17.931: INFO: stdout: "e2e-test-crd-publish-openapi-2447-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 27 14:36:17.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-4796 --namespace=crd-publish-openapi-4796 delete e2e-test-crd-publish-openapi-2447-crds test-cr'
  Sep 27 14:36:17.995: INFO: stderr: ""
  Sep 27 14:36:17.995: INFO: stdout: "e2e-test-crd-publish-openapi-2447-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/27/23 14:36:17.995
  Sep 27 14:36:17.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-4796 explain e2e-test-crd-publish-openapi-2447-crds'
  E0927 14:36:18.110914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:36:18.164: INFO: stderr: ""
  Sep 27 14:36:18.164: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2447-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0927 14:36:19.111854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:36:19.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4796" for this suite. @ 09/27/23 14:36:19.412
• [3.496 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 09/27/23 14:36:19.422
  Sep 27 14:36:19.422: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 14:36:19.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:36:19.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:36:19.432
  STEP: Creating service test in namespace statefulset-78 @ 09/27/23 14:36:19.434
  STEP: Creating a new StatefulSet @ 09/27/23 14:36:19.438
  Sep 27 14:36:19.448: INFO: Found 0 stateful pods, waiting for 3
  E0927 14:36:20.112023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:21.113150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:22.113225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:23.113471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:24.113881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:25.114134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:26.114371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:27.114599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:28.114861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:29.115467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:36:29.451: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:36:29.451: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:36:29.451: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/27/23 14:36:29.457
  Sep 27 14:36:29.475: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/27/23 14:36:29.475
  E0927 14:36:30.115928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:31.116166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:32.116400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:33.116802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:34.117246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:35.117389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:36.117613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:37.117744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:38.117964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:39.118651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/27/23 14:36:39.487
  STEP: Performing a canary update @ 09/27/23 14:36:39.487
  Sep 27 14:36:39.504: INFO: Updating stateful set ss2
  Sep 27 14:36:39.508: INFO: Waiting for Pod statefulset-78/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0927 14:36:40.119633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:41.119733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:42.119995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:43.120198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:44.120838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:45.121035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:46.121151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:47.121383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:48.121776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:49.122272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/27/23 14:36:49.514
  Sep 27 14:36:49.550: INFO: Found 2 stateful pods, waiting for 3
  E0927 14:36:50.123295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:51.123557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:52.123894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:53.124064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:54.124500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:55.124605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:56.124842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:57.124965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:58.125211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:36:59.125963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:36:59.554: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:36:59.555: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:36:59.555: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/27/23 14:36:59.558
  Sep 27 14:36:59.574: INFO: Updating stateful set ss2
  Sep 27 14:36:59.578: INFO: Waiting for Pod statefulset-78/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0927 14:37:00.126509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:01.126918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:02.127003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:03.127229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:04.127749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:05.128700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:06.128837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:07.129196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:08.129416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:09.130134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:37:09.600: INFO: Updating stateful set ss2
  Sep 27 14:37:09.604: INFO: Waiting for StatefulSet statefulset-78/ss2 to complete update
  Sep 27 14:37:09.604: INFO: Waiting for Pod statefulset-78/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0927 14:37:10.131016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:11.131250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:12.131474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:13.131713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:14.132244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:15.132469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:16.132687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:17.132884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:18.133097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:19.133746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:37:19.609: INFO: Deleting all statefulset in ns statefulset-78
  Sep 27 14:37:19.610: INFO: Scaling statefulset ss2 to 0
  E0927 14:37:20.133990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:21.134104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:22.134323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:23.134444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:24.134770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:25.135157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:26.135226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:27.135466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:28.135752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:29.136682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:37:29.621: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 14:37:29.623: INFO: Deleting statefulset ss2
  Sep 27 14:37:29.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-78" for this suite. @ 09/27/23 14:37:29.632
• [70.216 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/27/23 14:37:29.638
  Sep 27 14:37:29.638: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:37:29.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:37:29.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:37:29.65
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-716a39ad-8681-4c3a-af95-44956d80ed30 @ 09/27/23 14:37:29.654
  STEP: Creating the pod @ 09/27/23 14:37:29.657
  E0927 14:37:30.137525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:31.137660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-716a39ad-8681-4c3a-af95-44956d80ed30 @ 09/27/23 14:37:31.681
  STEP: waiting to observe update in volume @ 09/27/23 14:37:31.685
  E0927 14:37:32.138429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:33.138671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:34.139308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:35.139581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:36.139685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:37.139935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:38.140542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:39.141184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:40.141560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:41.141784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:42.142724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:43.142997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:44.143055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:45.143289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:46.143368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:47.143524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:48.144352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:49.145056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:50.145770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:51.146032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:52.146694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:53.146941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:54.147521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:55.147700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:56.148267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:57.148497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:58.149078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:37:59.149727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:00.149769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:01.149977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:02.150135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:03.150341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:04.150684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:05.150903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:06.151026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:07.151274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:08.152324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:09.152952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:10.153476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:11.153703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:12.154483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:13.154708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:14.155775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:15.156017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:16.156983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:17.157235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:18.157792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:19.158381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:20.158598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:21.158640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:22.158746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:23.158951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:24.159516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:25.159724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:26.159782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:27.159995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:28.160072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:29.160778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:30.160824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:31.161021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:32.161729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:33.161945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:34.162656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:35.162874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:36.163363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:37.163524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:38.164014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:39.164539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:40.165326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:41.165524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:42.165600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:43.165817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:38:43.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6459" for this suite. @ 09/27/23 14:38:43.943
• [74.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 09/27/23 14:38:43.948
  Sep 27 14:38:43.948: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-webhook @ 09/27/23 14:38:43.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:38:43.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:38:43.962
  STEP: Setting up server cert @ 09/27/23 14:38:43.964
  E0927 14:38:44.166177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/27/23 14:38:44.204
  STEP: Deploying the custom resource conversion webhook pod @ 09/27/23 14:38:44.21
  STEP: Wait for the deployment to be ready @ 09/27/23 14:38:44.22
  Sep 27 14:38:44.224: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0927 14:38:45.166937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:46.167187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 14:38:46.23
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:38:46.238
  E0927 14:38:47.167304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:38:47.238: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 27 14:38:47.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 14:38:48.167913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:49.168595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/27/23 14:38:49.803
  STEP: v2 custom resource should be converted @ 09/27/23 14:38:49.807
  Sep 27 14:38:49.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0927 14:38:50.169676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-6822" for this suite. @ 09/27/23 14:38:50.362
• [6.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/27/23 14:38:50.371
  Sep 27 14:38:50.371: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename subpath @ 09/27/23 14:38:50.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:38:50.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:38:50.386
  STEP: Setting up data @ 09/27/23 14:38:50.389
  STEP: Creating pod pod-subpath-test-secret-s5v5 @ 09/27/23 14:38:50.398
  STEP: Creating a pod to test atomic-volume-subpath @ 09/27/23 14:38:50.398
  E0927 14:38:51.170328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:52.170461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:53.170604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:54.170889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:55.171662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:56.171713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:57.172661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:58.172860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:38:59.173820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:00.174060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:01.174245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:02.174464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:03.175113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:04.175611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:05.176341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:06.176451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:07.177247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:08.177457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:09.178294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:10.178555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:11.178702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:12.178936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:13.179546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:14.179867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:39:14.443
  Sep 27 14:39:14.445: INFO: Trying to get logs from node worker-1 pod pod-subpath-test-secret-s5v5 container test-container-subpath-secret-s5v5: <nil>
  STEP: delete the pod @ 09/27/23 14:39:14.451
  STEP: Deleting pod pod-subpath-test-secret-s5v5 @ 09/27/23 14:39:14.46
  Sep 27 14:39:14.460: INFO: Deleting pod "pod-subpath-test-secret-s5v5" in namespace "subpath-3183"
  Sep 27 14:39:14.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3183" for this suite. @ 09/27/23 14:39:14.464
• [24.097 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 09/27/23 14:39:14.469
  Sep 27 14:39:14.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl-logs @ 09/27/23 14:39:14.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:14.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:14.48
  STEP: creating an pod @ 09/27/23 14:39:14.482
  Sep 27 14:39:14.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-logs-4329 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Sep 27 14:39:14.547: INFO: stderr: ""
  Sep 27 14:39:14.547: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/27/23 14:39:14.547
  Sep 27 14:39:14.547: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0927 14:39:15.180003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:16.180224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:39:16.554: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/27/23 14:39:16.554
  Sep 27 14:39:16.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-logs-4329 logs logs-generator logs-generator'
  Sep 27 14:39:16.620: INFO: stderr: ""
  Sep 27 14:39:16.620: INFO: stdout: "I0927 14:39:15.190765       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/pm4 240\nI0927 14:39:15.391198       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/jtw 411\nI0927 14:39:15.591535       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/n5fp 450\nI0927 14:39:15.790848       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/hfrc 384\nI0927 14:39:15.991228       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/hznx 427\nI0927 14:39:16.191578       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/f67 384\nI0927 14:39:16.390867       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/p56 297\nI0927 14:39:16.591241       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/z79l 529\n"
  STEP: limiting log lines @ 09/27/23 14:39:16.62
  Sep 27 14:39:16.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-logs-4329 logs logs-generator logs-generator --tail=1'
  Sep 27 14:39:16.683: INFO: stderr: ""
  Sep 27 14:39:16.683: INFO: stdout: "I0927 14:39:16.591241       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/z79l 529\n"
  Sep 27 14:39:16.683: INFO: got output "I0927 14:39:16.591241       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/z79l 529\n"
  STEP: limiting log bytes @ 09/27/23 14:39:16.683
  Sep 27 14:39:16.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-logs-4329 logs logs-generator logs-generator --limit-bytes=1'
  Sep 27 14:39:16.747: INFO: stderr: ""
  Sep 27 14:39:16.747: INFO: stdout: "I"
  Sep 27 14:39:16.747: INFO: got output "I"
  STEP: exposing timestamps @ 09/27/23 14:39:16.747
  Sep 27 14:39:16.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-logs-4329 logs logs-generator logs-generator --tail=1 --timestamps'
  Sep 27 14:39:16.813: INFO: stderr: ""
  Sep 27 14:39:16.813: INFO: stdout: "2023-09-27T14:39:16.791749971Z I0927 14:39:16.791613       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/l46c 432\n"
  Sep 27 14:39:16.813: INFO: got output "2023-09-27T14:39:16.791749971Z I0927 14:39:16.791613       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/l46c 432\n"
  STEP: restricting to a time range @ 09/27/23 14:39:16.813
  E0927 14:39:17.181243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:18.181460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:19.182121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:39:19.314: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-logs-4329 logs logs-generator logs-generator --since=1s'
  Sep 27 14:39:19.378: INFO: stderr: ""
  Sep 27 14:39:19.378: INFO: stdout: "I0927 14:39:18.391270       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/j58x 523\nI0927 14:39:18.591644       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/dvmh 340\nI0927 14:39:18.790923       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/bs2z 523\nI0927 14:39:18.991290       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/t9p2 250\nI0927 14:39:19.191675       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/v7ck 501\n"
  Sep 27 14:39:19.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-logs-4329 logs logs-generator logs-generator --since=24h'
  Sep 27 14:39:19.444: INFO: stderr: ""
  Sep 27 14:39:19.444: INFO: stdout: "I0927 14:39:15.190765       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/pm4 240\nI0927 14:39:15.391198       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/jtw 411\nI0927 14:39:15.591535       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/n5fp 450\nI0927 14:39:15.790848       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/hfrc 384\nI0927 14:39:15.991228       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/hznx 427\nI0927 14:39:16.191578       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/f67 384\nI0927 14:39:16.390867       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/p56 297\nI0927 14:39:16.591241       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/z79l 529\nI0927 14:39:16.791613       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/l46c 432\nI0927 14:39:16.990889       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/wfvk 470\nI0927 14:39:17.191226       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/627 372\nI0927 14:39:17.391576       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/vcc 249\nI0927 14:39:17.590879       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/c5s 322\nI0927 14:39:17.791247       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/6xt 461\nI0927 14:39:17.991617       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/fvx 258\nI0927 14:39:18.190923       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/vpr 224\nI0927 14:39:18.391270       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/j58x 523\nI0927 14:39:18.591644       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/dvmh 340\nI0927 14:39:18.790923       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/bs2z 523\nI0927 14:39:18.991290       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/t9p2 250\nI0927 14:39:19.191675       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/v7ck 501\nI0927 14:39:19.390938       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/hrk 551\n"
  Sep 27 14:39:19.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-logs-4329 delete pod logs-generator'
  Sep 27 14:39:20.126: INFO: stderr: ""
  Sep 27 14:39:20.126: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Sep 27 14:39:20.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4329" for this suite. @ 09/27/23 14:39:20.128
• [5.663 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/27/23 14:39:20.133
  Sep 27 14:39:20.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename watch @ 09/27/23 14:39:20.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:20.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:20.143
  STEP: getting a starting resourceVersion @ 09/27/23 14:39:20.145
  STEP: starting a background goroutine to produce watch events @ 09/27/23 14:39:20.147
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/27/23 14:39:20.147
  E0927 14:39:20.182308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:21.183147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:22.184170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:39:22.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8552" for this suite. @ 09/27/23 14:39:22.987
• [2.907 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/27/23 14:39:23.04
  Sep 27 14:39:23.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename init-container @ 09/27/23 14:39:23.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:23.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:23.054
  STEP: creating the pod @ 09/27/23 14:39:23.057
  Sep 27 14:39:23.057: INFO: PodSpec: initContainers in spec.initContainers
  E0927 14:39:23.184985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:24.185903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:25.186725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:39:25.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6592" for this suite. @ 09/27/23 14:39:25.838
• [2.803 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 09/27/23 14:39:25.844
  Sep 27 14:39:25.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename gc @ 09/27/23 14:39:25.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:25.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:25.855
  STEP: create the deployment @ 09/27/23 14:39:25.857
  W0927 14:39:25.862781      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/27/23 14:39:25.862
  E0927 14:39:26.186879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/27/23 14:39:26.367
  STEP: wait for all rs to be garbage collected @ 09/27/23 14:39:26.371
  STEP: expected 0 rs, got 1 rs @ 09/27/23 14:39:26.374
  STEP: expected 0 pods, got 2 pods @ 09/27/23 14:39:26.376
  STEP: Gathering metrics @ 09/27/23 14:39:26.882
  W0927 14:39:26.885555      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 14:39:26.885: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 14:39:26.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2857" for this suite. @ 09/27/23 14:39:26.887
• [1.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 09/27/23 14:39:26.895
  Sep 27 14:39:26.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 14:39:26.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:26.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:26.91
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/27/23 14:39:26.913
  E0927 14:39:27.187724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:28.188042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:39:28.925
  Sep 27 14:39:28.926: INFO: Trying to get logs from node worker-0 pod pod-3dafd871-2f96-41c6-a957-f3922666e6c8 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 14:39:28.94
  Sep 27 14:39:28.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2858" for this suite. @ 09/27/23 14:39:28.952
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 09/27/23 14:39:28.959
  Sep 27 14:39:28.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename endpointslice @ 09/27/23 14:39:28.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:28.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:28.971
  Sep 27 14:39:28.979: INFO: Endpoints addresses: [10.0.45.99] , ports: [6443]
  Sep 27 14:39:28.979: INFO: EndpointSlices addresses: [10.0.45.99] , ports: [6443]
  Sep 27 14:39:28.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7864" for this suite. @ 09/27/23 14:39:28.981
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 09/27/23 14:39:28.996
  Sep 27 14:39:28.996: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename security-context-test @ 09/27/23 14:39:28.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:29.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:29.009
  E0927 14:39:29.188092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:30.188712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:39:31.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1223" for this suite. @ 09/27/23 14:39:31.027
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 09/27/23 14:39:31.033
  Sep 27 14:39:31.033: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 14:39:31.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:31.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:31.045
  STEP: Creating namespace "e2e-ns-tpvjj" @ 09/27/23 14:39:31.048
  Sep 27 14:39:31.059: INFO: Namespace "e2e-ns-tpvjj-8408" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-tpvjj-8408" @ 09/27/23 14:39:31.059
  Sep 27 14:39:31.065: INFO: Namespace "e2e-ns-tpvjj-8408" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-tpvjj-8408" @ 09/27/23 14:39:31.065
  Sep 27 14:39:31.072: INFO: Namespace "e2e-ns-tpvjj-8408" has []v1.FinalizerName{"kubernetes"}
  Sep 27 14:39:31.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-279" for this suite. @ 09/27/23 14:39:31.074
  STEP: Destroying namespace "e2e-ns-tpvjj-8408" for this suite. @ 09/27/23 14:39:31.078
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 09/27/23 14:39:31.087
  Sep 27 14:39:31.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 14:39:31.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:31.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:31.103
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/27/23 14:39:31.105
  E0927 14:39:31.189659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:32.190120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/27/23 14:39:33.115
  STEP: Then the orphan pod is adopted @ 09/27/23 14:39:33.119
  E0927 14:39:33.190747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/27/23 14:39:34.125
  Sep 27 14:39:34.134: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/27/23 14:39:34.149
  E0927 14:39:34.191394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:39:35.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1018" for this suite. @ 09/27/23 14:39:35.158
• [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/27/23 14:39:35.167
  Sep 27 14:39:35.167: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:39:35.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:35.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:35.178
  E0927 14:39:35.192246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:39:35.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3080" for this suite. @ 09/27/23 14:39:35.209
• [0.046 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/27/23 14:39:35.213
  Sep 27 14:39:35.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:39:35.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:35.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:35.229
  STEP: Creating projection with secret that has name projected-secret-test-7d4a4ff5-c04c-4db2-932c-ddf45e456efc @ 09/27/23 14:39:35.231
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:39:35.235
  E0927 14:39:36.192860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:37.193096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:38.193220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:39.193897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:39:39.25
  Sep 27 14:39:39.252: INFO: Trying to get logs from node worker-1 pod pod-projected-secrets-61a658d6-4365-494e-b1a1-815c24b5327d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:39:39.257
  Sep 27 14:39:39.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7883" for this suite. @ 09/27/23 14:39:39.27
• [4.062 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/27/23 14:39:39.276
  Sep 27 14:39:39.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename init-container @ 09/27/23 14:39:39.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:39.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:39.288
  STEP: creating the pod @ 09/27/23 14:39:39.29
  Sep 27 14:39:39.290: INFO: PodSpec: initContainers in spec.initContainers
  E0927 14:39:40.194007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:41.194164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:42.194267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:43.195060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:39:44.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1669" for this suite. @ 09/27/23 14:39:44.019
• [4.749 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/27/23 14:39:44.026
  Sep 27 14:39:44.026: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubelet-test @ 09/27/23 14:39:44.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:44.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:44.043
  STEP: Waiting for pod completion @ 09/27/23 14:39:44.05
  E0927 14:39:44.196143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:45.196518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:39:46.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2639" for this suite. @ 09/27/23 14:39:46.063
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 09/27/23 14:39:46.07
  Sep 27 14:39:46.070: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 14:39:46.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:39:46.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:39:46.081
  STEP: Creating resourceQuota "e2e-rq-status-2zczx" @ 09/27/23 14:39:46.084
  Sep 27 14:39:46.089: INFO: Resource quota "e2e-rq-status-2zczx" reports spec: hard cpu limit of 500m
  Sep 27 14:39:46.089: INFO: Resource quota "e2e-rq-status-2zczx" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-2zczx" /status @ 09/27/23 14:39:46.089
  STEP: Confirm /status for "e2e-rq-status-2zczx" resourceQuota via watch @ 09/27/23 14:39:46.095
  Sep 27 14:39:46.096: INFO: observed resourceQuota "e2e-rq-status-2zczx" in namespace "resourcequota-8750" with hard status: v1.ResourceList(nil)
  Sep 27 14:39:46.096: INFO: Found resourceQuota "e2e-rq-status-2zczx" in namespace "resourcequota-8750" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 27 14:39:46.097: INFO: ResourceQuota "e2e-rq-status-2zczx" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/27/23 14:39:46.1
  Sep 27 14:39:46.106: INFO: Resource quota "e2e-rq-status-2zczx" reports spec: hard cpu limit of 1
  Sep 27 14:39:46.106: INFO: Resource quota "e2e-rq-status-2zczx" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-2zczx" /status @ 09/27/23 14:39:46.106
  STEP: Confirm /status for "e2e-rq-status-2zczx" resourceQuota via watch @ 09/27/23 14:39:46.111
  Sep 27 14:39:46.112: INFO: observed resourceQuota "e2e-rq-status-2zczx" in namespace "resourcequota-8750" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 27 14:39:46.112: INFO: Found resourceQuota "e2e-rq-status-2zczx" in namespace "resourcequota-8750" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Sep 27 14:39:46.112: INFO: ResourceQuota "e2e-rq-status-2zczx" /status was patched
  STEP: Get "e2e-rq-status-2zczx" /status @ 09/27/23 14:39:46.112
  Sep 27 14:39:46.114: INFO: Resourcequota "e2e-rq-status-2zczx" reports status: hard cpu of 1
  Sep 27 14:39:46.114: INFO: Resourcequota "e2e-rq-status-2zczx" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-2zczx" /status before checking Spec is unchanged @ 09/27/23 14:39:46.116
  Sep 27 14:39:46.119: INFO: Resourcequota "e2e-rq-status-2zczx" reports status: hard cpu of 2
  Sep 27 14:39:46.119: INFO: Resourcequota "e2e-rq-status-2zczx" reports status: hard memory of 2Gi
  Sep 27 14:39:46.120: INFO: Found resourceQuota "e2e-rq-status-2zczx" in namespace "resourcequota-8750" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0927 14:39:46.196930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:47.197951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:48.198212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:49.199176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:50.199329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:51.199791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:52.199976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:53.200227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:54.200741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:55.200983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:56.201562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:57.202412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:58.202494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:39:59.203119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:00.203365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:01.204344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:02.204558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:03.204792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:04.205125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:05.205375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:06.205656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:07.205881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:08.206125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:09.206240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:10.206340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:11.206825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:12.207062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:13.207166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:14.207624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:15.207759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:16.208089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:17.208346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:18.208541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:19.209288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:20.209700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:21.210060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:22.210213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:23.210438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:24.210806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:25.211018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:26.211535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:27.211679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:28.211891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:29.212495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:30.212646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:31.213613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:32.213810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:33.214016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:34.214959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:35.215166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:36.215625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:37.215829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:38.216019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:39.216805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:40.216925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:41.217430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:42.217637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:43.217836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:44.218149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:45.218256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:46.218872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:47.219084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:48.219292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:49.219974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:50.220090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:51.221106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:52.221309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:53.221665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:54.222030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:55.222176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:56.222782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:57.222995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:58.223201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:40:59.224312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:00.224536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:01.224929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:02.225828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:03.226034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:04.226969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:05.227102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:06.228156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:07.228684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:08.228949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:09.229479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:10.229607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:11.229972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:12.230901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:13.231135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:14.231544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:15.231760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:16.232286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:17.232483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:18.232702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:19.233272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:20.233500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:21.234638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:22.234876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:23.235101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:24.235550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:25.235764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:26.236356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:27.236706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:28.236928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:29.237481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:30.237706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:31.238447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:32.238991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:33.239226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:34.239642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:35.239849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:36.240205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:37.240451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:38.240650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:39.241212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:40.241404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:41.242274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:42.242471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:43.242667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:44.242960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:45.243092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:46.243612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:47.243715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:48.243866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:49.244230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:50.244482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:51.244925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:52.245145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:53.245360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:54.245500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:55.245712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:56.246141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:57.246336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:58.246552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:41:59.247143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:00.247385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:01.247926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:02.248091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:03.248711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:04.248873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:05.249003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:06.249496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:07.249694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:08.249884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:09.250216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:10.250446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:11.251337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:12.251555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:13.251763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:14.251905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:15.252702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:16.253346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:17.253555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:18.253688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:19.254235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:20.254663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:21.255407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:22.255610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:23.255817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:24.255886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:25.256091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:26.256434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:27.256569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:28.256803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:29.257485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:30.257761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:31.258331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:32.258531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:33.258739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:34.259044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:35.259245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:36.259866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:37.259995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:38.260203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:39.260235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:40.260374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:41.260829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:42.261462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:43.261680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:44.262351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:45.262573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:46.263620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:47.263838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:48.264047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:49.264701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:50.264914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:51.265264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:52.265474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:53.265605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:54.265911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:55.266044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:56.266094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:57.266251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:58.266453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:42:59.267111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:00.267323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:01.267404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:02.267607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:03.267756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:04.268067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:05.268225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:43:06.124: INFO: ResourceQuota "e2e-rq-status-2zczx" Spec was unchanged and /status reset
  Sep 27 14:43:06.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8750" for this suite. @ 09/27/23 14:43:06.126
• [200.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/27/23 14:43:06.134
  Sep 27 14:43:06.134: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/27/23 14:43:06.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:43:06.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:43:06.146
  STEP: creating @ 09/27/23 14:43:06.148
  STEP: getting @ 09/27/23 14:43:06.163
  STEP: listing in namespace @ 09/27/23 14:43:06.165
  STEP: patching @ 09/27/23 14:43:06.167
  STEP: deleting @ 09/27/23 14:43:06.174
  Sep 27 14:43:06.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6020" for this suite. @ 09/27/23 14:43:06.187
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 09/27/23 14:43:06.197
  Sep 27 14:43:06.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 14:43:06.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:43:06.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:43:06.209
  STEP: Setting up server cert @ 09/27/23 14:43:06.224
  E0927 14:43:06.268533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 14:43:06.912
  STEP: Deploying the webhook pod @ 09/27/23 14:43:07.009
  STEP: Wait for the deployment to be ready @ 09/27/23 14:43:07.02
  Sep 27 14:43:07.024: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 14:43:07.268848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:08.268950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 14:43:09.031
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:43:09.045
  E0927 14:43:09.269826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:43:10.045: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/27/23 14:43:10.05
  STEP: create a namespace for the webhook @ 09/27/23 14:43:10.064
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/27/23 14:43:10.077
  Sep 27 14:43:10.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9210" for this suite. @ 09/27/23 14:43:10.139
  STEP: Destroying namespace "webhook-markers-9337" for this suite. @ 09/27/23 14:43:10.149
  STEP: Destroying namespace "fail-closed-namespace-4601" for this suite. @ 09/27/23 14:43:10.156
• [3.963 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 09/27/23 14:43:10.161
  Sep 27 14:43:10.161: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 14:43:10.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:43:10.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:43:10.173
  STEP: Setting up server cert @ 09/27/23 14:43:10.189
  E0927 14:43:10.270476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 14:43:10.677
  STEP: Deploying the webhook pod @ 09/27/23 14:43:10.681
  STEP: Wait for the deployment to be ready @ 09/27/23 14:43:10.695
  Sep 27 14:43:10.700: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0927 14:43:11.270622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:12.270739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 14:43:12.706
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:43:12.718
  E0927 14:43:13.271798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:43:13.718: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/27/23 14:43:13.722
  E0927 14:43:14.272115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:15.272385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:16.272516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:17.272710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:18.272834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:43:18.738: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/27/23 14:43:18.849
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/27/23 14:43:18.859
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/27/23 14:43:18.868
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/27/23 14:43:18.875
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/27/23 14:43:18.882
  Sep 27 14:43:18.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9164" for this suite. @ 09/27/23 14:43:18.921
  STEP: Destroying namespace "webhook-markers-5561" for this suite. @ 09/27/23 14:43:18.927
• [8.771 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 09/27/23 14:43:18.934
  Sep 27 14:43:18.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/27/23 14:43:18.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:43:18.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:43:18.949
  STEP: create the container to handle the HTTPGet hook request. @ 09/27/23 14:43:18.956
  E0927 14:43:19.273772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:20.274030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/27/23 14:43:20.972
  E0927 14:43:21.274575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:22.274797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/27/23 14:43:22.985
  STEP: delete the pod with lifecycle hook @ 09/27/23 14:43:22.999
  E0927 14:43:23.275227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:24.275712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:43:25.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6402" for this suite. @ 09/27/23 14:43:25.012
• [6.082 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 09/27/23 14:43:25.016
  Sep 27 14:43:25.016: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 14:43:25.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:43:25.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:43:25.031
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/27/23 14:43:25.033
  E0927 14:43:25.276774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:26.276780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:27.277175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:28.277421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:43:29.047
  Sep 27 14:43:29.049: INFO: Trying to get logs from node worker-0 pod pod-28514e5d-d7f7-4a4e-a37a-15678e918d99 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 14:43:29.061
  Sep 27 14:43:29.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1067" for this suite. @ 09/27/23 14:43:29.073
• [4.062 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 09/27/23 14:43:29.079
  Sep 27 14:43:29.079: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 14:43:29.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:43:29.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:43:29.09
  STEP: creating a ServiceAccount @ 09/27/23 14:43:29.092
  STEP: watching for the ServiceAccount to be added @ 09/27/23 14:43:29.097
  STEP: patching the ServiceAccount @ 09/27/23 14:43:29.098
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/27/23 14:43:29.102
  STEP: deleting the ServiceAccount @ 09/27/23 14:43:29.104
  Sep 27 14:43:29.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-504" for this suite. @ 09/27/23 14:43:29.114
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/27/23 14:43:29.119
  Sep 27 14:43:29.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename deployment @ 09/27/23 14:43:29.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:43:29.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:43:29.133
  Sep 27 14:43:29.135: INFO: Creating deployment "test-recreate-deployment"
  Sep 27 14:43:29.144: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Sep 27 14:43:29.190: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0927 14:43:29.277880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:30.278054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:43:31.195: INFO: Waiting deployment "test-recreate-deployment" to complete
  Sep 27 14:43:31.197: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Sep 27 14:43:31.202: INFO: Updating deployment test-recreate-deployment
  Sep 27 14:43:31.202: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Sep 27 14:43:31.268: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2598",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d827f6bb-d4cd-47a7-a2fc-61ffff106104",
      ResourceVersion: (string) (len=5) "11261",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422609,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422609,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 14:43:31.273: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2598",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07500b11-2681-4291-b3af-432954463b35",
      ResourceVersion: (string) (len=5) "11258",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d827f6bb-d4cd-47a7-a2fc-61ffff106104",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 38 32 37 66 36  62 62 2d 64 34 63 64 2d  |\"d827f6bb-d4cd-|
              00000120  34 37 61 37 2d 61 32 66  63 2d 36 31 66 66 66 66  |47a7-a2fc-61ffff|
              00000130  31 30 36 31 30 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |106104\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:43:31.274: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Sep 27 14:43:31.274: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2598",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "367dc480-4f71-4f47-be84-e1e40b927036",
      ResourceVersion: (string) (len=5) "11248",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422609,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d827f6bb-d4cd-47a7-a2fc-61ffff106104",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 38 32 37 66 36  62 62 2d 64 34 63 64 2d  |\"d827f6bb-d4cd-|
              00000120  34 37 61 37 2d 61 32 66  63 2d 36 31 66 66 66 66  |47a7-a2fc-61ffff|
              00000130  31 30 36 31 30 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |106104\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  E0927 14:43:31.278373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:43:31.279: INFO: Pod "test-recreate-deployment-76fb77d45-576p8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-576p8",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-2598",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7601cfd1-5584-4dbf-aa6a-5b37f0cd64a3",
      ResourceVersion: (string) (len=5) "11259",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "07500b11-2681-4291-b3af-432954463b35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  35 30 30 62 31 31 2d 32  |d\":\"07500b11-2|
              00000090  36 38 31 2d 34 32 39 31  2d 62 33 61 66 2d 34 33  |681-4291-b3af-43|
              000000a0  32 39 35 34 34 36 33 62  33 35 5c 22 7d 22 3a 7b  |2954463b35\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ltxc6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ltxc6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:43:31.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2598" for this suite. @ 09/27/23 14:43:31.283
• [2.168 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/27/23 14:43:31.288
  Sep 27 14:43:31.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-runtime @ 09/27/23 14:43:31.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:43:31.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:43:31.301
  STEP: create the container @ 09/27/23 14:43:31.303
  W0927 14:43:31.324451      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/27/23 14:43:31.324
  E0927 14:43:32.279372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:33.279751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:34.283025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/27/23 14:43:34.336
  STEP: the container should be terminated @ 09/27/23 14:43:34.338
  STEP: the termination message should be set @ 09/27/23 14:43:34.338
  Sep 27 14:43:34.338: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/27/23 14:43:34.338
  Sep 27 14:43:34.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9207" for this suite. @ 09/27/23 14:43:34.35
• [3.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/27/23 14:43:34.361
  Sep 27 14:43:34.361: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename hostport @ 09/27/23 14:43:34.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:43:34.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:43:34.374
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/27/23 14:43:34.378
  E0927 14:43:35.283758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:36.284740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.0.53.207 on the node which pod1 resides and expect scheduled @ 09/27/23 14:43:36.392
  E0927 14:43:37.285278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:38.285505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:39.286454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:40.286697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:41.287226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:42.287883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:43.288776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:44.288945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:45.289496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:46.289762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:47.290572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:48.290829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.0.53.207 but use UDP protocol on the node which pod2 resides @ 09/27/23 14:43:48.419
  E0927 14:43:49.291236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:50.291473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:51.291658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:52.291867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/27/23 14:43:52.442
  Sep 27 14:43:52.442: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.0.53.207 http://127.0.0.1:54323/hostname] Namespace:hostport-4959 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 14:43:52.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:43:52.443: INFO: ExecWithOptions: Clientset creation
  Sep 27 14:43:52.443: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4959/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.0.53.207+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.53.207, port: 54323 @ 09/27/23 14:43:52.526
  Sep 27 14:43:52.526: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.0.53.207:54323/hostname] Namespace:hostport-4959 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 14:43:52.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:43:52.527: INFO: ExecWithOptions: Clientset creation
  Sep 27 14:43:52.527: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4959/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.0.53.207%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.53.207, port: 54323 UDP @ 09/27/23 14:43:52.617
  Sep 27 14:43:52.617: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.0.53.207 54323] Namespace:hostport-4959 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 14:43:52.617: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:43:52.618: INFO: ExecWithOptions: Clientset creation
  Sep 27 14:43:52.618: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4959/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.0.53.207+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0927 14:43:53.292417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:54.292837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:55.292996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:56.293275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:57.293397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:43:57.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4959" for this suite. @ 09/27/23 14:43:57.714
• [23.359 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 09/27/23 14:43:57.721
  Sep 27 14:43:57.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pod-network-test @ 09/27/23 14:43:57.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:43:57.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:43:57.733
  STEP: Performing setup for networking test in namespace pod-network-test-1881 @ 09/27/23 14:43:57.736
  STEP: creating a selector @ 09/27/23 14:43:57.736
  STEP: Creating the service pods in kubernetes @ 09/27/23 14:43:57.736
  Sep 27 14:43:57.736: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0927 14:43:58.294238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:43:59.294891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:00.295169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:01.295268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:02.295673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:03.295772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:04.296060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:05.296328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:06.297210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:07.297416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:08.298175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:09.298592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/27/23 14:44:09.781
  E0927 14:44:10.298935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:11.299193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:11.791: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Sep 27 14:44:11.791: INFO: Breadth first check of 10.244.1.79 on host 10.0.53.207...
  Sep 27 14:44:11.793: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.115:9080/dial?request=hostname&protocol=udp&host=10.244.1.79&port=8081&tries=1'] Namespace:pod-network-test-1881 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 14:44:11.793: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:44:11.794: INFO: ExecWithOptions: Clientset creation
  Sep 27 14:44:11.794: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1881/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.115%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.79%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 27 14:44:11.893: INFO: Waiting for responses: map[]
  Sep 27 14:44:11.893: INFO: reached 10.244.1.79 after 0/1 tries
  Sep 27 14:44:11.893: INFO: Breadth first check of 10.244.0.114 on host 10.0.51.64...
  Sep 27 14:44:11.896: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.115:9080/dial?request=hostname&protocol=udp&host=10.244.0.114&port=8081&tries=1'] Namespace:pod-network-test-1881 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 14:44:11.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:44:11.896: INFO: ExecWithOptions: Clientset creation
  Sep 27 14:44:11.896: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1881/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.115%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.114%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 27 14:44:11.992: INFO: Waiting for responses: map[]
  Sep 27 14:44:11.992: INFO: reached 10.244.0.114 after 0/1 tries
  Sep 27 14:44:11.992: INFO: Going to retry 0 out of 2 pods....
  Sep 27 14:44:11.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1881" for this suite. @ 09/27/23 14:44:11.995
• [14.280 seconds]
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 09/27/23 14:44:12.001
  Sep 27 14:44:12.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename podtemplate @ 09/27/23 14:44:12.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:44:12.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:44:12.014
  STEP: Create set of pod templates @ 09/27/23 14:44:12.016
  Sep 27 14:44:12.021: INFO: created test-podtemplate-1
  Sep 27 14:44:12.024: INFO: created test-podtemplate-2
  Sep 27 14:44:12.027: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/27/23 14:44:12.027
  STEP: delete collection of pod templates @ 09/27/23 14:44:12.029
  Sep 27 14:44:12.029: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/27/23 14:44:12.04
  Sep 27 14:44:12.040: INFO: requesting list of pod templates to confirm quantity
  Sep 27 14:44:12.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3650" for this suite. @ 09/27/23 14:44:12.045
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/27/23 14:44:12.051
  Sep 27 14:44:12.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 14:44:12.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:44:12.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:44:12.064
  STEP: Creating pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678 @ 09/27/23 14:44:12.066
  E0927 14:44:12.299289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:13.299530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 14:44:14.087
  Sep 27 14:44:14.089: INFO: Initial restart count of pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 is 0
  Sep 27 14:44:14.091: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:14.300602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:15.300903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:16.093: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:16.301985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:17.302242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:18.096: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:18.302809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:19.303385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:20.098: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:20.303789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:21.303738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:22.100: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:22.304145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:23.304514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:24.105: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:24.305611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:25.305746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:26.107: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:26.306612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:27.306728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:28.110: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:28.307375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:29.308163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:30.111: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:30.308204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:31.308626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:32.114: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:32.309401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:33.309611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:34.117: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:34.310568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:35.310983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:36.119: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:36.311091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:37.311262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:38.122: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:38.311818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:39.312327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:40.125: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:40.312787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:41.313000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:42.127: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:42.313069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:43.313309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:44.131: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:44.313459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:45.313678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:46.133: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:46.314205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:47.314425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:48.136: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:48.315024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:49.315616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:50.139: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:50.316135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:51.316346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:52.142: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:52.316726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:53.316947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:54.146: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:54.317422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:55.317636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:56.149: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:56.318266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:57.318471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:44:58.151: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:44:58.319020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:44:59.319452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:00.154: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:45:00.320058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:01.320265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:02.157: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  E0927 14:45:02.320955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:03.321158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:04.161: INFO: Get pod busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 in namespace container-probe-6678
  Sep 27 14:45:04.161: INFO: Restart count of pod container-probe-6678/busybox-20017ff9-1cb7-4ccc-86de-dc34a06f0858 is now 1 (50.071670311s elapsed)
  Sep 27 14:45:04.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:45:04.163
  STEP: Destroying namespace "container-probe-6678" for this suite. @ 09/27/23 14:45:04.171
• [52.127 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/27/23 14:45:04.178
  Sep 27 14:45:04.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:45:04.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:04.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:04.195
  STEP: Creating projection with secret that has name projected-secret-test-c7606807-ab3e-440e-b5ae-a2e33427a4a0 @ 09/27/23 14:45:04.197
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:45:04.202
  E0927 14:45:04.322091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:05.322459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:06.323147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:07.323385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:45:08.215
  Sep 27 14:45:08.217: INFO: Trying to get logs from node worker-1 pod pod-projected-secrets-7ad7616f-a572-4f69-8d96-3387e1334d31 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:45:08.229
  Sep 27 14:45:08.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8675" for this suite. @ 09/27/23 14:45:08.244
• [4.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 09/27/23 14:45:08.248
  Sep 27 14:45:08.248: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 14:45:08.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:08.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:08.26
  STEP: creating service in namespace services-1116 @ 09/27/23 14:45:08.262
  STEP: creating service affinity-clusterip in namespace services-1116 @ 09/27/23 14:45:08.262
  STEP: creating replication controller affinity-clusterip in namespace services-1116 @ 09/27/23 14:45:08.276
  I0927 14:45:08.281402      22 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-1116, replica count: 3
  E0927 14:45:08.323740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:09.324360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:10.324912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:11.325162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0927 14:45:11.332442      22 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 14:45:11.336: INFO: Creating new exec pod
  E0927 14:45:12.325502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:13.325837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:14.326225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:14.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-1116 exec execpod-affinityc5wtz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Sep 27 14:45:14.486: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Sep 27 14:45:14.486: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:45:14.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-1116 exec execpod-affinityc5wtz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.59.180 80'
  Sep 27 14:45:14.639: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.59.180 80\nConnection to 10.107.59.180 80 port [tcp/http] succeeded!\n"
  Sep 27 14:45:14.639: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:45:14.640: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-1116 exec execpod-affinityc5wtz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.107.59.180:80/ ; done'
  Sep 27 14:45:14.846: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.107.59.180:80/\n"
  Sep 27 14:45:14.846: INFO: stdout: "\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx\naffinity-clusterip-thstx"
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Received response from host: affinity-clusterip-thstx
  Sep 27 14:45:14.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 14:45:14.849: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1116, will wait for the garbage collector to delete the pods @ 09/27/23 14:45:14.86
  Sep 27 14:45:14.916: INFO: Deleting ReplicationController affinity-clusterip took: 3.94795ms
  Sep 27 14:45:15.017: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.724657ms
  E0927 14:45:15.326769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:16.326815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:17.327441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-1116" for this suite. @ 09/27/23 14:45:17.733
• [9.489 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 09/27/23 14:45:17.74
  Sep 27 14:45:17.740: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 14:45:17.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:17.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:17.753
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/27/23 14:45:17.756
  E0927 14:45:18.328356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:19.329254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:45:19.769
  Sep 27 14:45:19.771: INFO: Trying to get logs from node worker-1 pod pod-de63b279-6fcb-42dd-99e6-41c2b0f560f5 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 14:45:19.776
  Sep 27 14:45:19.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2429" for this suite. @ 09/27/23 14:45:19.795
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/27/23 14:45:19.806
  Sep 27 14:45:19.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:45:19.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:19.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:19.817
  STEP: Creating configMap with name projected-configmap-test-volume-map-7959a241-6902-428c-ba88-8c5ee136d6a8 @ 09/27/23 14:45:19.819
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:45:19.823
  E0927 14:45:20.330164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:21.330461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:45:21.836
  Sep 27 14:45:21.838: INFO: Trying to get logs from node worker-1 pod pod-projected-configmaps-de61a33f-c053-4d90-b53b-68a2334dfd7b container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:45:21.842
  Sep 27 14:45:21.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2389" for this suite. @ 09/27/23 14:45:21.877
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/27/23 14:45:21.883
  Sep 27 14:45:21.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename deployment @ 09/27/23 14:45:21.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:21.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:21.894
  STEP: creating a Deployment @ 09/27/23 14:45:21.899
  STEP: waiting for Deployment to be created @ 09/27/23 14:45:21.903
  STEP: waiting for all Replicas to be Ready @ 09/27/23 14:45:21.904
  Sep 27 14:45:21.905: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 14:45:21.905: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 14:45:21.915: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 14:45:21.915: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 14:45:21.932: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 14:45:21.932: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 14:45:21.981: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 14:45:21.981: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0927 14:45:22.331110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:22.633: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep 27 14:45:22.633: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0927 14:45:23.331154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:23.528: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/27/23 14:45:23.528
  Sep 27 14:45:23.541: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/27/23 14:45:23.541
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 0
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:23.543: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:23.556: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:23.556: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:23.591: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:23.591: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:23.602: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  Sep 27 14:45:23.602: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  Sep 27 14:45:23.617: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  Sep 27 14:45:23.617: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  E0927 14:45:24.332198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:24.650: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:24.650: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:24.673: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  STEP: listing Deployments @ 09/27/23 14:45:24.673
  Sep 27 14:45:24.675: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/27/23 14:45:24.675
  Sep 27 14:45:24.685: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/27/23 14:45:24.685
  Sep 27 14:45:24.689: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 14:45:24.698: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 14:45:24.719: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 14:45:24.744: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 14:45:24.751: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0927 14:45:25.332603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:25.540: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 14:45:25.665: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 14:45:25.702: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 14:45:25.711: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0927 14:45:26.333529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:26.570: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/27/23 14:45:26.592
  STEP: fetching the DeploymentStatus @ 09/27/23 14:45:26.601
  Sep 27 14:45:26.605: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  Sep 27 14:45:26.605: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  Sep 27 14:45:26.605: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  Sep 27 14:45:26.605: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  Sep 27 14:45:26.605: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 1
  Sep 27 14:45:26.606: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:26.606: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 3
  Sep 27 14:45:26.606: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:26.606: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 2
  Sep 27 14:45:26.606: INFO: observed Deployment test-deployment in namespace deployment-9544 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/27/23 14:45:26.607
  Sep 27 14:45:26.615: INFO: observed event type MODIFIED
  Sep 27 14:45:26.615: INFO: observed event type MODIFIED
  Sep 27 14:45:26.615: INFO: observed event type MODIFIED
  Sep 27 14:45:26.615: INFO: observed event type MODIFIED
  Sep 27 14:45:26.616: INFO: observed event type MODIFIED
  Sep 27 14:45:26.616: INFO: observed event type MODIFIED
  Sep 27 14:45:26.616: INFO: observed event type MODIFIED
  Sep 27 14:45:26.616: INFO: observed event type MODIFIED
  Sep 27 14:45:26.616: INFO: observed event type MODIFIED
  Sep 27 14:45:26.616: INFO: observed event type MODIFIED
  Sep 27 14:45:26.616: INFO: observed event type MODIFIED
  Sep 27 14:45:26.616: INFO: observed event type MODIFIED
  Sep 27 14:45:26.616: INFO: observed event type MODIFIED
  Sep 27 14:45:26.618: INFO: Log out all the ReplicaSets if there is no deployment created
  Sep 27 14:45:26.621: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91a77ea5-fcd2-43ef-a30f-1d0726ff7975",
      ResourceVersion: (string) (len=5) "12046",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422723,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "10913807-b6ff-487f-9d09-54e680617ddf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 30 39 31  33 38 30 37 2d 62 36 66  |":\"10913807-b6f|
              00000130  66 2d 34 38 37 66 2d 39  64 30 39 2d 35 34 65 36  |f-487f-9d09-54e6|
              00000140  38 30 36 31 37 64 64 66  5c 22 7d 22 3a 7b 7d 7d  |80617ddf\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 27 14:45:26.625: INFO: pod: "test-deployment-64fd565c98-2rhxn":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-2rhxn",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-9544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1bd8726-5ee8-41b9-b925-c26a23e185bb",
      ResourceVersion: (string) (len=5) "12042",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422724,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422728,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "91a77ea5-fcd2-43ef-a30f-1d0726ff7975",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 31 61 37 37 65 61 35  |uid\":\"91a77ea5|
              000000a0  2d 66 63 64 32 2d 34 33  65 66 2d 61 33 30 66 2d  |-fcd2-43ef-a30f-|
              000000b0  31 64 30 37 32 36 66 66  37 39 37 35 5c 22 7d 22  |1d0726ff7975\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 38 32 5c 22 7d 22 3a  |10.244.1.82\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vmhwt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vmhwt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422724,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831422725,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://f7dde1e573c6221531cec2359ac65a6fc01c63d3051dcc3d2027145a714f6676",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 27 14:45:26.628: INFO: pod: "test-deployment-64fd565c98-g5fsg":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-g5fsg",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-9544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f104a9c1-0e76-4575-ac46-c173c902a823",
      ResourceVersion: (string) (len=5) "12029",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422723,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422727,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "91a77ea5-fcd2-43ef-a30f-1d0726ff7975",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 31 61 37 37 65 61 35  |uid\":\"91a77ea5|
              000000a0  2d 66 63 64 32 2d 34 33  65 66 2d 61 33 30 66 2d  |-fcd2-43ef-a30f-|
              000000b0  31 64 30 37 32 36 66 66  37 39 37 35 5c 22 7d 22  |1d0726ff7975\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=479) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              00000130  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              00000140  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000160  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000170  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000180  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              00000190  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001a0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001b0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001c0  22 66 3a 70 68 61 73 65  22 3a 7b 7d 2c 22 66 3a  |"f:phase":{},"f:|
              000001d0  73 74 61 72 74 54 69 6d  65 22 3a 7b 7d 7d 7d     |startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ll9m9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ll9m9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422723,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422723,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831422724,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831422725,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://748b766bf507be924c88651969470007c3df5afedb05bb8a50089187dd8d7148"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://748b766bf507be924c88651969470007c3df5afedb05bb8a50089187dd8d7148",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 27 14:45:26.631: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a9c1622-c8e4-44cf-8ad6-dcc385bdef92",
      ResourceVersion: (string) (len=5) "11960",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422721,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "10913807-b6ff-487f-9d09-54e680617ddf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 30 39 31  33 38 30 37 2d 62 36 66  |":\"10913807-b6f|
              00000130  66 2d 34 38 37 66 2d 39  64 30 39 2d 35 34 65 36  |f-487f-9d09-54e6|
              00000140  38 30 36 31 37 64 64 66  5c 22 7d 22 3a 7b 7d 7d  |80617ddf\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 27 14:45:26.636: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d3a3053-0e78-40bc-9509-0e4300d072c0",
      ResourceVersion: (string) (len=5) "12036",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422724,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "10913807-b6ff-487f-9d09-54e680617ddf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 30 39 31  33 38 30 37 2d 62 36 66  |":\"10913807-b6f|
              00000130  66 2d 34 38 37 66 2d 39  64 30 39 2d 35 34 65 36  |f-487f-9d09-54e6|
              00000140  38 30 36 31 37 64 64 66  5c 22 7d 22 3a 7b 7d 7d  |80617ddf\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 27 14:45:26.641: INFO: pod: "test-deployment-79ff746c4-fssll":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-fssll",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd86e9cd-dd2d-4fc9-a1e2-becc18915020",
      ResourceVersion: (string) (len=5) "12055",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422724,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422727,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "5d3a3053-0e78-40bc-9509-0e4300d072c0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 64 33 61 33 30 35 33  |uid\":\"5d3a3053|
              000000a0  2d 30 65 37 38 2d 34 30  62 63 2d 39 35 30 39 2d  |-0e78-40bc-9509-|
              000000b0  30 65 34 33 30 30 64 30  37 32 63 30 5c 22 7d 22  |0e4300d072c0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 30  2e 31 32 35 5c 22 7d 22  |10.244.0.125\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2jlr9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2jlr9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422724,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.0.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422724,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831422725,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3109932526d7ceae4eff282e6e849f7088e8701e9690d6110c4b66133baf0d33",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 27 14:45:26.644: INFO: pod: "test-deployment-79ff746c4-mjph5":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-mjph5",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9544",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "677b58aa-2271-46a2-8297-dd77fb6de103",
      ResourceVersion: (string) (len=5) "12054",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422725,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422727,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "5d3a3053-0e78-40bc-9509-0e4300d072c0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 64 33 61 33 30 35 33  |uid\":\"5d3a3053|
              000000a0  2d 30 65 37 38 2d 34 30  62 63 2d 39 35 30 39 2d  |-0e78-40bc-9509-|
              000000b0  30 65 34 33 30 30 64 30  37 32 63 30 5c 22 7d 22  |0e4300d072c0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 38 33 5c 22 7d 22 3a  |10.244.1.83\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qqqrd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qqqrd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831422725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831422725,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831422726,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://35a9758ef4bf7e6c735bc070f57a240769851bfbcbda9ab23bcf991f02d4d37a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 27 14:45:26.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9544" for this suite. @ 09/27/23 14:45:26.649
• [4.776 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 09/27/23 14:45:26.66
  Sep 27 14:45:26.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 14:45:26.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:26.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:26.674
  STEP: Creating configMap configmap-7548/configmap-test-17f0a63e-b65c-4986-b061-126522a5e9bf @ 09/27/23 14:45:26.676
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:45:26.68
  E0927 14:45:27.334363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:28.334483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:29.334779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:30.335021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:45:30.694
  Sep 27 14:45:30.696: INFO: Trying to get logs from node worker-1 pod pod-configmaps-de06f28a-b88b-49d0-a278-2cc83864ec1f container env-test: <nil>
  STEP: delete the pod @ 09/27/23 14:45:30.701
  Sep 27 14:45:30.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7548" for this suite. @ 09/27/23 14:45:30.715
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/27/23 14:45:30.723
  Sep 27 14:45:30.723: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:45:30.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:30.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:30.739
  STEP: Creating projection with secret that has name projected-secret-test-map-8240291b-5583-4023-811e-aec7bbdc7f7c @ 09/27/23 14:45:30.741
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:45:30.744
  E0927 14:45:31.335150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:32.335393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:33.335640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:34.335976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:45:34.76
  Sep 27 14:45:34.761: INFO: Trying to get logs from node worker-1 pod pod-projected-secrets-745f38a4-aaa4-4aa8-9db5-3727655fa0aa container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:45:34.767
  Sep 27 14:45:34.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1199" for this suite. @ 09/27/23 14:45:34.783
• [4.067 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 09/27/23 14:45:34.791
  Sep 27 14:45:34.791: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/27/23 14:45:34.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:34.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:34.805
  Sep 27 14:45:34.807: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 14:45:35.336494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:35.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1580" for this suite. @ 09/27/23 14:45:35.364
• [0.587 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/27/23 14:45:35.385
  Sep 27 14:45:35.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 14:45:35.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:35.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:35.402
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/27/23 14:45:35.418
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 14:45:35.423
  Sep 27 14:45:35.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 14:45:35.433: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 14:45:36.336693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:36.438: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 14:45:36.438: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 14:45:37.337350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:37.439: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 14:45:37.439: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/27/23 14:45:37.44
  Sep 27 14:45:37.464: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 14:45:37.464: INFO: Node worker-1 is running 0 daemon pod, expected 1
  E0927 14:45:38.338380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:38.469: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 14:45:38.469: INFO: Node worker-1 is running 0 daemon pod, expected 1
  E0927 14:45:39.338647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:39.469: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 14:45:39.469: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/27/23 14:45:39.469
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 14:45:39.472
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9255, will wait for the garbage collector to delete the pods @ 09/27/23 14:45:39.472
  Sep 27 14:45:39.528: INFO: Deleting DaemonSet.extensions daemon-set took: 4.049931ms
  Sep 27 14:45:39.629: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.307006ms
  E0927 14:45:40.339451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:40.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 14:45:40.731: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 14:45:40.736: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12290"},"items":null}

  Sep 27 14:45:40.737: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12290"},"items":null}

  Sep 27 14:45:40.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9255" for this suite. @ 09/27/23 14:45:40.745
• [5.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/27/23 14:45:40.753
  Sep 27 14:45:40.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 14:45:40.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:40.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:40.767
  STEP: Creating pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726 @ 09/27/23 14:45:40.77
  E0927 14:45:41.339647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:42.339937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 14:45:42.78
  Sep 27 14:45:42.782: INFO: Initial restart count of pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 is 0
  Sep 27 14:45:42.783: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:45:43.340495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:44.340882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:44.789: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:45:45.341347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:46.342025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:46.793: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:45:47.342837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:48.343061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:48.795: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:45:49.343993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:50.344156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:50.798: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:45:51.344570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:52.344793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:52.801: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:45:53.345175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:54.345659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:54.805: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:45:55.346008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:56.346236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:56.808: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:45:57.346403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:45:58.346644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:45:58.810: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:45:59.347747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:00.347876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:00.813: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:01.348724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:02.348962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:02.817: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  Sep 27 14:46:02.817: INFO: Restart count of pod container-probe-3726/liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 is now 1 (20.034969932s elapsed)
  E0927 14:46:03.349893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:04.350236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:04.820: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:05.350465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:06.350669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:06.823: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:07.351034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:08.351272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:08.826: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:09.352214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:10.352315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:10.829: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:11.353147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:12.353377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:12.832: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:13.354265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:14.354652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:14.836: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:15.354795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:16.355053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:16.838: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:17.355561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:18.355762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:18.841: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:19.356726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:20.357190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:20.845: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:21.357719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:22.357828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:22.847: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  Sep 27 14:46:22.847: INFO: Restart count of pod container-probe-3726/liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 is now 2 (40.065566946s elapsed)
  E0927 14:46:23.358488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:24.359016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:24.851: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:25.359105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:26.359292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:26.854: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:27.360095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:28.360263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:28.857: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:29.361142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:30.361357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:30.860: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:31.362204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:32.362432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:32.863: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:33.363265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:34.363960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:34.866: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:35.364164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:36.364373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:36.869: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:37.364506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:38.364622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:38.871: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:39.365672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:40.365821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:40.874: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:41.365927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:42.366131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:42.876: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  Sep 27 14:46:42.876: INFO: Restart count of pod container-probe-3726/liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 is now 3 (1m0.094462574s elapsed)
  E0927 14:46:43.366336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:44.366692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:44.880: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:45.366757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:46.366976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:46.882: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:47.367148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:48.367345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:48.885: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:49.368396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:50.368597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:50.888: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:51.369129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:52.369347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:52.891: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:53.369717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:54.370025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:54.894: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:55.371036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:56.371715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:56.897: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:57.372111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:46:58.372331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:46:58.900: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:46:59.373386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:00.373612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:00.903: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:01.374059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:02.374289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:02.906: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  Sep 27 14:47:02.906: INFO: Restart count of pod container-probe-3726/liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 is now 4 (1m20.124077956s elapsed)
  E0927 14:47:03.374741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:04.375222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:04.909: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:05.375264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:06.375468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:06.912: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:07.376132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:08.376344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:08.915: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:09.377335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:10.377562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:10.918: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:11.377730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:12.377954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:12.921: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:13.378566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:14.378950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:14.924: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:15.379222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:16.379430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:16.927: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:17.380207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:18.380409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:18.930: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:19.381224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:20.381337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:20.933: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:21.381909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:22.382173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:22.935: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:23.382293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:24.382701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:24.939: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:25.383728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:26.384719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:26.941: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:27.384843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:28.385084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:28.944: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:29.385824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:30.386059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:30.947: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:31.386682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:32.386895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:32.949: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:33.387282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:34.387417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:34.952: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:35.388430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:36.388645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:36.955: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:37.388982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:38.389181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:38.958: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:39.389887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:40.390137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:40.960: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:41.390274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:42.390472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:42.963: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:43.390768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:44.391104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:44.966: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:45.392088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:46.392298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:46.969: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:47.392692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:48.392899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:48.972: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:49.393751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:50.393961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:50.974: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:51.394371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:52.394568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:52.977: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:53.394694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:54.395008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:54.980: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:55.395828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:56.396755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:56.982: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:57.397339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:47:58.397577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:47:58.985: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:47:59.398191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:00.398403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:00.988: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:48:01.398700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:02.398904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:02.990: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:48:03.399083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:04.399390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:04.993: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:48:05.400000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:06.400153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:06.995: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  E0927 14:48:07.400291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:08.400720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:08.998: INFO: Get pod liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 in namespace container-probe-3726
  Sep 27 14:48:08.998: INFO: Restart count of pod container-probe-3726/liveness-e8d00a56-feee-4454-bbdc-74ffe5190976 is now 5 (2m26.215949121s elapsed)
  Sep 27 14:48:08.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:48:09
  STEP: Destroying namespace "container-probe-3726" for this suite. @ 09/27/23 14:48:09.011
• [148.262 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 09/27/23 14:48:09.016
  Sep 27 14:48:09.016: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sysctl @ 09/27/23 14:48:09.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:48:09.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:48:09.027
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/27/23 14:48:09.03
  Sep 27 14:48:09.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4169" for this suite. @ 09/27/23 14:48:09.035
• [0.024 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 09/27/23 14:48:09.04
  Sep 27 14:48:09.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename dns @ 09/27/23 14:48:09.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:48:09.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:48:09.051
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/27/23 14:48:09.053
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/27/23 14:48:09.053
  STEP: creating a pod to probe DNS @ 09/27/23 14:48:09.053
  STEP: submitting the pod to kubernetes @ 09/27/23 14:48:09.053
  E0927 14:48:09.401515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:10.401726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:11.401881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:12.402431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:13.402950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:14.403287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:15.403444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:16.403771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/27/23 14:48:17.076
  STEP: looking for the results for each expected name from probers @ 09/27/23 14:48:17.077
  Sep 27 14:48:17.089: INFO: DNS probes using dns-5040/dns-test-2262d8e4-feb3-46dd-a68f-3b162051f5a1 succeeded

  Sep 27 14:48:17.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:48:17.092
  STEP: Destroying namespace "dns-5040" for this suite. @ 09/27/23 14:48:17.099
• [8.063 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 09/27/23 14:48:17.103
  Sep 27 14:48:17.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 14:48:17.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:48:17.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:48:17.117
  Sep 27 14:48:17.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 14:48:17.404437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:18.405238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:19.405460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0927 14:48:19.656188      22 warnings.go:70] unknown field "alpha"
  W0927 14:48:19.656212      22 warnings.go:70] unknown field "beta"
  W0927 14:48:19.656218      22 warnings.go:70] unknown field "delta"
  W0927 14:48:19.656223      22 warnings.go:70] unknown field "epsilon"
  W0927 14:48:19.656229      22 warnings.go:70] unknown field "gamma"
  Sep 27 14:48:20.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2116" for this suite. @ 09/27/23 14:48:20.183
• [3.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/27/23 14:48:20.189
  Sep 27 14:48:20.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 14:48:20.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:48:20.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:48:20.2
  Sep 27 14:48:20.211: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 14:48:20.214
  Sep 27 14:48:20.221: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 14:48:20.221: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 14:48:20.405899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:21.225: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 14:48:21.225: INFO: Node worker-1 is running 0 daemon pod, expected 1
  E0927 14:48:21.406174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:22.226: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 14:48:22.226: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/27/23 14:48:22.233
  STEP: Check that daemon pods images are updated. @ 09/27/23 14:48:22.248
  Sep 27 14:48:22.250: INFO: Wrong image for pod: daemon-set-4k6hx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 27 14:48:22.250: INFO: Wrong image for pod: daemon-set-wdwk9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0927 14:48:22.406788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:23.256: INFO: Wrong image for pod: daemon-set-4k6hx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0927 14:48:23.407419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:24.408416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:25.255: INFO: Pod daemon-set-45zrb is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/27/23 14:48:25.257
  Sep 27 14:48:25.262: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 14:48:25.262: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 14:48:25.408726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:26.266: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 14:48:26.266: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 14:48:26.275
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2267, will wait for the garbage collector to delete the pods @ 09/27/23 14:48:26.275
  Sep 27 14:48:26.332: INFO: Deleting DaemonSet.extensions daemon-set took: 4.070026ms
  E0927 14:48:26.409721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:26.432: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.890461ms
  E0927 14:48:27.410440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:28.410553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:28.935: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 14:48:28.935: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 14:48:28.937: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12847"},"items":null}

  Sep 27 14:48:28.939: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12847"},"items":null}

  Sep 27 14:48:28.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2267" for this suite. @ 09/27/23 14:48:28.946
• [8.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/27/23 14:48:28.955
  Sep 27 14:48:28.955: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:48:28.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:48:28.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:48:28.966
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 14:48:28.968
  E0927 14:48:29.411191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:30.411574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:31.415005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:32.415271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:48:32.982
  Sep 27 14:48:32.983: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-e26fbcd1-d98e-4f55-af75-5e85a61d9256 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 14:48:32.997
  Sep 27 14:48:33.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3457" for this suite. @ 09/27/23 14:48:33.021
• [4.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/27/23 14:48:33.027
  Sep 27 14:48:33.027: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 14:48:33.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:48:33.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:48:33.047
  STEP: Creating pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601 @ 09/27/23 14:48:33.05
  E0927 14:48:33.415909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:34.416537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 14:48:35.064
  Sep 27 14:48:35.066: INFO: Initial restart count of pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 is 0
  Sep 27 14:48:35.067: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:35.417561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:36.417865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:37.071: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:37.417982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:38.418214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:39.073: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:39.418293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:40.418503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:41.076: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:41.419159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:42.419348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:43.079: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:43.419627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:44.419981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:45.081: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:45.420231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:46.420471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:47.085: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:47.421548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:48.421777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:49.088: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:49.421869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:50.422925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:51.091: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:51.423636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:52.423896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:53.093: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:53.424431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:54.424891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:55.097: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:55.425693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:56.425893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:57.100: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:57.426492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:48:58.426731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:48:59.102: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:48:59.427341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:00.428092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:01.105: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:01.428747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:02.428848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:03.107: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:03.429450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:04.429886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:05.110: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:05.430418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:06.430523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:07.114: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:07.430587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:08.430778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:09.117: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:09.430885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:10.431294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:11.120: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:11.431876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:12.432712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:13.122: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:13.432821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:14.433028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:15.124: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:15.433249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:16.433458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:17.128: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:17.433493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:18.433732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:19.131: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:19.434624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:20.434728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:21.133: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:21.435352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:22.435635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:23.136: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:23.436307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:24.436706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:25.139: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:25.437475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:26.437677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:27.142: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:27.438619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:28.438843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:29.145: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:29.439801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:30.440715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:31.147: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:31.441234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:32.441435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:33.150: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:33.442148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:34.442541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:35.153: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:35.443210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:36.443407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:37.156: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:37.443983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:38.444217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:39.159: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:39.444732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:40.444940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:41.162: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:41.445493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:42.445696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:43.164: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:43.446230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:44.446660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:45.167: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:45.447322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:46.447578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:47.170: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:47.448157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:48.448411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:49.173: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:49.449238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:50.449506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:51.176: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:51.450078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:52.450311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:53.178: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:53.451280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:54.451727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:55.181: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:55.452781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:56.453045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:57.184: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:57.453138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:49:58.453366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:49:59.187: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:49:59.454438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:00.454653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:01.191: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:01.455518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:02.455753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:03.193: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:03.455845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:04.456515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:05.196: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:05.457147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:06.457367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:07.200: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:07.458424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:08.458647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:09.203: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:09.458705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:10.458862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:11.206: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:11.459613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:12.459631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:13.209: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:13.460383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:14.460794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:15.211: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:15.461403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:16.461498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:17.214: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:17.462082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:18.462447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:19.216: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:19.463011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:20.463385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:21.219: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:21.463638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:22.463747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:23.221: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:23.464010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:24.464323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:25.224: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:25.464463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:26.464591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:27.227: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:27.464729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:28.464950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:29.230: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:29.465897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:30.466679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:31.233: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:31.467615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:32.467644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:33.236: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:33.468534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:34.468906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:35.239: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:35.469531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:36.469737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:37.242: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:37.470122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:38.470618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:39.245: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:39.471617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:40.471702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:41.247: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:41.472304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:42.472685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:43.251: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:43.473393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:44.473774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:45.253: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:45.473999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:46.474198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:47.256: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:47.475040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:48.475228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:49.259: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:49.475873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:50.476692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:51.262: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:51.477270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:52.477473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:53.265: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:53.478034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:54.478140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:55.268: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:55.478726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:56.478851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:57.271: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:57.479829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:50:58.480690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:50:59.274: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:50:59.481504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:00.481630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:01.277: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:01.482411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:02.482603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:03.280: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:03.483357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:04.483772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:05.283: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:05.484341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:06.484542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:07.285: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:07.485292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:08.485492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:09.288: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:09.485949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:10.486116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:11.291: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:11.486360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:12.486561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:13.293: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:13.487109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:14.487475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:15.296: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:15.488143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:16.488615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:17.300: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:17.488779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:18.488984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:19.303: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:19.489752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:20.489956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:21.306: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:21.490754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:22.490869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:23.309: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:23.491555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:24.491638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:25.311: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:25.492308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:26.492511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:27.315: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:27.492621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:28.492822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:29.318: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:29.493757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:30.493917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:31.321: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:31.494532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:32.494724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:33.324: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:33.495659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:34.496039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:35.327: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:35.496503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:36.496717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:37.330: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:37.497787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:38.498001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:39.333: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:39.498595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:40.498795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:41.336: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:41.499379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:42.499598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:43.338: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:43.499742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:44.500097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:45.341: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:45.500611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:46.500811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:47.344: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:47.500875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:48.501071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:49.347: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:49.501656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:50.501869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:51.349: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:51.502234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:52.502440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:53.352: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:53.502994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:54.503341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:55.356: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:55.504210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:56.504412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:57.359: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:57.505409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:51:58.505612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:51:59.361: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:51:59.506025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:00.506219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:01.364: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:01.506723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:02.506936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:03.367: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:03.507543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:04.507966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:05.369: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:05.508138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:06.509024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:07.373: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:07.509043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:08.509230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:09.379: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:09.509289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:10.509488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:11.381: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:11.509850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:12.510043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:13.384: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:13.510709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:14.510838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:15.387: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:15.511544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:16.511641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:17.390: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:17.512456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:18.512653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:19.392: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:19.512920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:20.513276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:21.395: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:21.513840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:22.514042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:23.398: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:23.514345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:24.514794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:25.400: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:25.514848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:26.515058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:27.403: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:27.515843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:28.515982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:29.408: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:29.516799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:30.516996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:31.411: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:31.517582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:32.517790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:33.414: INFO: Get pod test-grpc-177890bd-0446-4188-9ba0-ad2bb568ed10 in namespace container-probe-601
  E0927 14:52:33.518472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:34.518853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:52:35.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:52:35.417
  STEP: Destroying namespace "container-probe-601" for this suite. @ 09/27/23 14:52:35.441
• [242.420 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 09/27/23 14:52:35.448
  Sep 27 14:52:35.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 14:52:35.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:35.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:35.474
  E0927 14:52:35.519365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:36.520232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:37.520335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:38.520364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:39.521194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:40.521657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:41.522173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:42.522202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:43.522653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:44.523083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:45.523755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:46.523938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:47.524994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:48.525595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:49.525921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:50.526922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:51.527361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/27/23 14:52:52.478
  E0927 14:52:52.527949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:53.528412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:54.529223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:55.529902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:56.530474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/27/23 14:52:57.482
  STEP: Ensuring resource quota status is calculated @ 09/27/23 14:52:57.486
  E0927 14:52:57.531417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:52:58.531640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/27/23 14:52:59.489
  STEP: Ensuring resource quota status captures configMap creation @ 09/27/23 14:52:59.498
  E0927 14:52:59.531723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:00.531958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/27/23 14:53:01.501
  STEP: Ensuring resource quota status released usage @ 09/27/23 14:53:01.505
  E0927 14:53:01.532448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:02.532686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:53:03.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2682" for this suite. @ 09/27/23 14:53:03.51
• [28.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 09/27/23 14:53:03.515
  Sep 27 14:53:03.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 14:53:03.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:03.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:03.53
  E0927 14:53:03.532852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating Agnhost RC @ 09/27/23 14:53:03.533
  Sep 27 14:53:03.533: INFO: namespace kubectl-2447
  Sep 27 14:53:03.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2447 create -f -'
  Sep 27 14:53:04.018: INFO: stderr: ""
  Sep 27 14:53:04.018: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/27/23 14:53:04.018
  E0927 14:53:04.533253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:53:05.021: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 14:53:05.021: INFO: Found 0 / 1
  E0927 14:53:05.533955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:53:06.022: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 14:53:06.022: INFO: Found 1 / 1
  Sep 27 14:53:06.022: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 27 14:53:06.024: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 14:53:06.024: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 27 14:53:06.024: INFO: wait on agnhost-primary startup in kubectl-2447 
  Sep 27 14:53:06.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2447 logs agnhost-primary-mtdqg agnhost-primary'
  Sep 27 14:53:06.096: INFO: stderr: ""
  Sep 27 14:53:06.096: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 09/27/23 14:53:06.096
  Sep 27 14:53:06.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2447 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Sep 27 14:53:06.166: INFO: stderr: ""
  Sep 27 14:53:06.166: INFO: stdout: "service/rm2 exposed\n"
  Sep 27 14:53:06.173: INFO: Service rm2 in namespace kubectl-2447 found.
  E0927 14:53:06.534033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:07.534266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 09/27/23 14:53:08.178
  Sep 27 14:53:08.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2447 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Sep 27 14:53:08.250: INFO: stderr: ""
  Sep 27 14:53:08.251: INFO: stdout: "service/rm3 exposed\n"
  Sep 27 14:53:08.253: INFO: Service rm3 in namespace kubectl-2447 found.
  E0927 14:53:08.534372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:09.535055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:53:10.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2447" for this suite. @ 09/27/23 14:53:10.259
• [6.747 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 09/27/23 14:53:10.263
  Sep 27 14:53:10.263: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 14:53:10.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:10.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:10.276
  STEP: Setting up server cert @ 09/27/23 14:53:10.29
  E0927 14:53:10.535971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 14:53:11.351
  STEP: Deploying the webhook pod @ 09/27/23 14:53:11.357
  STEP: Wait for the deployment to be ready @ 09/27/23 14:53:11.37
  Sep 27 14:53:11.374: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 14:53:11.536906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:12.537115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 14:53:13.38
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:53:13.393
  E0927 14:53:13.537687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:53:14.393: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 27 14:53:14.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 14:53:14.538602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4242-crds.webhook.example.com via the AdmissionRegistration API @ 09/27/23 14:53:14.905
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/27/23 14:53:14.923
  E0927 14:53:15.539745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:16.540303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:53:16.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0927 14:53:17.540786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-896" for this suite. @ 09/27/23 14:53:17.559
  STEP: Destroying namespace "webhook-markers-8106" for this suite. @ 09/27/23 14:53:17.566
• [7.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 09/27/23 14:53:17.572
  Sep 27 14:53:17.572: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 14:53:17.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:17.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:17.587
  STEP: Creating a pod to test downward api env vars @ 09/27/23 14:53:17.589
  E0927 14:53:18.541618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:19.542252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:20.542637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:21.542763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:53:21.603
  Sep 27 14:53:21.605: INFO: Trying to get logs from node worker-1 pod downward-api-622967ad-27fb-4d09-8130-9fa467445eb4 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 14:53:21.61
  Sep 27 14:53:21.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8444" for this suite. @ 09/27/23 14:53:21.622
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 09/27/23 14:53:21.627
  Sep 27 14:53:21.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 14:53:21.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:21.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:21.638
  STEP: Setting up server cert @ 09/27/23 14:53:21.652
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 14:53:21.9
  STEP: Deploying the webhook pod @ 09/27/23 14:53:21.906
  STEP: Wait for the deployment to be ready @ 09/27/23 14:53:21.915
  Sep 27 14:53:21.918: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 14:53:22.542866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:23.543088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 14:53:23.924
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:53:23.937
  E0927 14:53:24.543241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:53:24.938: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/27/23 14:53:24.943
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/27/23 14:53:24.959
  Sep 27 14:53:24.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:53:24.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1728" for this suite. @ 09/27/23 14:53:25.009
  STEP: Destroying namespace "webhook-markers-757" for this suite. @ 09/27/23 14:53:25.015
• [3.394 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/27/23 14:53:25.022
  Sep 27 14:53:25.022: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:53:25.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:25.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:25.04
  STEP: Creating secret with name s-test-opt-del-66674ee4-a95b-4a6b-8eeb-f40ef2742d2c @ 09/27/23 14:53:25.044
  STEP: Creating secret with name s-test-opt-upd-e30790f5-5569-47a0-b65b-9e8cefcb6ce0 @ 09/27/23 14:53:25.048
  STEP: Creating the pod @ 09/27/23 14:53:25.051
  E0927 14:53:25.544340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:26.544545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-66674ee4-a95b-4a6b-8eeb-f40ef2742d2c @ 09/27/23 14:53:27.098
  STEP: Updating secret s-test-opt-upd-e30790f5-5569-47a0-b65b-9e8cefcb6ce0 @ 09/27/23 14:53:27.102
  STEP: Creating secret with name s-test-opt-create-6a1fee5e-688b-4c56-9301-33203212ee81 @ 09/27/23 14:53:27.105
  STEP: waiting to observe update in volume @ 09/27/23 14:53:27.11
  E0927 14:53:27.545159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:28.545390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:29.546308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:30.546503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:53:31.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4355" for this suite. @ 09/27/23 14:53:31.137
• [6.120 seconds]
------------------------------
S
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 09/27/23 14:53:31.142
  Sep 27 14:53:31.142: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename ingressclass @ 09/27/23 14:53:31.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:31.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:31.158
  STEP: getting /apis @ 09/27/23 14:53:31.16
  STEP: getting /apis/networking.k8s.io @ 09/27/23 14:53:31.164
  STEP: getting /apis/networking.k8s.iov1 @ 09/27/23 14:53:31.165
  STEP: creating @ 09/27/23 14:53:31.166
  STEP: getting @ 09/27/23 14:53:31.177
  STEP: listing @ 09/27/23 14:53:31.179
  STEP: watching @ 09/27/23 14:53:31.181
  Sep 27 14:53:31.181: INFO: starting watch
  STEP: patching @ 09/27/23 14:53:31.182
  STEP: updating @ 09/27/23 14:53:31.186
  Sep 27 14:53:31.189: INFO: waiting for watch events with expected annotations
  Sep 27 14:53:31.189: INFO: saw patched and updated annotations
  STEP: deleting @ 09/27/23 14:53:31.189
  STEP: deleting a collection @ 09/27/23 14:53:31.195
  Sep 27 14:53:31.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8553" for this suite. @ 09/27/23 14:53:31.206
• [0.068 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 09/27/23 14:53:31.21
  Sep 27 14:53:31.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename cronjob @ 09/27/23 14:53:31.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:31.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:31.227
  STEP: Creating a ReplaceConcurrent cronjob @ 09/27/23 14:53:31.229
  STEP: Ensuring a job is scheduled @ 09/27/23 14:53:31.235
  E0927 14:53:31.547317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:32.547652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:33.548707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:34.549113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:35.549911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:36.550475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:37.551086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:38.551336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:39.552355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:40.552707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:41.553809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:42.554027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:43.554701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:44.555106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:45.555387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:46.555519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:47.556049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:48.556739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:49.556788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:50.556972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:51.557750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:52.557973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:53.558172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:54.558528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:55.559312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:56.559616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:57.560207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:58.560426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:53:59.561331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:00.561421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/27/23 14:54:01.238
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/27/23 14:54:01.24
  STEP: Ensuring the job is replaced with a new one @ 09/27/23 14:54:01.242
  E0927 14:54:01.561692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:02.561824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:03.562730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:04.563095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:05.564172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:06.564430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:07.564726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:08.564988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:09.565021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:10.565115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:11.565186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:12.565429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:13.565550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:14.565677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:15.566315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:16.566426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:17.566788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:18.567061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:19.567041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:20.567535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:21.568395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:22.568494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:23.568740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:24.569117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:25.570173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:26.570276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:27.570986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:28.571094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:29.571936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:30.572054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:31.572186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:32.572719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:33.573327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:34.573623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:35.574233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:36.574435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:37.574743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:38.574946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:39.575019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:40.575234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:41.575855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:42.576779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:43.577069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:44.577202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:45.577339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:46.577552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:47.578617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:48.578817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:49.578960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:50.579154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:51.579960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:52.580121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:53.580776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:54.581208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:55.581412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:56.581618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:57.582593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:58.582798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:54:59.582849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:00.583006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/27/23 14:55:01.245
  Sep 27 14:55:01.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-548" for this suite. @ 09/27/23 14:55:01.252
• [90.050 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/27/23 14:55:01.261
  Sep 27 14:55:01.261: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 14:55:01.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:55:01.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:55:01.283
  STEP: Creating a pod to test substitution in container's args @ 09/27/23 14:55:01.285
  E0927 14:55:01.584035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:02.584612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:03.585541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:04.586002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:55:05.3
  Sep 27 14:55:05.301: INFO: Trying to get logs from node worker-1 pod var-expansion-6ca8bf74-0662-4b9e-9d5c-e420e346a096 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 14:55:05.315
  Sep 27 14:55:05.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9439" for this suite. @ 09/27/23 14:55:05.327
• [4.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 09/27/23 14:55:05.335
  Sep 27 14:55:05.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename disruption @ 09/27/23 14:55:05.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:55:05.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:55:05.349
  STEP: Waiting for the pdb to be processed @ 09/27/23 14:55:05.355
  E0927 14:55:05.586104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:06.586303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/27/23 14:55:07.378
  Sep 27 14:55:07.382: INFO: running pods: 0 < 3
  E0927 14:55:07.586889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:08.587082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:55:09.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2474" for this suite. @ 09/27/23 14:55:09.389
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 09/27/23 14:55:09.396
  Sep 27 14:55:09.396: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 14:55:09.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:55:09.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:55:09.407
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/27/23 14:55:09.409
  Sep 27 14:55:09.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-3218 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Sep 27 14:55:09.475: INFO: stderr: ""
  Sep 27 14:55:09.475: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/27/23 14:55:09.475
  Sep 27 14:55:09.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-3218 delete pods e2e-test-httpd-pod'
  E0927 14:55:09.587654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:10.588740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:55:10.669: INFO: stderr: ""
  Sep 27 14:55:10.669: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 27 14:55:10.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3218" for this suite. @ 09/27/23 14:55:10.672
• [1.280 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 09/27/23 14:55:10.676
  Sep 27 14:55:10.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 14:55:10.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:55:10.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:55:10.693
  STEP: Setting up server cert @ 09/27/23 14:55:10.708
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 14:55:11.308
  STEP: Deploying the webhook pod @ 09/27/23 14:55:11.314
  STEP: Wait for the deployment to be ready @ 09/27/23 14:55:11.328
  Sep 27 14:55:11.332: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 14:55:11.589652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:12.590113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 14:55:13.338
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:55:13.352
  E0927 14:55:13.590731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:55:14.352: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/27/23 14:55:14.356
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/27/23 14:55:14.356
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/27/23 14:55:14.376
  E0927 14:55:14.591302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/27/23 14:55:15.386
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/27/23 14:55:15.386
  E0927 14:55:15.591855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/27/23 14:55:16.416
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/27/23 14:55:16.416
  E0927 14:55:16.592765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:17.592979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:18.593204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:19.593562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:20.593784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/27/23 14:55:21.456
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/27/23 14:55:21.456
  E0927 14:55:21.593908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:22.594129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:23.594346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:24.594772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:25.594958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:55:26.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8914" for this suite. @ 09/27/23 14:55:26.528
  STEP: Destroying namespace "webhook-markers-9390" for this suite. @ 09/27/23 14:55:26.535
• [15.863 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 09/27/23 14:55:26.54
  Sep 27 14:55:26.540: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/27/23 14:55:26.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:55:26.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:55:26.553
  Sep 27 14:55:26.556: INFO: Waiting up to 1m0s for all nodes to be ready
  E0927 14:55:26.595196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:27.595421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:28.595795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:29.596504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:30.596551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:31.596745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:32.597296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:33.597540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:34.598146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:35.598343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:36.598563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:37.598803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:38.599112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:39.599623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:40.600489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:41.600820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:42.601084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:43.601224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:44.601708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:45.601938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:46.602197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:47.602441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:48.602978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:49.603462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:50.604153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:51.604384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:52.605176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:53.605300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:54.605968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:55.606184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:56.606922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:57.607123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:58.607609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:55:59.608341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:00.608644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:01.608888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:02.609765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:03.610006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:04.610497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:05.610702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:06.610755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:07.610995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:08.611465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:09.612103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:10.612822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:11.612963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:12.613354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:13.613556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:14.613644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:15.613850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:16.614588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:17.614836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:18.615272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:19.615644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:20.616010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:21.615966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:22.616191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:23.616706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:24.617025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:25.617221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:56:26.567: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 14:56:26.569: INFO: Starting informer...
  STEP: Starting pods... @ 09/27/23 14:56:26.569
  E0927 14:56:26.617690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:56:26.781: INFO: Pod1 is running on worker-1. Tainting Node
  E0927 14:56:27.618144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:28.618973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:56:28.996: INFO: Pod2 is running on worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/27/23 14:56:28.996
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/27/23 14:56:29.01
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/27/23 14:56:29.012
  E0927 14:56:29.619414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:30.619660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:31.619749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:32.619850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:33.620727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:34.621014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:56:35.114: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0927 14:56:35.621521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:36.621756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:37.621889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:38.622128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:39.622590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:40.622815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:41.623030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:42.623286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:43.623752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:44.624198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:45.624434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:46.624652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:47.624891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:48.625042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:49.625584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:50.625793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:51.625913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:52.626129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:53.626371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:54.627181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:56:55.155: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Sep 27 14:56:55.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/27/23 14:56:55.17
  STEP: Destroying namespace "taint-multiple-pods-1280" for this suite. @ 09/27/23 14:56:55.173
• [88.638 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 09/27/23 14:56:55.179
  Sep 27 14:56:55.179: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 14:56:55.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:56:55.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:56:55.206
  STEP: Updating Namespace "namespaces-8745" @ 09/27/23 14:56:55.208
  Sep 27 14:56:55.214: INFO: Namespace "namespaces-8745" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"e834fd57-3420-4fde-a8f4-ee0ee883c5e8", "kubernetes.io/metadata.name":"namespaces-8745", "namespaces-8745":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Sep 27 14:56:55.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8745" for this suite. @ 09/27/23 14:56:55.217
• [0.047 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 09/27/23 14:56:55.226
  Sep 27 14:56:55.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 14:56:55.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:56:55.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:56:55.247
  STEP: Creating configMap configmap-451/configmap-test-a1ca3f2f-cf42-4373-8a9c-2a1150f11f3c @ 09/27/23 14:56:55.249
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:56:55.262
  E0927 14:56:55.627853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:56.628168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:56:57.273
  Sep 27 14:56:57.275: INFO: Trying to get logs from node worker-1 pod pod-configmaps-1ad7e4b3-0dee-4db4-baf9-f1c7412af163 container env-test: <nil>
  STEP: delete the pod @ 09/27/23 14:56:57.288
  Sep 27 14:56:57.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-451" for this suite. @ 09/27/23 14:56:57.309
• [2.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 09/27/23 14:56:57.314
  Sep 27 14:56:57.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 14:56:57.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:56:57.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:56:57.326
  STEP: Creating a pod to test downward api env vars @ 09/27/23 14:56:57.331
  E0927 14:56:57.628333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:56:58.628471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:56:59.342
  Sep 27 14:56:59.343: INFO: Trying to get logs from node worker-1 pod downward-api-399cebe3-fa04-4426-a3ed-4f1eb40322e4 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 14:56:59.35
  Sep 27 14:56:59.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-825" for this suite. @ 09/27/23 14:56:59.363
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 09/27/23 14:56:59.374
  Sep 27 14:56:59.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename gc @ 09/27/23 14:56:59.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:56:59.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:56:59.387
  STEP: create the deployment @ 09/27/23 14:56:59.389
  W0927 14:56:59.397669      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/27/23 14:56:59.397
  E0927 14:56:59.629280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/27/23 14:56:59.905
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/27/23 14:56:59.91
  STEP: Gathering metrics @ 09/27/23 14:57:00.422
  W0927 14:57:00.426916      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 14:57:00.426: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 14:57:00.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3243" for this suite. @ 09/27/23 14:57:00.429
• [1.060 seconds]
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/27/23 14:57:00.434
  Sep 27 14:57:00.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 14:57:00.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:57:00.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:57:00.455
  STEP: creating the pod @ 09/27/23 14:57:00.458
  STEP: submitting the pod to kubernetes @ 09/27/23 14:57:00.458
  STEP: verifying QOS class is set on the pod @ 09/27/23 14:57:00.465
  Sep 27 14:57:00.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1201" for this suite. @ 09/27/23 14:57:00.471
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 09/27/23 14:57:00.486
  Sep 27 14:57:00.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 14:57:00.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:57:00.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:57:00.506
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/27/23 14:57:00.508
  Sep 27 14:57:00.508: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 14:57:00.629983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:01.630850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:57:01.795: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 14:57:02.630988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:03.631602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:04.632170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:05.632552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:06.632723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:57:07.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1088" for this suite. @ 09/27/23 14:57:07.017
• [6.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 09/27/23 14:57:07.029
  Sep 27 14:57:07.029: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename security-context @ 09/27/23 14:57:07.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:57:07.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:57:07.043
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/27/23 14:57:07.046
  E0927 14:57:07.633569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:08.633660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:09.634665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:10.634785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:57:11.064
  Sep 27 14:57:11.065: INFO: Trying to get logs from node worker-1 pod security-context-379155ad-c0a3-4165-9b3b-d092d42f729a container test-container: <nil>
  STEP: delete the pod @ 09/27/23 14:57:11.07
  Sep 27 14:57:11.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1083" for this suite. @ 09/27/23 14:57:11.083
• [4.058 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 09/27/23 14:57:11.088
  Sep 27 14:57:11.088: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pod-network-test @ 09/27/23 14:57:11.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:57:11.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:57:11.099
  STEP: Performing setup for networking test in namespace pod-network-test-4259 @ 09/27/23 14:57:11.101
  STEP: creating a selector @ 09/27/23 14:57:11.101
  STEP: Creating the service pods in kubernetes @ 09/27/23 14:57:11.101
  Sep 27 14:57:11.101: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0927 14:57:11.635665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:12.635760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:13.636189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:14.636635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:15.637424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:16.637676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:17.638201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:18.638303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:19.638426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:20.638883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:21.639020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:22.639571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/27/23 14:57:23.145
  E0927 14:57:23.639857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:24.640756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:57:25.155: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Sep 27 14:57:25.155: INFO: Breadth first check of 10.244.1.93 on host 10.0.53.207...
  Sep 27 14:57:25.157: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.152:9080/dial?request=hostname&protocol=http&host=10.244.1.93&port=8083&tries=1'] Namespace:pod-network-test-4259 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 14:57:25.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:57:25.157: INFO: ExecWithOptions: Clientset creation
  Sep 27 14:57:25.157: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4259/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.152%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.93%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 27 14:57:25.249: INFO: Waiting for responses: map[]
  Sep 27 14:57:25.249: INFO: reached 10.244.1.93 after 0/1 tries
  Sep 27 14:57:25.249: INFO: Breadth first check of 10.244.0.151 on host 10.0.51.64...
  Sep 27 14:57:25.252: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.152:9080/dial?request=hostname&protocol=http&host=10.244.0.151&port=8083&tries=1'] Namespace:pod-network-test-4259 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 14:57:25.252: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:57:25.252: INFO: ExecWithOptions: Clientset creation
  Sep 27 14:57:25.252: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4259/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.152%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.151%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 27 14:57:25.337: INFO: Waiting for responses: map[]
  Sep 27 14:57:25.337: INFO: reached 10.244.0.151 after 0/1 tries
  Sep 27 14:57:25.337: INFO: Going to retry 0 out of 2 pods....
  Sep 27 14:57:25.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4259" for this suite. @ 09/27/23 14:57:25.342
• [14.259 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 09/27/23 14:57:25.347
  Sep 27 14:57:25.347: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename dns @ 09/27/23 14:57:25.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:57:25.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:57:25.363
  STEP: Creating a test headless service @ 09/27/23 14:57:25.365
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9147 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9147;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9147 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9147;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9147.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9147.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9147.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9147.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9147.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9147.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9147.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9147.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9147.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9147.svc;check="$$(dig +notcp +noall +answer +search 142.136.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.136.142_udp@PTR;check="$$(dig +tcp +noall +answer +search 142.136.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.136.142_tcp@PTR;sleep 1; done
   @ 09/27/23 14:57:25.38
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9147 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9147;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9147 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9147;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9147.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9147.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9147.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9147.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9147.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9147.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9147.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9147.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9147.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9147.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9147.svc;check="$$(dig +notcp +noall +answer +search 142.136.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.136.142_udp@PTR;check="$$(dig +tcp +noall +answer +search 142.136.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.136.142_tcp@PTR;sleep 1; done
   @ 09/27/23 14:57:25.38
  STEP: creating a pod to probe DNS @ 09/27/23 14:57:25.381
  STEP: submitting the pod to kubernetes @ 09/27/23 14:57:25.381
  E0927 14:57:25.641444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:26.641987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/27/23 14:57:27.395
  STEP: looking for the results for each expected name from probers @ 09/27/23 14:57:27.397
  Sep 27 14:57:27.402: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.404: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.407: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.410: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.412: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.415: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.417: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.420: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.432: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.435: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.437: INFO: Unable to read jessie_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.440: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.442: INFO: Unable to read jessie_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.445: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.447: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.450: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:27.459: INFO: Lookups using dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9147 wheezy_tcp@dns-test-service.dns-9147 wheezy_udp@dns-test-service.dns-9147.svc wheezy_tcp@dns-test-service.dns-9147.svc wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9147 jessie_tcp@dns-test-service.dns-9147 jessie_udp@dns-test-service.dns-9147.svc jessie_tcp@dns-test-service.dns-9147.svc jessie_udp@_http._tcp.dns-test-service.dns-9147.svc jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc]

  Sep 27 14:57:27.464: INFO: Pod client logs for webserver: 
  Sep 27 14:57:27.468: INFO: Pod client logs for querier: 
  Sep 27 14:57:27.473: INFO: Pod client logs for jessie-querier: 
  E0927 14:57:27.642545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:28.642769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:29.643759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:30.643837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:31.643944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:57:32.477: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.480: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.482: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.485: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.487: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.490: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.492: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.494: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.507: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.509: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.511: INFO: Unable to read jessie_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.514: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.516: INFO: Unable to read jessie_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.519: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.521: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.523: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:32.533: INFO: Lookups using dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9147 wheezy_tcp@dns-test-service.dns-9147 wheezy_udp@dns-test-service.dns-9147.svc wheezy_tcp@dns-test-service.dns-9147.svc wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9147 jessie_tcp@dns-test-service.dns-9147 jessie_udp@dns-test-service.dns-9147.svc jessie_tcp@dns-test-service.dns-9147.svc jessie_udp@_http._tcp.dns-test-service.dns-9147.svc jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc]

  Sep 27 14:57:32.541: INFO: Pod client logs for webserver: 
  Sep 27 14:57:32.546: INFO: Pod client logs for querier: 
  Sep 27 14:57:32.550: INFO: Pod client logs for jessie-querier: 
  E0927 14:57:32.644445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:33.644648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:34.644998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:35.645636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:36.645903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:57:37.477: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.479: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.482: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.484: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.487: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.489: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.492: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.494: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.506: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.508: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.510: INFO: Unable to read jessie_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.513: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.515: INFO: Unable to read jessie_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.518: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.520: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.523: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:37.532: INFO: Lookups using dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9147 wheezy_tcp@dns-test-service.dns-9147 wheezy_udp@dns-test-service.dns-9147.svc wheezy_tcp@dns-test-service.dns-9147.svc wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9147 jessie_tcp@dns-test-service.dns-9147 jessie_udp@dns-test-service.dns-9147.svc jessie_tcp@dns-test-service.dns-9147.svc jessie_udp@_http._tcp.dns-test-service.dns-9147.svc jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc]

  Sep 27 14:57:37.537: INFO: Pod client logs for webserver: 
  Sep 27 14:57:37.542: INFO: Pod client logs for querier: 
  Sep 27 14:57:37.546: INFO: Pod client logs for jessie-querier: 
  E0927 14:57:37.646560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:38.646789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:39.647232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:40.647427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:41.647650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:57:42.477: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.480: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.482: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.484: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.487: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.489: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.492: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.494: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.506: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.509: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.515: INFO: Unable to read jessie_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.517: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.520: INFO: Unable to read jessie_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.522: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.525: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.527: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:42.537: INFO: Lookups using dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9147 wheezy_tcp@dns-test-service.dns-9147 wheezy_udp@dns-test-service.dns-9147.svc wheezy_tcp@dns-test-service.dns-9147.svc wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9147 jessie_tcp@dns-test-service.dns-9147 jessie_udp@dns-test-service.dns-9147.svc jessie_tcp@dns-test-service.dns-9147.svc jessie_udp@_http._tcp.dns-test-service.dns-9147.svc jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc]

  Sep 27 14:57:42.541: INFO: Pod client logs for webserver: 
  Sep 27 14:57:42.545: INFO: Pod client logs for querier: 
  Sep 27 14:57:42.549: INFO: Pod client logs for jessie-querier: 
  E0927 14:57:42.648237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:43.648468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:44.648858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:45.649080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:46.649287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:57:47.476: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.479: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.481: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.484: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.486: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.488: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.491: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.493: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.505: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.507: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.510: INFO: Unable to read jessie_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.512: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.515: INFO: Unable to read jessie_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.517: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.520: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.522: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:47.533: INFO: Lookups using dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9147 wheezy_tcp@dns-test-service.dns-9147 wheezy_udp@dns-test-service.dns-9147.svc wheezy_tcp@dns-test-service.dns-9147.svc wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9147 jessie_tcp@dns-test-service.dns-9147 jessie_udp@dns-test-service.dns-9147.svc jessie_tcp@dns-test-service.dns-9147.svc jessie_udp@_http._tcp.dns-test-service.dns-9147.svc jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc]

  Sep 27 14:57:47.537: INFO: Pod client logs for webserver: 
  Sep 27 14:57:47.541: INFO: Pod client logs for querier: 
  Sep 27 14:57:47.546: INFO: Pod client logs for jessie-querier: 
  E0927 14:57:47.649341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:48.649540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:49.650019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:50.650246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:51.650364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:57:52.476: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.479: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.482: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.484: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.487: INFO: Unable to read wheezy_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.489: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.492: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.494: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.506: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.509: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.511: INFO: Unable to read jessie_udp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.514: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147 from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.516: INFO: Unable to read jessie_udp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.519: INFO: Unable to read jessie_tcp@dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.521: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.524: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc from pod dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177: the server could not find the requested resource (get pods dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177)
  Sep 27 14:57:52.534: INFO: Lookups using dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9147 wheezy_tcp@dns-test-service.dns-9147 wheezy_udp@dns-test-service.dns-9147.svc wheezy_tcp@dns-test-service.dns-9147.svc wheezy_udp@_http._tcp.dns-test-service.dns-9147.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9147.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9147 jessie_tcp@dns-test-service.dns-9147 jessie_udp@dns-test-service.dns-9147.svc jessie_tcp@dns-test-service.dns-9147.svc jessie_udp@_http._tcp.dns-test-service.dns-9147.svc jessie_tcp@_http._tcp.dns-test-service.dns-9147.svc]

  Sep 27 14:57:52.538: INFO: Pod client logs for webserver: 
  Sep 27 14:57:52.543: INFO: Pod client logs for querier: 
  Sep 27 14:57:52.547: INFO: Pod client logs for jessie-querier: 
  E0927 14:57:52.650845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:53.651156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:54.651543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:55.651655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:56.651699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:57:57.533: INFO: DNS probes using dns-9147/dns-test-95e5eb78-7a9a-44ee-937f-f4f0469e2177 succeeded

  Sep 27 14:57:57.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:57:57.535
  STEP: deleting the test service @ 09/27/23 14:57:57.551
  STEP: deleting the test headless service @ 09/27/23 14:57:57.59
  STEP: Destroying namespace "dns-9147" for this suite. @ 09/27/23 14:57:57.599
• [32.265 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 09/27/23 14:57:57.613
  Sep 27 14:57:57.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename endpointslice @ 09/27/23 14:57:57.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:57:57.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:57:57.631
  E0927 14:57:57.651674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:58.652443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:57:59.653103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:00.653344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:01.653533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:02.653750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/27/23 14:58:02.753
  E0927 14:58:03.653858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:04.654351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:05.655223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:06.655440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:07.655689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 09/27/23 14:58:07.758
  E0927 14:58:08.656705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:09.657221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:10.657498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:11.657721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:12.657930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/27/23 14:58:12.763
  E0927 14:58:13.658510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:14.658878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:15.659116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:16.659348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:17.659909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 09/27/23 14:58:17.769
  Sep 27 14:58:17.780: INFO: EndpointSlice for Service endpointslice-476/example-named-port not found
  E0927 14:58:18.660026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:19.660697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:20.660927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:21.661137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:22.661370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:23.662018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:24.662347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:25.662727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:26.662950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:27.663096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:58:27.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-476" for this suite. @ 09/27/23 14:58:27.788
• [30.179 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 09/27/23 14:58:27.792
  Sep 27 14:58:27.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 14:58:27.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:58:27.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:58:27.807
  STEP: Setting up server cert @ 09/27/23 14:58:27.825
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 14:58:28.223
  STEP: Deploying the webhook pod @ 09/27/23 14:58:28.229
  STEP: Wait for the deployment to be ready @ 09/27/23 14:58:28.241
  Sep 27 14:58:28.248: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0927 14:58:28.663284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:29.663662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 14:58:30.254
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:58:30.268
  E0927 14:58:30.664502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:58:31.268: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 27 14:58:31.272: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 14:58:31.665119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1602-crds.webhook.example.com via the AdmissionRegistration API @ 09/27/23 14:58:31.78
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/27/23 14:58:31.859
  E0927 14:58:32.665931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:33.666170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:58:33.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4626" for this suite. @ 09/27/23 14:58:34.514
  STEP: Destroying namespace "webhook-markers-4655" for this suite. @ 09/27/23 14:58:34.521
• [6.734 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 09/27/23 14:58:34.526
  Sep 27 14:58:34.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 14:58:34.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:58:34.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:58:34.542
  STEP: Setting up server cert @ 09/27/23 14:58:34.563
  E0927 14:58:34.666952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 14:58:35.031
  STEP: Deploying the webhook pod @ 09/27/23 14:58:35.04
  STEP: Wait for the deployment to be ready @ 09/27/23 14:58:35.053
  Sep 27 14:58:35.062: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0927 14:58:35.667124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:36.667361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 14:58:37.068
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:58:37.084
  E0927 14:58:37.667467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:58:38.085: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/27/23 14:58:38.089
  STEP: create a configmap that should be updated by the webhook @ 09/27/23 14:58:38.114
  Sep 27 14:58:38.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6554" for this suite. @ 09/27/23 14:58:38.199
  STEP: Destroying namespace "webhook-markers-525" for this suite. @ 09/27/23 14:58:38.212
• [3.693 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 09/27/23 14:58:38.219
  Sep 27 14:58:38.219: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 14:58:38.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:58:38.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:58:38.239
  STEP: Create a ReplicaSet @ 09/27/23 14:58:38.241
  STEP: Verify that the required pods have come up @ 09/27/23 14:58:38.247
  Sep 27 14:58:38.249: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0927 14:58:38.667772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:39.668532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:40.668756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:41.669002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:42.669105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:58:43.252: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/27/23 14:58:43.252
  Sep 27 14:58:43.254: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/27/23 14:58:43.254
  STEP: DeleteCollection of the ReplicaSets @ 09/27/23 14:58:43.257
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/27/23 14:58:43.263
  Sep 27 14:58:43.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2567" for this suite. @ 09/27/23 14:58:43.277
• [5.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/27/23 14:58:43.295
  Sep 27 14:58:43.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/27/23 14:58:43.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:58:43.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:58:43.312
  STEP: creating a target pod @ 09/27/23 14:58:43.314
  E0927 14:58:43.669190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:44.669878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/27/23 14:58:45.328
  E0927 14:58:45.670449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:46.670704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/27/23 14:58:47.345
  Sep 27 14:58:47.346: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2639 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 14:58:47.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 14:58:47.346: INFO: ExecWithOptions: Clientset creation
  Sep 27 14:58:47.346: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-2639/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 27 14:58:47.430: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/27/23 14:58:47.435
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/27/23 14:58:47.438
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/27/23 14:58:47.447
  Sep 27 14:58:47.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2639" for this suite. @ 09/27/23 14:58:47.452
• [4.162 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/27/23 14:58:47.458
  Sep 27 14:58:47.458: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 14:58:47.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:58:47.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:58:47.472
  STEP: Creating configMap with name configmap-test-volume-d74db1ea-a505-4e6a-b77b-eee88b096906 @ 09/27/23 14:58:47.474
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:58:47.478
  E0927 14:58:47.671339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:48.671588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:49.672088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:50.672302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:58:51.492
  Sep 27 14:58:51.494: INFO: Trying to get logs from node worker-1 pod pod-configmaps-214f7a4e-1f5c-4d2c-a607-8b2a1707cf4b container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:58:51.498
  Sep 27 14:58:51.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1866" for this suite. @ 09/27/23 14:58:51.53
• [4.080 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 09/27/23 14:58:51.538
  Sep 27 14:58:51.538: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 14:58:51.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:58:51.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:58:51.552
  Sep 27 14:58:51.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 14:58:51.672726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:52.672794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/27/23 14:58:52.865
  Sep 27 14:58:52.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-3534 --namespace=crd-publish-openapi-3534 create -f -'
  Sep 27 14:58:53.363: INFO: stderr: ""
  Sep 27 14:58:53.363: INFO: stdout: "e2e-test-crd-publish-openapi-7795-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 27 14:58:53.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-3534 --namespace=crd-publish-openapi-3534 delete e2e-test-crd-publish-openapi-7795-crds test-cr'
  Sep 27 14:58:53.425: INFO: stderr: ""
  Sep 27 14:58:53.425: INFO: stdout: "e2e-test-crd-publish-openapi-7795-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Sep 27 14:58:53.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-3534 --namespace=crd-publish-openapi-3534 apply -f -'
  Sep 27 14:58:53.626: INFO: stderr: ""
  Sep 27 14:58:53.626: INFO: stdout: "e2e-test-crd-publish-openapi-7795-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 27 14:58:53.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-3534 --namespace=crd-publish-openapi-3534 delete e2e-test-crd-publish-openapi-7795-crds test-cr'
  E0927 14:58:53.673496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:58:53.691: INFO: stderr: ""
  Sep 27 14:58:53.691: INFO: stdout: "e2e-test-crd-publish-openapi-7795-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/27/23 14:58:53.691
  Sep 27 14:58:53.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-3534 explain e2e-test-crd-publish-openapi-7795-crds'
  Sep 27 14:58:53.833: INFO: stderr: ""
  Sep 27 14:58:53.833: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7795-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0927 14:58:54.673795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:58:55.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3534" for this suite. @ 09/27/23 14:58:55.104
• [3.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 09/27/23 14:58:55.112
  Sep 27 14:58:55.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename cronjob @ 09/27/23 14:58:55.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:58:55.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:58:55.128
  STEP: Creating a cronjob @ 09/27/23 14:58:55.13
  STEP: creating @ 09/27/23 14:58:55.13
  STEP: getting @ 09/27/23 14:58:55.135
  STEP: listing @ 09/27/23 14:58:55.137
  STEP: watching @ 09/27/23 14:58:55.138
  Sep 27 14:58:55.138: INFO: starting watch
  STEP: cluster-wide listing @ 09/27/23 14:58:55.139
  STEP: cluster-wide watching @ 09/27/23 14:58:55.141
  Sep 27 14:58:55.141: INFO: starting watch
  STEP: patching @ 09/27/23 14:58:55.142
  STEP: updating @ 09/27/23 14:58:55.151
  Sep 27 14:58:55.160: INFO: waiting for watch events with expected annotations
  Sep 27 14:58:55.160: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/27/23 14:58:55.16
  STEP: updating /status @ 09/27/23 14:58:55.192
  STEP: get /status @ 09/27/23 14:58:55.197
  STEP: deleting @ 09/27/23 14:58:55.199
  STEP: deleting a collection @ 09/27/23 14:58:55.209
  Sep 27 14:58:55.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9548" for this suite. @ 09/27/23 14:58:55.232
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 09/27/23 14:58:55.247
  Sep 27 14:58:55.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 14:58:55.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:58:55.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:58:55.261
  STEP: Creating a pod to test downward api env vars @ 09/27/23 14:58:55.265
  E0927 14:58:55.674837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:56.675077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:57.675197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:58:58.675435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:58:59.284
  Sep 27 14:58:59.286: INFO: Trying to get logs from node worker-1 pod downward-api-0a9f5f90-cbd0-47b0-8be5-b7a26b149aff container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 14:58:59.291
  Sep 27 14:58:59.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5101" for this suite. @ 09/27/23 14:58:59.304
• [4.061 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/27/23 14:58:59.31
  Sep 27 14:58:59.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-runtime @ 09/27/23 14:58:59.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:58:59.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:58:59.326
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/27/23 14:58:59.334
  E0927 14:58:59.675618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:00.676295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:01.676967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:02.677638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:03.678281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:04.679201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:05.679302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:06.680062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:07.681110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:08.681948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:09.682980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:10.683144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:11.683243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:12.683971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:13.684943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:14.685161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/27/23 14:59:15.389
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/27/23 14:59:15.391
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/27/23 14:59:15.394
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 09/27/23 14:59:15.394
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/27/23 14:59:15.416
  E0927 14:59:15.685503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:16.686057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:17.686655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/27/23 14:59:18.425
  E0927 14:59:18.686867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/27/23 14:59:19.43
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/27/23 14:59:19.433
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 09/27/23 14:59:19.433
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/27/23 14:59:19.452
  E0927 14:59:19.686958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/27/23 14:59:20.457
  E0927 14:59:20.687900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:21.688486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/27/23 14:59:22.464
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/27/23 14:59:22.467
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 09/27/23 14:59:22.467
  Sep 27 14:59:22.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2208" for this suite. @ 09/27/23 14:59:22.482
• [23.180 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/27/23 14:59:22.49
  Sep 27 14:59:22.490: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:59:22.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:22.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:22.506
  STEP: Creating the pod @ 09/27/23 14:59:22.508
  E0927 14:59:22.689083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:23.689298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:24.690186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:59:25.059: INFO: Successfully updated pod "labelsupdate9277a0c4-71ba-423a-9925-9bdabe4765b6"
  E0927 14:59:25.691053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:26.691299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 14:59:27.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8671" for this suite. @ 09/27/23 14:59:27.074
• [4.590 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/27/23 14:59:27.081
  Sep 27 14:59:27.081: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename subpath @ 09/27/23 14:59:27.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:27.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:27.092
  STEP: Setting up data @ 09/27/23 14:59:27.095
  STEP: Creating pod pod-subpath-test-projected-4ldx @ 09/27/23 14:59:27.104
  STEP: Creating a pod to test atomic-volume-subpath @ 09/27/23 14:59:27.104
  E0927 14:59:27.691459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:28.691849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:29.692746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:30.692977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:31.693186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:32.693434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:33.694460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:34.695007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:35.695631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:36.695739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:37.696478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:38.696682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:39.697577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:40.697839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:41.698049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:42.698266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:43.698886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:44.699208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:45.700030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:46.700248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:47.701082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:48.701335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:49.701605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:50.701812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:59:51.149
  Sep 27 14:59:51.151: INFO: Trying to get logs from node worker-1 pod pod-subpath-test-projected-4ldx container test-container-subpath-projected-4ldx: <nil>
  STEP: delete the pod @ 09/27/23 14:59:51.157
  STEP: Deleting pod pod-subpath-test-projected-4ldx @ 09/27/23 14:59:51.168
  Sep 27 14:59:51.168: INFO: Deleting pod "pod-subpath-test-projected-4ldx" in namespace "subpath-6295"
  Sep 27 14:59:51.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6295" for this suite. @ 09/27/23 14:59:51.172
• [24.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/27/23 14:59:51.178
  Sep 27 14:59:51.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 14:59:51.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:51.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:51.194
  STEP: Creating a pod to test substitution in volume subpath @ 09/27/23 14:59:51.196
  E0927 14:59:51.701968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:52.702026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:53.702494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:54.702899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 14:59:55.213
  Sep 27 14:59:55.215: INFO: Trying to get logs from node worker-1 pod var-expansion-487457fb-823d-4aaf-8b51-c3bd5c7fcfe5 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 14:59:55.22
  Sep 27 14:59:55.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-491" for this suite. @ 09/27/23 14:59:55.232
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 09/27/23 14:59:55.237
  Sep 27 14:59:55.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename disruption @ 09/27/23 14:59:55.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:55.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:55.252
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/27/23 14:59:55.255
  STEP: Waiting for the pdb to be processed @ 09/27/23 14:59:55.258
  E0927 14:59:55.703714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:56.704194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/27/23 14:59:57.269
  STEP: Waiting for all pods to be running @ 09/27/23 14:59:57.269
  Sep 27 14:59:57.270: INFO: pods: 0 < 3
  E0927 14:59:57.704742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 14:59:58.704949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/27/23 14:59:59.274
  STEP: Updating the pdb to allow a pod to be evicted @ 09/27/23 14:59:59.28
  STEP: Waiting for the pdb to be processed @ 09/27/23 14:59:59.285
  E0927 14:59:59.705551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:00.705759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/27/23 15:00:01.29
  STEP: Waiting for all pods to be running @ 09/27/23 15:00:01.29
  STEP: Waiting for the pdb to observed all healthy pods @ 09/27/23 15:00:01.292
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/27/23 15:00:01.317
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:00:01.334
  E0927 15:00:01.710156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:02.710367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/27/23 15:00:03.344
  STEP: locating a running pod @ 09/27/23 15:00:03.346
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/27/23 15:00:03.351
  STEP: Waiting for the pdb to be deleted @ 09/27/23 15:00:03.354
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/27/23 15:00:03.356
  STEP: Waiting for all pods to be running @ 09/27/23 15:00:03.356
  Sep 27 15:00:03.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1344" for this suite. @ 09/27/23 15:00:03.372
• [8.148 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 09/27/23 15:00:03.386
  Sep 27 15:00:03.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sched-preemption @ 09/27/23 15:00:03.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:00:03.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:00:03.405
  Sep 27 15:00:03.421: INFO: Waiting up to 1m0s for all nodes to be ready
  E0927 15:00:03.710754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:04.711165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:05.711429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:06.711711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:07.712044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:08.712801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:09.712805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:10.713028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:11.713078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:12.713325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:13.713798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:14.714174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:15.714408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:16.714630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:17.714846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:18.715060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:19.715728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:20.716721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:21.717300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:22.717500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:23.717758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:24.718154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:25.718631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:26.718853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:27.719157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:28.719350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:29.719610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:30.719818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:31.720801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:32.721027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:33.721334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:34.721772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:35.722728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:36.722922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:37.723103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:38.723305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:39.723854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:40.724718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:41.724904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:42.725803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:43.726854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:44.727274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:45.728003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:46.728115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:47.728194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:48.728411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:49.729223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:50.729428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:51.729967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:52.730173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:53.730687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:54.731106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:55.731280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:56.731421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:57.732104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:58.732226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:00:59.732913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:00.733126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:01.733494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:02.733713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:03.440: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/27/23 15:01:03.441
  Sep 27 15:01:03.457: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 27 15:01:03.462: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 27 15:01:03.482: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 27 15:01:03.493: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/27/23 15:01:03.493
  E0927 15:01:03.734133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:04.734592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/27/23 15:01:05.504
  E0927 15:01:05.735645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:06.735850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:07.736491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:08.736585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:09.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4534" for this suite. @ 09/27/23 15:01:09.571
• [66.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/27/23 15:01:09.58
  Sep 27 15:01:09.580: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:01:09.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:09.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:09.593
  STEP: Creating configMap with name configmap-test-volume-c319349e-0d59-4b7e-8d5b-a4170eff36da @ 09/27/23 15:01:09.596
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:01:09.6
  E0927 15:01:09.736948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:10.737423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:11.738320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:12.738511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:01:13.612
  Sep 27 15:01:13.614: INFO: Trying to get logs from node worker-1 pod pod-configmaps-93864b1f-73c4-4f6e-8cbe-4cff5f3617b8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:01:13.62
  Sep 27 15:01:13.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6724" for this suite. @ 09/27/23 15:01:13.64
• [4.065 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/27/23 15:01:13.646
  Sep 27 15:01:13.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename containers @ 09/27/23 15:01:13.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:13.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:13.664
  STEP: Creating a pod to test override arguments @ 09/27/23 15:01:13.666
  E0927 15:01:13.739303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:14.739881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:15.740146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:16.740240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:01:17.681
  Sep 27 15:01:17.683: INFO: Trying to get logs from node worker-1 pod client-containers-0f6bda08-a881-499d-8841-86f483fdc315 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:01:17.688
  Sep 27 15:01:17.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3010" for this suite. @ 09/27/23 15:01:17.703
• [4.062 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 09/27/23 15:01:17.708
  Sep 27 15:01:17.708: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename runtimeclass @ 09/27/23 15:01:17.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:17.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:17.727
  STEP: Deleting RuntimeClass runtimeclass-4842-delete-me @ 09/27/23 15:01:17.734
  STEP: Waiting for the RuntimeClass to disappear @ 09/27/23 15:01:17.738
  E0927 15:01:17.740468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:17.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4842" for this suite. @ 09/27/23 15:01:17.746
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/27/23 15:01:17.755
  Sep 27 15:01:17.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:01:17.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:17.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:17.768
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:01:17.77
  E0927 15:01:18.740922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:19.741411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:20.741745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:21.741945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:01:21.787
  Sep 27 15:01:21.789: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-3bd79e6f-de2c-481d-9d97-457abb71a6d3 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:01:21.794
  Sep 27 15:01:21.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9945" for this suite. @ 09/27/23 15:01:21.815
• [4.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/27/23 15:01:21.82
  Sep 27 15:01:21.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:01:21.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:21.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:21.839
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:01:21.842
  E0927 15:01:22.742370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:23.742585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:24.743622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:25.743995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:01:25.86
  Sep 27 15:01:25.862: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-0a3b9df4-e190-489e-ac6d-4347e597495e container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:01:25.866
  Sep 27 15:01:25.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4910" for this suite. @ 09/27/23 15:01:25.881
• [4.066 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 09/27/23 15:01:25.886
  Sep 27 15:01:25.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 15:01:25.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:25.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:25.919
  STEP: Creating service test in namespace statefulset-9086 @ 09/27/23 15:01:25.921
  STEP: Looking for a node to schedule stateful set and pod @ 09/27/23 15:01:25.925
  STEP: Creating pod with conflicting port in namespace statefulset-9086 @ 09/27/23 15:01:25.928
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9086 @ 09/27/23 15:01:25.938
  E0927 15:01:26.744577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:27.745211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-9086 @ 09/27/23 15:01:27.943
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9086 @ 09/27/23 15:01:27.947
  Sep 27 15:01:27.969: INFO: Observed stateful pod in namespace: statefulset-9086, name: ss-0, uid: 5fcd1863-aff1-4b36-a484-77c95717f902, status phase: Pending. Waiting for statefulset controller to delete.
  Sep 27 15:01:27.983: INFO: Observed stateful pod in namespace: statefulset-9086, name: ss-0, uid: 5fcd1863-aff1-4b36-a484-77c95717f902, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 27 15:01:28.000: INFO: Observed stateful pod in namespace: statefulset-9086, name: ss-0, uid: 5fcd1863-aff1-4b36-a484-77c95717f902, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 27 15:01:28.003: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9086
  STEP: Removing pod with conflicting port in namespace statefulset-9086 @ 09/27/23 15:01:28.003
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9086 and will be in running state @ 09/27/23 15:01:28.023
  E0927 15:01:28.745305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:29.746076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:30.037: INFO: Deleting all statefulset in ns statefulset-9086
  Sep 27 15:01:30.039: INFO: Scaling statefulset ss to 0
  E0927 15:01:30.746616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:31.746911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:32.747011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:33.747141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:34.747592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:35.747795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:36.747924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:37.748161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:38.748714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:39.748950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:40.050: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 15:01:40.052: INFO: Deleting statefulset ss
  Sep 27 15:01:40.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9086" for this suite. @ 09/27/23 15:01:40.062
• [14.181 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/27/23 15:01:40.068
  Sep 27 15:01:40.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 15:01:40.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:40.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:40.086
  Sep 27 15:01:40.105: INFO: Create a RollingUpdate DaemonSet
  Sep 27 15:01:40.110: INFO: Check that daemon pods launch on every node of the cluster
  Sep 27 15:01:40.114: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:01:40.114: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 15:01:40.748992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:41.120: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:01:41.120: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 15:01:41.749101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:42.119: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 15:01:42.119: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  Sep 27 15:01:42.119: INFO: Update the DaemonSet to trigger a rollout
  Sep 27 15:01:42.131: INFO: Updating DaemonSet daemon-set
  E0927 15:01:42.749772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:43.140: INFO: Roll back the DaemonSet before rollout is complete
  Sep 27 15:01:43.147: INFO: Updating DaemonSet daemon-set
  Sep 27 15:01:43.147: INFO: Make sure DaemonSet rollback is complete
  Sep 27 15:01:43.149: INFO: Wrong image for pod: daemon-set-vncrg. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Sep 27 15:01:43.149: INFO: Pod daemon-set-vncrg is not available
  E0927 15:01:43.750437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:44.751536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:45.160: INFO: Pod daemon-set-wns9z is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 15:01:45.167
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8523, will wait for the garbage collector to delete the pods @ 09/27/23 15:01:45.167
  Sep 27 15:01:45.224: INFO: Deleting DaemonSet.extensions daemon-set took: 4.503171ms
  Sep 27 15:01:45.325: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.872039ms
  E0927 15:01:45.752337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:46.752619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:46.927: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:01:46.927: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 15:01:46.929: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16576"},"items":null}

  Sep 27 15:01:46.931: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16576"},"items":null}

  Sep 27 15:01:46.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8523" for this suite. @ 09/27/23 15:01:46.94
• [6.879 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 09/27/23 15:01:46.948
  Sep 27 15:01:46.948: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:01:46.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:46.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:46.96
  STEP: Counting existing ResourceQuota @ 09/27/23 15:01:46.962
  E0927 15:01:47.753625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:48.753926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:49.754012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:50.755079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:51.755730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/27/23 15:01:51.964
  STEP: Ensuring resource quota status is calculated @ 09/27/23 15:01:51.968
  E0927 15:01:52.756690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:53.756816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:01:53.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7333" for this suite. @ 09/27/23 15:01:53.974
• [7.030 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/27/23 15:01:53.979
  Sep 27 15:01:53.979: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 15:01:53.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:53.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:53.996
  E0927 15:01:54.757391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:55.758336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:56.759091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:57.759808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:58.760731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:01:59.761568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:00.761609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:01.761698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:02.762416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:03.762862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:04.763741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:05.764712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:06.765266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:07.765961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:08.766085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:09.766868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:10.767908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:11.768523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:12.768979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:13.769425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:14.769391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:15.769494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:16.769607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:17.770112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:18.770588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:19.771623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:20.772683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:21.773390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:22.773499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:23.774307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:24.775004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:25.775131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:26.775623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:27.776034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:28.776471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:29.776667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:30.777717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:31.777831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:32.778378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:33.778680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:34.779620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:35.779735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:36.780319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:37.780438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:38.780555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:39.781578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:40.781707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:41.781856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:42.782651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:43.783098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:44.783620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:45.784137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:46.784572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:47.784649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:48.785070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:49.785100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:50.786165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:51.786926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:52.787456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:53.787634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:02:54.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-881" for this suite. @ 09/27/23 15:02:54.009
• [60.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 09/27/23 15:02:54.017
  Sep 27 15:02:54.017: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/27/23 15:02:54.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:02:54.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:02:54.03
  Sep 27 15:02:54.032: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:02:54.787939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:02:55.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7749" for this suite. @ 09/27/23 15:02:55.057
• [1.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 09/27/23 15:02:55.064
  Sep 27 15:02:55.064: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename server-version @ 09/27/23 15:02:55.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:02:55.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:02:55.075
  STEP: Request ServerVersion @ 09/27/23 15:02:55.078
  STEP: Confirm major version @ 09/27/23 15:02:55.078
  Sep 27 15:02:55.078: INFO: Major version: 1
  STEP: Confirm minor version @ 09/27/23 15:02:55.078
  Sep 27 15:02:55.078: INFO: cleanMinorVersion: 28
  Sep 27 15:02:55.078: INFO: Minor version: 28
  Sep 27 15:02:55.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4123" for this suite. @ 09/27/23 15:02:55.081
• [0.026 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 09/27/23 15:02:55.091
  Sep 27 15:02:55.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 15:02:55.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:02:55.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:02:55.105
  STEP: creating a collection of services @ 09/27/23 15:02:55.108
  Sep 27 15:02:55.108: INFO: Creating e2e-svc-a-rcwgf
  Sep 27 15:02:55.184: INFO: Creating e2e-svc-b-ddkvs
  Sep 27 15:02:55.198: INFO: Creating e2e-svc-c-rbvwl
  STEP: deleting service collection @ 09/27/23 15:02:55.214
  Sep 27 15:02:55.245: INFO: Collection of services has been deleted
  Sep 27 15:02:55.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5909" for this suite. @ 09/27/23 15:02:55.247
• [0.161 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/27/23 15:02:55.253
  Sep 27 15:02:55.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename init-container @ 09/27/23 15:02:55.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:02:55.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:02:55.268
  STEP: creating the pod @ 09/27/23 15:02:55.27
  Sep 27 15:02:55.270: INFO: PodSpec: initContainers in spec.initContainers
  E0927 15:02:55.788668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:56.789348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:57.789859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:02:58.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-991" for this suite. @ 09/27/23 15:02:58.168
• [2.920 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/27/23 15:02:58.177
  Sep 27 15:02:58.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename cronjob @ 09/27/23 15:02:58.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:02:58.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:02:58.199
  STEP: Creating a ForbidConcurrent cronjob @ 09/27/23 15:02:58.201
  STEP: Ensuring a job is scheduled @ 09/27/23 15:02:58.205
  E0927 15:02:58.790662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:02:59.791228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/27/23 15:03:00.21
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/27/23 15:03:00.212
  STEP: Ensuring no more jobs are scheduled @ 09/27/23 15:03:00.214
  E0927 15:03:00.791333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:01.791631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:02.792359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:03.792697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:04.793146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:05.793957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:06.794749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:07.794863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:08.795449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:09.796116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:10.796253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:11.796692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:12.797272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:13.797499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:14.798430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:15.798674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:16.799243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:17.799463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:18.800059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:19.800608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:20.801377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:21.801500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:22.802490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:23.802733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:24.803647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:25.803896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:26.804639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:27.804796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:28.805597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:29.806115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:30.806721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:31.806827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:32.807785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:33.808725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:34.809093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:35.809323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:36.809936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:37.810172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:38.810637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:39.811240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:40.811765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:41.812738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:42.813374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:43.813646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:44.814573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:45.814824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:46.815540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:47.815813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:48.816496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:49.817165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:50.817883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:51.818115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:52.818688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:53.818934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:54.819766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:55.820217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:56.820298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:57.820458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:58.820589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:03:59.821511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:00.822287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:01.822444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:02.822771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:03.823022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:04.824026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:05.824258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:06.824404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:07.824621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:08.824760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:09.825361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:10.825480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:11.825708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:12.826296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:13.826777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:14.826810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:15.827483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:16.827741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:17.828145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:18.828706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:19.829649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:20.830593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:21.830953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:22.831626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:23.831830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:24.832516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:25.832676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:26.832893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:27.833249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:28.833356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:29.833502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:30.833626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:31.833834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:32.834362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:33.834570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:34.835599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:35.835800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:36.835920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:37.836123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:38.836641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:39.837181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:40.837938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:41.838134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:42.838228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:43.838429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:44.839239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:45.839438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:46.839674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:47.839776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:48.840619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:49.840986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:50.841644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:51.841773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:52.841952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:53.842087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:54.842225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:55.842344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:56.842476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:57.842688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:58.843558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:04:59.844166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:00.844750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:01.844979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:02.845758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:03.845908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:04.846132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:05.846328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:06.846813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:07.847025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:08.847654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:09.848269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:10.848952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:11.849108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:12.849631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:13.849845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:14.850067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:15.850270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:16.850890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:17.851132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:18.851568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:19.852372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:20.852728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:21.852839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:22.853091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:23.853246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:24.853686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:25.853870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:26.854002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:27.854196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:28.854808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:29.855171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:30.855471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:31.855623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:32.856267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:33.856711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:34.857562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:35.857777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:36.857872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:37.858069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:38.858763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:39.858903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:40.859594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:41.859706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:42.860488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:43.860825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:44.861789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:45.861992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:46.862612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:47.862810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:48.863138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:49.863581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:50.864191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:51.864716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:52.865510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:53.866532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:54.867399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:55.867542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:56.868446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:57.868662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:58.869622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:05:59.869816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:00.869924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:01.870108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:02.870527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:03.871100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:04.871983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:05.872710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:06.873290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:07.873428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:08.873958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:09.874251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:10.875277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:11.875423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:12.875647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:13.876223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:14.876706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:15.876938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:16.877047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:17.877421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:18.877919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:19.878048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:20.878186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:21.879081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:22.879913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:23.880627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:24.881658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:25.881861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:26.882427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:27.882662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:28.882854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:29.883407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:30.883620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:31.883793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:32.883992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:33.884390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:34.884636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:35.884835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:36.885412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:37.885601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:38.886556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:39.886716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:40.887708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:41.887825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:42.888435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:43.888497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:44.888596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:45.888762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:46.889374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:47.889577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:48.890422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:49.890633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:50.891137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:51.891347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:52.892201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:53.892622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:54.893139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:55.893345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:56.893855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:57.894100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:58.894782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:06:59.894917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:00.895575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:01.895785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:02.896336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:03.896602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:04.897215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:05.897474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:06.897666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:07.897891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:08.897952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:09.898056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:10.898202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:11.898408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:12.898547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:13.898972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:14.899611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:15.899831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:16.900513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:17.900709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:18.901080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:19.901306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:20.901938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:21.902186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:22.902799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:23.903246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:24.903655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:25.903872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:26.904456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:27.904668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:28.905189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:29.905410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:30.905969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:31.906197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:32.906702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:33.907114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:34.907158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:35.907366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:36.908115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:37.908324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:38.909221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:39.909753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:40.909865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:41.910075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:42.910830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:43.911240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:44.911623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:45.911829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:46.912418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:47.912550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:48.913245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:49.913387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:50.913547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:51.913778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:52.913928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:53.914525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:54.915090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:55.915217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:56.915699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:57.915892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:58.916812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:07:59.917077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/27/23 15:08:00.219
  Sep 27 15:08:00.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6517" for this suite. @ 09/27/23 15:08:00.225
• [302.052 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 09/27/23 15:08:00.229
  Sep 27 15:08:00.229: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:08:00.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:00.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:00.249
  STEP: Creating a ResourceQuota with terminating scope @ 09/27/23 15:08:00.252
  STEP: Ensuring ResourceQuota status is calculated @ 09/27/23 15:08:00.257
  E0927 15:08:00.917902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:01.918142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/27/23 15:08:02.26
  STEP: Ensuring ResourceQuota status is calculated @ 09/27/23 15:08:02.263
  E0927 15:08:02.918355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:03.918793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/27/23 15:08:04.266
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/27/23 15:08:04.276
  E0927 15:08:04.919719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:05.920721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/27/23 15:08:06.279
  E0927 15:08:06.921061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:07.921268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/27/23 15:08:08.289
  STEP: Ensuring resource quota status released the pod usage @ 09/27/23 15:08:08.298
  E0927 15:08:08.921330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:09.921564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/27/23 15:08:10.301
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/27/23 15:08:10.309
  E0927 15:08:10.922157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:11.922413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/27/23 15:08:12.312
  E0927 15:08:12.923026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:13.923420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/27/23 15:08:14.314
  STEP: Ensuring resource quota status released the pod usage @ 09/27/23 15:08:14.323
  E0927 15:08:14.923801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:15.924045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:16.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-90" for this suite. @ 09/27/23 15:08:16.327
• [16.104 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 09/27/23 15:08:16.333
  Sep 27 15:08:16.333: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:08:16.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:16.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:16.345
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/27/23 15:08:16.347
  Sep 27 15:08:16.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-9548 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 27 15:08:16.415: INFO: stderr: ""
  Sep 27 15:08:16.415: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/27/23 15:08:16.415
  E0927 15:08:16.924107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:17.924214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:18.924755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:19.925002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:20.925239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/27/23 15:08:21.466
  Sep 27 15:08:21.466: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-9548 get pod e2e-test-httpd-pod -o json'
  Sep 27 15:08:21.532: INFO: stderr: ""
  Sep 27 15:08:21.532: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-09-27T15:08:16Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9548\",\n        \"resourceVersion\": \"17588\",\n        \"uid\": \"e30bd861-e806-4619-a1e9-699597a4c5f1\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qr7nt\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker-1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-qr7nt\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-27T15:08:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-27T15:08:17Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-27T15:08:17Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-27T15:08:16Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://5d24ce61c7e1ee5e63322b53efd7087dd414fbe8fa94019f02964eea0f579494\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-09-27T15:08:17Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.0.51.64\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.0.182\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.0.182\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-09-27T15:08:16Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/27/23 15:08:21.533
  Sep 27 15:08:21.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-9548 replace -f -'
  E0927 15:08:21.925991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:22.011: INFO: stderr: ""
  Sep 27 15:08:22.011: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 09/27/23 15:08:22.011
  Sep 27 15:08:22.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-9548 delete pods e2e-test-httpd-pod'
  E0927 15:08:22.927007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:23.699: INFO: stderr: ""
  Sep 27 15:08:23.699: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 27 15:08:23.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9548" for this suite. @ 09/27/23 15:08:23.702
• [7.373 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/27/23 15:08:23.706
  Sep 27 15:08:23.706: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename containers @ 09/27/23 15:08:23.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:23.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:23.719
  STEP: Creating a pod to test override all @ 09/27/23 15:08:23.721
  E0927 15:08:23.927479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:24.927649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:25.928323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:26.928548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:08:27.735
  Sep 27 15:08:27.737: INFO: Trying to get logs from node worker-1 pod client-containers-e0625f8e-18c8-4cce-b92c-17d4ea516583 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:08:27.75
  Sep 27 15:08:27.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8131" for this suite. @ 09/27/23 15:08:27.764
• [4.062 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 09/27/23 15:08:27.768
  Sep 27 15:08:27.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 15:08:27.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:27.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:27.782
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/27/23 15:08:27.784
  E0927 15:08:27.929359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:28.929952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/27/23 15:08:29.796
  STEP: Then the orphan pod is adopted @ 09/27/23 15:08:29.8
  E0927 15:08:29.930838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:30.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4024" for this suite. @ 09/27/23 15:08:30.807
• [3.043 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/27/23 15:08:30.812
  Sep 27 15:08:30.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:08:30.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:30.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:30.823
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:08:30.825
  E0927 15:08:30.931058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:31.931541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:08:32.835
  Sep 27 15:08:32.837: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-7b2af82b-4362-49cb-87f9-756f71293e7b container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:08:32.843
  Sep 27 15:08:32.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8501" for this suite. @ 09/27/23 15:08:32.859
• [2.051 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/27/23 15:08:32.864
  Sep 27 15:08:32.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:08:32.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:32.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:32.879
  STEP: Creating configMap with name configmap-test-volume-map-24884ec9-8c52-436e-bfff-72587e172182 @ 09/27/23 15:08:32.882
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:08:32.885
  E0927 15:08:32.931728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:33.932118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:08:34.901
  Sep 27 15:08:34.903: INFO: Trying to get logs from node worker-1 pod pod-configmaps-79c9dd82-47cf-4501-a278-3949d1b392e6 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:08:34.908
  Sep 27 15:08:34.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9075" for this suite. @ 09/27/23 15:08:34.924
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 09/27/23 15:08:34.932
  Sep 27 15:08:34.932: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:08:34.932523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:08:34.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:34.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:34.946
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/27/23 15:08:34.954
  E0927 15:08:35.932329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:36.932842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:08:36.965
  Sep 27 15:08:36.967: INFO: Trying to get logs from node worker-1 pod pod-362d71e5-62b9-4406-aba8-03879eb656be container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:08:36.972
  Sep 27 15:08:36.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9939" for this suite. @ 09/27/23 15:08:36.989
• [2.062 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/27/23 15:08:36.994
  Sep 27 15:08:36.994: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 15:08:36.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:37.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:37.011
  STEP: Creating simple DaemonSet "daemon-set" @ 09/27/23 15:08:37.023
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 15:08:37.031
  Sep 27 15:08:37.036: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:08:37.037: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 15:08:37.932946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:38.041: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:08:38.041: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 15:08:38.933972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:39.041: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 15:08:39.041: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/27/23 15:08:39.043
  Sep 27 15:08:39.057: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:08:39.057: INFO: Node worker-1 is running 0 daemon pod, expected 1
  E0927 15:08:39.934266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:40.062: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:08:40.062: INFO: Node worker-1 is running 0 daemon pod, expected 1
  E0927 15:08:40.934353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:41.062: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 15:08:41.062: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 15:08:41.064
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6588, will wait for the garbage collector to delete the pods @ 09/27/23 15:08:41.064
  Sep 27 15:08:41.122: INFO: Deleting DaemonSet.extensions daemon-set took: 4.8306ms
  Sep 27 15:08:41.222: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.414451ms
  E0927 15:08:41.935314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:42.824: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:08:42.824: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 15:08:42.826: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17855"},"items":null}

  Sep 27 15:08:42.827: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17855"},"items":null}

  Sep 27 15:08:42.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6588" for this suite. @ 09/27/23 15:08:42.835
• [5.846 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/27/23 15:08:42.841
  Sep 27 15:08:42.841: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename proxy @ 09/27/23 15:08:42.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:42.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:42.863
  Sep 27 15:08:42.866: INFO: Creating pod...
  E0927 15:08:42.935569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:43.935600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:44.877: INFO: Creating service...
  Sep 27 15:08:44.890: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/pods/agnhost/proxy/some/path/with/DELETE
  Sep 27 15:08:44.896: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 27 15:08:44.896: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/pods/agnhost/proxy/some/path/with/GET
  Sep 27 15:08:44.898: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 27 15:08:44.899: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/pods/agnhost/proxy/some/path/with/HEAD
  Sep 27 15:08:44.901: INFO: http.Client request:HEAD | StatusCode:200
  Sep 27 15:08:44.901: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/pods/agnhost/proxy/some/path/with/OPTIONS
  Sep 27 15:08:44.903: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 27 15:08:44.903: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/pods/agnhost/proxy/some/path/with/PATCH
  Sep 27 15:08:44.905: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 27 15:08:44.905: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/pods/agnhost/proxy/some/path/with/POST
  Sep 27 15:08:44.908: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 27 15:08:44.908: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/pods/agnhost/proxy/some/path/with/PUT
  Sep 27 15:08:44.910: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 27 15:08:44.910: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/services/test-service/proxy/some/path/with/DELETE
  Sep 27 15:08:44.913: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 27 15:08:44.913: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/services/test-service/proxy/some/path/with/GET
  Sep 27 15:08:44.916: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 27 15:08:44.916: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/services/test-service/proxy/some/path/with/HEAD
  Sep 27 15:08:44.919: INFO: http.Client request:HEAD | StatusCode:200
  Sep 27 15:08:44.919: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/services/test-service/proxy/some/path/with/OPTIONS
  Sep 27 15:08:44.922: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 27 15:08:44.922: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/services/test-service/proxy/some/path/with/PATCH
  Sep 27 15:08:44.924: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 27 15:08:44.925: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/services/test-service/proxy/some/path/with/POST
  Sep 27 15:08:44.927: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 27 15:08:44.927: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2594/services/test-service/proxy/some/path/with/PUT
  Sep 27 15:08:44.931: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 27 15:08:44.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2594" for this suite. @ 09/27/23 15:08:44.933
  E0927 15:08:44.936347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/27/23 15:08:44.942
  Sep 27 15:08:44.942: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:08:44.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:44.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:44.953
  STEP: Creating configMap with name configmap-projected-all-test-volume-fb2ebbce-548c-4662-83e6-81d0dac23e86 @ 09/27/23 15:08:44.955
  STEP: Creating secret with name secret-projected-all-test-volume-8774a4c6-5850-49ca-b55a-46cbb0e47624 @ 09/27/23 15:08:44.963
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/27/23 15:08:44.967
  E0927 15:08:45.937073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:46.937496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:08:46.978
  Sep 27 15:08:46.980: INFO: Trying to get logs from node worker-1 pod projected-volume-61e5b9c3-7c31-4b41-9a16-11d07ed1c71f container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:08:46.985
  Sep 27 15:08:47.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3498" for this suite. @ 09/27/23 15:08:47.003
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 09/27/23 15:08:47.011
  Sep 27 15:08:47.011: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename events @ 09/27/23 15:08:47.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:47.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:47.026
  STEP: Create set of events @ 09/27/23 15:08:47.028
  Sep 27 15:08:47.032: INFO: created test-event-1
  Sep 27 15:08:47.035: INFO: created test-event-2
  Sep 27 15:08:47.039: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/27/23 15:08:47.039
  STEP: delete collection of events @ 09/27/23 15:08:47.041
  Sep 27 15:08:47.041: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/27/23 15:08:47.089
  Sep 27 15:08:47.089: INFO: requesting list of events to confirm quantity
  Sep 27 15:08:47.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4508" for this suite. @ 09/27/23 15:08:47.093
• [0.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 09/27/23 15:08:47.099
  Sep 27 15:08:47.099: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:08:47.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:47.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:47.112
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/27/23 15:08:47.115
  E0927 15:08:47.938099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:48.938687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:49.939286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:50.939514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:08:51.13
  Sep 27 15:08:51.132: INFO: Trying to get logs from node worker-1 pod pod-bce182f9-1705-4e21-a74c-b75b546e980e container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:08:51.137
  Sep 27 15:08:51.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2557" for this suite. @ 09/27/23 15:08:51.152
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/27/23 15:08:51.159
  Sep 27 15:08:51.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename containers @ 09/27/23 15:08:51.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:51.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:51.171
  STEP: Creating a pod to test override command @ 09/27/23 15:08:51.173
  E0927 15:08:51.939737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:52.940728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:53.941591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:54.941681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:08:55.19
  Sep 27 15:08:55.192: INFO: Trying to get logs from node worker-1 pod client-containers-c28f7764-3d6f-492c-9698-b74379f114f7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:08:55.197
  Sep 27 15:08:55.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6217" for this suite. @ 09/27/23 15:08:55.213
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/27/23 15:08:55.219
  Sep 27 15:08:55.219: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sched-pred @ 09/27/23 15:08:55.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:55.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:55.232
  Sep 27 15:08:55.235: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 27 15:08:55.239: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 15:08:55.241: INFO: 
  Logging pods the apiserver thinks is on node worker-0 before test
  Sep 27 15:08:55.244: INFO: coredns-85df575cdb-glg7x from kube-system started at 2023-09-27 14:08:27 +0000 UTC (1 container statuses recorded)
  Sep 27 15:08:55.244: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 15:08:55.244: INFO: konnectivity-agent-lm7w4 from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:08:55.244: INFO: 	Container konnectivity-agent ready: true, restart count 0
  Sep 27 15:08:55.244: INFO: kube-proxy-x8hwg from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:08:55.244: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 27 15:08:55.244: INFO: kube-router-2lqf8 from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:08:55.244: INFO: 	Container kube-router ready: true, restart count 0
  Sep 27 15:08:55.244: INFO: metrics-server-7556957bb7-ghxpt from kube-system started at 2023-09-27 14:56:29 +0000 UTC (1 container statuses recorded)
  Sep 27 15:08:55.244: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 27 15:08:55.244: INFO: sonobuoy-e2e-job-4b71ff61f1034ef7 from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 15:08:55.244: INFO: 	Container e2e ready: true, restart count 0
  Sep 27 15:08:55.244: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:08:55.245: INFO: sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-rrrhb from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 15:08:55.245: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:08:55.245: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 15:08:55.245: INFO: 
  Logging pods the apiserver thinks is on node worker-1 before test
  Sep 27 15:08:55.248: INFO: coredns-85df575cdb-q7cgv from kube-system started at 2023-09-27 14:57:02 +0000 UTC (1 container statuses recorded)
  Sep 27 15:08:55.248: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 15:08:55.248: INFO: konnectivity-agent-w8ljl from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:08:55.248: INFO: 	Container konnectivity-agent ready: true, restart count 0
  Sep 27 15:08:55.248: INFO: kube-proxy-5sdjn from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:08:55.248: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 27 15:08:55.248: INFO: kube-router-tzh2q from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:08:55.248: INFO: 	Container kube-router ready: true, restart count 0
  Sep 27 15:08:55.248: INFO: sonobuoy from sonobuoy started at 2023-09-27 14:08:35 +0000 UTC (1 container statuses recorded)
  Sep 27 15:08:55.248: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 27 15:08:55.248: INFO: sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-fztjb from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 15:08:55.248: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:08:55.248: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/27/23 15:08:55.248
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1788c9f9fe9fab1d], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling..] @ 09/27/23 15:08:55.266
  E0927 15:08:55.942259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:08:56.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5670" for this suite. @ 09/27/23 15:08:56.265
• [1.051 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/27/23 15:08:56.271
  Sep 27 15:08:56.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/27/23 15:08:56.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:56.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:56.287
  STEP: Setting up the test @ 09/27/23 15:08:56.289
  STEP: Creating hostNetwork=false pod @ 09/27/23 15:08:56.29
  E0927 15:08:56.943274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:57.943784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/27/23 15:08:58.302
  E0927 15:08:58.944014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:08:59.944160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/27/23 15:09:00.315
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/27/23 15:09:00.315
  Sep 27 15:09:00.316: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8906 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:09:00.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:09:00.316: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:09:00.316: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8906/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 27 15:09:00.398: INFO: Exec stderr: ""
  Sep 27 15:09:00.398: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8906 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:09:00.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:09:00.399: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:09:00.399: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8906/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 27 15:09:00.473: INFO: Exec stderr: ""
  Sep 27 15:09:00.473: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8906 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:09:00.473: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:09:00.474: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:09:00.474: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8906/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 27 15:09:00.561: INFO: Exec stderr: ""
  Sep 27 15:09:00.561: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8906 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:09:00.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:09:00.562: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:09:00.562: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8906/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 27 15:09:00.645: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/27/23 15:09:00.646
  Sep 27 15:09:00.646: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8906 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:09:00.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:09:00.646: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:09:00.646: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8906/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 27 15:09:00.717: INFO: Exec stderr: ""
  Sep 27 15:09:00.717: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8906 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:09:00.717: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:09:00.718: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:09:00.718: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8906/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 27 15:09:00.805: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/27/23 15:09:00.805
  Sep 27 15:09:00.805: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8906 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:09:00.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:09:00.806: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:09:00.806: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8906/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 27 15:09:00.883: INFO: Exec stderr: ""
  Sep 27 15:09:00.883: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8906 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:09:00.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:09:00.884: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:09:00.884: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8906/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0927 15:09:00.945138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:09:00.971: INFO: Exec stderr: ""
  Sep 27 15:09:00.971: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8906 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:09:00.971: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:09:00.971: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:09:00.971: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8906/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 27 15:09:01.066: INFO: Exec stderr: ""
  Sep 27 15:09:01.066: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8906 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:09:01.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:09:01.067: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:09:01.067: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8906/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 27 15:09:01.151: INFO: Exec stderr: ""
  Sep 27 15:09:01.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8906" for this suite. @ 09/27/23 15:09:01.154
• [4.892 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/27/23 15:09:01.163
  Sep 27 15:09:01.163: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:09:01.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:09:01.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:09:01.176
  STEP: Creating configMap with name configmap-test-upd-afe99abf-3963-4cfc-9e21-f87243772a7a @ 09/27/23 15:09:01.18
  STEP: Creating the pod @ 09/27/23 15:09:01.184
  E0927 15:09:01.945341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:02.945840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-afe99abf-3963-4cfc-9e21-f87243772a7a @ 09/27/23 15:09:03.215
  STEP: waiting to observe update in volume @ 09/27/23 15:09:03.219
  E0927 15:09:03.946472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:04.946699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:05.946953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:06.947217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:07.948182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:08.948741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:09.948838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:10.949075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:11.950063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:12.950183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:13.950453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:14.950686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:15.951216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:16.951453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:17.951617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:18.952121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:19.952750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:20.952964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:21.953405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:22.953619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:23.954345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:24.954472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:25.955586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:26.955703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:27.956733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:28.957044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:29.957441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:30.957537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:31.957622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:32.957835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:33.958526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:34.958738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:35.958895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:36.959110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:37.959661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:38.960038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:39.960737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:40.960957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:41.961030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:42.961250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:43.961701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:44.961937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:45.962020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:46.962223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:47.962252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:48.962989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:49.963095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:50.963290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:51.963631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:52.963756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:53.964637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:54.964790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:55.965673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:56.965881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:57.966099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:58.966603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:09:59.967454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:00.967665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:01.968174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:02.968743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:03.969340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:04.969561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:05.970460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:06.971055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:07.971570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:08.972107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:09.972211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:10.972442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:10:11.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4370" for this suite. @ 09/27/23 15:10:11.467
• [70.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 09/27/23 15:10:11.476
  Sep 27 15:10:11.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:10:11.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:10:11.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:10:11.49
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/27/23 15:10:11.492
  Sep 27 15:10:11.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-6095 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 27 15:10:11.561: INFO: stderr: ""
  Sep 27 15:10:11.561: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/27/23 15:10:11.561
  Sep 27 15:10:11.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-6095 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Sep 27 15:10:11.630: INFO: stderr: ""
  Sep 27 15:10:11.630: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/27/23 15:10:11.63
  Sep 27 15:10:11.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-6095 delete pods e2e-test-httpd-pod'
  E0927 15:10:11.973134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:12.973245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:13.973739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:10:13.976: INFO: stderr: ""
  Sep 27 15:10:13.976: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 27 15:10:13.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6095" for this suite. @ 09/27/23 15:10:13.979
• [2.509 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 09/27/23 15:10:13.986
  Sep 27 15:10:13.986: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:10:13.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:10:13.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:10:13.998
  STEP: apply creating a deployment @ 09/27/23 15:10:14.001
  Sep 27 15:10:14.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-125" for this suite. @ 09/27/23 15:10:14.012
• [0.038 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/27/23 15:10:14.024
  Sep 27 15:10:14.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:10:14.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:10:14.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:10:14.037
  STEP: Creating configMap with name projected-configmap-test-volume-map-e4981b65-eda2-4b1b-8d02-4070a28deacd @ 09/27/23 15:10:14.039
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:10:14.045
  E0927 15:10:14.973641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:15.974064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:16.974323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:17.974528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:10:18.06
  Sep 27 15:10:18.061: INFO: Trying to get logs from node worker-1 pod pod-projected-configmaps-71e40fdd-e17d-4943-99eb-60f5982aa4f3 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:10:18.066
  Sep 27 15:10:18.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4756" for this suite. @ 09/27/23 15:10:18.082
• [4.064 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/27/23 15:10:18.089
  Sep 27 15:10:18.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:10:18.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:10:18.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:10:18.1
  STEP: Creating the pod @ 09/27/23 15:10:18.103
  E0927 15:10:18.975197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:19.975406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:10:20.629: INFO: Successfully updated pod "labelsupdate6e0fd583-dcdc-4d9d-85b7-a9b36a911b06"
  E0927 15:10:20.975894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:21.976045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:22.976635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:23.976981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:10:24.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7393" for this suite. @ 09/27/23 15:10:24.648
• [6.564 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/27/23 15:10:24.653
  Sep 27 15:10:24.653: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubelet-test @ 09/27/23 15:10:24.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:10:24.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:10:24.668
  E0927 15:10:24.977704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:25.977955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:10:26.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7668" for this suite. @ 09/27/23 15:10:26.69
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/27/23 15:10:26.695
  Sep 27 15:10:26.695: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sched-pred @ 09/27/23 15:10:26.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:10:26.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:10:26.708
  Sep 27 15:10:26.710: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 27 15:10:26.715: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 15:10:26.717: INFO: 
  Logging pods the apiserver thinks is on node worker-0 before test
  Sep 27 15:10:26.720: INFO: coredns-85df575cdb-glg7x from kube-system started at 2023-09-27 14:08:27 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.720: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 15:10:26.720: INFO: konnectivity-agent-lm7w4 from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.720: INFO: 	Container konnectivity-agent ready: true, restart count 0
  Sep 27 15:10:26.720: INFO: kube-proxy-x8hwg from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.720: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 27 15:10:26.720: INFO: kube-router-2lqf8 from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.720: INFO: 	Container kube-router ready: true, restart count 0
  Sep 27 15:10:26.720: INFO: metrics-server-7556957bb7-ghxpt from kube-system started at 2023-09-27 14:56:29 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.720: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 27 15:10:26.720: INFO: sonobuoy-e2e-job-4b71ff61f1034ef7 from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 15:10:26.720: INFO: 	Container e2e ready: true, restart count 0
  Sep 27 15:10:26.720: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:10:26.720: INFO: sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-rrrhb from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 15:10:26.720: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:10:26.720: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 15:10:26.720: INFO: 
  Logging pods the apiserver thinks is on node worker-1 before test
  Sep 27 15:10:26.724: INFO: labelsupdate6e0fd583-dcdc-4d9d-85b7-a9b36a911b06 from downward-api-7393 started at 2023-09-27 15:10:18 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.724: INFO: 	Container client-container ready: true, restart count 0
  Sep 27 15:10:26.724: INFO: coredns-85df575cdb-q7cgv from kube-system started at 2023-09-27 14:57:02 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.724: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 15:10:26.724: INFO: konnectivity-agent-w8ljl from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.724: INFO: 	Container konnectivity-agent ready: true, restart count 0
  Sep 27 15:10:26.724: INFO: kube-proxy-5sdjn from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.724: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 27 15:10:26.724: INFO: kube-router-tzh2q from kube-system started at 2023-09-27 14:08:09 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.724: INFO: 	Container kube-router ready: true, restart count 0
  Sep 27 15:10:26.724: INFO: busybox-scheduling-aa796e66-43d2-4d59-bfbe-c80d152ea31d from kubelet-test-7668 started at 2023-09-27 15:10:24 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.724: INFO: 	Container busybox-scheduling-aa796e66-43d2-4d59-bfbe-c80d152ea31d ready: true, restart count 0
  Sep 27 15:10:26.724: INFO: sonobuoy from sonobuoy started at 2023-09-27 14:08:35 +0000 UTC (1 container statuses recorded)
  Sep 27 15:10:26.724: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 27 15:10:26.724: INFO: sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-fztjb from sonobuoy started at 2023-09-27 14:08:39 +0000 UTC (2 container statuses recorded)
  Sep 27 15:10:26.724: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:10:26.724: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node worker-0 @ 09/27/23 15:10:26.736
  STEP: verifying the node has the label node worker-1 @ 09/27/23 15:10:26.746
  Sep 27 15:10:26.754: INFO: Pod labelsupdate6e0fd583-dcdc-4d9d-85b7-a9b36a911b06 requesting resource cpu=0m on Node worker-1
  Sep 27 15:10:26.755: INFO: Pod coredns-85df575cdb-glg7x requesting resource cpu=100m on Node worker-0
  Sep 27 15:10:26.755: INFO: Pod coredns-85df575cdb-q7cgv requesting resource cpu=100m on Node worker-1
  Sep 27 15:10:26.755: INFO: Pod konnectivity-agent-lm7w4 requesting resource cpu=0m on Node worker-0
  Sep 27 15:10:26.755: INFO: Pod konnectivity-agent-w8ljl requesting resource cpu=0m on Node worker-1
  Sep 27 15:10:26.755: INFO: Pod kube-proxy-5sdjn requesting resource cpu=0m on Node worker-1
  Sep 27 15:10:26.756: INFO: Pod kube-proxy-x8hwg requesting resource cpu=0m on Node worker-0
  Sep 27 15:10:26.756: INFO: Pod kube-router-2lqf8 requesting resource cpu=250m on Node worker-0
  Sep 27 15:10:26.756: INFO: Pod kube-router-tzh2q requesting resource cpu=250m on Node worker-1
  Sep 27 15:10:26.756: INFO: Pod metrics-server-7556957bb7-ghxpt requesting resource cpu=10m on Node worker-0
  Sep 27 15:10:26.756: INFO: Pod busybox-scheduling-aa796e66-43d2-4d59-bfbe-c80d152ea31d requesting resource cpu=0m on Node worker-1
  Sep 27 15:10:26.756: INFO: Pod sonobuoy requesting resource cpu=0m on Node worker-1
  Sep 27 15:10:26.756: INFO: Pod sonobuoy-e2e-job-4b71ff61f1034ef7 requesting resource cpu=0m on Node worker-0
  Sep 27 15:10:26.756: INFO: Pod sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-fztjb requesting resource cpu=0m on Node worker-1
  Sep 27 15:10:26.756: INFO: Pod sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-rrrhb requesting resource cpu=0m on Node worker-0
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/27/23 15:10:26.756
  Sep 27 15:10:26.756: INFO: Creating a pod which consumes cpu=2548m on Node worker-0
  Sep 27 15:10:26.762: INFO: Creating a pod which consumes cpu=2555m on Node worker-1
  E0927 15:10:26.978883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:27.979378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/27/23 15:10:28.776
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b340f9d5-fae2-4338-a701-6ecf07f04c2e.1788ca0f4d486162], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1432/filler-pod-b340f9d5-fae2-4338-a701-6ecf07f04c2e to worker-1] @ 09/27/23 15:10:28.778
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b340f9d5-fae2-4338-a701-6ecf07f04c2e.1788ca0f696c659a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/27/23 15:10:28.779
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b340f9d5-fae2-4338-a701-6ecf07f04c2e.1788ca0f6a7c46b0], Reason = [Created], Message = [Created container filler-pod-b340f9d5-fae2-4338-a701-6ecf07f04c2e] @ 09/27/23 15:10:28.779
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b340f9d5-fae2-4338-a701-6ecf07f04c2e.1788ca0f70011504], Reason = [Started], Message = [Started container filler-pod-b340f9d5-fae2-4338-a701-6ecf07f04c2e] @ 09/27/23 15:10:28.779
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-def744a6-699d-4966-9c14-e31a14b78bfc.1788ca0f4cf3cbf1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1432/filler-pod-def744a6-699d-4966-9c14-e31a14b78bfc to worker-0] @ 09/27/23 15:10:28.779
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-def744a6-699d-4966-9c14-e31a14b78bfc.1788ca0f6b9a4c41], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/27/23 15:10:28.779
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-def744a6-699d-4966-9c14-e31a14b78bfc.1788ca0f6d23b34e], Reason = [Created], Message = [Created container filler-pod-def744a6-699d-4966-9c14-e31a14b78bfc] @ 09/27/23 15:10:28.779
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-def744a6-699d-4966-9c14-e31a14b78bfc.1788ca0f738ed2b4], Reason = [Started], Message = [Started container filler-pod-def744a6-699d-4966-9c14-e31a14b78bfc] @ 09/27/23 15:10:28.779
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1788ca0fc52c5731], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod..] @ 09/27/23 15:10:28.79
  E0927 15:10:28.979920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node worker-0 @ 09/27/23 15:10:29.789
  STEP: verifying the node doesn't have the label node @ 09/27/23 15:10:29.799
  STEP: removing the label node off the node worker-1 @ 09/27/23 15:10:29.802
  STEP: verifying the node doesn't have the label node @ 09/27/23 15:10:29.813
  Sep 27 15:10:29.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1432" for this suite. @ 09/27/23 15:10:29.818
• [3.130 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/27/23 15:10:29.826
  Sep 27 15:10:29.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 15:10:29.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:10:29.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:10:29.839
  STEP: Creating a pod to test substitution in container's command @ 09/27/23 15:10:29.842
  E0927 15:10:29.980370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:30.981287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:31.981823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:32.982380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:10:33.857
  Sep 27 15:10:33.858: INFO: Trying to get logs from node worker-0 pod var-expansion-3b79934c-85d3-44d4-ace4-12c42b666f95 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 15:10:33.863
  Sep 27 15:10:33.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9649" for this suite. @ 09/27/23 15:10:33.884
• [4.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 09/27/23 15:10:33.89
  Sep 27 15:10:33.890: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 15:10:33.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:10:33.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:10:33.905
  Sep 27 15:10:33.920: INFO: created pod
  E0927 15:10:33.982701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:34.983080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:35.983985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:36.984106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:10:37.927
  E0927 15:10:37.985078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:38.986092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:39.986313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:40.986528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:41.986730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:42.986962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:43.987745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:44.987949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:45.988196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:46.988400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:47.988732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:48.989288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:49.989445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:50.989666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:51.989900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:52.990098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:53.990494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:54.990647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:55.990792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:56.991001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:57.991123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:58.991994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:10:59.992133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:00.992379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:01.992719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:02.993123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:03.993610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:04.993829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:05.994032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:06.994254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:11:07.927: INFO: polling logs
  Sep 27 15:11:07.934: INFO: Pod logs: 
  I0927 15:10:34.599411       1 log.go:194] OK: Got token
  I0927 15:10:34.599489       1 log.go:194] validating with in-cluster discovery
  I0927 15:10:34.599786       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I0927 15:10:34.599822       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7962:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000519d00), NotBefore:(*jwt.NumericDate)(0xc000519de8), IssuedAt:(*jwt.NumericDate)(0xc000519d10), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7962", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"d7d94f94-949b-44d1-adbb-5352533a5e61"}}}
  I0927 15:10:34.607715       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0927 15:10:34.609130       1 log.go:194] OK: Validated signature on JWT
  I0927 15:10:34.609219       1 log.go:194] OK: Got valid claims from token!
  I0927 15:10:34.609261       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7962:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00021e670), NotBefore:(*jwt.NumericDate)(0xc00021e6c8), IssuedAt:(*jwt.NumericDate)(0xc00021e678), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7962", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"d7d94f94-949b-44d1-adbb-5352533a5e61"}}}

  Sep 27 15:11:07.934: INFO: completed pod
  Sep 27 15:11:07.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7962" for this suite. @ 09/27/23 15:11:07.94
• [34.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 09/27/23 15:11:07.945
  Sep 27 15:11:07.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 15:11:07.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:11:07.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:11:07.958
  STEP: Creating ReplicationController "e2e-rc-s9dbl" @ 09/27/23 15:11:07.96
  Sep 27 15:11:07.964: INFO: Get Replication Controller "e2e-rc-s9dbl" to confirm replicas
  E0927 15:11:07.994478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:11:08.967: INFO: Get Replication Controller "e2e-rc-s9dbl" to confirm replicas
  Sep 27 15:11:08.969: INFO: Found 1 replicas for "e2e-rc-s9dbl" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-s9dbl" @ 09/27/23 15:11:08.969
  STEP: Updating a scale subresource @ 09/27/23 15:11:08.971
  STEP: Verifying replicas where modified for replication controller "e2e-rc-s9dbl" @ 09/27/23 15:11:08.975
  Sep 27 15:11:08.975: INFO: Get Replication Controller "e2e-rc-s9dbl" to confirm replicas
  E0927 15:11:08.995586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:11:09.977: INFO: Get Replication Controller "e2e-rc-s9dbl" to confirm replicas
  Sep 27 15:11:09.980: INFO: Found 2 replicas for "e2e-rc-s9dbl" replication controller
  Sep 27 15:11:09.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1396" for this suite. @ 09/27/23 15:11:09.982
• [2.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/27/23 15:11:09.99
  Sep 27 15:11:09.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename watch @ 09/27/23 15:11:09.99
  E0927 15:11:09.996261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:11:09.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:11:10.002
  STEP: creating a watch on configmaps with label A @ 09/27/23 15:11:10.004
  STEP: creating a watch on configmaps with label B @ 09/27/23 15:11:10.005
  STEP: creating a watch on configmaps with label A or B @ 09/27/23 15:11:10.006
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/27/23 15:11:10.007
  Sep 27 15:11:10.011: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-232  41aba716-d699-425f-b6f3-e519a3a941c6 18635 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:11:10.011: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-232  41aba716-d699-425f-b6f3-e519a3a941c6 18635 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/27/23 15:11:10.011
  Sep 27 15:11:10.019: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-232  41aba716-d699-425f-b6f3-e519a3a941c6 18636 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:11:10.019: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-232  41aba716-d699-425f-b6f3-e519a3a941c6 18636 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/27/23 15:11:10.02
  Sep 27 15:11:10.025: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-232  41aba716-d699-425f-b6f3-e519a3a941c6 18637 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:11:10.025: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-232  41aba716-d699-425f-b6f3-e519a3a941c6 18637 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/27/23 15:11:10.025
  Sep 27 15:11:10.029: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-232  41aba716-d699-425f-b6f3-e519a3a941c6 18638 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:11:10.029: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-232  41aba716-d699-425f-b6f3-e519a3a941c6 18638 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/27/23 15:11:10.029
  Sep 27 15:11:10.034: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-232  9f3bc117-d0b6-4400-aeeb-e93920cb48cd 18639 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:11:10.034: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-232  9f3bc117-d0b6-4400-aeeb-e93920cb48cd 18639 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0927 15:11:10.996730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:11.996971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:12.997243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:13.997670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:14.997862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:15.998073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:16.998296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:17.998417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:18.999114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:19.999338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/27/23 15:11:20.035
  Sep 27 15:11:20.040: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-232  9f3bc117-d0b6-4400-aeeb-e93920cb48cd 18691 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:11:20.040: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-232  9f3bc117-d0b6-4400-aeeb-e93920cb48cd 18691 0 2023-09-27 15:11:10 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-27 15:11:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0927 15:11:20.999450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:21.999716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:22.999837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:24.000670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:25.001123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:26.001388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:27.001694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:28.001962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:29.002526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:30.002722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:11:30.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-232" for this suite. @ 09/27/23 15:11:30.044
• [20.058 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 09/27/23 15:11:30.048
  Sep 27 15:11:30.048: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename events @ 09/27/23 15:11:30.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:11:30.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:11:30.061
  STEP: creating a test event @ 09/27/23 15:11:30.063
  STEP: listing all events in all namespaces @ 09/27/23 15:11:30.067
  STEP: patching the test event @ 09/27/23 15:11:30.069
  STEP: fetching the test event @ 09/27/23 15:11:30.073
  STEP: updating the test event @ 09/27/23 15:11:30.075
  STEP: getting the test event @ 09/27/23 15:11:30.08
  STEP: deleting the test event @ 09/27/23 15:11:30.082
  STEP: listing all events in all namespaces @ 09/27/23 15:11:30.087
  Sep 27 15:11:30.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7006" for this suite. @ 09/27/23 15:11:30.091
• [0.047 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 09/27/23 15:11:30.095
  Sep 27 15:11:30.095: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 15:11:30.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:11:30.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:11:30.107
  STEP: Creating service test in namespace statefulset-2055 @ 09/27/23 15:11:30.109
  STEP: Creating statefulset ss in namespace statefulset-2055 @ 09/27/23 15:11:30.114
  Sep 27 15:11:30.121: INFO: Found 0 stateful pods, waiting for 1
  E0927 15:11:31.003304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:32.003685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:33.004101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:34.004644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:35.004983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:36.005160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:37.005541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:38.005675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:39.006225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:40.006389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:11:40.124: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/27/23 15:11:40.128
  STEP: Getting /status @ 09/27/23 15:11:40.133
  Sep 27 15:11:40.135: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/27/23 15:11:40.135
  Sep 27 15:11:40.148: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/27/23 15:11:40.149
  Sep 27 15:11:40.150: INFO: Observed &StatefulSet event: ADDED
  Sep 27 15:11:40.150: INFO: Found Statefulset ss in namespace statefulset-2055 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 15:11:40.150: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/27/23 15:11:40.15
  Sep 27 15:11:40.150: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 27 15:11:40.155: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/27/23 15:11:40.155
  Sep 27 15:11:40.156: INFO: Observed &StatefulSet event: ADDED
  Sep 27 15:11:40.157: INFO: Deleting all statefulset in ns statefulset-2055
  Sep 27 15:11:40.159: INFO: Scaling statefulset ss to 0
  E0927 15:11:41.006963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:42.007205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:43.007316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:44.007740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:45.007885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:46.008141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:47.008585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:48.008807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:49.009557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:50.009801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:11:50.172: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 15:11:50.174: INFO: Deleting statefulset ss
  Sep 27 15:11:50.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2055" for this suite. @ 09/27/23 15:11:50.183
• [20.092 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/27/23 15:11:50.188
  Sep 27 15:11:50.188: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:11:50.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:11:50.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:11:50.199
  STEP: Creating configMap with name cm-test-opt-del-8c4fa0d0-d56b-4be2-bf60-0ec107a2eb61 @ 09/27/23 15:11:50.21
  STEP: Creating configMap with name cm-test-opt-upd-75d27bf9-565d-4e9a-90a5-c0fa7cb274cf @ 09/27/23 15:11:50.214
  STEP: Creating the pod @ 09/27/23 15:11:50.217
  E0927 15:11:51.010842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:52.011191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-8c4fa0d0-d56b-4be2-bf60-0ec107a2eb61 @ 09/27/23 15:11:52.246
  STEP: Updating configmap cm-test-opt-upd-75d27bf9-565d-4e9a-90a5-c0fa7cb274cf @ 09/27/23 15:11:52.249
  STEP: Creating configMap with name cm-test-opt-create-9fac8a7e-ba8d-44b2-b711-92b7647a32e1 @ 09/27/23 15:11:52.256
  STEP: waiting to observe update in volume @ 09/27/23 15:11:52.259
  E0927 15:11:53.011625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:54.011710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:55.012579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:56.012910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:57.013152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:58.013206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:11:59.013891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:00.014112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:01.014284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:02.014477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:03.015449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:04.016263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:05.016345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:06.016589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:07.016866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:08.016978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:09.017603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:10.017807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:11.018554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:12.018757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:13.019283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:14.019409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:15.020429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:16.020633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:17.020928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:18.021046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:19.021989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:20.022220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:21.023285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:22.023443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:23.023692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:24.024060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:25.024203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:26.024533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:27.024658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:28.024803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:29.024911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:30.025036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:31.025991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:32.026214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:33.027099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:34.027654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:35.028142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:36.028344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:37.028577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:38.028717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:39.029075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:40.029266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:41.030132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:42.030324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:43.030476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:44.030880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:45.030963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:46.031180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:47.032191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:48.032289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:49.032452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:50.032617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:51.033432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:52.033654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:53.033943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:54.034360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:55.034535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:56.034661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:57.035143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:58.035367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:12:59.036116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:00.036706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:01.037744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:02.038110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:03.038625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:04.039329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:05.040423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:06.040744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:07.041085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:08.041218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:09.042288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:10.042516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:11.042963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:12.043170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:13.044009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:14.044431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:15.045352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:16.045583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:17.045691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:18.045917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:13:18.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1210" for this suite. @ 09/27/23 15:13:18.597
• [88.414 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 09/27/23 15:13:18.601
  Sep 27 15:13:18.601: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename taint-single-pod @ 09/27/23 15:13:18.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:13:18.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:13:18.615
  Sep 27 15:13:18.617: INFO: Waiting up to 1m0s for all nodes to be ready
  E0927 15:13:19.046307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:20.047413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:21.048333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:22.048420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:23.048680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:24.049185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:25.049405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:26.049457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:27.049506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:28.049747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:29.050672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:30.050886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:31.051011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:32.051129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:33.051480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:34.052081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:35.053139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:36.053364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:37.053562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:38.053785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:39.054443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:40.054691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:41.054978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:42.055103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:43.056145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:44.056579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:45.056694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:46.056813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:47.057731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:48.058095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:49.059090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:50.059347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:51.060237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:52.060592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:53.061367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:54.061774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:55.061889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:56.062028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:57.062738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:58.062946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:13:59.063613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:00.063710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:01.064065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:02.064403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:03.064880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:04.065273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:05.065644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:06.065877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:07.066152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:08.066399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:09.067131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:10.067270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:11.067632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:12.067858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:13.068000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:14.068359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:15.068737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:16.068963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:17.069419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:18.069643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:14:18.628: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 15:14:18.630: INFO: Starting informer...
  STEP: Starting pod... @ 09/27/23 15:14:18.63
  Sep 27 15:14:18.839: INFO: Pod is running on worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/27/23 15:14:18.839
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/27/23 15:14:18.848
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/27/23 15:14:18.851
  Sep 27 15:14:18.851: INFO: Pod wasn't evicted. Proceeding
  Sep 27 15:14:18.851: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/27/23 15:14:18.86
  STEP: Waiting some time to make sure that toleration time passed. @ 09/27/23 15:14:18.863
  E0927 15:14:19.070073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:20.070138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:21.070575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:22.070789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:23.070941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:24.071450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:25.071639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:26.071778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:27.072026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:28.072163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:29.073032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:30.073274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:31.073491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:32.073721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:33.073919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:34.074306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:35.074438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:36.074558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:37.074687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:38.074905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:39.075089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:40.075242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:41.075381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:42.075537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:43.075744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:44.076164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:45.076355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:46.076579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:47.076732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:48.076965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:49.077677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:50.078557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:51.078789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:52.078999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:53.079163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:54.079623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:55.079843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:56.079969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:57.080181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:58.080313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:14:59.080693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:00.080813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:01.080943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:02.081139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:03.081330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:04.081754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:05.082230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:06.082632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:07.082871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:08.083082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:09.083718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:10.083961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:11.084181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:12.084404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:13.084626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:14.085098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:15.085298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:16.085510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:17.085703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:18.085903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:19.086038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:20.086346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:21.086555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:22.086764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:23.086981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:24.087385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:25.088045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:26.088150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:27.089160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:28.089366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:29.090112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:30.090254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:31.090458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:32.090578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:33.090694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:15:33.864: INFO: Pod wasn't evicted. Test successful
  Sep 27 15:15:33.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1957" for this suite. @ 09/27/23 15:15:33.867
• [135.271 seconds]
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 09/27/23 15:15:33.872
  Sep 27 15:15:33.872: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename disruption @ 09/27/23 15:15:33.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:15:33.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:15:33.895
  STEP: creating the pdb @ 09/27/23 15:15:33.897
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:15:33.9
  E0927 15:15:34.091067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:35.091793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/27/23 15:15:35.905
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:15:35.916
  E0927 15:15:36.091946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:37.092197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 09/27/23 15:15:37.921
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:15:37.927
  E0927 15:15:38.092749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:39.093428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 09/27/23 15:15:39.935
  Sep 27 15:15:39.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9338" for this suite. @ 09/27/23 15:15:39.938
• [6.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 09/27/23 15:15:39.943
  Sep 27 15:15:39.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:15:39.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:15:39.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:15:39.957
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/27/23 15:15:39.959
  E0927 15:15:40.093828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:41.093931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:15:41.972
  Sep 27 15:15:41.973: INFO: Trying to get logs from node worker-1 pod pod-f8ce403f-32c5-4d0c-991f-9a67036f2e48 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:15:41.987
  Sep 27 15:15:41.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1576" for this suite. @ 09/27/23 15:15:42.001
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/27/23 15:15:42.013
  Sep 27 15:15:42.013: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename subjectreview @ 09/27/23 15:15:42.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:15:42.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:15:42.026
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-24" @ 09/27/23 15:15:42.028
  Sep 27 15:15:42.031: INFO: saUsername: "system:serviceaccount:subjectreview-24:e2e"
  Sep 27 15:15:42.031: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-24"}
  Sep 27 15:15:42.031: INFO: saUID: "b914b86d-2dad-4310-924c-dbbb063fc76a"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-24:e2e" @ 09/27/23 15:15:42.031
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-24:e2e" @ 09/27/23 15:15:42.032
  Sep 27 15:15:42.033: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-24:e2e" api 'list' configmaps in "subjectreview-24" namespace @ 09/27/23 15:15:42.033
  Sep 27 15:15:42.034: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-24:e2e" @ 09/27/23 15:15:42.034
  Sep 27 15:15:42.036: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Sep 27 15:15:42.036: INFO: LocalSubjectAccessReview has been verified
  Sep 27 15:15:42.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-24" for this suite. @ 09/27/23 15:15:42.038
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/27/23 15:15:42.043
  Sep 27 15:15:42.043: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:15:42.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:15:42.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:15:42.055
  Sep 27 15:15:42.058: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: creating the pod @ 09/27/23 15:15:42.058
  STEP: submitting the pod to kubernetes @ 09/27/23 15:15:42.058
  E0927 15:15:42.095040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:43.095175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:15:44.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7564" for this suite. @ 09/27/23 15:15:44.085
• [2.046 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/27/23 15:15:44.089
  Sep 27 15:15:44.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 15:15:44.09
  E0927 15:15:44.095473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:15:44.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:15:44.105
  STEP: Creating pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566 @ 09/27/23 15:15:44.108
  E0927 15:15:45.095671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:46.096031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 15:15:46.118
  Sep 27 15:15:46.120: INFO: Initial restart count of pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 is 0
  Sep 27 15:15:46.122: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:15:47.096254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:48.096453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:15:48.124: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:15:49.097257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:50.097472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:15:50.127: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:15:51.097875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:52.098127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:15:52.130: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:15:53.098217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:54.098784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:15:54.133: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:15:55.099399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:56.099654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:15:56.136: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:15:57.100511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:15:58.100747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:15:58.139: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:15:59.101609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:00.101701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:00.142: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:01.102041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:02.102249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:02.144: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:03.102469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:04.102744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:04.146: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:05.102831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:06.103077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:06.150: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:07.103134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:08.103325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:08.154: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:09.103910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:10.104704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:10.157: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:11.105087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:12.105329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:12.159: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:13.105549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:14.105864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:14.161: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:15.105776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:16.105991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:16.164: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:17.106657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:18.106874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:18.168: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:19.106890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:20.107153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:20.171: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:21.107297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:22.107540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:22.182: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:23.107638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:24.108047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:24.185: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:25.108671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:26.108907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:26.189: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:27.109024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:28.109240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:28.191: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:29.110278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:30.110499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:30.195: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:31.110671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:32.110954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:32.197: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:33.111382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:34.111775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:34.200: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:35.111938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:36.112187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:36.204: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:37.112287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:38.112528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:38.207: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:39.113563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:40.113793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:40.210: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:41.114424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:42.114539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:42.213: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:43.115437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:44.115846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:44.216: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:45.116517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:46.116710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:46.219: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:47.117786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:48.118001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:48.222: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:49.118185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:50.118392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:50.224: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:51.118962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:52.119187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:52.228: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:53.120060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:54.120777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:54.231: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:55.121443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:56.121648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:56.234: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:57.121711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:16:58.121927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:16:58.237: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:16:59.122161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:00.122367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:00.240: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:01.123011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:02.123213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:02.251: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:03.123717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:04.124174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:04.254: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:05.124685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:06.124892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:06.258: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:07.125006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:08.125242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:08.261: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:09.125398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:10.125603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:10.264: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:11.125749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:12.125878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:12.275: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:13.125924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:14.126353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:14.278: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:15.127110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:16.127336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:16.281: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:17.127425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:18.127583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:18.284: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:19.127654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:20.127688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:20.287: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:21.128480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:22.128754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:22.290: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:23.129605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:24.129985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:24.292: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:25.130587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:26.130705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:26.295: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:27.130828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:28.131073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:28.298: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:29.132111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:30.132717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:30.301: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:31.133087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:32.133217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:32.305: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:33.133335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:34.133768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:34.308: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:35.134314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:36.134529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:36.311: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:37.134660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:38.134895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:38.314: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:39.135975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:40.136742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:40.317: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:41.137473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:42.137696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:42.320: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:43.138007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:44.138330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:44.323: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:45.138918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:46.139156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:46.326: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:47.139747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:48.139866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:48.330: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:49.140346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:50.140444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:50.333: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:51.141178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:52.141377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:52.336: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:53.141959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:54.142263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:54.338: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:55.142354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:56.143067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:56.342: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:57.144019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:17:58.144793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:17:58.345: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:17:59.145858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:00.146076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:00.348: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:01.147131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:02.147359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:02.352: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:03.148284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:04.148694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:04.355: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:05.149382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:06.149586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:06.358: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:07.150494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:08.150698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:08.361: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:09.151279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:10.151411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:10.364: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:11.151888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:12.151986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:12.367: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:13.152822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:14.153327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:14.370: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:15.153266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:16.153483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:16.373: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:17.153503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:18.153711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:18.376: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:19.154494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:20.154716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:20.379: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:21.155208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:22.155432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:22.382: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:23.155590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:24.155927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:24.384: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:25.156505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:26.156735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:26.388: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:27.156969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:28.157179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:28.390: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:29.158099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:30.158310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:30.393: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:31.158453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:32.158645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:32.414: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:33.158869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:34.159306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:34.418: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:35.159760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:36.160711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:36.420: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:37.161346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:38.161587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:38.423: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:39.162311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:40.162450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:40.425: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:41.162703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:42.163041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:42.428: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:43.163361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:44.163710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:44.431: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:45.163805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:46.164014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:46.436: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:47.164144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:48.164414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:48.438: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:49.165115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:50.165364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:50.441: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:51.165399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:52.165646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:52.447: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:53.165781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:54.166112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:54.450: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:55.166952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:56.167217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:56.453: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:57.167301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:18:58.167560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:18:58.456: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:18:59.168443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:00.168662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:00.459: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:01.169203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:02.169457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:02.462: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:03.169744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:04.170357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:04.465: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:05.171094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:06.171222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:06.468: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:07.171446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:08.171692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:08.471: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:09.171753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:10.171894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:10.474: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:11.172398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:12.172652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:12.477: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:13.173154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:14.173641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:14.480: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:15.173791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:16.174012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:16.484: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:17.174235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:18.174393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:18.487: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:19.174684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:20.174922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:20.490: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:21.175587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:22.175677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:22.493: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:23.176145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:24.176692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:24.496: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:25.176789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:26.177005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:26.500: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:27.177602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:28.177794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:28.503: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:29.177937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:30.178098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:30.506: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:31.178460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:32.178733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:32.509: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:33.179694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:34.180704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:34.512: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:35.181760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:36.182006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:36.516: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:37.182093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:38.182315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:38.519: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:39.183330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:40.183460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:40.522: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:41.184342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:42.184433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:42.524: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:43.185433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:44.186045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:44.527: INFO: Get pod test-webserver-4df9cc44-f3d6-4652-a351-ee280d43e5d9 in namespace container-probe-3566
  E0927 15:19:45.186183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:46.186438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:19:46.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:19:46.531
  STEP: Destroying namespace "container-probe-3566" for this suite. @ 09/27/23 15:19:46.547
• [242.463 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 09/27/23 15:19:46.553
  Sep 27 15:19:46.553: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:19:46.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:19:46.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:19:46.565
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/27/23 15:19:46.568
  E0927 15:19:47.186537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:48.186897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:49.187738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:50.188004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:19:50.581
  Sep 27 15:19:50.583: INFO: Trying to get logs from node worker-1 pod pod-22caebf2-a403-4b51-979d-0153363dbb9a container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:19:50.595
  Sep 27 15:19:50.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-946" for this suite. @ 09/27/23 15:19:50.608
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 09/27/23 15:19:50.613
  Sep 27 15:19:50.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/27/23 15:19:50.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:19:50.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:19:50.626
  STEP: create the container to handle the HTTPGet hook request. @ 09/27/23 15:19:50.63
  E0927 15:19:51.188460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:52.188646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/27/23 15:19:52.644
  E0927 15:19:53.188762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:54.189069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/27/23 15:19:54.658
  E0927 15:19:55.189296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:56.189554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/27/23 15:19:56.669
  Sep 27 15:19:56.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1878" for this suite. @ 09/27/23 15:19:56.677
• [6.068 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 09/27/23 15:19:56.682
  Sep 27 15:19:56.682: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:19:56.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:19:56.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:19:56.696
  STEP: Setting up server cert @ 09/27/23 15:19:56.713
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:19:57.179
  STEP: Deploying the webhook pod @ 09/27/23 15:19:57.186
  E0927 15:19:57.190239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 09/27/23 15:19:57.195
  Sep 27 15:19:57.199: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 15:19:58.191355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:19:59.192033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 15:19:59.204
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:19:59.214
  E0927 15:20:00.192221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:20:00.214: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/27/23 15:20:00.221
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/27/23 15:20:00.238
  STEP: Creating a dummy validating-webhook-configuration object @ 09/27/23 15:20:00.253
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/27/23 15:20:00.262
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/27/23 15:20:00.269
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/27/23 15:20:00.275
  Sep 27 15:20:00.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1233" for this suite. @ 09/27/23 15:20:00.319
  STEP: Destroying namespace "webhook-markers-1505" for this suite. @ 09/27/23 15:20:00.323
• [3.645 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 09/27/23 15:20:00.328
  Sep 27 15:20:00.328: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 15:20:00.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:00.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:00.338
  Sep 27 15:20:00.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7946" for this suite. @ 09/27/23 15:20:00.345
• [0.021 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 09/27/23 15:20:00.349
  Sep 27 15:20:00.349: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 15:20:00.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:00.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:00.363
  E0927 15:20:01.192665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:02.193126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 09/27/23 15:20:02.378
  Sep 27 15:20:02.379: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9400 pod-service-account-0e0601fe-2d20-4d4e-91d4-f7a42c0cb90f -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/27/23 15:20:02.529
  Sep 27 15:20:02.529: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9400 pod-service-account-0e0601fe-2d20-4d4e-91d4-f7a42c0cb90f -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/27/23 15:20:02.679
  Sep 27 15:20:02.679: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9400 pod-service-account-0e0601fe-2d20-4d4e-91d4-f7a42c0cb90f -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Sep 27 15:20:02.826: INFO: Got root ca configmap in namespace "svcaccounts-9400"
  Sep 27 15:20:02.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9400" for this suite. @ 09/27/23 15:20:02.831
• [2.496 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/27/23 15:20:02.846
  Sep 27 15:20:02.846: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename deployment @ 09/27/23 15:20:02.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:02.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:02.858
  Sep 27 15:20:02.861: INFO: Creating simple deployment test-new-deployment
  Sep 27 15:20:02.869: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0927 15:20:03.193786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:04.193949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/27/23 15:20:04.877
  STEP: updating a scale subresource @ 09/27/23 15:20:04.878
  STEP: verifying the deployment Spec.Replicas was modified @ 09/27/23 15:20:04.886
  STEP: Patch a scale subresource @ 09/27/23 15:20:04.888
  Sep 27 15:20:04.906: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66ac611c-9f2e-4548-ac9b-c3efd3d45e84",
      ResourceVersion: (string) (len=5) "20202",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831424802,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424802,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424802,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 15:20:04.913: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "712838fd-3673-45ba-9722-581e08a2b88c",
      ResourceVersion: (string) (len=5) "20207",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831424802,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "66ac611c-9f2e-4548-ac9b-c3efd3d45e84",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 36 61 63 36 31  31 63 2d 39 66 32 65 2d  |\"66ac611c-9f2e-|
              00000120  34 35 34 38 2d 61 63 39  62 2d 63 33 65 66 64 33  |4548-ac9b-c3efd3|
              00000130  64 34 35 65 38 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d45e84\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 15:20:04.949: INFO: Pod "test-new-deployment-557759b7c7-kk4fc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-kk4fc",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40ad87b3-b3a2-4c08-9998-a0d55b3d0c2e",
      ResourceVersion: (string) (len=5) "20211",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831424804,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "712838fd-3673-45ba-9722-581e08a2b88c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  32 38 33 38 66 64 2d 33  |d\":\"712838fd-3|
              00000090  36 37 33 2d 34 35 62 61  2d 39 37 32 32 2d 35 38  |673-45ba-9722-58|
              000000a0  31 65 30 38 61 32 62 38  38 63 5c 22 7d 22 3a 7b  |1e08a2b88c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fpc8v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fpc8v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.53.207",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831424804,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 15:20:04.954: INFO: Pod "test-new-deployment-557759b7c7-x8cg4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-x8cg4",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3534",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c61729b1-64dd-4377-9f8e-39e0f97c6caa",
      ResourceVersion: (string) (len=5) "20194",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831424802,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "712838fd-3673-45ba-9722-581e08a2b88c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424802,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  32 38 33 38 66 64 2d 33  |d\":\"712838fd-3|
              00000090  36 37 33 2d 34 35 62 61  2d 39 37 32 32 2d 35 38  |673-45ba-9722-58|
              000000a0  31 65 30 38 61 32 62 38  38 63 5c 22 7d 22 3a 7b  |1e08a2b88c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 30  2e 32 31 31 5c 22 7d 22  |10.244.0.211\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vcg52",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vcg52",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424802,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424804,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831424802,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.51.64",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.0.211",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.211"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831424802,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831424803,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ed02e6d42e2940863ecc854edb0066f4a5a268362137678f946d3d8d39aa46e1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 15:20:04.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3534" for this suite. @ 09/27/23 15:20:04.961
• [2.123 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 09/27/23 15:20:04.97
  Sep 27 15:20:04.970: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:20:04.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:04.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:04.996
  STEP: set up a multi version CRD @ 09/27/23 15:20:04.998
  Sep 27 15:20:04.999: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:20:05.194774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:06.195484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:07.195652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:08.196169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/27/23 15:20:08.276
  STEP: check the new version name is served @ 09/27/23 15:20:08.29
  STEP: check the old version name is removed @ 09/27/23 15:20:09.029
  E0927 15:20:09.197178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/27/23 15:20:09.677
  E0927 15:20:10.197526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:11.197550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:12.197959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:20:12.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7397" for this suite. @ 09/27/23 15:20:12.237
• [7.272 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/27/23 15:20:12.242
  Sep 27 15:20:12.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubelet-test @ 09/27/23 15:20:12.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:12.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:12.261
  Sep 27 15:20:12.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8190" for this suite. @ 09/27/23 15:20:12.282
• [0.048 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/27/23 15:20:12.291
  Sep 27 15:20:12.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:20:12.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:12.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:12.302
  E0927 15:20:13.198971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:14.199527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:15.199596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:16.199866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:20:16.344
  Sep 27 15:20:16.345: INFO: Trying to get logs from node worker-1 pod client-envvars-43975bbf-2734-4eb3-a939-2de3568d8a46 container env3cont: <nil>
  STEP: delete the pod @ 09/27/23 15:20:16.351
  Sep 27 15:20:16.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4903" for this suite. @ 09/27/23 15:20:16.364
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 09/27/23 15:20:16.37
  Sep 27 15:20:16.370: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:20:16.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:16.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:16.382
  STEP: Setting up server cert @ 09/27/23 15:20:16.396
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:20:17.092
  STEP: Deploying the webhook pod @ 09/27/23 15:20:17.096
  STEP: Wait for the deployment to be ready @ 09/27/23 15:20:17.106
  Sep 27 15:20:17.110: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0927 15:20:17.200489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:18.200584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 15:20:19.116
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:20:19.129
  E0927 15:20:19.200639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:20:20.129: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/27/23 15:20:20.133
  STEP: create a pod that should be updated by the webhook @ 09/27/23 15:20:20.15
  Sep 27 15:20:20.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0927 15:20:20.201604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-7460" for this suite. @ 09/27/23 15:20:20.226
  STEP: Destroying namespace "webhook-markers-9232" for this suite. @ 09/27/23 15:20:20.232
• [3.868 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/27/23 15:20:20.239
  Sep 27 15:20:20.239: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:20:20.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:20.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:20.25
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:20:20.252
  E0927 15:20:21.202569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:22.202803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:23.202939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:24.203902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:20:24.264
  Sep 27 15:20:24.266: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-ecaaa5f8-c910-4a1c-b0ab-d8628f2f7fee container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:20:24.27
  Sep 27 15:20:24.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4030" for this suite. @ 09/27/23 15:20:24.284
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/27/23 15:20:24.289
  Sep 27 15:20:24.289: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:20:24.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:24.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:24.303
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:20:24.305
  E0927 15:20:25.204760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:26.205080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:27.205963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:28.206182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:20:28.32
  Sep 27 15:20:28.322: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-5aa27529-8a60-4527-8bc6-36eae3882241 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:20:28.326
  Sep 27 15:20:28.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-876" for this suite. @ 09/27/23 15:20:28.345
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 09/27/23 15:20:28.352
  Sep 27 15:20:28.352: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:20:28.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:28.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:28.368
  STEP: Counting existing ResourceQuota @ 09/27/23 15:20:28.37
  E0927 15:20:29.207293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:30.207595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:31.208088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:32.208565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:33.209572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/27/23 15:20:33.372
  STEP: Ensuring resource quota status is calculated @ 09/27/23 15:20:33.379
  E0927 15:20:34.209825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:35.210700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/27/23 15:20:35.382
  STEP: Ensuring resource quota status captures replication controller creation @ 09/27/23 15:20:35.399
  E0927 15:20:36.211167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:37.211370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/27/23 15:20:37.402
  STEP: Ensuring resource quota status released usage @ 09/27/23 15:20:37.405
  E0927 15:20:38.211624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:39.212305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:20:39.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5714" for this suite. @ 09/27/23 15:20:39.412
• [11.067 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/27/23 15:20:39.42
  Sep 27 15:20:39.420: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:20:39.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:39.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:39.432
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:20:39.435
  E0927 15:20:40.212992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:41.213232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:20:41.449
  Sep 27 15:20:41.450: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-00e224b3-d9b9-4e88-b2fb-67aa5a8aabf3 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:20:41.455
  Sep 27 15:20:41.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8892" for this suite. @ 09/27/23 15:20:41.475
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/27/23 15:20:41.481
  Sep 27 15:20:41.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename subpath @ 09/27/23 15:20:41.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:41.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:41.495
  STEP: Setting up data @ 09/27/23 15:20:41.497
  STEP: Creating pod pod-subpath-test-configmap-lz6w @ 09/27/23 15:20:41.505
  STEP: Creating a pod to test atomic-volume-subpath @ 09/27/23 15:20:41.505
  E0927 15:20:42.213652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:43.214124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:44.214927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:45.215195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:46.215817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:47.216255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:48.217112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:49.217230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:50.217364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:51.217586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:52.218114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:53.218366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:54.219094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:55.219295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:56.219970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:57.220300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:58.221248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:20:59.221802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:00.221983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:01.222089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:02.223043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:03.223314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:21:03.552
  Sep 27 15:21:03.553: INFO: Trying to get logs from node worker-1 pod pod-subpath-test-configmap-lz6w container test-container-subpath-configmap-lz6w: <nil>
  STEP: delete the pod @ 09/27/23 15:21:03.562
  STEP: Deleting pod pod-subpath-test-configmap-lz6w @ 09/27/23 15:21:03.574
  Sep 27 15:21:03.574: INFO: Deleting pod "pod-subpath-test-configmap-lz6w" in namespace "subpath-270"
  Sep 27 15:21:03.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-270" for this suite. @ 09/27/23 15:21:03.578
• [22.101 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/27/23 15:21:03.583
  Sep 27 15:21:03.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:21:03.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:21:03.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:21:03.598
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:21:03.6
  E0927 15:21:04.223457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:05.224007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:21:05.612
  Sep 27 15:21:05.613: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-38dfbe37-f0a0-4ad6-84d4-016033b33717 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:21:05.618
  Sep 27 15:21:05.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7808" for this suite. @ 09/27/23 15:21:05.63
• [2.053 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/27/23 15:21:05.636
  Sep 27 15:21:05.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 15:21:05.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:21:05.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:21:05.649
  STEP: Creating pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801 @ 09/27/23 15:21:05.651
  E0927 15:21:06.224837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:07.225061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 15:21:07.663
  Sep 27 15:21:07.664: INFO: Initial restart count of pod liveness-64929f12-3378-442d-97e7-3dc56f815000 is 0
  Sep 27 15:21:07.666: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:08.225521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:09.226237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:09.669: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:10.226805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:11.227041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:11.671: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:12.227275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:13.227389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:13.674: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:14.228234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:15.228492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:15.677: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:16.228639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:17.228905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:17.679: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:18.229197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:19.229755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:19.683: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:20.229914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:21.230147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:21.686: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:22.231011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:23.231242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:23.689: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:24.232115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:25.232266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:25.692: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:26.232817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:27.232921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:27.694: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:28.233497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:29.234279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:29.698: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:30.234338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:31.234484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:31.701: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:32.235389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:33.235644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:33.705: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:34.235833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:35.236060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:35.707: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:36.236456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:37.236661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:37.710: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:38.237501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:39.238180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:39.714: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:40.238450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:41.238566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:41.717: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:42.238721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:43.239022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:43.719: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:44.239725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:45.239964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:45.722: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:46.240419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:47.240625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:47.725: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:48.241199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:49.241742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:49.729: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:50.241879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:51.242136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:51.731: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:52.242440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:53.242638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:53.734: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:54.243549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:55.243765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:55.737: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:56.244210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:57.244415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:57.744: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:21:58.245355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:21:59.246052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:21:59.748: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:00.246135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:01.246277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:01.751: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:02.246387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:03.246604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:03.754: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:04.246817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:05.246948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:05.756: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:06.247049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:07.247283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:07.759: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:08.248030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:09.248878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:09.762: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:10.249045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:11.249239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:11.765: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:12.249486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:13.249708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:13.767: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:14.250498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:15.250717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:15.770: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:16.251417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:17.251912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:17.774: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:18.251853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:19.252187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:19.777: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:20.252280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:21.252714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:21.781: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:22.252822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:23.252954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:23.785: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:24.253783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:25.253993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:25.787: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:26.254962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:27.255222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:27.790: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:28.255605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:29.256223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:29.793: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:30.256276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:31.256699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:31.796: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:32.257626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:33.257840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:33.798: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:34.258484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:35.258620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:35.801: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:36.259716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:37.259929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:37.804: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:38.260831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:39.261247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:39.807: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:40.261667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:41.261871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:41.809: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:42.262049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:43.262256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:43.811: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:44.262468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:45.262772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:45.814: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:46.263338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:47.263612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:47.817: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:48.264152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:49.264681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:49.821: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:50.265718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:51.265966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:51.823: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:52.266728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:53.266928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:53.825: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:54.267362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:55.267664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:55.828: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:56.267789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:57.267924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:57.831: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:22:58.268815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:22:59.269268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:22:59.834: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:00.269305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:01.269517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:01.837: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:02.269934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:03.270186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:03.839: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:04.270606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:05.270747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:05.842: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:06.271320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:07.271565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:07.845: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:08.271747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:09.272424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:09.849: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:10.272512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:11.272721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:11.851: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:12.273347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:13.273548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:13.854: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:14.274352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:15.274631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:15.857: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:16.275301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:17.275637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:17.860: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:18.276294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:19.276852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:19.864: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:20.277173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:21.277367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:21.867: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:22.277938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:23.278139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:23.870: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:24.278223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:25.278575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:25.873: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:26.279459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:27.279634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:27.876: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:28.280256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:29.280700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:29.880: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:30.280836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:31.281025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:31.882: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:32.281385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:33.281581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:33.885: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:34.282300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:35.282425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:35.888: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:36.283125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:37.283269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:37.891: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:38.283632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:39.284224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:39.894: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:40.284354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:41.284716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:41.897: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:42.285531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:43.285640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:43.900: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:44.286361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:45.286657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:45.903: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:46.286714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:47.286906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:47.906: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:48.287475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:49.288058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:49.909: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:50.288236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:51.288456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:51.912: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:52.288559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:53.288687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:53.915: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:54.289578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:55.289810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:55.917: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:56.290406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:57.291073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:57.923: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:23:58.291994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:23:59.292420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:23:59.927: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:00.293505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:01.293722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:01.929: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:02.294425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:03.294543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:03.932: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:04.295465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:05.296389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:05.935: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:06.297049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:07.297259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:07.939: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:08.297381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:09.298082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:09.942: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:10.298164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:11.298370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:11.945: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:12.299069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:13.299279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:13.948: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:14.300241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:15.300451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:15.951: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:16.300844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:17.301063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:17.954: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:18.301227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:19.301668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:19.957: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:20.302518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:21.302728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:21.959: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:22.302866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:23.302977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:23.962: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:24.303713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:25.303925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:25.965: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:26.304764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:27.304992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:27.968: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:28.305783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:29.306231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:29.971: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:30.306855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:31.306995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:31.974: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:32.307736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:33.307939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:33.977: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:34.308749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:35.308989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:35.980: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:36.309537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:37.309773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:37.983: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:38.309801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:39.310249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:39.986: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:40.310873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:41.311032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:41.989: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:42.311719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:43.311943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:43.992: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:44.312697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:45.312929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:45.995: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:46.313561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:47.314082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:47.998: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:48.314763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:49.315253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:50.002: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:50.315369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:51.315632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:52.004: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:52.316179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:53.316674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:54.008: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:54.317656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:55.317869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:56.010: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:56.318067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:57.318300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:24:58.013: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:24:58.318915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:24:59.319405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:25:00.017: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:25:00.319682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:01.319999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:25:02.020: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:25:02.320671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:03.320870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:25:04.023: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:25:04.321477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:05.321691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:25:06.026: INFO: Get pod liveness-64929f12-3378-442d-97e7-3dc56f815000 in namespace container-probe-5801
  E0927 15:25:06.322545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:07.322772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:25:08.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:25:08.03
  STEP: Destroying namespace "container-probe-5801" for this suite. @ 09/27/23 15:25:08.039
• [242.408 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/27/23 15:25:08.045
  Sep 27 15:25:08.045: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:25:08.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:25:08.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:25:08.059
  STEP: Creating the pod @ 09/27/23 15:25:08.061
  E0927 15:25:08.323667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:09.324284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:10.324389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:25:10.598: INFO: Successfully updated pod "annotationupdate9c9f67c3-62ef-414e-b70c-297bb48c11be"
  E0927 15:25:11.324656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:12.325098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:13.325645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:14.326630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:25:14.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3215" for this suite. @ 09/27/23 15:25:14.619
• [6.578 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 09/27/23 15:25:14.624
  Sep 27 15:25:14.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/27/23 15:25:14.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:25:14.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:25:14.638
  STEP: create the container to handle the HTTPGet hook request. @ 09/27/23 15:25:14.642
  E0927 15:25:15.327045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:16.327308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/27/23 15:25:16.655
  E0927 15:25:17.327342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:18.327628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/27/23 15:25:18.665
  STEP: delete the pod with lifecycle hook @ 09/27/23 15:25:18.679
  E0927 15:25:19.328377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:20.328780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:21.328814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:22.329053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:25:22.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5429" for this suite. @ 09/27/23 15:25:22.696
• [8.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/27/23 15:25:22.703
  Sep 27 15:25:22.703: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:25:22.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:25:22.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:25:22.722
  STEP: creating the pod @ 09/27/23 15:25:22.725
  STEP: submitting the pod to kubernetes @ 09/27/23 15:25:22.725
  E0927 15:25:23.329970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:24.330797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/27/23 15:25:24.742
  STEP: updating the pod @ 09/27/23 15:25:24.744
  Sep 27 15:25:25.254: INFO: Successfully updated pod "pod-update-508b2c60-2fe2-43ee-b1cd-2ec7b85eb42c"
  STEP: verifying the updated pod is in kubernetes @ 09/27/23 15:25:25.256
  Sep 27 15:25:25.258: INFO: Pod update OK
  Sep 27 15:25:25.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-548" for this suite. @ 09/27/23 15:25:25.26
• [2.561 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 09/27/23 15:25:25.266
  Sep 27 15:25:25.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sched-preemption @ 09/27/23 15:25:25.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:25:25.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:25:25.278
  Sep 27 15:25:25.289: INFO: Waiting up to 1m0s for all nodes to be ready
  E0927 15:25:25.331078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:26.331875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:27.332443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:28.332648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:29.333101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:30.333331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:31.333569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:32.333795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:33.333875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:34.334196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:35.334991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:36.335186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:37.335580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:38.335645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:39.335964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:40.336757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:41.337908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:42.338357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:43.338788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:44.339124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:45.339650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:46.339889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:47.340338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:48.340700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:49.340774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:50.340937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:51.341171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:52.341312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:53.341757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:54.342059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:55.342657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:56.342809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:57.343367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:58.343644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:25:59.344281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:00.344526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:01.345102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:02.345353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:03.345555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:04.345988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:05.346415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:06.346699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:07.347200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:08.347445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:09.347985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:10.348176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:11.348679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:12.348850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:13.349139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:14.349520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:15.350373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:16.350606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:17.351002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:18.351134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:19.351903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:20.352040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:21.353008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:22.353197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:23.354161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:24.354541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:26:25.302: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/27/23 15:26:25.304
  Sep 27 15:26:25.304: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/27/23 15:26:25.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:25.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:25.318
  Sep 27 15:26:25.329: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Sep 27 15:26:25.331: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Sep 27 15:26:25.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:26:25.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0927 15:26:25.355244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sched-preemption-path-5296" for this suite. @ 09/27/23 15:26:25.379
  STEP: Destroying namespace "sched-preemption-2676" for this suite. @ 09/27/23 15:26:25.383
• [60.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/27/23 15:26:25.392
  Sep 27 15:26:25.393: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:26:25.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:25.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:25.404
  STEP: Create set of pods @ 09/27/23 15:26:25.406
  Sep 27 15:26:25.411: INFO: created test-pod-1
  Sep 27 15:26:25.417: INFO: created test-pod-2
  Sep 27 15:26:25.424: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/27/23 15:26:25.424
  E0927 15:26:26.355641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:27.356716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/27/23 15:26:27.456
  Sep 27 15:26:27.459: INFO: Pod quantity 3 is different from expected quantity 0
  E0927 15:26:28.356802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:26:28.462: INFO: Pod quantity 2 is different from expected quantity 0
  E0927 15:26:29.357344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:26:29.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7518" for this suite. @ 09/27/23 15:26:29.464
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/27/23 15:26:29.469
  Sep 27 15:26:29.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:26:29.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:29.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:29.48
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:26:29.482
  E0927 15:26:30.358369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:31.358589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:32.359104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:33.359327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:26:33.495
  Sep 27 15:26:33.496: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-1a00f962-59a3-445c-8eb7-c9ad3c05393b container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:26:33.503
  Sep 27 15:26:33.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3764" for this suite. @ 09/27/23 15:26:33.523
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 09/27/23 15:26:33.53
  Sep 27 15:26:33.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:26:33.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:33.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:33.544
  STEP: Starting the proxy @ 09/27/23 15:26:33.548
  Sep 27 15:26:33.548: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2569 proxy --unix-socket=/tmp/kubectl-proxy-unix1435508678/test'
  STEP: retrieving proxy /api/ output @ 09/27/23 15:26:33.595
  Sep 27 15:26:33.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2569" for this suite. @ 09/27/23 15:26:33.599
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 09/27/23 15:26:33.615
  Sep 27 15:26:33.615: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:26:33.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:33.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:33.635
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/27/23 15:26:33.639
  Sep 27 15:26:33.640: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:26:34.359831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:35.360630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:36.361480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:37.362139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:38.363064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/27/23 15:26:38.801
  Sep 27 15:26:38.802: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:26:39.363602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:26:40.034: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:26:40.364410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:41.365385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:42.365658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:43.366530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:44.366970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:26:45.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9822" for this suite. @ 09/27/23 15:26:45.057
• [11.448 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 09/27/23 15:26:45.063
  Sep 27 15:26:45.063: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:26:45.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:45.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:45.077
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/27/23 15:26:45.079
  E0927 15:26:45.368059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:46.368350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:47.369391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:48.369633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:26:49.095
  Sep 27 15:26:49.097: INFO: Trying to get logs from node worker-1 pod pod-03e8c634-b28a-4d6f-89cb-0440dff5b4db container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:26:49.102
  Sep 27 15:26:49.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6071" for this suite. @ 09/27/23 15:26:49.115
• [4.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 09/27/23 15:26:49.121
  Sep 27 15:26:49.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 15:26:49.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:49.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:49.133
  Sep 27 15:26:49.149: INFO: created pod pod-service-account-defaultsa
  Sep 27 15:26:49.149: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Sep 27 15:26:49.154: INFO: created pod pod-service-account-mountsa
  Sep 27 15:26:49.154: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Sep 27 15:26:49.159: INFO: created pod pod-service-account-nomountsa
  Sep 27 15:26:49.159: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Sep 27 15:26:49.165: INFO: created pod pod-service-account-defaultsa-mountspec
  Sep 27 15:26:49.165: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Sep 27 15:26:49.171: INFO: created pod pod-service-account-mountsa-mountspec
  Sep 27 15:26:49.171: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Sep 27 15:26:49.177: INFO: created pod pod-service-account-nomountsa-mountspec
  Sep 27 15:26:49.177: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Sep 27 15:26:49.183: INFO: created pod pod-service-account-defaultsa-nomountspec
  Sep 27 15:26:49.183: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Sep 27 15:26:49.187: INFO: created pod pod-service-account-mountsa-nomountspec
  Sep 27 15:26:49.188: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Sep 27 15:26:49.195: INFO: created pod pod-service-account-nomountsa-nomountspec
  Sep 27 15:26:49.195: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Sep 27 15:26:49.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6287" for this suite. @ 09/27/23 15:26:49.198
• [0.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/27/23 15:26:49.208
  Sep 27 15:26:49.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 15:26:49.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:49.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:49.228
  E0927 15:26:49.371684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:50.371784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:26:51.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:26:51.250: INFO: Deleting pod "var-expansion-00365a38-02f3-4726-b8c8-834efc9277cc" in namespace "var-expansion-6920"
  Sep 27 15:26:51.254: INFO: Wait up to 5m0s for pod "var-expansion-00365a38-02f3-4726-b8c8-834efc9277cc" to be fully deleted
  E0927 15:26:51.372359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:52.372712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-6920" for this suite. @ 09/27/23 15:26:53.259
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 09/27/23 15:26:53.264
  Sep 27 15:26:53.264: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:26:53.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:53.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:53.275
  STEP: starting the proxy server @ 09/27/23 15:26:53.277
  Sep 27 15:26:53.278: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-5216 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/27/23 15:26:53.325
  Sep 27 15:26:53.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5216" for this suite. @ 09/27/23 15:26:53.335
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/27/23 15:26:53.354
  Sep 27 15:26:53.354: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:26:53.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:53.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:53.367
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:26:53.37
  E0927 15:26:53.373267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:54.374136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:55.374395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:56.374666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:57.374936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:26:57.384
  Sep 27 15:26:57.386: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-585ffd6c-8b85-400d-a95d-978119827914 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:26:57.391
  Sep 27 15:26:57.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9699" for this suite. @ 09/27/23 15:26:57.405
• [4.054 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 09/27/23 15:26:57.409
  Sep 27 15:26:57.409: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename runtimeclass @ 09/27/23 15:26:57.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:57.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:57.422
  E0927 15:26:58.375610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:26:59.376294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:26:59.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5192" for this suite. @ 09/27/23 15:26:59.445
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 09/27/23 15:26:59.45
  Sep 27 15:26:59.450: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename job @ 09/27/23 15:26:59.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:26:59.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:26:59.464
  STEP: Creating a job @ 09/27/23 15:26:59.467
  STEP: Ensuring job reaches completions @ 09/27/23 15:26:59.513
  E0927 15:27:00.376442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:01.376798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:02.377408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:03.377625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:04.378636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:05.378871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:06.378991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:07.379247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:08.379913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:09.380389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:27:09.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6715" for this suite. @ 09/27/23 15:27:09.518
• [10.072 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 09/27/23 15:27:09.522
  Sep 27 15:27:09.522: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename dns @ 09/27/23 15:27:09.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:09.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:09.533
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/27/23 15:27:09.536
  Sep 27 15:27:09.541: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-8946  ae4b243f-6318-4f8f-9de0-308cc7aa46eb 21998 0 2023-09-27 15:27:09 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-09-27 15:27:09 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-72hf7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-72hf7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0927 15:27:10.380461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:11.380876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/27/23 15:27:11.546
  Sep 27 15:27:11.546: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-8946 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:27:11.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:27:11.547: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:27:11.547: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-8946/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/27/23 15:27:11.659
  Sep 27 15:27:11.659: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-8946 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:27:11.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:27:11.660: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:27:11.660: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-8946/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 27 15:27:11.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:27:11.762: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-8946" for this suite. @ 09/27/23 15:27:11.77
• [2.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 09/27/23 15:27:11.777
  Sep 27 15:27:11.777: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename gc @ 09/27/23 15:27:11.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:11.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:11.788
  STEP: create the rc @ 09/27/23 15:27:11.79
  W0927 15:27:11.793903      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0927 15:27:12.381203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:13.381440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:14.381898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:15.382138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:16.382361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/27/23 15:27:16.797
  STEP: wait for all pods to be garbage collected @ 09/27/23 15:27:16.801
  E0927 15:27:17.383223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:18.383477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:19.384283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:20.384715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:21.384935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/27/23 15:27:21.805
  W0927 15:27:21.808172      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 15:27:21.808: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 15:27:21.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-708" for this suite. @ 09/27/23 15:27:21.81
• [10.037 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 09/27/23 15:27:21.814
  Sep 27 15:27:21.815: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:27:21.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:21.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:21.826
  STEP: Counting existing ResourceQuota @ 09/27/23 15:27:21.828
  E0927 15:27:22.385014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:23.385589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:24.386381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:25.386535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:26.386707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/27/23 15:27:26.832
  STEP: Ensuring resource quota status is calculated @ 09/27/23 15:27:26.836
  E0927 15:27:27.386865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:28.387040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/27/23 15:27:28.838
  STEP: Ensuring resource quota status captures replicaset creation @ 09/27/23 15:27:28.849
  E0927 15:27:29.387926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:30.388037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/27/23 15:27:30.853
  STEP: Ensuring resource quota status released usage @ 09/27/23 15:27:30.856
  E0927 15:27:31.388217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:32.388477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:27:32.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6939" for this suite. @ 09/27/23 15:27:32.861
• [11.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 09/27/23 15:27:32.867
  Sep 27 15:27:32.867: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 15:27:32.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:32.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:32.884
  Sep 27 15:27:32.886: INFO: Creating ReplicaSet my-hostname-basic-419ada61-89d8-4dd0-9b47-6e98636038ff
  Sep 27 15:27:32.895: INFO: Pod name my-hostname-basic-419ada61-89d8-4dd0-9b47-6e98636038ff: Found 0 pods out of 1
  E0927 15:27:33.389309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:34.389700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:35.389930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:36.390176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:37.390267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:27:37.898: INFO: Pod name my-hostname-basic-419ada61-89d8-4dd0-9b47-6e98636038ff: Found 1 pods out of 1
  Sep 27 15:27:37.898: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-419ada61-89d8-4dd0-9b47-6e98636038ff" is running
  Sep 27 15:27:37.900: INFO: Pod "my-hostname-basic-419ada61-89d8-4dd0-9b47-6e98636038ff-h6wx9" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:27:32 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:27:34 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:27:34 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:27:32 +0000 UTC Reason: Message:}])
  Sep 27 15:27:37.900: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/27/23 15:27:37.9
  Sep 27 15:27:37.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-883" for this suite. @ 09/27/23 15:27:37.911
• [5.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 09/27/23 15:27:37.917
  Sep 27 15:27:37.917: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:27:37.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:37.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:37.931
  STEP: Setting up server cert @ 09/27/23 15:27:37.948
  E0927 15:27:38.390569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:27:38.615
  STEP: Deploying the webhook pod @ 09/27/23 15:27:38.621
  STEP: Wait for the deployment to be ready @ 09/27/23 15:27:38.634
  Sep 27 15:27:38.638: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 15:27:39.390635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:40.390810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 15:27:40.645
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:27:40.658
  E0927 15:27:41.390949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:27:41.658: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/27/23 15:27:41.663
  STEP: create a pod that should be denied by the webhook @ 09/27/23 15:27:41.681
  STEP: create a pod that causes the webhook to hang @ 09/27/23 15:27:41.694
  E0927 15:27:42.391882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:43.392104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:44.392716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:45.392999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:46.393119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:47.393366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:48.393599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:49.394290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:50.394534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:51.394651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/27/23 15:27:51.7
  STEP: create a configmap that should be admitted by the webhook @ 09/27/23 15:27:51.713
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/27/23 15:27:51.723
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/27/23 15:27:51.729
  STEP: create a namespace that bypass the webhook @ 09/27/23 15:27:51.733
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/27/23 15:27:51.741
  Sep 27 15:27:51.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2013" for this suite. @ 09/27/23 15:27:51.79
  STEP: Destroying namespace "webhook-markers-5106" for this suite. @ 09/27/23 15:27:51.794
  STEP: Destroying namespace "exempted-namespace-4434" for this suite. @ 09/27/23 15:27:51.798
• [13.885 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/27/23 15:27:51.804
  Sep 27 15:27:51.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/27/23 15:27:51.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:51.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:51.817
  STEP: Creating two CSIDrivers @ 09/27/23 15:27:51.819
  STEP: Getting "inline-driver-4626989b-f5b0-4c9e-a7fa-345d9845049e" & "inline-driver-2c2c2de1-68b7-4ab2-ae32-bf5074672da0" @ 09/27/23 15:27:51.831
  STEP: Patching the CSIDriver "inline-driver-2c2c2de1-68b7-4ab2-ae32-bf5074672da0" @ 09/27/23 15:27:51.834
  STEP: Updating the CSIDriver "inline-driver-2c2c2de1-68b7-4ab2-ae32-bf5074672da0" @ 09/27/23 15:27:51.84
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8586" @ 09/27/23 15:27:51.845
  STEP: Deleting CSIDriver "inline-driver-4626989b-f5b0-4c9e-a7fa-345d9845049e" @ 09/27/23 15:27:51.846
  STEP: Confirm deletion of CSIDriver "inline-driver-4626989b-f5b0-4c9e-a7fa-345d9845049e" @ 09/27/23 15:27:51.85
  STEP: Deleting CSIDriver "inline-driver-2c2c2de1-68b7-4ab2-ae32-bf5074672da0" via DeleteCollection @ 09/27/23 15:27:51.851
  STEP: Confirm deletion of CSIDriver "inline-driver-2c2c2de1-68b7-4ab2-ae32-bf5074672da0" @ 09/27/23 15:27:51.858
  Sep 27 15:27:51.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8586" for this suite. @ 09/27/23 15:27:51.862
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 09/27/23 15:27:51.869
  Sep 27 15:27:51.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename aggregator @ 09/27/23 15:27:51.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:51.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:51.882
  Sep 27 15:27:51.884: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Registering the sample API server. @ 09/27/23 15:27:51.885
  E0927 15:27:52.395449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:27:52.569: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Sep 27 15:27:52.590: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0927 15:27:53.395671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:54.395980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:27:54.616: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:27:55.396790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:56.396992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:27:56.619: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:27:57.397175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:27:58.397470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:27:58.620: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:27:59.398577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:00.398806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:00.619: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:28:01.399425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:02.399657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:02.620: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:28:03.400185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:04.400735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:04.619: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:28:05.401380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:06.401608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:06.619: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:28:07.402303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:08.402538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:08.620: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:28:09.403338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:10.403662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:10.619: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:28:11.403814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:12.404013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:12.619: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:28:13.404473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:14.404834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:14.619: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 27, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:28:15.405015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:16.405248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:16.733: INFO: Waited 109.347533ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/27/23 15:28:16.768
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/27/23 15:28:16.77
  STEP: List APIServices @ 09/27/23 15:28:16.778
  Sep 27 15:28:16.782: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/27/23 15:28:16.782
  Sep 27 15:28:16.792: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/27/23 15:28:16.792
  Sep 27 15:28:16.800: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.September, 27, 15, 28, 16, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/27/23 15:28:16.8
  Sep 27 15:28:16.802: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-09-27 15:28:16 +0000 UTC Passed all checks passed}
  Sep 27 15:28:16.802: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 15:28:16.802: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/27/23 15:28:16.802
  Sep 27 15:28:16.809: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-578458602" @ 09/27/23 15:28:16.809
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/27/23 15:28:16.82
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/27/23 15:28:16.826
  STEP: Patch APIService Status @ 09/27/23 15:28:16.828
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/27/23 15:28:16.834
  Sep 27 15:28:16.836: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-09-27 15:28:16 +0000 UTC Passed all checks passed}
  Sep 27 15:28:16.836: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 15:28:16.836: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Sep 27 15:28:16.836: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 09/27/23 15:28:16.836
  STEP: Confirm that the generated APIService has been deleted @ 09/27/23 15:28:16.84
  Sep 27 15:28:16.840: INFO: Requesting list of APIServices to confirm quantity
  Sep 27 15:28:16.843: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Sep 27 15:28:16.843: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Sep 27 15:28:16.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-9642" for this suite. @ 09/27/23 15:28:16.912
• [25.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 09/27/23 15:28:16.919
  Sep 27 15:28:16.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename controllerrevisions @ 09/27/23 15:28:16.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:16.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:16.931
  STEP: Creating DaemonSet "e2e-mzqxs-daemon-set" @ 09/27/23 15:28:16.943
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 15:28:16.947
  Sep 27 15:28:16.954: INFO: Number of nodes with available pods controlled by daemonset e2e-mzqxs-daemon-set: 0
  Sep 27 15:28:16.954: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 15:28:17.405990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:17.959: INFO: Number of nodes with available pods controlled by daemonset e2e-mzqxs-daemon-set: 1
  Sep 27 15:28:17.959: INFO: Node worker-1 is running 0 daemon pod, expected 1
  E0927 15:28:18.406068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:18.959: INFO: Number of nodes with available pods controlled by daemonset e2e-mzqxs-daemon-set: 2
  Sep 27 15:28:18.960: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-mzqxs-daemon-set
  STEP: Confirm DaemonSet "e2e-mzqxs-daemon-set" successfully created with "daemonset-name=e2e-mzqxs-daemon-set" label @ 09/27/23 15:28:18.961
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-mzqxs-daemon-set" @ 09/27/23 15:28:18.965
  Sep 27 15:28:18.966: INFO: Located ControllerRevision: "e2e-mzqxs-daemon-set-7d8c6894b4"
  STEP: Patching ControllerRevision "e2e-mzqxs-daemon-set-7d8c6894b4" @ 09/27/23 15:28:18.968
  Sep 27 15:28:18.972: INFO: e2e-mzqxs-daemon-set-7d8c6894b4 has been patched
  STEP: Create a new ControllerRevision @ 09/27/23 15:28:18.973
  Sep 27 15:28:18.979: INFO: Created ControllerRevision: e2e-mzqxs-daemon-set-54ccf786f4
  STEP: Confirm that there are two ControllerRevisions @ 09/27/23 15:28:18.979
  Sep 27 15:28:18.979: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 27 15:28:18.981: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-mzqxs-daemon-set-7d8c6894b4" @ 09/27/23 15:28:18.981
  STEP: Confirm that there is only one ControllerRevision @ 09/27/23 15:28:18.984
  Sep 27 15:28:18.984: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 27 15:28:18.986: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-mzqxs-daemon-set-54ccf786f4" @ 09/27/23 15:28:18.987
  Sep 27 15:28:18.993: INFO: e2e-mzqxs-daemon-set-54ccf786f4 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/27/23 15:28:18.993
  W0927 15:28:18.999895      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/27/23 15:28:18.999
  Sep 27 15:28:19.000: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0927 15:28:19.406653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:20.002: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 27 15:28:20.005: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-mzqxs-daemon-set-54ccf786f4=updated" @ 09/27/23 15:28:20.005
  STEP: Confirm that there is only one ControllerRevision @ 09/27/23 15:28:20.009
  Sep 27 15:28:20.009: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 27 15:28:20.011: INFO: Found 1 ControllerRevisions
  Sep 27 15:28:20.013: INFO: ControllerRevision "e2e-mzqxs-daemon-set-85469cd66c" has revision 3
  STEP: Deleting DaemonSet "e2e-mzqxs-daemon-set" @ 09/27/23 15:28:20.015
  STEP: deleting DaemonSet.extensions e2e-mzqxs-daemon-set in namespace controllerrevisions-5873, will wait for the garbage collector to delete the pods @ 09/27/23 15:28:20.015
  Sep 27 15:28:20.071: INFO: Deleting DaemonSet.extensions e2e-mzqxs-daemon-set took: 4.098912ms
  Sep 27 15:28:20.171: INFO: Terminating DaemonSet.extensions e2e-mzqxs-daemon-set pods took: 100.696228ms
  E0927 15:28:20.407125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:21.407782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:22.375: INFO: Number of nodes with available pods controlled by daemonset e2e-mzqxs-daemon-set: 0
  Sep 27 15:28:22.375: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-mzqxs-daemon-set
  Sep 27 15:28:22.376: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22532"},"items":null}

  Sep 27 15:28:22.378: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22532"},"items":null}

  Sep 27 15:28:22.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5873" for this suite. @ 09/27/23 15:28:22.386
• [5.471 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/27/23 15:28:22.391
  Sep 27 15:28:22.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:28:22.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:22.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:22.404
  STEP: creating the pod @ 09/27/23 15:28:22.407
  STEP: setting up watch @ 09/27/23 15:28:22.407
  E0927 15:28:22.408173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 09/27/23 15:28:22.509
  STEP: verifying the pod is in kubernetes @ 09/27/23 15:28:22.517
  STEP: verifying pod creation was observed @ 09/27/23 15:28:22.519
  E0927 15:28:23.409249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:24.409707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/27/23 15:28:24.525
  STEP: verifying pod deletion was observed @ 09/27/23 15:28:24.531
  Sep 27 15:28:25.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8961" for this suite. @ 09/27/23 15:28:25.314
• [2.927 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 09/27/23 15:28:25.319
  Sep 27 15:28:25.319: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename limitrange @ 09/27/23 15:28:25.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:25.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:25.335
  STEP: Creating LimitRange "e2e-limitrange-pvf49" in namespace "limitrange-4570" @ 09/27/23 15:28:25.337
  STEP: Creating another limitRange in another namespace @ 09/27/23 15:28:25.341
  Sep 27 15:28:25.354: INFO: Namespace "e2e-limitrange-pvf49-5923" created
  Sep 27 15:28:25.354: INFO: Creating LimitRange "e2e-limitrange-pvf49" in namespace "e2e-limitrange-pvf49-5923"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-pvf49" @ 09/27/23 15:28:25.361
  Sep 27 15:28:25.362: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-pvf49" in "limitrange-4570" namespace @ 09/27/23 15:28:25.363
  Sep 27 15:28:25.368: INFO: LimitRange "e2e-limitrange-pvf49" has been patched
  STEP: Delete LimitRange "e2e-limitrange-pvf49" by Collection with labelSelector: "e2e-limitrange-pvf49=patched" @ 09/27/23 15:28:25.368
  STEP: Confirm that the limitRange "e2e-limitrange-pvf49" has been deleted @ 09/27/23 15:28:25.372
  Sep 27 15:28:25.372: INFO: Requesting list of LimitRange to confirm quantity
  Sep 27 15:28:25.374: INFO: Found 0 LimitRange with label "e2e-limitrange-pvf49=patched"
  Sep 27 15:28:25.374: INFO: LimitRange "e2e-limitrange-pvf49" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-pvf49" @ 09/27/23 15:28:25.374
  Sep 27 15:28:25.376: INFO: Found 1 limitRange
  Sep 27 15:28:25.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4570" for this suite. @ 09/27/23 15:28:25.379
  STEP: Destroying namespace "e2e-limitrange-pvf49-5923" for this suite. @ 09/27/23 15:28:25.383
• [0.072 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 09/27/23 15:28:25.392
  Sep 27 15:28:25.392: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:28:25.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:25.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:25.404
  STEP: validating cluster-info @ 09/27/23 15:28:25.406
  Sep 27 15:28:25.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-7267 cluster-info'
  E0927 15:28:25.410472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:25.479: INFO: stderr: ""
  Sep 27 15:28:25.479: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Sep 27 15:28:25.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7267" for this suite. @ 09/27/23 15:28:25.481
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 09/27/23 15:28:25.491
  Sep 27 15:28:25.491: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 15:28:25.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:25.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:25.504
  STEP: Creating a test namespace @ 09/27/23 15:28:25.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:25.52
  STEP: Creating a pod in the namespace @ 09/27/23 15:28:25.522
  STEP: Waiting for the pod to have running status @ 09/27/23 15:28:25.528
  E0927 15:28:26.410971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:27.411585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/27/23 15:28:27.536
  STEP: Waiting for the namespace to be removed. @ 09/27/23 15:28:27.542
  E0927 15:28:28.411717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:29.412779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:30.413595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:31.414023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:32.414649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:33.414716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:34.415640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:35.416203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:36.416731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:37.416850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:38.417498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/27/23 15:28:38.545
  STEP: Verifying there are no pods in the namespace @ 09/27/23 15:28:38.562
  Sep 27 15:28:38.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4287" for this suite. @ 09/27/23 15:28:38.566
  STEP: Destroying namespace "nsdeletetest-106" for this suite. @ 09/27/23 15:28:38.572
  Sep 27 15:28:38.574: INFO: Namespace nsdeletetest-106 was already deleted
  STEP: Destroying namespace "nsdeletetest-1076" for this suite. @ 09/27/23 15:28:38.574
• [13.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/27/23 15:28:38.58
  Sep 27 15:28:38.580: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:28:38.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:38.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:38.593
  STEP: Creating secret with name s-test-opt-del-47968eeb-0eea-49ae-9dd4-f7e77c890b63 @ 09/27/23 15:28:38.598
  STEP: Creating secret with name s-test-opt-upd-0ebd878d-7281-4976-bc64-c5bc94913010 @ 09/27/23 15:28:38.602
  STEP: Creating the pod @ 09/27/23 15:28:38.606
  E0927 15:28:39.418251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:40.418462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-47968eeb-0eea-49ae-9dd4-f7e77c890b63 @ 09/27/23 15:28:40.649
  STEP: Updating secret s-test-opt-upd-0ebd878d-7281-4976-bc64-c5bc94913010 @ 09/27/23 15:28:40.658
  STEP: Creating secret with name s-test-opt-create-3b7460e8-9caf-4751-b101-0dd0d7da2a98 @ 09/27/23 15:28:40.664
  STEP: waiting to observe update in volume @ 09/27/23 15:28:40.669
  E0927 15:28:41.419274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:42.419561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:43.419984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:44.420323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:28:44.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1567" for this suite. @ 09/27/23 15:28:44.697
• [6.121 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 09/27/23 15:28:44.702
  Sep 27 15:28:44.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 15:28:44.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:44.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:44.714
  STEP: creating a Service @ 09/27/23 15:28:44.718
  STEP: watching for the Service to be added @ 09/27/23 15:28:44.729
  Sep 27 15:28:44.731: INFO: Found Service test-service-wgfgr in namespace services-8399 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Sep 27 15:28:44.731: INFO: Service test-service-wgfgr created
  STEP: Getting /status @ 09/27/23 15:28:44.731
  Sep 27 15:28:44.734: INFO: Service test-service-wgfgr has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/27/23 15:28:44.734
  STEP: watching for the Service to be patched @ 09/27/23 15:28:44.74
  Sep 27 15:28:44.742: INFO: observed Service test-service-wgfgr in namespace services-8399 with annotations: map[] & LoadBalancer: {[]}
  Sep 27 15:28:44.742: INFO: Found Service test-service-wgfgr in namespace services-8399 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Sep 27 15:28:44.742: INFO: Service test-service-wgfgr has service status patched
  STEP: updating the ServiceStatus @ 09/27/23 15:28:44.742
  Sep 27 15:28:44.748: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/27/23 15:28:44.748
  Sep 27 15:28:44.749: INFO: Observed Service test-service-wgfgr in namespace services-8399 with annotations: map[] & Conditions: {[]}
  Sep 27 15:28:44.749: INFO: Observed event: &Service{ObjectMeta:{test-service-wgfgr  services-8399  10f97b67-94d7-452f-b7f8-5c8551002d87 22731 0 2023-09-27 15:28:44 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-09-27 15:28:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-09-27 15:28:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.97.103.136,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.97.103.136],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Sep 27 15:28:44.749: INFO: Found Service test-service-wgfgr in namespace services-8399 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 27 15:28:44.749: INFO: Service test-service-wgfgr has service status updated
  STEP: patching the service @ 09/27/23 15:28:44.749
  STEP: watching for the Service to be patched @ 09/27/23 15:28:44.76
  Sep 27 15:28:44.763: INFO: observed Service test-service-wgfgr in namespace services-8399 with labels: map[test-service-static:true]
  Sep 27 15:28:44.763: INFO: observed Service test-service-wgfgr in namespace services-8399 with labels: map[test-service-static:true]
  Sep 27 15:28:44.763: INFO: observed Service test-service-wgfgr in namespace services-8399 with labels: map[test-service-static:true]
  Sep 27 15:28:44.763: INFO: Found Service test-service-wgfgr in namespace services-8399 with labels: map[test-service:patched test-service-static:true]
  Sep 27 15:28:44.763: INFO: Service test-service-wgfgr patched
  STEP: deleting the service @ 09/27/23 15:28:44.763
  STEP: watching for the Service to be deleted @ 09/27/23 15:28:44.775
  Sep 27 15:28:44.776: INFO: Observed event: ADDED
  Sep 27 15:28:44.776: INFO: Observed event: MODIFIED
  Sep 27 15:28:44.776: INFO: Observed event: MODIFIED
  Sep 27 15:28:44.777: INFO: Observed event: MODIFIED
  Sep 27 15:28:44.777: INFO: Found Service test-service-wgfgr in namespace services-8399 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Sep 27 15:28:44.777: INFO: Service test-service-wgfgr deleted
  Sep 27 15:28:44.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8399" for this suite. @ 09/27/23 15:28:44.779
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 09/27/23 15:28:44.785
  Sep 27 15:28:44.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename podtemplate @ 09/27/23 15:28:44.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:44.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:44.805
  STEP: Create a pod template @ 09/27/23 15:28:44.813
  STEP: Replace a pod template @ 09/27/23 15:28:44.817
  Sep 27 15:28:44.825: INFO: Found updated podtemplate annotation: "true"

  Sep 27 15:28:44.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8048" for this suite. @ 09/27/23 15:28:44.83
• [0.049 seconds]
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/27/23 15:28:44.834
  Sep 27 15:28:44.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 15:28:44.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:44.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:44.846
  E0927 15:28:45.420770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:46.421189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:47.422012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:48.422210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:49.422383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:50.422625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:51.423409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:52.423635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:53.423750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:54.424251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:55.425262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:56.425388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:57.426236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:58.426339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:28:59.426519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:00.426607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:01.426863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:02.427366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:03.428382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:04.428758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:05.429208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:06.429549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:29:06.892: INFO: Container started at 2023-09-27 15:28:45 +0000 UTC, pod became ready at 2023-09-27 15:29:05 +0000 UTC
  Sep 27 15:29:06.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-854" for this suite. @ 09/27/23 15:29:06.894
• [22.068 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 09/27/23 15:29:06.902
  Sep 27 15:29:06.902: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename dns @ 09/27/23 15:29:06.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:06.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:06.915
  STEP: Creating a test headless service @ 09/27/23 15:29:06.917
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2307.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2307.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2307.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2307.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2307.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2307.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2307.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2307.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2307.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 230.105.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.105.230_udp@PTR;check="$$(dig +tcp +noall +answer +search 230.105.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.105.230_tcp@PTR;sleep 1; done
   @ 09/27/23 15:29:06.936
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2307.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2307.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2307.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2307.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2307.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2307.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2307.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2307.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2307.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2307.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 230.105.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.105.230_udp@PTR;check="$$(dig +tcp +noall +answer +search 230.105.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.105.230_tcp@PTR;sleep 1; done
   @ 09/27/23 15:29:06.936
  STEP: creating a pod to probe DNS @ 09/27/23 15:29:06.937
  STEP: submitting the pod to kubernetes @ 09/27/23 15:29:06.937
  E0927 15:29:07.430607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:08.430847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/27/23 15:29:08.952
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:29:08.954
  Sep 27 15:29:08.959: INFO: Unable to read wheezy_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:08.961: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:08.964: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:08.966: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:08.978: INFO: Unable to read jessie_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:08.981: INFO: Unable to read jessie_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:08.983: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:08.986: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:08.995: INFO: Lookups using dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf failed for: [wheezy_udp@dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_udp@dns-test-service.dns-2307.svc.cluster.local jessie_tcp@dns-test-service.dns-2307.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local]

  Sep 27 15:29:09.000: INFO: Pod client logs for webserver: 
  Sep 27 15:29:09.004: INFO: Pod client logs for querier: 
  Sep 27 15:29:09.008: INFO: Pod client logs for jessie-querier: 
  E0927 15:29:09.431413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:10.431686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:11.431816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:12.431951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:13.432722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:29:14.013: INFO: Unable to read wheezy_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:14.016: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:14.018: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:14.021: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:14.033: INFO: Unable to read jessie_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:14.035: INFO: Unable to read jessie_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:14.037: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:14.040: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:14.050: INFO: Lookups using dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf failed for: [wheezy_udp@dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_udp@dns-test-service.dns-2307.svc.cluster.local jessie_tcp@dns-test-service.dns-2307.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local]

  Sep 27 15:29:14.054: INFO: Pod client logs for webserver: 
  Sep 27 15:29:14.059: INFO: Pod client logs for querier: 
  Sep 27 15:29:14.063: INFO: Pod client logs for jessie-querier: 
  E0927 15:29:14.432837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:15.433048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:16.433283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:17.433527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:18.433764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:29:19.012: INFO: Unable to read wheezy_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:19.014: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:19.017: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:19.019: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:19.032: INFO: Unable to read jessie_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:19.034: INFO: Unable to read jessie_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:19.036: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:19.039: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:19.048: INFO: Lookups using dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf failed for: [wheezy_udp@dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_udp@dns-test-service.dns-2307.svc.cluster.local jessie_tcp@dns-test-service.dns-2307.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local]

  Sep 27 15:29:19.053: INFO: Pod client logs for webserver: 
  Sep 27 15:29:19.057: INFO: Pod client logs for querier: 
  Sep 27 15:29:19.061: INFO: Pod client logs for jessie-querier: 
  E0927 15:29:19.434107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:20.434893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:21.435106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:22.435345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:23.435617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:29:24.013: INFO: Unable to read wheezy_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:24.016: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:24.018: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:24.021: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:24.032: INFO: Unable to read jessie_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:24.035: INFO: Unable to read jessie_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:24.037: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:24.039: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:24.049: INFO: Lookups using dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf failed for: [wheezy_udp@dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_udp@dns-test-service.dns-2307.svc.cluster.local jessie_tcp@dns-test-service.dns-2307.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local]

  Sep 27 15:29:24.053: INFO: Pod client logs for webserver: 
  Sep 27 15:29:24.058: INFO: Pod client logs for querier: 
  Sep 27 15:29:24.062: INFO: Pod client logs for jessie-querier: 
  E0927 15:29:24.435842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:25.436752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:26.436978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:27.437219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:28.437432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:29:29.012: INFO: Unable to read wheezy_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:29.015: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:29.017: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:29.020: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:29.032: INFO: Unable to read jessie_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:29.035: INFO: Unable to read jessie_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:29.037: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:29.040: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:29.050: INFO: Lookups using dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf failed for: [wheezy_udp@dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_udp@dns-test-service.dns-2307.svc.cluster.local jessie_tcp@dns-test-service.dns-2307.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local]

  Sep 27 15:29:29.054: INFO: Pod client logs for webserver: 
  Sep 27 15:29:29.059: INFO: Pod client logs for querier: 
  Sep 27 15:29:29.063: INFO: Pod client logs for jessie-querier: 
  E0927 15:29:29.438367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:30.438600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:31.438847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:32.439098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:33.439324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:29:34.012: INFO: Unable to read wheezy_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:34.015: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:34.018: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:34.020: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:34.032: INFO: Unable to read jessie_udp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:34.035: INFO: Unable to read jessie_tcp@dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:34.037: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:34.040: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local from pod dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf: the server could not find the requested resource (get pods dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf)
  Sep 27 15:29:34.050: INFO: Lookups using dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf failed for: [wheezy_udp@dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@dns-test-service.dns-2307.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_udp@dns-test-service.dns-2307.svc.cluster.local jessie_tcp@dns-test-service.dns-2307.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2307.svc.cluster.local]

  Sep 27 15:29:34.055: INFO: Pod client logs for webserver: 
  Sep 27 15:29:34.060: INFO: Pod client logs for querier: 
  Sep 27 15:29:34.064: INFO: Pod client logs for jessie-querier: 
  E0927 15:29:34.440103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:35.440749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:36.440980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:37.441209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:38.441541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:29:39.049: INFO: DNS probes using dns-2307/dns-test-7458b3de-8f4e-4ac0-b51b-2df3ae45cecf succeeded

  Sep 27 15:29:39.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:29:39.052
  STEP: deleting the test service @ 09/27/23 15:29:39.062
  STEP: deleting the test headless service @ 09/27/23 15:29:39.085
  STEP: Destroying namespace "dns-2307" for this suite. @ 09/27/23 15:29:39.092
• [32.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/27/23 15:29:39.105
  Sep 27 15:29:39.105: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:29:39.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:39.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:39.117
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:29:39.119
  E0927 15:29:39.442275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:40.442545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:41.443293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:42.443577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:29:43.135
  Sep 27 15:29:43.137: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-762e174d-a007-4ba8-b85b-9e3585f788fe container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:29:43.142
  Sep 27 15:29:43.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4159" for this suite. @ 09/27/23 15:29:43.156
• [4.058 seconds]
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/27/23 15:29:43.163
  Sep 27 15:29:43.164: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:29:43.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:43.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:43.176
  Sep 27 15:29:43.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4971" for this suite. @ 09/27/23 15:29:43.207
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 09/27/23 15:29:43.213
  Sep 27 15:29:43.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:29:43.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:43.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:43.228
  STEP: set up a multi version CRD @ 09/27/23 15:29:43.23
  Sep 27 15:29:43.231: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:29:43.443928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:44.443993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:45.444887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:46.445222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/27/23 15:29:46.457
  STEP: check the unserved version gets removed @ 09/27/23 15:29:46.472
  STEP: check the other version is not changed @ 09/27/23 15:29:47.255
  E0927 15:29:47.445888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:48.446104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:49.446541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:29:49.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4306" for this suite. @ 09/27/23 15:29:49.796
• [6.589 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 09/27/23 15:29:49.804
  Sep 27 15:29:49.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename dns @ 09/27/23 15:29:49.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:49.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:49.817
  STEP: Creating a test headless service @ 09/27/23 15:29:49.819
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6453.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6453.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/27/23 15:29:49.825
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6453.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6453.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/27/23 15:29:49.825
  STEP: creating a pod to probe DNS @ 09/27/23 15:29:49.825
  STEP: submitting the pod to kubernetes @ 09/27/23 15:29:49.825
  E0927 15:29:50.446672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:51.446895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/27/23 15:29:51.841
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:29:51.842
  Sep 27 15:29:51.855: INFO: DNS probes using dns-6453/dns-test-6f1dab97-3c63-4f5f-89ea-ac2bbdd2704c succeeded

  Sep 27 15:29:51.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:29:51.857
  STEP: deleting the test headless service @ 09/27/23 15:29:51.87
  STEP: Destroying namespace "dns-6453" for this suite. @ 09/27/23 15:29:51.878
• [2.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 09/27/23 15:29:51.889
  Sep 27 15:29:51.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename job @ 09/27/23 15:29:51.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:51.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:51.905
  STEP: Creating a job @ 09/27/23 15:29:51.907
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/27/23 15:29:51.913
  E0927 15:29:52.448006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:53.448253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/27/23 15:29:53.916
  STEP: updating /status @ 09/27/23 15:29:53.922
  STEP: get /status @ 09/27/23 15:29:53.928
  Sep 27 15:29:53.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4609" for this suite. @ 09/27/23 15:29:53.932
• [2.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 09/27/23 15:29:53.937
  Sep 27 15:29:53.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:29:53.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:53.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:53.948
  STEP: Setting up server cert @ 09/27/23 15:29:53.962
  E0927 15:29:54.448371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:29:54.561
  STEP: Deploying the webhook pod @ 09/27/23 15:29:54.569
  STEP: Wait for the deployment to be ready @ 09/27/23 15:29:54.577
  Sep 27 15:29:54.584: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0927 15:29:55.448546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:56.448756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 15:29:56.591
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:29:56.625
  E0927 15:29:57.449451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:29:57.625: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/27/23 15:29:57.629
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/27/23 15:29:57.63
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/27/23 15:29:57.63
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/27/23 15:29:57.63
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/27/23 15:29:57.631
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/27/23 15:29:57.631
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/27/23 15:29:57.632
  Sep 27 15:29:57.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4501" for this suite. @ 09/27/23 15:29:57.664
  STEP: Destroying namespace "webhook-markers-5559" for this suite. @ 09/27/23 15:29:57.672
• [3.740 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 09/27/23 15:29:57.678
  Sep 27 15:29:57.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename endpointslice @ 09/27/23 15:29:57.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:57.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:57.692
  STEP: getting /apis @ 09/27/23 15:29:57.695
  STEP: getting /apis/discovery.k8s.io @ 09/27/23 15:29:57.698
  STEP: getting /apis/discovery.k8s.iov1 @ 09/27/23 15:29:57.699
  STEP: creating @ 09/27/23 15:29:57.699
  STEP: getting @ 09/27/23 15:29:57.712
  STEP: listing @ 09/27/23 15:29:57.714
  STEP: watching @ 09/27/23 15:29:57.716
  Sep 27 15:29:57.716: INFO: starting watch
  STEP: cluster-wide listing @ 09/27/23 15:29:57.717
  STEP: cluster-wide watching @ 09/27/23 15:29:57.719
  Sep 27 15:29:57.719: INFO: starting watch
  STEP: patching @ 09/27/23 15:29:57.719
  STEP: updating @ 09/27/23 15:29:57.723
  Sep 27 15:29:57.729: INFO: waiting for watch events with expected annotations
  Sep 27 15:29:57.729: INFO: saw patched and updated annotations
  STEP: deleting @ 09/27/23 15:29:57.729
  STEP: deleting a collection @ 09/27/23 15:29:57.736
  Sep 27 15:29:57.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8459" for this suite. @ 09/27/23 15:29:57.746
• [0.075 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 09/27/23 15:29:57.753
  Sep 27 15:29:57.753: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename ingress @ 09/27/23 15:29:57.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:57.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:57.764
  STEP: getting /apis @ 09/27/23 15:29:57.767
  STEP: getting /apis/networking.k8s.io @ 09/27/23 15:29:57.77
  STEP: getting /apis/networking.k8s.iov1 @ 09/27/23 15:29:57.77
  STEP: creating @ 09/27/23 15:29:57.771
  STEP: getting @ 09/27/23 15:29:57.784
  STEP: listing @ 09/27/23 15:29:57.786
  STEP: watching @ 09/27/23 15:29:57.787
  Sep 27 15:29:57.787: INFO: starting watch
  STEP: cluster-wide listing @ 09/27/23 15:29:57.788
  STEP: cluster-wide watching @ 09/27/23 15:29:57.79
  Sep 27 15:29:57.790: INFO: starting watch
  STEP: patching @ 09/27/23 15:29:57.791
  STEP: updating @ 09/27/23 15:29:57.795
  Sep 27 15:29:57.800: INFO: waiting for watch events with expected annotations
  Sep 27 15:29:57.800: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/27/23 15:29:57.801
  STEP: updating /status @ 09/27/23 15:29:57.807
  STEP: get /status @ 09/27/23 15:29:57.813
  STEP: deleting @ 09/27/23 15:29:57.816
  STEP: deleting a collection @ 09/27/23 15:29:57.823
  Sep 27 15:29:57.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-538" for this suite. @ 09/27/23 15:29:57.834
• [0.085 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 09/27/23 15:29:57.839
  Sep 27 15:29:57.839: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:29:57.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:57.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:57.853
  STEP: validating api versions @ 09/27/23 15:29:57.855
  Sep 27 15:29:57.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-8957 api-versions'
  Sep 27 15:29:57.922: INFO: stderr: ""
  Sep 27 15:29:57.922: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautopilot.k0sproject.io/v1beta2\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.k0sproject.io/v1beta1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Sep 27 15:29:57.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8957" for this suite. @ 09/27/23 15:29:57.925
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/27/23 15:29:57.93
  Sep 27 15:29:57.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:29:57.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:57.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:57.946
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:29:57.948
  E0927 15:29:58.449603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:29:59.450396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:00.451185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:01.451429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:30:01.965
  Sep 27 15:30:01.967: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-8f1e3222-190f-4f7c-a2ec-7925ded0917b container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:30:01.979
  Sep 27 15:30:01.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2381" for this suite. @ 09/27/23 15:30:01.993
• [4.067 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 09/27/23 15:30:01.997
  Sep 27 15:30:01.998: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:30:01.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:02.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:02.01
  STEP: Setting up server cert @ 09/27/23 15:30:02.025
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:30:02.408
  STEP: Deploying the webhook pod @ 09/27/23 15:30:02.412
  STEP: Wait for the deployment to be ready @ 09/27/23 15:30:02.42
  Sep 27 15:30:02.427: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0927 15:30:02.452155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:03.452302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 15:30:04.433
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:30:04.444
  E0927 15:30:04.453035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:30:05.445: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0927 15:30:05.453396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 09/27/23 15:30:05.525
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/27/23 15:30:05.566
  STEP: Deleting the collection of validation webhooks @ 09/27/23 15:30:05.602
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/27/23 15:30:05.638
  Sep 27 15:30:05.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2829" for this suite. @ 09/27/23 15:30:05.675
  STEP: Destroying namespace "webhook-markers-7285" for this suite. @ 09/27/23 15:30:05.68
• [3.691 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/27/23 15:30:05.689
  Sep 27 15:30:05.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:30:05.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:05.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:05.703
  STEP: Creating projection with secret that has name projected-secret-test-bb3194a6-3d74-48f4-8a9b-636d92018583 @ 09/27/23 15:30:05.705
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:30:05.712
  E0927 15:30:06.454345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:07.454605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:08.455641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:09.455840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:30:09.726
  Sep 27 15:30:09.728: INFO: Trying to get logs from node worker-0 pod pod-projected-secrets-3ac1b85d-48f0-464c-b382-a7e12b84e479 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:30:09.733
  Sep 27 15:30:09.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6586" for this suite. @ 09/27/23 15:30:09.747
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/27/23 15:30:09.756
  Sep 27 15:30:09.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:30:09.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:09.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:09.767
  STEP: Creating secret with name secret-test-754b091d-d26c-4946-9c14-732fbf233a0e @ 09/27/23 15:30:09.77
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:30:09.774
  E0927 15:30:10.456533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:11.456743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:12.457441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:13.457664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:30:13.788
  Sep 27 15:30:13.790: INFO: Trying to get logs from node worker-0 pod pod-secrets-d3e0ab0a-ec28-4a0b-8bdd-d4b653bc613b container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:30:13.795
  Sep 27 15:30:13.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3955" for this suite. @ 09/27/23 15:30:13.81
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 09/27/23 15:30:13.82
  Sep 27 15:30:13.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename runtimeclass @ 09/27/23 15:30:13.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:13.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:13.843
  STEP: getting /apis @ 09/27/23 15:30:13.845
  STEP: getting /apis/node.k8s.io @ 09/27/23 15:30:13.848
  STEP: getting /apis/node.k8s.io/v1 @ 09/27/23 15:30:13.849
  STEP: creating @ 09/27/23 15:30:13.849
  STEP: watching @ 09/27/23 15:30:13.864
  Sep 27 15:30:13.864: INFO: starting watch
  STEP: getting @ 09/27/23 15:30:13.869
  STEP: listing @ 09/27/23 15:30:13.871
  STEP: patching @ 09/27/23 15:30:13.872
  STEP: updating @ 09/27/23 15:30:13.877
  Sep 27 15:30:13.882: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 09/27/23 15:30:13.882
  STEP: deleting a collection @ 09/27/23 15:30:13.89
  Sep 27 15:30:13.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-32" for this suite. @ 09/27/23 15:30:13.903
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/27/23 15:30:13.918
  Sep 27 15:30:13.918: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename subpath @ 09/27/23 15:30:13.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:13.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:13.939
  STEP: Setting up data @ 09/27/23 15:30:13.942
  STEP: Creating pod pod-subpath-test-configmap-m6dn @ 09/27/23 15:30:13.95
  STEP: Creating a pod to test atomic-volume-subpath @ 09/27/23 15:30:13.95
  E0927 15:30:14.458470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:15.458701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:16.458785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:17.459183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:18.460003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:19.461108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:20.462015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:21.462248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:22.462935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:23.463343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:24.464308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:25.464731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:26.465034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:27.465274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:28.466311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:29.467079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:30.467759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:31.467988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:32.468691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:33.468949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:34.469735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:35.470730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:36.471413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:37.471663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:30:37.999
  Sep 27 15:30:38.001: INFO: Trying to get logs from node worker-0 pod pod-subpath-test-configmap-m6dn container test-container-subpath-configmap-m6dn: <nil>
  STEP: delete the pod @ 09/27/23 15:30:38.012
  STEP: Deleting pod pod-subpath-test-configmap-m6dn @ 09/27/23 15:30:38.028
  Sep 27 15:30:38.028: INFO: Deleting pod "pod-subpath-test-configmap-m6dn" in namespace "subpath-6911"
  Sep 27 15:30:38.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6911" for this suite. @ 09/27/23 15:30:38.032
• [24.119 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 09/27/23 15:30:38.038
  Sep 27 15:30:38.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 15:30:38.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:38.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:38.057
  STEP: Read namespace status @ 09/27/23 15:30:38.06
  Sep 27 15:30:38.062: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/27/23 15:30:38.062
  Sep 27 15:30:38.067: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/27/23 15:30:38.067
  Sep 27 15:30:38.079: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Sep 27 15:30:38.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-451" for this suite. @ 09/27/23 15:30:38.081
• [0.047 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 09/27/23 15:30:38.086
  Sep 27 15:30:38.086: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:30:38.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:38.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:38.098
  STEP: creating Agnhost RC @ 09/27/23 15:30:38.101
  Sep 27 15:30:38.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2557 create -f -'
  Sep 27 15:30:38.338: INFO: stderr: ""
  Sep 27 15:30:38.338: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/27/23 15:30:38.338
  E0927 15:30:38.472475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:30:39.341: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:30:39.341: INFO: Found 0 / 1
  E0927 15:30:39.472939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:30:40.341: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:30:40.341: INFO: Found 1 / 1
  Sep 27 15:30:40.341: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/27/23 15:30:40.341
  Sep 27 15:30:40.343: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:30:40.343: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 27 15:30:40.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-2557 patch pod agnhost-primary-wslfn -p {"metadata":{"annotations":{"x":"y"}}}'
  Sep 27 15:30:40.408: INFO: stderr: ""
  Sep 27 15:30:40.408: INFO: stdout: "pod/agnhost-primary-wslfn patched\n"
  STEP: checking annotations @ 09/27/23 15:30:40.408
  Sep 27 15:30:40.410: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:30:40.410: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 27 15:30:40.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2557" for this suite. @ 09/27/23 15:30:40.412
• [2.337 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 09/27/23 15:30:40.423
  Sep 27 15:30:40.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename security-context-test @ 09/27/23 15:30:40.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:40.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:40.437
  E0927 15:30:40.473535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:41.473762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:42.474437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:43.474584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:30:44.461: INFO: Got logs for pod "busybox-privileged-false-9a2fe909-bb31-46b6-b116-2c437cd38e24": "ip: RTNETLINK answers: Operation not permitted\n"
  Sep 27 15:30:44.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9858" for this suite. @ 09/27/23 15:30:44.463
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 09/27/23 15:30:44.47
  Sep 27 15:30:44.470: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 15:30:44.47
  E0927 15:30:44.474957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:44.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:44.483
  STEP: creating a Namespace @ 09/27/23 15:30:44.485
  STEP: patching the Namespace @ 09/27/23 15:30:44.506
  STEP: get the Namespace and ensuring it has the label @ 09/27/23 15:30:44.511
  Sep 27 15:30:44.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4948" for this suite. @ 09/27/23 15:30:44.516
  STEP: Destroying namespace "nspatchtest-ec77e52c-597a-4d0e-815e-b4741728182c-5022" for this suite. @ 09/27/23 15:30:44.522
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/27/23 15:30:44.529
  Sep 27 15:30:44.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:30:44.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:44.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:44.54
  STEP: Creating configMap with name configmap-test-volume-map-de34ff63-4208-4b4c-8d67-e60cdde880e2 @ 09/27/23 15:30:44.542
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:30:44.547
  E0927 15:30:45.475403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:46.475562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:47.475719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:48.475853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:30:48.561
  Sep 27 15:30:48.563: INFO: Trying to get logs from node worker-1 pod pod-configmaps-8d96b5ef-0971-4d9c-ab34-dbd2bf0733b1 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:30:48.568
  Sep 27 15:30:48.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-337" for this suite. @ 09/27/23 15:30:48.588
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/27/23 15:30:48.593
  Sep 27 15:30:48.593: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:30:48.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:48.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:48.606
  STEP: Creating projection with secret that has name projected-secret-test-map-264c4fae-c43d-40c3-8b72-41d2fbec1300 @ 09/27/23 15:30:48.608
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:30:48.612
  E0927 15:30:49.476259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:50.476736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:51.476853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:52.477112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:30:52.624
  Sep 27 15:30:52.626: INFO: Trying to get logs from node worker-1 pod pod-projected-secrets-074d9c52-11e2-4e6f-84be-fdc262397a9b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:30:52.631
  Sep 27 15:30:52.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7775" for this suite. @ 09/27/23 15:30:52.652
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/27/23 15:30:52.661
  Sep 27 15:30:52.661: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-runtime @ 09/27/23 15:30:52.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:52.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:52.676
  STEP: create the container @ 09/27/23 15:30:52.678
  W0927 15:30:52.684821      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/27/23 15:30:52.684
  E0927 15:30:53.478188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:54.478991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:55.479714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/27/23 15:30:55.695
  STEP: the container should be terminated @ 09/27/23 15:30:55.696
  STEP: the termination message should be set @ 09/27/23 15:30:55.697
  Sep 27 15:30:55.697: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/27/23 15:30:55.697
  Sep 27 15:30:55.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9138" for this suite. @ 09/27/23 15:30:55.716
• [3.062 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/27/23 15:30:55.725
  Sep 27 15:30:55.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-runtime @ 09/27/23 15:30:55.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:55.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:55.738
  STEP: create the container @ 09/27/23 15:30:55.74
  W0927 15:30:55.749872      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/27/23 15:30:55.75
  E0927 15:30:56.479860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:57.480067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:30:58.480738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/27/23 15:30:58.76
  STEP: the container should be terminated @ 09/27/23 15:30:58.762
  STEP: the termination message should be set @ 09/27/23 15:30:58.762
  Sep 27 15:30:58.762: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/27/23 15:30:58.762
  Sep 27 15:30:58.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7642" for this suite. @ 09/27/23 15:30:58.773
• [3.054 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 09/27/23 15:30:58.78
  Sep 27 15:30:58.780: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/27/23 15:30:58.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:58.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:58.795
  STEP: fetching the /apis discovery document @ 09/27/23 15:30:58.797
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/27/23 15:30:58.798
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/27/23 15:30:58.799
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/27/23 15:30:58.799
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/27/23 15:30:58.8
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/27/23 15:30:58.8
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/27/23 15:30:58.801
  Sep 27 15:30:58.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4779" for this suite. @ 09/27/23 15:30:58.803
• [0.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 09/27/23 15:30:58.809
  Sep 27 15:30:58.809: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename dns @ 09/27/23 15:30:58.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:58.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:58.82
  STEP: Creating a test externalName service @ 09/27/23 15:30:58.822
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3218.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:30:58.826
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3218.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:30:58.826
  STEP: creating a pod to probe DNS @ 09/27/23 15:30:58.826
  STEP: submitting the pod to kubernetes @ 09/27/23 15:30:58.826
  E0927 15:30:59.480826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:00.481069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/27/23 15:31:00.836
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:31:00.838
  Sep 27 15:31:00.848: INFO: DNS probes using dns-test-112f8cc9-73d3-4e11-9c2f-2c32e356172d succeeded

  STEP: changing the externalName to bar.example.com @ 09/27/23 15:31:00.848
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3218.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:31:00.855
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3218.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:31:00.855
  STEP: creating a second pod to probe DNS @ 09/27/23 15:31:00.855
  STEP: submitting the pod to kubernetes @ 09/27/23 15:31:00.855
  E0927 15:31:01.481238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:02.481514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:03.482225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:04.482636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:05.482814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:06.483072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:07.483553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:08.483626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/27/23 15:31:08.879
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:31:08.88
  Sep 27 15:31:08.885: INFO: File wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local from pod  dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:31:08.888: INFO: File jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local from pod  dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:31:08.888: INFO: Lookups using dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 failed for: [wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local]

  Sep 27 15:31:08.893: INFO: Pod client logs for webserver: 
  Sep 27 15:31:08.897: INFO: Pod client logs for querier: 
  Sep 27 15:31:08.901: INFO: Pod client logs for jessie-querier: 
  E0927 15:31:09.484102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:10.484370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:11.484603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:12.484851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:13.485063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:31:13.905: INFO: File wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local from pod  dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:31:13.908: INFO: File jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local from pod  dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:31:13.908: INFO: Lookups using dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 failed for: [wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local]

  Sep 27 15:31:13.913: INFO: Pod client logs for webserver: 
  Sep 27 15:31:13.917: INFO: Pod client logs for querier: 
  Sep 27 15:31:13.922: INFO: Pod client logs for jessie-querier: 
  E0927 15:31:14.485831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:15.486027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:16.486258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:17.486401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:18.486529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:31:18.906: INFO: File wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local from pod  dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:31:18.909: INFO: File jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local from pod  dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:31:18.909: INFO: Lookups using dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 failed for: [wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local]

  Sep 27 15:31:18.914: INFO: Pod client logs for webserver: 
  Sep 27 15:31:18.918: INFO: Pod client logs for querier: 
  Sep 27 15:31:18.922: INFO: Pod client logs for jessie-querier: 
  E0927 15:31:19.486630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:20.486853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:21.487075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:22.487322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:23.487623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:31:23.906: INFO: File wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local from pod  dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:31:23.908: INFO: File jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local from pod  dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:31:23.908: INFO: Lookups using dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 failed for: [wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local]

  Sep 27 15:31:23.913: INFO: Pod client logs for webserver: 
  Sep 27 15:31:23.917: INFO: Pod client logs for querier: 
  Sep 27 15:31:23.921: INFO: Pod client logs for jessie-querier: 
  E0927 15:31:24.488613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:25.489291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:26.489492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:27.489726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:28.490002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:31:28.905: INFO: File wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local from pod  dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:31:28.908: INFO: File jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local from pod  dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:31:28.908: INFO: Lookups using dns-3218/dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 failed for: [wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local]

  Sep 27 15:31:28.913: INFO: Pod client logs for webserver: 
  Sep 27 15:31:28.917: INFO: Pod client logs for querier: 
  Sep 27 15:31:28.921: INFO: Pod client logs for jessie-querier: 
  E0927 15:31:29.490883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:30.491096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:31.491321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:32.491586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:33.491691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:31:33.908: INFO: DNS probes using dns-test-e3ca1168-ffc6-44ef-9304-eeb09c4522f6 succeeded

  STEP: changing the service to type=ClusterIP @ 09/27/23 15:31:33.908
  W0927 15:31:33.923269      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3218.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-3218.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:31:33.923
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3218.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3218.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:31:33.923
  STEP: creating a third pod to probe DNS @ 09/27/23 15:31:33.923
  STEP: submitting the pod to kubernetes @ 09/27/23 15:31:33.925
  E0927 15:31:34.492728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:35.492959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/27/23 15:31:35.938
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:31:35.94
  Sep 27 15:31:35.948: INFO: DNS probes using dns-test-7cd5548b-ffef-497a-b82e-6e26ea910a64 succeeded

  Sep 27 15:31:35.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:31:35.95
  STEP: deleting the pod @ 09/27/23 15:31:35.967
  STEP: deleting the pod @ 09/27/23 15:31:35.981
  STEP: deleting the test externalName service @ 09/27/23 15:31:36.004
  STEP: Destroying namespace "dns-3218" for this suite. @ 09/27/23 15:31:36.023
• [37.219 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/27/23 15:31:36.028
  Sep 27 15:31:36.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:31:36.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:36.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:36.045
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:31:36.048
  E0927 15:31:36.493660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:37.493916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:31:38.062
  Sep 27 15:31:38.064: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-0fc8b3ab-2c62-4e1f-82c0-0eab6a33578f container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:31:38.071
  Sep 27 15:31:38.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-908" for this suite. @ 09/27/23 15:31:38.091
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 09/27/23 15:31:38.098
  Sep 27 15:31:38.098: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:31:38.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:38.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:38.118
  STEP: Creating Pod @ 09/27/23 15:31:38.121
  E0927 15:31:38.494085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:39.494858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/27/23 15:31:40.133
  Sep 27 15:31:40.133: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9494 PodName:pod-sharedvolume-0ce89dce-e9b9-4a1e-958a-00b93def52c0 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:31:40.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:31:40.133: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:31:40.133: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-9494/pods/pod-sharedvolume-0ce89dce-e9b9-4a1e-958a-00b93def52c0/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Sep 27 15:31:40.213: INFO: Exec stderr: ""
  Sep 27 15:31:40.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9494" for this suite. @ 09/27/23 15:31:40.216
• [2.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/27/23 15:31:40.222
  Sep 27 15:31:40.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/27/23 15:31:40.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:40.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:40.235
  STEP: creating a target pod @ 09/27/23 15:31:40.238
  E0927 15:31:40.495880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:41.496116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/27/23 15:31:42.25
  E0927 15:31:42.496305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:43.496545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 09/27/23 15:31:44.265
  Sep 27 15:31:44.265: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9858 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:31:44.265: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:31:44.266: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:31:44.266: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-9858/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 27 15:31:44.362: INFO: Exec stderr: ""
  Sep 27 15:31:44.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9858" for this suite. @ 09/27/23 15:31:44.37
• [4.152 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 09/27/23 15:31:44.375
  Sep 27 15:31:44.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename disruption @ 09/27/23 15:31:44.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:44.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:44.387
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:31:44.394
  E0927 15:31:44.497493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:45.498412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/27/23 15:31:46.398
  STEP: Waiting for all pods to be running @ 09/27/23 15:31:46.404
  Sep 27 15:31:46.406: INFO: running pods: 0 < 1
  E0927 15:31:46.498492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:47.498745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/27/23 15:31:48.408
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:31:48.416
  STEP: Patching PodDisruptionBudget status @ 09/27/23 15:31:48.42
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:31:48.427
  Sep 27 15:31:48.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8224" for this suite. @ 09/27/23 15:31:48.431
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 09/27/23 15:31:48.438
  Sep 27 15:31:48.438: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:31:48.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:48.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:48.449
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/27/23 15:31:48.452
  E0927 15:31:48.499604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:49.500251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:50.500577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:51.500730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:31:52.465
  Sep 27 15:31:52.466: INFO: Trying to get logs from node worker-1 pod pod-8114ec2a-a4c9-425d-805c-e7bcc3decec4 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:31:52.471
  Sep 27 15:31:52.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8326" for this suite. @ 09/27/23 15:31:52.485
• [4.052 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 09/27/23 15:31:52.49
  Sep 27 15:31:52.490: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:31:52.491
  E0927 15:31:52.500913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:52.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:52.507
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/27/23 15:31:52.509
  E0927 15:31:53.501305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:54.501457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:55.501832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:56.502002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:31:56.522
  Sep 27 15:31:56.524: INFO: Trying to get logs from node worker-1 pod pod-e12d991e-c1e7-4d22-bf48-95a4e160b66c container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:31:56.529
  Sep 27 15:31:56.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2964" for this suite. @ 09/27/23 15:31:56.544
• [4.059 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 09/27/23 15:31:56.549
  Sep 27 15:31:56.549: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename discovery @ 09/27/23 15:31:56.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:56.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:56.565
  STEP: Setting up server cert @ 09/27/23 15:31:56.568
  Sep 27 15:31:57.315: INFO: Checking APIGroup: apiregistration.k8s.io
  Sep 27 15:31:57.315: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Sep 27 15:31:57.315: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Sep 27 15:31:57.315: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Sep 27 15:31:57.315: INFO: Checking APIGroup: apps
  Sep 27 15:31:57.316: INFO: PreferredVersion.GroupVersion: apps/v1
  Sep 27 15:31:57.316: INFO: Versions found [{apps/v1 v1}]
  Sep 27 15:31:57.316: INFO: apps/v1 matches apps/v1
  Sep 27 15:31:57.316: INFO: Checking APIGroup: events.k8s.io
  Sep 27 15:31:57.317: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Sep 27 15:31:57.317: INFO: Versions found [{events.k8s.io/v1 v1}]
  Sep 27 15:31:57.317: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Sep 27 15:31:57.317: INFO: Checking APIGroup: authentication.k8s.io
  Sep 27 15:31:57.318: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Sep 27 15:31:57.318: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Sep 27 15:31:57.318: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Sep 27 15:31:57.318: INFO: Checking APIGroup: authorization.k8s.io
  Sep 27 15:31:57.319: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Sep 27 15:31:57.319: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Sep 27 15:31:57.319: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Sep 27 15:31:57.319: INFO: Checking APIGroup: autoscaling
  Sep 27 15:31:57.319: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Sep 27 15:31:57.319: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Sep 27 15:31:57.319: INFO: autoscaling/v2 matches autoscaling/v2
  Sep 27 15:31:57.319: INFO: Checking APIGroup: batch
  Sep 27 15:31:57.320: INFO: PreferredVersion.GroupVersion: batch/v1
  Sep 27 15:31:57.320: INFO: Versions found [{batch/v1 v1}]
  Sep 27 15:31:57.320: INFO: batch/v1 matches batch/v1
  Sep 27 15:31:57.320: INFO: Checking APIGroup: certificates.k8s.io
  Sep 27 15:31:57.321: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Sep 27 15:31:57.321: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Sep 27 15:31:57.321: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Sep 27 15:31:57.321: INFO: Checking APIGroup: networking.k8s.io
  Sep 27 15:31:57.321: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Sep 27 15:31:57.321: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Sep 27 15:31:57.321: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Sep 27 15:31:57.322: INFO: Checking APIGroup: policy
  Sep 27 15:31:57.322: INFO: PreferredVersion.GroupVersion: policy/v1
  Sep 27 15:31:57.322: INFO: Versions found [{policy/v1 v1}]
  Sep 27 15:31:57.322: INFO: policy/v1 matches policy/v1
  Sep 27 15:31:57.322: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Sep 27 15:31:57.323: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Sep 27 15:31:57.323: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Sep 27 15:31:57.323: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Sep 27 15:31:57.323: INFO: Checking APIGroup: storage.k8s.io
  Sep 27 15:31:57.324: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Sep 27 15:31:57.324: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Sep 27 15:31:57.324: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Sep 27 15:31:57.324: INFO: Checking APIGroup: admissionregistration.k8s.io
  Sep 27 15:31:57.324: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Sep 27 15:31:57.324: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Sep 27 15:31:57.324: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Sep 27 15:31:57.324: INFO: Checking APIGroup: apiextensions.k8s.io
  Sep 27 15:31:57.325: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Sep 27 15:31:57.325: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Sep 27 15:31:57.325: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Sep 27 15:31:57.325: INFO: Checking APIGroup: scheduling.k8s.io
  Sep 27 15:31:57.326: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Sep 27 15:31:57.326: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Sep 27 15:31:57.326: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Sep 27 15:31:57.326: INFO: Checking APIGroup: coordination.k8s.io
  Sep 27 15:31:57.327: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Sep 27 15:31:57.327: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Sep 27 15:31:57.327: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Sep 27 15:31:57.327: INFO: Checking APIGroup: node.k8s.io
  Sep 27 15:31:57.327: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Sep 27 15:31:57.327: INFO: Versions found [{node.k8s.io/v1 v1}]
  Sep 27 15:31:57.327: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Sep 27 15:31:57.327: INFO: Checking APIGroup: discovery.k8s.io
  Sep 27 15:31:57.328: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Sep 27 15:31:57.328: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Sep 27 15:31:57.328: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Sep 27 15:31:57.328: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Sep 27 15:31:57.329: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Sep 27 15:31:57.329: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Sep 27 15:31:57.329: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Sep 27 15:31:57.329: INFO: Checking APIGroup: helm.k0sproject.io
  Sep 27 15:31:57.330: INFO: PreferredVersion.GroupVersion: helm.k0sproject.io/v1beta1
  Sep 27 15:31:57.330: INFO: Versions found [{helm.k0sproject.io/v1beta1 v1beta1}]
  Sep 27 15:31:57.330: INFO: helm.k0sproject.io/v1beta1 matches helm.k0sproject.io/v1beta1
  Sep 27 15:31:57.330: INFO: Checking APIGroup: autopilot.k0sproject.io
  Sep 27 15:31:57.330: INFO: PreferredVersion.GroupVersion: autopilot.k0sproject.io/v1beta2
  Sep 27 15:31:57.331: INFO: Versions found [{autopilot.k0sproject.io/v1beta2 v1beta2}]
  Sep 27 15:31:57.331: INFO: autopilot.k0sproject.io/v1beta2 matches autopilot.k0sproject.io/v1beta2
  Sep 27 15:31:57.331: INFO: Checking APIGroup: metrics.k8s.io
  Sep 27 15:31:57.331: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Sep 27 15:31:57.331: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Sep 27 15:31:57.331: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Sep 27 15:31:57.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1897" for this suite. @ 09/27/23 15:31:57.334
• [0.791 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 09/27/23 15:31:57.341
  Sep 27 15:31:57.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename gc @ 09/27/23 15:31:57.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:57.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:57.354
  STEP: create the rc @ 09/27/23 15:31:57.358
  W0927 15:31:57.366358      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0927 15:31:57.502683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:58.503657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:31:59.508165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:00.517928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:01.519302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:02.519423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/27/23 15:32:03.369
  STEP: wait for the rc to be deleted @ 09/27/23 15:32:03.379
  E0927 15:32:03.520016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:32:04.410: INFO: 80 pods remaining
  Sep 27 15:32:04.410: INFO: 80 pods has nil DeletionTimestamp
  Sep 27 15:32:04.420: INFO: 
  E0927 15:32:04.522425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:32:05.394: INFO: 71 pods remaining
  Sep 27 15:32:05.394: INFO: 70 pods has nil DeletionTimestamp
  Sep 27 15:32:05.394: INFO: 
  E0927 15:32:05.523176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:32:06.392: INFO: 60 pods remaining
  Sep 27 15:32:06.392: INFO: 60 pods has nil DeletionTimestamp
  Sep 27 15:32:06.392: INFO: 
  E0927 15:32:06.524198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:32:07.388: INFO: 40 pods remaining
  Sep 27 15:32:07.388: INFO: 40 pods has nil DeletionTimestamp
  Sep 27 15:32:07.388: INFO: 
  E0927 15:32:07.524851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:32:08.406: INFO: 31 pods remaining
  Sep 27 15:32:08.406: INFO: 30 pods has nil DeletionTimestamp
  Sep 27 15:32:08.406: INFO: 
  E0927 15:32:08.524987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:32:09.385: INFO: 20 pods remaining
  Sep 27 15:32:09.385: INFO: 20 pods has nil DeletionTimestamp
  Sep 27 15:32:09.385: INFO: 
  E0927 15:32:09.525562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/27/23 15:32:10.384
  W0927 15:32:10.387946      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 15:32:10.387: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 15:32:10.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8049" for this suite. @ 09/27/23 15:32:10.39
• [13.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/27/23 15:32:10.398
  Sep 27 15:32:10.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename events @ 09/27/23 15:32:10.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:10.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:10.42
  STEP: Create set of events @ 09/27/23 15:32:10.423
  STEP: get a list of Events with a label in the current namespace @ 09/27/23 15:32:10.444
  STEP: delete a list of events @ 09/27/23 15:32:10.447
  Sep 27 15:32:10.447: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/27/23 15:32:10.462
  Sep 27 15:32:10.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8988" for this suite. @ 09/27/23 15:32:10.468
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/27/23 15:32:10.477
  Sep 27 15:32:10.477: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:32:10.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:10.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:10.498
  STEP: Creating configMap with name configmap-test-volume-cacf91ae-f66f-432c-a8a8-9af60bfde6a8 @ 09/27/23 15:32:10.502
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:32:10.507
  E0927 15:32:10.526650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:11.526883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:12.527060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:13.527270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:14.528072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:32:14.528
  Sep 27 15:32:14.530: INFO: Trying to get logs from node worker-1 pod pod-configmaps-4482797c-414c-4516-a37d-a4a825e33538 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:32:14.535
  Sep 27 15:32:14.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9426" for this suite. @ 09/27/23 15:32:14.551
• [4.078 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/27/23 15:32:14.556
  Sep 27 15:32:14.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:32:14.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:14.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:14.569
  STEP: Creating configMap with name configmap-test-upd-23ff14d5-650e-4bef-805b-013379b916a1 @ 09/27/23 15:32:14.574
  STEP: Creating the pod @ 09/27/23 15:32:14.578
  E0927 15:32:15.529009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:16.529338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/27/23 15:32:16.59
  STEP: Waiting for pod with binary data @ 09/27/23 15:32:16.596
  Sep 27 15:32:16.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9247" for this suite. @ 09/27/23 15:32:16.605
• [2.054 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 09/27/23 15:32:16.61
  Sep 27 15:32:16.610: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename endpointslice @ 09/27/23 15:32:16.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:16.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:16.625
  E0927 15:32:17.529590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:18.529871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:32:18.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3822" for this suite. @ 09/27/23 15:32:18.674
• [2.068 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 09/27/23 15:32:18.679
  Sep 27 15:32:18.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 15:32:18.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:18.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:18.695
  STEP: creating service in namespace services-4749 @ 09/27/23 15:32:18.697
  STEP: creating service affinity-clusterip-transition in namespace services-4749 @ 09/27/23 15:32:18.697
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4749 @ 09/27/23 15:32:18.751
  I0927 15:32:18.760052      22 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-4749, replica count: 3
  E0927 15:32:19.530770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:20.531006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:21.531288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0927 15:32:21.810791      22 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 15:32:21.814: INFO: Creating new exec pod
  E0927 15:32:22.531454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:23.531643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:24.532663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:32:24.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-4749 exec execpod-affinity25p5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Sep 27 15:32:24.981: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Sep 27 15:32:24.981: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:32:24.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-4749 exec execpod-affinity25p5x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.143.234 80'
  Sep 27 15:32:25.121: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.143.234 80\nConnection to 10.110.143.234 80 port [tcp/http] succeeded!\n"
  Sep 27 15:32:25.121: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:32:25.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-4749 exec execpod-affinity25p5x -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.143.234:80/ ; done'
  Sep 27 15:32:25.349: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n"
  Sep 27 15:32:25.349: INFO: stdout: "\naffinity-clusterip-transition-vjwp7\naffinity-clusterip-transition-vjwp7\naffinity-clusterip-transition-vpspx\naffinity-clusterip-transition-vjwp7\naffinity-clusterip-transition-vpspx\naffinity-clusterip-transition-vpspx\naffinity-clusterip-transition-vpspx\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-vjwp7\naffinity-clusterip-transition-vjwp7\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-vjwp7\naffinity-clusterip-transition-vpspx\naffinity-clusterip-transition-vpspx\naffinity-clusterip-transition-vjwp7\naffinity-clusterip-transition-5rfrl"
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vjwp7
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vjwp7
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vpspx
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vjwp7
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vpspx
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vpspx
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vpspx
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vjwp7
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vjwp7
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vjwp7
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vpspx
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vpspx
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-vjwp7
  Sep 27 15:32:25.349: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-4749 exec execpod-affinity25p5x -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.143.234:80/ ; done'
  E0927 15:32:25.533030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:32:25.555: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.143.234:80/\n"
  Sep 27 15:32:25.555: INFO: stdout: "\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl\naffinity-clusterip-transition-5rfrl"
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.555: INFO: Received response from host: affinity-clusterip-transition-5rfrl
  Sep 27 15:32:25.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:32:25.558: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4749, will wait for the garbage collector to delete the pods @ 09/27/23 15:32:25.574
  Sep 27 15:32:25.632: INFO: Deleting ReplicationController affinity-clusterip-transition took: 5.067042ms
  Sep 27 15:32:25.732: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.160669ms
  E0927 15:32:26.533669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:27.533866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4749" for this suite. @ 09/27/23 15:32:28.349
• [9.675 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/27/23 15:32:28.355
  Sep 27 15:32:28.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:32:28.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:28.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:28.368
  STEP: Creating secret with name secret-test-7f996686-b1c0-4a5d-95d7-e664a4c275fd @ 09/27/23 15:32:28.37
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:32:28.374
  E0927 15:32:28.534915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:29.535555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:30.536254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:31.536972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:32:32.388
  Sep 27 15:32:32.390: INFO: Trying to get logs from node worker-1 pod pod-secrets-1d8ec64d-8a09-4d3f-ba46-1df2ae0bb298 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:32:32.395
  Sep 27 15:32:32.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7893" for this suite. @ 09/27/23 15:32:32.422
• [4.076 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/27/23 15:32:32.432
  Sep 27 15:32:32.432: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 15:32:32.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:32.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:32.446
  STEP: creating the pod @ 09/27/23 15:32:32.449
  STEP: waiting for pod running @ 09/27/23 15:32:32.461
  E0927 15:32:32.537495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:33.537746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/27/23 15:32:34.467
  Sep 27 15:32:34.469: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3812 PodName:var-expansion-5d675a9d-78c7-4986-9eca-5e72f49c90ba ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:32:34.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:32:34.469: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:32:34.469: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-3812/pods/var-expansion-5d675a9d-78c7-4986-9eca-5e72f49c90ba/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  E0927 15:32:34.538312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: test for file in mounted path @ 09/27/23 15:32:34.55
  Sep 27 15:32:34.552: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3812 PodName:var-expansion-5d675a9d-78c7-4986-9eca-5e72f49c90ba ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:32:34.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:32:34.553: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:32:34.553: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-3812/pods/var-expansion-5d675a9d-78c7-4986-9eca-5e72f49c90ba/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/27/23 15:32:34.632
  Sep 27 15:32:35.148: INFO: Successfully updated pod "var-expansion-5d675a9d-78c7-4986-9eca-5e72f49c90ba"
  STEP: waiting for annotated pod running @ 09/27/23 15:32:35.148
  STEP: deleting the pod gracefully @ 09/27/23 15:32:35.15
  Sep 27 15:32:35.150: INFO: Deleting pod "var-expansion-5d675a9d-78c7-4986-9eca-5e72f49c90ba" in namespace "var-expansion-3812"
  Sep 27 15:32:35.160: INFO: Wait up to 5m0s for pod "var-expansion-5d675a9d-78c7-4986-9eca-5e72f49c90ba" to be fully deleted
  E0927 15:32:35.538936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:36.539163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:37.539887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:38.540724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:39.541778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:40.542153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:41.542325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:42.542800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:43.543758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:44.544719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:45.545764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:46.545986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:47.546232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:48.546468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:49.547323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:50.547630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:51.548243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:52.548503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:53.548709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:54.549097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:55.549914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:56.550138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:57.550461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:58.550721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:32:59.550805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:00.550937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:01.551630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:02.551657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:03.552145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:04.553027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:05.553679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:06.553796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:33:07.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3812" for this suite. @ 09/27/23 15:33:07.211
• [34.784 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 09/27/23 15:33:07.221
  Sep 27 15:33:07.221: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 15:33:07.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:07.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:07.236
  Sep 27 15:33:07.238: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0927 15:33:07.554711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/27/23 15:33:08.247
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/27/23 15:33:08.255
  E0927 15:33:08.555568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/27/23 15:33:09.26
  Sep 27 15:33:09.266: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/27/23 15:33:09.267
  E0927 15:33:09.556426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:33:10.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2049" for this suite. @ 09/27/23 15:33:10.273
• [3.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/27/23 15:33:10.282
  Sep 27 15:33:10.282: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename proxy @ 09/27/23 15:33:10.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:10.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:10.299
  STEP: starting an echo server on multiple ports @ 09/27/23 15:33:10.366
  STEP: creating replication controller proxy-service-jrmkz in namespace proxy-5262 @ 09/27/23 15:33:10.366
  I0927 15:33:10.377929      22 runners.go:197] Created replication controller with name: proxy-service-jrmkz, namespace: proxy-5262, replica count: 1
  E0927 15:33:10.557051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0927 15:33:11.429411      22 runners.go:197] proxy-service-jrmkz Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0927 15:33:11.557747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0927 15:33:12.430330      22 runners.go:197] proxy-service-jrmkz Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 15:33:12.432: INFO: setup took 2.130987353s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/27/23 15:33:12.432
  Sep 27 15:33:12.438: INFO: (0) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 5.977337ms)
  Sep 27 15:33:12.439: INFO: (0) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 6.439654ms)
  Sep 27 15:33:12.445: INFO: (0) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 12.634172ms)
  Sep 27 15:33:12.445: INFO: (0) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 12.670083ms)
  Sep 27 15:33:12.446: INFO: (0) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 13.349283ms)
  Sep 27 15:33:12.446: INFO: (0) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 13.256366ms)
  Sep 27 15:33:12.447: INFO: (0) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 13.933794ms)
  Sep 27 15:33:12.447: INFO: (0) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 14.092882ms)
  Sep 27 15:33:12.448: INFO: (0) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 15.056597ms)
  Sep 27 15:33:12.448: INFO: (0) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 15.045917ms)
  Sep 27 15:33:12.449: INFO: (0) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 16.073783ms)
  Sep 27 15:33:12.449: INFO: (0) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 15.929138ms)
  Sep 27 15:33:12.451: INFO: (0) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 17.986308ms)
  Sep 27 15:33:12.451: INFO: (0) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 18.814075ms)
  Sep 27 15:33:12.451: INFO: (0) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 18.667236ms)
  Sep 27 15:33:12.457: INFO: (0) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 23.796591ms)
  Sep 27 15:33:12.461: INFO: (1) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 4.691226ms)
  Sep 27 15:33:12.462: INFO: (1) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 5.045987ms)
  Sep 27 15:33:12.463: INFO: (1) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 5.979193ms)
  Sep 27 15:33:12.464: INFO: (1) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.492576ms)
  Sep 27 15:33:12.466: INFO: (1) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 8.697696ms)
  Sep 27 15:33:12.466: INFO: (1) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 8.945202ms)
  Sep 27 15:33:12.466: INFO: (1) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 9.198779ms)
  Sep 27 15:33:12.466: INFO: (1) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 8.906944ms)
  Sep 27 15:33:12.466: INFO: (1) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 8.965227ms)
  Sep 27 15:33:12.466: INFO: (1) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 9.224318ms)
  Sep 27 15:33:12.468: INFO: (1) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 10.70521ms)
  Sep 27 15:33:12.468: INFO: (1) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 10.619514ms)
  Sep 27 15:33:12.469: INFO: (1) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 11.620739ms)
  Sep 27 15:33:12.469: INFO: (1) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 11.746433ms)
  Sep 27 15:33:12.469: INFO: (1) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 11.631983ms)
  Sep 27 15:33:12.469: INFO: (1) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 11.997916ms)
  Sep 27 15:33:12.476: INFO: (2) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 6.877525ms)
  Sep 27 15:33:12.476: INFO: (2) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 7.194953ms)
  Sep 27 15:33:12.476: INFO: (2) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 7.04117ms)
  Sep 27 15:33:12.476: INFO: (2) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 7.366204ms)
  Sep 27 15:33:12.477: INFO: (2) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 8.045895ms)
  Sep 27 15:33:12.478: INFO: (2) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 8.37444ms)
  Sep 27 15:33:12.478: INFO: (2) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 8.572104ms)
  Sep 27 15:33:12.478: INFO: (2) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 8.514793ms)
  Sep 27 15:33:12.478: INFO: (2) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 8.716007ms)
  Sep 27 15:33:12.478: INFO: (2) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 8.838078ms)
  Sep 27 15:33:12.478: INFO: (2) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 8.970365ms)
  Sep 27 15:33:12.478: INFO: (2) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 9.175463ms)
  Sep 27 15:33:12.479: INFO: (2) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 9.538148ms)
  Sep 27 15:33:12.479: INFO: (2) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 9.91067ms)
  Sep 27 15:33:12.480: INFO: (2) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 10.949399ms)
  Sep 27 15:33:12.480: INFO: (2) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 10.946892ms)
  Sep 27 15:33:12.485: INFO: (3) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 4.507466ms)
  Sep 27 15:33:12.485: INFO: (3) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 4.923908ms)
  Sep 27 15:33:12.487: INFO: (3) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 6.081873ms)
  Sep 27 15:33:12.487: INFO: (3) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 6.792013ms)
  Sep 27 15:33:12.488: INFO: (3) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 7.122103ms)
  Sep 27 15:33:12.487: INFO: (3) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.211897ms)
  Sep 27 15:33:12.488: INFO: (3) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 6.924383ms)
  Sep 27 15:33:12.488: INFO: (3) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.506464ms)
  Sep 27 15:33:12.488: INFO: (3) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 7.862075ms)
  Sep 27 15:33:12.489: INFO: (3) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 8.722554ms)
  Sep 27 15:33:12.490: INFO: (3) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 9.016577ms)
  Sep 27 15:33:12.490: INFO: (3) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.228957ms)
  Sep 27 15:33:12.490: INFO: (3) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 9.339115ms)
  Sep 27 15:33:12.490: INFO: (3) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 9.685864ms)
  Sep 27 15:33:12.490: INFO: (3) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 9.559894ms)
  Sep 27 15:33:12.490: INFO: (3) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 9.782156ms)
  Sep 27 15:33:12.494: INFO: (4) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 3.454825ms)
  Sep 27 15:33:12.496: INFO: (4) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 5.33768ms)
  Sep 27 15:33:12.497: INFO: (4) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 6.743506ms)
  Sep 27 15:33:12.497: INFO: (4) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 6.98613ms)
  Sep 27 15:33:12.498: INFO: (4) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 7.398441ms)
  Sep 27 15:33:12.498: INFO: (4) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 7.364744ms)
  Sep 27 15:33:12.498: INFO: (4) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 7.579858ms)
  Sep 27 15:33:12.498: INFO: (4) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 7.454327ms)
  Sep 27 15:33:12.498: INFO: (4) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 8.058569ms)
  Sep 27 15:33:12.498: INFO: (4) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.826663ms)
  Sep 27 15:33:12.498: INFO: (4) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 8.092358ms)
  Sep 27 15:33:12.499: INFO: (4) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 9.222941ms)
  Sep 27 15:33:12.500: INFO: (4) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.227091ms)
  Sep 27 15:33:12.500: INFO: (4) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 9.707552ms)
  Sep 27 15:33:12.500: INFO: (4) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 9.641901ms)
  Sep 27 15:33:12.500: INFO: (4) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 9.631202ms)
  Sep 27 15:33:12.504: INFO: (5) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 4.082774ms)
  Sep 27 15:33:12.506: INFO: (5) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 5.781817ms)
  Sep 27 15:33:12.507: INFO: (5) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 6.825675ms)
  Sep 27 15:33:12.508: INFO: (5) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 7.42407ms)
  Sep 27 15:33:12.508: INFO: (5) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 7.65125ms)
  Sep 27 15:33:12.508: INFO: (5) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.621996ms)
  Sep 27 15:33:12.508: INFO: (5) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 7.657089ms)
  Sep 27 15:33:12.508: INFO: (5) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.701136ms)
  Sep 27 15:33:12.508: INFO: (5) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 7.930204ms)
  Sep 27 15:33:12.509: INFO: (5) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 8.122686ms)
  Sep 27 15:33:12.509: INFO: (5) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 8.530494ms)
  Sep 27 15:33:12.509: INFO: (5) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 8.621362ms)
  Sep 27 15:33:12.509: INFO: (5) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 8.606552ms)
  Sep 27 15:33:12.510: INFO: (5) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 9.363732ms)
  Sep 27 15:33:12.510: INFO: (5) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 9.890202ms)
  Sep 27 15:33:12.511: INFO: (5) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 10.093172ms)
  Sep 27 15:33:12.516: INFO: (6) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 5.094799ms)
  Sep 27 15:33:12.517: INFO: (6) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 6.224418ms)
  Sep 27 15:33:12.517: INFO: (6) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 6.462644ms)
  Sep 27 15:33:12.518: INFO: (6) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 7.151302ms)
  Sep 27 15:33:12.518: INFO: (6) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 7.527869ms)
  Sep 27 15:33:12.519: INFO: (6) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 7.906984ms)
  Sep 27 15:33:12.519: INFO: (6) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 8.126413ms)
  Sep 27 15:33:12.519: INFO: (6) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 8.244848ms)
  Sep 27 15:33:12.519: INFO: (6) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 8.368608ms)
  Sep 27 15:33:12.520: INFO: (6) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 8.884639ms)
  Sep 27 15:33:12.520: INFO: (6) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 8.962514ms)
  Sep 27 15:33:12.520: INFO: (6) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 9.366619ms)
  Sep 27 15:33:12.520: INFO: (6) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 9.65299ms)
  Sep 27 15:33:12.520: INFO: (6) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 9.432783ms)
  Sep 27 15:33:12.520: INFO: (6) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 9.53007ms)
  Sep 27 15:33:12.521: INFO: (6) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 10.186385ms)
  Sep 27 15:33:12.525: INFO: (7) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 3.396975ms)
  Sep 27 15:33:12.526: INFO: (7) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 5.239479ms)
  Sep 27 15:33:12.527: INFO: (7) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 5.323935ms)
  Sep 27 15:33:12.529: INFO: (7) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 8.020327ms)
  Sep 27 15:33:12.530: INFO: (7) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 8.614936ms)
  Sep 27 15:33:12.530: INFO: (7) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 8.794247ms)
  Sep 27 15:33:12.530: INFO: (7) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 8.815533ms)
  Sep 27 15:33:12.530: INFO: (7) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 9.115747ms)
  Sep 27 15:33:12.530: INFO: (7) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 8.944014ms)
  Sep 27 15:33:12.531: INFO: (7) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 9.470007ms)
  Sep 27 15:33:12.531: INFO: (7) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 9.595522ms)
  Sep 27 15:33:12.531: INFO: (7) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.794309ms)
  Sep 27 15:33:12.532: INFO: (7) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 10.23826ms)
  Sep 27 15:33:12.532: INFO: (7) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 10.554819ms)
  Sep 27 15:33:12.532: INFO: (7) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 10.970565ms)
  Sep 27 15:33:12.532: INFO: (7) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 11.306777ms)
  Sep 27 15:33:12.536: INFO: (8) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 3.848081ms)
  Sep 27 15:33:12.537: INFO: (8) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 4.690166ms)
  Sep 27 15:33:12.538: INFO: (8) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 5.427796ms)
  Sep 27 15:33:12.539: INFO: (8) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 5.985322ms)
  Sep 27 15:33:12.539: INFO: (8) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 6.511418ms)
  Sep 27 15:33:12.539: INFO: (8) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 6.323954ms)
  Sep 27 15:33:12.541: INFO: (8) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 8.48581ms)
  Sep 27 15:33:12.542: INFO: (8) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 8.967102ms)
  Sep 27 15:33:12.542: INFO: (8) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 8.904298ms)
  Sep 27 15:33:12.542: INFO: (8) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 9.068548ms)
  Sep 27 15:33:12.542: INFO: (8) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 9.401811ms)
  Sep 27 15:33:12.542: INFO: (8) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 9.673913ms)
  Sep 27 15:33:12.543: INFO: (8) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 10.084783ms)
  Sep 27 15:33:12.543: INFO: (8) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 10.378225ms)
  Sep 27 15:33:12.543: INFO: (8) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 10.38422ms)
  Sep 27 15:33:12.544: INFO: (8) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 11.254358ms)
  Sep 27 15:33:12.548: INFO: (9) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 3.562487ms)
  Sep 27 15:33:12.548: INFO: (9) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 4.274171ms)
  Sep 27 15:33:12.551: INFO: (9) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.01488ms)
  Sep 27 15:33:12.552: INFO: (9) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 7.109766ms)
  Sep 27 15:33:12.552: INFO: (9) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 7.985787ms)
  Sep 27 15:33:12.552: INFO: (9) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 7.956019ms)
  Sep 27 15:33:12.552: INFO: (9) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 8.08663ms)
  Sep 27 15:33:12.552: INFO: (9) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 8.163423ms)
  Sep 27 15:33:12.553: INFO: (9) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 9.168459ms)
  Sep 27 15:33:12.553: INFO: (9) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 9.105258ms)
  Sep 27 15:33:12.554: INFO: (9) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.457833ms)
  Sep 27 15:33:12.554: INFO: (9) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 10.04295ms)
  Sep 27 15:33:12.554: INFO: (9) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 10.044636ms)
  Sep 27 15:33:12.555: INFO: (9) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 10.080346ms)
  Sep 27 15:33:12.555: INFO: (9) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 10.536748ms)
  Sep 27 15:33:12.555: INFO: (9) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 10.047601ms)
  Sep 27 15:33:12.558: INFO: (10) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 3.019464ms)
  E0927 15:33:12.558547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:33:12.561: INFO: (10) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 5.419472ms)
  Sep 27 15:33:12.563: INFO: (10) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 6.674324ms)
  Sep 27 15:33:12.563: INFO: (10) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 7.1923ms)
  Sep 27 15:33:12.563: INFO: (10) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 7.225933ms)
  Sep 27 15:33:12.563: INFO: (10) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.546273ms)
  Sep 27 15:33:12.563: INFO: (10) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 6.884793ms)
  Sep 27 15:33:12.563: INFO: (10) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 7.910395ms)
  Sep 27 15:33:12.564: INFO: (10) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 8.058729ms)
  Sep 27 15:33:12.564: INFO: (10) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 8.212513ms)
  Sep 27 15:33:12.564: INFO: (10) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 7.711716ms)
  Sep 27 15:33:12.564: INFO: (10) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 8.657908ms)
  Sep 27 15:33:12.564: INFO: (10) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 8.444314ms)
  Sep 27 15:33:12.564: INFO: (10) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 9.172798ms)
  Sep 27 15:33:12.565: INFO: (10) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.481321ms)
  Sep 27 15:33:12.565: INFO: (10) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 9.236609ms)
  Sep 27 15:33:12.570: INFO: (11) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 4.605408ms)
  Sep 27 15:33:12.571: INFO: (11) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 6.157928ms)
  Sep 27 15:33:12.572: INFO: (11) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 6.650116ms)
  Sep 27 15:33:12.572: INFO: (11) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 6.89929ms)
  Sep 27 15:33:12.572: INFO: (11) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 6.773678ms)
  Sep 27 15:33:12.573: INFO: (11) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 7.064377ms)
  Sep 27 15:33:12.573: INFO: (11) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.946375ms)
  Sep 27 15:33:12.574: INFO: (11) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 8.808408ms)
  Sep 27 15:33:12.574: INFO: (11) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 8.518277ms)
  Sep 27 15:33:12.574: INFO: (11) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 8.689326ms)
  Sep 27 15:33:12.574: INFO: (11) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 8.67015ms)
  Sep 27 15:33:12.575: INFO: (11) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 9.281556ms)
  Sep 27 15:33:12.575: INFO: (11) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 9.697186ms)
  Sep 27 15:33:12.575: INFO: (11) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 9.73025ms)
  Sep 27 15:33:12.575: INFO: (11) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 10.080687ms)
  Sep 27 15:33:12.575: INFO: (11) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 9.807053ms)
  Sep 27 15:33:12.582: INFO: (12) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 6.311217ms)
  Sep 27 15:33:12.583: INFO: (12) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 7.085332ms)
  Sep 27 15:33:12.583: INFO: (12) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.468297ms)
  Sep 27 15:33:12.583: INFO: (12) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 7.391197ms)
  Sep 27 15:33:12.583: INFO: (12) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 7.560741ms)
  Sep 27 15:33:12.583: INFO: (12) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 7.314805ms)
  Sep 27 15:33:12.584: INFO: (12) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 7.750829ms)
  Sep 27 15:33:12.584: INFO: (12) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 7.736407ms)
  Sep 27 15:33:12.584: INFO: (12) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 8.048617ms)
  Sep 27 15:33:12.584: INFO: (12) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 8.58499ms)
  Sep 27 15:33:12.584: INFO: (12) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 8.782201ms)
  Sep 27 15:33:12.585: INFO: (12) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 8.831696ms)
  Sep 27 15:33:12.585: INFO: (12) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 8.805593ms)
  Sep 27 15:33:12.585: INFO: (12) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 9.380587ms)
  Sep 27 15:33:12.585: INFO: (12) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 9.562781ms)
  Sep 27 15:33:12.585: INFO: (12) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 9.438682ms)
  Sep 27 15:33:12.590: INFO: (13) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 4.60135ms)
  Sep 27 15:33:12.592: INFO: (13) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 6.80098ms)
  Sep 27 15:33:12.593: INFO: (13) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 7.186275ms)
  Sep 27 15:33:12.593: INFO: (13) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 7.226829ms)
  Sep 27 15:33:12.593: INFO: (13) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 7.259376ms)
  Sep 27 15:33:12.593: INFO: (13) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 7.616328ms)
  Sep 27 15:33:12.593: INFO: (13) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 8.141848ms)
  Sep 27 15:33:12.594: INFO: (13) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 8.107114ms)
  Sep 27 15:33:12.594: INFO: (13) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 8.031733ms)
  Sep 27 15:33:12.594: INFO: (13) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 8.229705ms)
  Sep 27 15:33:12.594: INFO: (13) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 8.46375ms)
  Sep 27 15:33:12.595: INFO: (13) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 9.242021ms)
  Sep 27 15:33:12.595: INFO: (13) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.634155ms)
  Sep 27 15:33:12.596: INFO: (13) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 10.077701ms)
  Sep 27 15:33:12.596: INFO: (13) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 10.271116ms)
  Sep 27 15:33:12.596: INFO: (13) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 10.17057ms)
  Sep 27 15:33:12.599: INFO: (14) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 3.662506ms)
  Sep 27 15:33:12.602: INFO: (14) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 5.760068ms)
  Sep 27 15:33:12.602: INFO: (14) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 6.316609ms)
  Sep 27 15:33:12.604: INFO: (14) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 8.054004ms)
  Sep 27 15:33:12.604: INFO: (14) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 8.220637ms)
  Sep 27 15:33:12.604: INFO: (14) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 8.254719ms)
  Sep 27 15:33:12.604: INFO: (14) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 8.54412ms)
  Sep 27 15:33:12.605: INFO: (14) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 8.615183ms)
  Sep 27 15:33:12.605: INFO: (14) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 8.585893ms)
  Sep 27 15:33:12.605: INFO: (14) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 8.753428ms)
  Sep 27 15:33:12.605: INFO: (14) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 8.536596ms)
  Sep 27 15:33:12.605: INFO: (14) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 8.966874ms)
  Sep 27 15:33:12.605: INFO: (14) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 9.101378ms)
  Sep 27 15:33:12.606: INFO: (14) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 9.628207ms)
  Sep 27 15:33:12.606: INFO: (14) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 9.95012ms)
  Sep 27 15:33:12.606: INFO: (14) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.941246ms)
  Sep 27 15:33:12.612: INFO: (15) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 5.651124ms)
  Sep 27 15:33:12.615: INFO: (15) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 8.340046ms)
  Sep 27 15:33:12.615: INFO: (15) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 8.121586ms)
  Sep 27 15:33:12.615: INFO: (15) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 8.634773ms)
  Sep 27 15:33:12.615: INFO: (15) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 8.651055ms)
  Sep 27 15:33:12.615: INFO: (15) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 8.659176ms)
  Sep 27 15:33:12.615: INFO: (15) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 8.762901ms)
  Sep 27 15:33:12.615: INFO: (15) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 9.065996ms)
  Sep 27 15:33:12.617: INFO: (15) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 10.93265ms)
  Sep 27 15:33:12.617: INFO: (15) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 11.227018ms)
  Sep 27 15:33:12.617: INFO: (15) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 11.334383ms)
  Sep 27 15:33:12.618: INFO: (15) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 11.823594ms)
  Sep 27 15:33:12.618: INFO: (15) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 12.070785ms)
  Sep 27 15:33:12.619: INFO: (15) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 12.326112ms)
  Sep 27 15:33:12.619: INFO: (15) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 12.587344ms)
  Sep 27 15:33:12.619: INFO: (15) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 12.301245ms)
  Sep 27 15:33:12.624: INFO: (16) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 4.981015ms)
  Sep 27 15:33:12.626: INFO: (16) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 7.41705ms)
  Sep 27 15:33:12.626: INFO: (16) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 7.283564ms)
  Sep 27 15:33:12.626: INFO: (16) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 7.163471ms)
  Sep 27 15:33:12.626: INFO: (16) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 7.430172ms)
  Sep 27 15:33:12.627: INFO: (16) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 8.429764ms)
  Sep 27 15:33:12.628: INFO: (16) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 8.607842ms)
  Sep 27 15:33:12.628: INFO: (16) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 8.830414ms)
  Sep 27 15:33:12.628: INFO: (16) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.118118ms)
  Sep 27 15:33:12.629: INFO: (16) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 9.437881ms)
  Sep 27 15:33:12.629: INFO: (16) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 9.412607ms)
  Sep 27 15:33:12.629: INFO: (16) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 9.935538ms)
  Sep 27 15:33:12.629: INFO: (16) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 9.992685ms)
  Sep 27 15:33:12.630: INFO: (16) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 10.412941ms)
  Sep 27 15:33:12.630: INFO: (16) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 10.8816ms)
  Sep 27 15:33:12.630: INFO: (16) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 10.836742ms)
  Sep 27 15:33:12.634: INFO: (17) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 3.866191ms)
  Sep 27 15:33:12.634: INFO: (17) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 4.048231ms)
  Sep 27 15:33:12.635: INFO: (17) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 4.46298ms)
  Sep 27 15:33:12.636: INFO: (17) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 6.296705ms)
  Sep 27 15:33:12.636: INFO: (17) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 6.479345ms)
  Sep 27 15:33:12.638: INFO: (17) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 7.454198ms)
  Sep 27 15:33:12.638: INFO: (17) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 7.501687ms)
  Sep 27 15:33:12.639: INFO: (17) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 8.392624ms)
  Sep 27 15:33:12.639: INFO: (17) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 8.616353ms)
  Sep 27 15:33:12.639: INFO: (17) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.170299ms)
  Sep 27 15:33:12.639: INFO: (17) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 8.873377ms)
  Sep 27 15:33:12.639: INFO: (17) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 9.223692ms)
  Sep 27 15:33:12.641: INFO: (17) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 10.207854ms)
  Sep 27 15:33:12.641: INFO: (17) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 10.783988ms)
  Sep 27 15:33:12.641: INFO: (17) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 10.62279ms)
  Sep 27 15:33:12.641: INFO: (17) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 10.744169ms)
  Sep 27 15:33:12.647: INFO: (18) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 5.57625ms)
  Sep 27 15:33:12.648: INFO: (18) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 5.988348ms)
  Sep 27 15:33:12.648: INFO: (18) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 6.216004ms)
  Sep 27 15:33:12.648: INFO: (18) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 6.712981ms)
  Sep 27 15:33:12.649: INFO: (18) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 7.107008ms)
  Sep 27 15:33:12.649: INFO: (18) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 7.28004ms)
  Sep 27 15:33:12.650: INFO: (18) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 8.482476ms)
  Sep 27 15:33:12.650: INFO: (18) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 8.856445ms)
  Sep 27 15:33:12.650: INFO: (18) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 8.703307ms)
  Sep 27 15:33:12.650: INFO: (18) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 9.060163ms)
  Sep 27 15:33:12.651: INFO: (18) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 9.061736ms)
  Sep 27 15:33:12.651: INFO: (18) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 9.506721ms)
  Sep 27 15:33:12.651: INFO: (18) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.547426ms)
  Sep 27 15:33:12.651: INFO: (18) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 9.923202ms)
  Sep 27 15:33:12.652: INFO: (18) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 10.060541ms)
  Sep 27 15:33:12.652: INFO: (18) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 10.026011ms)
  Sep 27 15:33:12.656: INFO: (19) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:462/proxy/: tls qux (200; 4.07237ms)
  Sep 27 15:33:12.658: INFO: (19) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:162/proxy/: bar (200; 6.263096ms)
  Sep 27 15:33:12.658: INFO: (19) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745/proxy/rewriteme">test</a> (200; 6.417909ms)
  Sep 27 15:33:12.658: INFO: (19) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:1080/proxy/rewriteme">test<... (200; 6.440897ms)
  Sep 27 15:33:12.659: INFO: (19) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:162/proxy/: bar (200; 6.559449ms)
  Sep 27 15:33:12.660: INFO: (19) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname1/proxy/: tls baz (200; 7.631764ms)
  Sep 27 15:33:12.660: INFO: (19) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:443/proxy/tlsrewritem... (200; 8.152713ms)
  Sep 27 15:33:12.661: INFO: (19) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/: <a href="/api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:1080/proxy/rewriteme">... (200; 8.560898ms)
  Sep 27 15:33:12.661: INFO: (19) /api/v1/namespaces/proxy-5262/pods/http:proxy-service-jrmkz-9b745:160/proxy/: foo (200; 8.559019ms)
  Sep 27 15:33:12.661: INFO: (19) /api/v1/namespaces/proxy-5262/pods/https:proxy-service-jrmkz-9b745:460/proxy/: tls baz (200; 9.158175ms)
  Sep 27 15:33:12.661: INFO: (19) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname1/proxy/: foo (200; 8.842056ms)
  Sep 27 15:33:12.662: INFO: (19) /api/v1/namespaces/proxy-5262/services/proxy-service-jrmkz:portname2/proxy/: bar (200; 9.807441ms)
  Sep 27 15:33:12.664: INFO: (19) /api/v1/namespaces/proxy-5262/pods/proxy-service-jrmkz-9b745:160/proxy/: foo (200; 12.521056ms)
  Sep 27 15:33:12.666: INFO: (19) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname1/proxy/: foo (200; 14.409078ms)
  Sep 27 15:33:12.666: INFO: (19) /api/v1/namespaces/proxy-5262/services/http:proxy-service-jrmkz:portname2/proxy/: bar (200; 14.07336ms)
  Sep 27 15:33:12.667: INFO: (19) /api/v1/namespaces/proxy-5262/services/https:proxy-service-jrmkz:tlsportname2/proxy/: tls qux (200; 14.548236ms)
  Sep 27 15:33:12.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-jrmkz in namespace proxy-5262, will wait for the garbage collector to delete the pods @ 09/27/23 15:33:12.67
  Sep 27 15:33:12.727: INFO: Deleting ReplicationController proxy-service-jrmkz took: 5.157664ms
  Sep 27 15:33:12.828: INFO: Terminating ReplicationController proxy-service-jrmkz pods took: 101.148828ms
  E0927 15:33:13.558882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:14.559310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-5262" for this suite. @ 09/27/23 15:33:15.428
• [5.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/27/23 15:33:15.444
  Sep 27 15:33:15.444: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename certificates @ 09/27/23 15:33:15.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:15.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:15.46
  E0927 15:33:15.559763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 09/27/23 15:33:16.411
  STEP: getting /apis/certificates.k8s.io @ 09/27/23 15:33:16.415
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/27/23 15:33:16.416
  STEP: creating @ 09/27/23 15:33:16.416
  STEP: getting @ 09/27/23 15:33:16.43
  STEP: listing @ 09/27/23 15:33:16.432
  STEP: watching @ 09/27/23 15:33:16.434
  Sep 27 15:33:16.434: INFO: starting watch
  STEP: patching @ 09/27/23 15:33:16.435
  STEP: updating @ 09/27/23 15:33:16.439
  Sep 27 15:33:16.446: INFO: waiting for watch events with expected annotations
  Sep 27 15:33:16.446: INFO: saw patched and updated annotations
  STEP: getting /approval @ 09/27/23 15:33:16.446
  STEP: patching /approval @ 09/27/23 15:33:16.448
  STEP: updating /approval @ 09/27/23 15:33:16.455
  STEP: getting /status @ 09/27/23 15:33:16.459
  STEP: patching /status @ 09/27/23 15:33:16.461
  STEP: updating /status @ 09/27/23 15:33:16.469
  STEP: deleting @ 09/27/23 15:33:16.476
  STEP: deleting a collection @ 09/27/23 15:33:16.485
  Sep 27 15:33:16.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6037" for this suite. @ 09/27/23 15:33:16.497
• [1.057 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 09/27/23 15:33:16.501
  Sep 27 15:33:16.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:33:16.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:16.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:16.525
  STEP: Creating configMap that has name configmap-test-emptyKey-3a7e0bdc-da62-409a-be7d-744a76e4cd24 @ 09/27/23 15:33:16.527
  Sep 27 15:33:16.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2152" for this suite. @ 09/27/23 15:33:16.531
• [0.036 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 09/27/23 15:33:16.537
  Sep 27 15:33:16.537: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename runtimeclass @ 09/27/23 15:33:16.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:16.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:16.552
  E0927 15:33:16.560343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:17.560752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:18.560969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:33:18.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9569" for this suite. @ 09/27/23 15:33:18.581
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/27/23 15:33:18.589
  Sep 27 15:33:18.589: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:33:18.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:18.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:18.607
  STEP: Create a pod @ 09/27/23 15:33:18.609
  E0927 15:33:19.561053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:20.561281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/27/23 15:33:20.62
  Sep 27 15:33:20.630: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Sep 27 15:33:20.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6648" for this suite. @ 09/27/23 15:33:20.633
• [2.048 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/27/23 15:33:20.638
  Sep 27 15:33:20.638: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 15:33:20.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:20.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:20.654
  STEP: Creating a pod to test env composition @ 09/27/23 15:33:20.656
  E0927 15:33:21.562171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:22.562569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:23.563262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:24.563660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:33:24.67
  Sep 27 15:33:24.671: INFO: Trying to get logs from node worker-0 pod var-expansion-cea0493b-1c17-45bc-be04-a21d742e2332 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 15:33:24.684
  Sep 27 15:33:24.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6827" for this suite. @ 09/27/23 15:33:24.701
• [4.067 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 09/27/23 15:33:24.706
  Sep 27 15:33:24.706: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pod-network-test @ 09/27/23 15:33:24.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:24.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:24.721
  STEP: Performing setup for networking test in namespace pod-network-test-7002 @ 09/27/23 15:33:24.723
  STEP: creating a selector @ 09/27/23 15:33:24.724
  STEP: Creating the service pods in kubernetes @ 09/27/23 15:33:24.724
  Sep 27 15:33:24.724: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0927 15:33:25.563751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:26.563885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:27.564020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:28.564270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:29.565145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:30.565410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:31.565555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:32.565814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:33.566661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:34.567152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:35.567624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:36.568709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/27/23 15:33:36.766
  E0927 15:33:37.568843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:38.569303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:33:38.795: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Sep 27 15:33:38.795: INFO: Going to poll 10.244.1.184 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Sep 27 15:33:38.796: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.184:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7002 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:33:38.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:33:38.797: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:33:38.797: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-7002/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.184%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 27 15:33:38.883: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 27 15:33:38.883: INFO: Going to poll 10.244.0.69 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Sep 27 15:33:38.885: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.69:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7002 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:33:38.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  Sep 27 15:33:38.886: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:33:38.886: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-7002/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.69%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 27 15:33:38.965: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 27 15:33:38.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7002" for this suite. @ 09/27/23 15:33:38.968
• [14.267 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/27/23 15:33:38.974
  Sep 27 15:33:38.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-runtime @ 09/27/23 15:33:38.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:38.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:38.994
  STEP: create the container @ 09/27/23 15:33:38.996
  W0927 15:33:39.003097      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/27/23 15:33:39.003
  E0927 15:33:39.570298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:40.570860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:41.571414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/27/23 15:33:42.013
  STEP: the container should be terminated @ 09/27/23 15:33:42.014
  STEP: the termination message should be set @ 09/27/23 15:33:42.014
  Sep 27 15:33:42.014: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/27/23 15:33:42.014
  Sep 27 15:33:42.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-232" for this suite. @ 09/27/23 15:33:42.034
• [3.065 seconds]
------------------------------
SSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/27/23 15:33:42.039
  Sep 27 15:33:42.039: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename conformance-tests @ 09/27/23 15:33:42.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:42.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:42.052
  STEP: Getting node addresses @ 09/27/23 15:33:42.056
  Sep 27 15:33:42.056: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Sep 27 15:33:42.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5109" for this suite. @ 09/27/23 15:33:42.061
• [0.027 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/27/23 15:33:42.067
  Sep 27 15:33:42.067: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:33:42.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:42.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:42.079
  STEP: Creating secret with name secret-test-map-650707d5-c668-458c-a91a-d73341a9e085 @ 09/27/23 15:33:42.083
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:33:42.087
  E0927 15:33:42.571784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:43.572725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:44.573392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:45.573668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:33:46.1
  Sep 27 15:33:46.102: INFO: Trying to get logs from node worker-1 pod pod-secrets-82b16dce-9805-493d-a120-117cb270298b container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:33:46.106
  Sep 27 15:33:46.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4157" for this suite. @ 09/27/23 15:33:46.126
• [4.068 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/27/23 15:33:46.135
  Sep 27 15:33:46.135: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:33:46.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:46.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:46.149
  STEP: Creating configMap with name configmap-test-volume-map-5309fede-6cfa-4d40-903f-0414c9585017 @ 09/27/23 15:33:46.152
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:33:46.156
  E0927 15:33:46.574539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:47.574754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:48.574909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:49.575604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:33:50.174
  Sep 27 15:33:50.176: INFO: Trying to get logs from node worker-1 pod pod-configmaps-b5f84a59-a3b8-47bd-9937-6c8b8201d117 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:33:50.181
  Sep 27 15:33:50.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8321" for this suite. @ 09/27/23 15:33:50.197
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/27/23 15:33:50.203
  Sep 27 15:33:50.203: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:33:50.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:50.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:50.22
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:33:50.222
  E0927 15:33:50.575702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:51.576030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:52.576208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:53.576575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:33:54.24
  Sep 27 15:33:54.241: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-79e2362e-8b72-401d-adc3-b4630ed708f2 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:33:54.246
  Sep 27 15:33:54.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3289" for this suite. @ 09/27/23 15:33:54.263
• [4.064 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 09/27/23 15:33:54.267
  Sep 27 15:33:54.267: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:33:54.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:33:54.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:33:54.283
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/27/23 15:33:54.285
  Sep 27 15:33:54.286: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:33:54.577121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:33:55.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:33:55.577848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:56.578952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:57.580026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:58.580977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:33:59.581879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:00.582746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:34:00.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9325" for this suite. @ 09/27/23 15:34:00.678
• [6.415 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 09/27/23 15:34:00.683
  Sep 27 15:34:00.683: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:34:00.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:34:00.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:34:00.699
  STEP: Setting up server cert @ 09/27/23 15:34:00.714
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:34:00.88
  STEP: Deploying the webhook pod @ 09/27/23 15:34:00.887
  STEP: Wait for the deployment to be ready @ 09/27/23 15:34:00.899
  Sep 27 15:34:00.903: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 15:34:01.583797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:02.584216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 15:34:02.909
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:34:02.925
  E0927 15:34:03.584335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:34:03.926: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 27 15:34:03.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-21-crds.webhook.example.com via the AdmissionRegistration API @ 09/27/23 15:34:04.439
  STEP: Creating a custom resource while v1 is storage version @ 09/27/23 15:34:04.46
  E0927 15:34:04.584461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:05.584730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/27/23 15:34:06.499
  STEP: Patching the custom resource while v2 is storage version @ 09/27/23 15:34:06.52
  Sep 27 15:34:06.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0927 15:34:06.585140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-5705" for this suite. @ 09/27/23 15:34:07.111
  STEP: Destroying namespace "webhook-markers-3311" for this suite. @ 09/27/23 15:34:07.116
• [6.445 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 09/27/23 15:34:07.128
  Sep 27 15:34:07.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename job @ 09/27/23 15:34:07.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:34:07.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:34:07.165
  STEP: Creating a suspended job @ 09/27/23 15:34:07.169
  STEP: Patching the Job @ 09/27/23 15:34:07.181
  STEP: Watching for Job to be patched @ 09/27/23 15:34:07.207
  Sep 27 15:34:07.209: INFO: Event ADDED observed for Job e2e-bmg4d in namespace job-8531 with labels: map[e2e-job-label:e2e-bmg4d] and annotations: map[]
  Sep 27 15:34:07.209: INFO: Event MODIFIED observed for Job e2e-bmg4d in namespace job-8531 with labels: map[e2e-job-label:e2e-bmg4d] and annotations: map[]
  Sep 27 15:34:07.209: INFO: Event MODIFIED found for Job e2e-bmg4d in namespace job-8531 with labels: map[e2e-bmg4d:patched e2e-job-label:e2e-bmg4d] and annotations: map[]
  STEP: Updating the job @ 09/27/23 15:34:07.209
  STEP: Watching for Job to be updated @ 09/27/23 15:34:07.216
  Sep 27 15:34:07.218: INFO: Event MODIFIED found for Job e2e-bmg4d in namespace job-8531 with labels: map[e2e-bmg4d:patched e2e-job-label:e2e-bmg4d] and annotations: map[updated:true]
  Sep 27 15:34:07.218: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/27/23 15:34:07.218
  Sep 27 15:34:07.220: INFO: Job: e2e-bmg4d as labels: map[e2e-bmg4d:patched e2e-job-label:e2e-bmg4d]
  STEP: Waiting for job to complete @ 09/27/23 15:34:07.22
  E0927 15:34:07.585580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:08.585896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:09.586213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:10.587194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:11.588304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:12.588723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:13.589200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:14.589677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/27/23 15:34:15.222
  STEP: Watching for Job to be deleted @ 09/27/23 15:34:15.228
  Sep 27 15:34:15.229: INFO: Event MODIFIED observed for Job e2e-bmg4d in namespace job-8531 with labels: map[e2e-bmg4d:patched e2e-job-label:e2e-bmg4d] and annotations: map[updated:true]
  Sep 27 15:34:15.229: INFO: Event MODIFIED observed for Job e2e-bmg4d in namespace job-8531 with labels: map[e2e-bmg4d:patched e2e-job-label:e2e-bmg4d] and annotations: map[updated:true]
  Sep 27 15:34:15.229: INFO: Event MODIFIED observed for Job e2e-bmg4d in namespace job-8531 with labels: map[e2e-bmg4d:patched e2e-job-label:e2e-bmg4d] and annotations: map[updated:true]
  Sep 27 15:34:15.230: INFO: Event MODIFIED observed for Job e2e-bmg4d in namespace job-8531 with labels: map[e2e-bmg4d:patched e2e-job-label:e2e-bmg4d] and annotations: map[updated:true]
  Sep 27 15:34:15.230: INFO: Event MODIFIED observed for Job e2e-bmg4d in namespace job-8531 with labels: map[e2e-bmg4d:patched e2e-job-label:e2e-bmg4d] and annotations: map[updated:true]
  Sep 27 15:34:15.230: INFO: Event DELETED found for Job e2e-bmg4d in namespace job-8531 with labels: map[e2e-bmg4d:patched e2e-job-label:e2e-bmg4d] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/27/23 15:34:15.23
  Sep 27 15:34:15.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8531" for this suite. @ 09/27/23 15:34:15.244
• [8.128 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/27/23 15:34:15.258
  Sep 27 15:34:15.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:34:15.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:34:15.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:34:15.275
  STEP: creating a Pod with a static label @ 09/27/23 15:34:15.281
  STEP: watching for Pod to be ready @ 09/27/23 15:34:15.287
  Sep 27 15:34:15.288: INFO: observed Pod pod-test in namespace pods-5919 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Sep 27 15:34:15.294: INFO: observed Pod pod-test in namespace pods-5919 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:34:15 +0000 UTC  }]
  Sep 27 15:34:15.304: INFO: observed Pod pod-test in namespace pods-5919 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:34:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:34:15 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:34:15 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:34:15 +0000 UTC  }]
  E0927 15:34:15.590011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:34:16.566: INFO: Found Pod pod-test in namespace pods-5919 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:34:15 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:34:16 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:34:16 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:34:15 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/27/23 15:34:16.568
  STEP: getting the Pod and ensuring that it's patched @ 09/27/23 15:34:16.576
  STEP: replacing the Pod's status Ready condition to False @ 09/27/23 15:34:16.578
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/27/23 15:34:16.585
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/27/23 15:34:16.585
  E0927 15:34:16.590216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: watching for the Pod to be deleted @ 09/27/23 15:34:16.594
  Sep 27 15:34:16.595: INFO: observed event type MODIFIED
  E0927 15:34:17.591042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:34:18.580: INFO: observed event type MODIFIED
  E0927 15:34:18.591641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:34:18.689: INFO: observed event type MODIFIED
  Sep 27 15:34:19.577: INFO: observed event type MODIFIED
  Sep 27 15:34:19.583: INFO: observed event type MODIFIED
  Sep 27 15:34:19.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5919" for this suite. @ 09/27/23 15:34:19.589
  E0927 15:34:19.592661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 09/27/23 15:34:19.601
  Sep 27 15:34:19.601: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 15:34:19.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:34:19.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:34:19.614
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7336 @ 09/27/23 15:34:19.616
  STEP: changing the ExternalName service to type=ClusterIP @ 09/27/23 15:34:19.62
  STEP: creating replication controller externalname-service in namespace services-7336 @ 09/27/23 15:34:19.632
  I0927 15:34:19.640523      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7336, replica count: 2
  E0927 15:34:20.593466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:21.594487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:22.594717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0927 15:34:22.691111      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 15:34:22.691: INFO: Creating new exec pod
  E0927 15:34:23.594835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:24.595231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:25.595627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:34:25.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7336 exec execpodqr5q4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:34:25.845: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:34:25.845: INFO: stdout: "externalname-service-cvnf7"
  Sep 27 15:34:25.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7336 exec execpodqr5q4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.57.60 80'
  Sep 27 15:34:25.992: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.57.60 80\nConnection to 10.105.57.60 80 port [tcp/http] succeeded!\n"
  Sep 27 15:34:25.992: INFO: stdout: "externalname-service-cvnf7"
  Sep 27 15:34:25.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:34:25.994: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-7336" for this suite. @ 09/27/23 15:34:26.023
• [6.438 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 09/27/23 15:34:26.04
  Sep 27 15:34:26.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:34:26.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:34:26.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:34:26.053
  STEP: Setting up server cert @ 09/27/23 15:34:26.074
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:34:26.451
  STEP: Deploying the webhook pod @ 09/27/23 15:34:26.456
  STEP: Wait for the deployment to be ready @ 09/27/23 15:34:26.476
  Sep 27 15:34:26.479: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 15:34:26.595650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:27.595742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 15:34:28.485
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:34:28.544
  E0927 15:34:28.596435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:34:29.544: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0927 15:34:29.596792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 09/27/23 15:34:29.619
  STEP: Creating a configMap that should be mutated @ 09/27/23 15:34:29.633
  STEP: Deleting the collection of validation webhooks @ 09/27/23 15:34:29.665
  STEP: Creating a configMap that should not be mutated @ 09/27/23 15:34:29.698
  Sep 27 15:34:29.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9908" for this suite. @ 09/27/23 15:34:29.738
  STEP: Destroying namespace "webhook-markers-9037" for this suite. @ 09/27/23 15:34:29.748
• [3.717 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 09/27/23 15:34:29.76
  Sep 27 15:34:29.760: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:34:29.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:34:29.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:34:29.773
  STEP: Creating projection with secret that has name secret-emptykey-test-af7ed72e-2387-4345-8545-5324de1e9feb @ 09/27/23 15:34:29.775
  Sep 27 15:34:29.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2730" for this suite. @ 09/27/23 15:34:29.779
• [0.026 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/27/23 15:34:29.786
  Sep 27 15:34:29.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename subpath @ 09/27/23 15:34:29.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:34:29.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:34:29.798
  STEP: Setting up data @ 09/27/23 15:34:29.8
  STEP: Creating pod pod-subpath-test-downwardapi-hnjb @ 09/27/23 15:34:29.808
  STEP: Creating a pod to test atomic-volume-subpath @ 09/27/23 15:34:29.809
  E0927 15:34:30.596957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:31.597364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:32.597896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:33.598143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:34.599041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:35.599359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:36.600076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:37.600734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:38.601313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:39.602152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:40.602455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:41.602890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:42.603005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:43.603247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:44.604202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:45.604319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:46.604971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:47.605115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:48.605453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:49.606211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:50.606584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:51.606826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:52.607641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:53.607823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:34:53.854
  Sep 27 15:34:53.856: INFO: Trying to get logs from node worker-0 pod pod-subpath-test-downwardapi-hnjb container test-container-subpath-downwardapi-hnjb: <nil>
  STEP: delete the pod @ 09/27/23 15:34:53.862
  STEP: Deleting pod pod-subpath-test-downwardapi-hnjb @ 09/27/23 15:34:53.876
  Sep 27 15:34:53.876: INFO: Deleting pod "pod-subpath-test-downwardapi-hnjb" in namespace "subpath-8595"
  Sep 27 15:34:53.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8595" for this suite. @ 09/27/23 15:34:53.88
• [24.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 09/27/23 15:34:53.885
  Sep 27 15:34:53.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:34:53.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:34:53.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:34:53.902
  STEP: apply creating a deployment @ 09/27/23 15:34:53.903
  Sep 27 15:34:53.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3765" for this suite. @ 09/27/23 15:34:53.914
• [0.033 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/27/23 15:34:53.919
  Sep 27 15:34:53.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename cronjob @ 09/27/23 15:34:53.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:34:53.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:34:53.934
  STEP: Creating a suspended cronjob @ 09/27/23 15:34:53.936
  STEP: Ensuring no jobs are scheduled @ 09/27/23 15:34:53.94
  E0927 15:34:54.608292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:55.608818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:56.609425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:57.609670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:58.610752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:34:59.611327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:00.612261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:01.612523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:02.612967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:03.613216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:04.613921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:05.614145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:06.614735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:07.614867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:08.615550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:09.616190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:10.616371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:11.616608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:12.616654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:13.616785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:14.616999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:15.617137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:16.617290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:17.617545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:18.618159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:19.618695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:20.619368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:21.619663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:22.619740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:23.619958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:24.620076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:25.620346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:26.620817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:27.621091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:28.621672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:29.622357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:30.622805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:31.623024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:32.623756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:33.623999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:34.624584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:35.624819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:36.625435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:37.625686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:38.626555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:39.627221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:40.627955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:41.628239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:42.628801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:43.629062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:44.629865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:45.630132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:46.630311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:47.630452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:48.631095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:49.631670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:50.632496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:51.632708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:52.633375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:53.633754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:54.634699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:55.634935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:56.635890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:57.636192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:58.636274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:35:59.636815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:00.637646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:01.637873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:02.638040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:03.638276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:04.638952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:05.639094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:06.639222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:07.639430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:08.639647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:09.640732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:10.641250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:11.641410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:12.641830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:13.642051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:14.642954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:15.643192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:16.643625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:17.643634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:18.643756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:19.644300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:20.644729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:21.644918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:22.645443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:23.645653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:24.645974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:25.646303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:26.646617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:27.646834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:28.647370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:29.647554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:30.648082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:31.648299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:32.648987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:33.649212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:34.649909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:35.650142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:36.650939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:37.651164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:38.651739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:39.652299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:40.652760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:41.652961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:42.653054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:43.653284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:44.654057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:45.654258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:46.654638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:47.654849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:48.655585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:49.656167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:50.656560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:51.656760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:52.657364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:53.657581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:54.657695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:55.657909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:56.658597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:57.658841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:58.659366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:36:59.659957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:00.660483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:01.660659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:02.660990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:03.661114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:04.661666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:05.661877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:06.662459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:07.662673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:08.663203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:09.663726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:10.664470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:11.664671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:12.665281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:13.665505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:14.666037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:15.666269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:16.666339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:17.666569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:18.667032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:19.667627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:20.668228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:21.668448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:22.668570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:23.668785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:24.669764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:25.669981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:26.670041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:27.670243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:28.671048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:29.671634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:30.672231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:31.672451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:32.672618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:33.672833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:34.673280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:35.673530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:36.673777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:37.673932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:38.674071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:39.674590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:40.674752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:41.674973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:42.675395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:43.675640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:44.675778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:45.676030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:46.676541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:47.676750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:48.677116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:49.677604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:50.677720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:51.677910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:52.678387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:53.678576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:54.679628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:55.680708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:56.681174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:57.681361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:58.682424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:37:59.682970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:00.682988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:01.683209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:02.683632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:03.683842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:04.684482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:05.684752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:06.685440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:07.685656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:08.686232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:09.686699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:10.687283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:11.687421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:12.688406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:13.688635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:14.689214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:15.689484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:16.689584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:17.689772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:18.690150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:19.690641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:20.691654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:21.691886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:22.692048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:23.692269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:24.692985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:25.693368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:26.693491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:27.693647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:28.693788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:29.694419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:30.694574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:31.694819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:32.695359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:33.695634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:34.695630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:35.695876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:36.696591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:37.697075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:38.697161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:39.698113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:40.698666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:41.698910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:42.699851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:43.700006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:44.700606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:45.700758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:46.701253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:47.701519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:48.702105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:49.702767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:50.703599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:51.703634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:52.704736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:53.704977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:54.705646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:55.705784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:56.706453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:57.706551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:58.707161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:38:59.707757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:00.707880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:01.708119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:02.708255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:03.708487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:04.709550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:05.709737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:06.710802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:07.711065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:08.711651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:09.712718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:10.713236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:11.713472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:12.713627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:13.713867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:14.713904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:15.714100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:16.714235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:17.714494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:18.714919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:19.715024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:20.715201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:21.715460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:22.716106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:23.716341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:24.717172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:25.717429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:26.717925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:27.718169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:28.718235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:29.718688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:30.719542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:31.719639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:32.720233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:33.720483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:34.721153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:35.721329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:36.721763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:37.721994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:38.722574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:39.723142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:40.723872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:41.724737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:42.725415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:43.725649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:44.725901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:45.726167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:46.726557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:47.726777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:48.727355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:49.727912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:50.728052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:51.728756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:52.728875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:53.728994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/27/23 15:39:53.945
  STEP: Removing cronjob @ 09/27/23 15:39:53.946
  Sep 27 15:39:53.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5351" for this suite. @ 09/27/23 15:39:53.952
• [300.039 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 09/27/23 15:39:53.958
  Sep 27 15:39:53.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:39:53.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:53.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:39:53.971
  Sep 27 15:39:53.973: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:39:54.729694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:55.730077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:56.731122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:39:57.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2566" for this suite. @ 09/27/23 15:39:57.039
• [3.085 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 09/27/23 15:39:57.044
  Sep 27 15:39:57.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:39:57.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:57.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:39:57.057
  STEP: Setting up server cert @ 09/27/23 15:39:57.073
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:39:57.566
  STEP: Deploying the webhook pod @ 09/27/23 15:39:57.572
  STEP: Wait for the deployment to be ready @ 09/27/23 15:39:57.585
  Sep 27 15:39:57.591: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 15:39:57.731634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:39:58.732180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 15:39:59.596
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:39:59.608
  E0927 15:39:59.732552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:40:00.609: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/27/23 15:40:00.613
  STEP: create a pod @ 09/27/23 15:40:00.631
  E0927 15:40:00.733075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:01.733666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/27/23 15:40:02.641
  Sep 27 15:40:02.642: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=webhook-6257 attach --namespace=webhook-6257 to-be-attached-pod -i -c=container1'
  Sep 27 15:40:02.715: INFO: rc: 1
  Sep 27 15:40:02.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0927 15:40:02.734661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-6257" for this suite. @ 09/27/23 15:40:02.755
  STEP: Destroying namespace "webhook-markers-807" for this suite. @ 09/27/23 15:40:02.763
• [5.723 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/27/23 15:40:02.768
  Sep 27 15:40:02.768: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/27/23 15:40:02.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:02.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:02.779
  E0927 15:40:03.734771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:04.735197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:40:04.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 09/27/23 15:40:04.806
  STEP: Cleaning up the configmap @ 09/27/23 15:40:04.81
  STEP: Cleaning up the pod @ 09/27/23 15:40:04.814
  STEP: Destroying namespace "emptydir-wrapper-7241" for this suite. @ 09/27/23 15:40:04.824
• [2.061 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/27/23 15:40:04.829
  Sep 27 15:40:04.829: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename init-container @ 09/27/23 15:40:04.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:04.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:04.844
  STEP: creating the pod @ 09/27/23 15:40:04.847
  Sep 27 15:40:04.847: INFO: PodSpec: initContainers in spec.initContainers
  E0927 15:40:05.735660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:06.735792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:07.735907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:08.736049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:09.736650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:10.736944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:11.737320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:12.737538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:13.737705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:14.738166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:15.738476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:16.738699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:17.738956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:18.739648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:19.740228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:20.740492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:21.740623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:22.740872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:23.741086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:24.741396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:25.741500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:26.741736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:27.741970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:28.742192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:29.742724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:30.742828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:31.743068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:32.743574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:33.743666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:34.744112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:35.744324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:36.744572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:37.744834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:38.745113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:39.745690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:40.745895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:41.746140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:42.746584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:43.746776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:44.747199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:45.747412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:40:46.029: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-2f65adf2-f8f6-4196-853a-9153a5017eb6", GenerateName:"", Namespace:"init-container-7514", SelfLink:"", UID:"8969038d-31e3-4157-9b8d-b043c158814e", ResourceVersion:"28102", Generation:0, CreationTimestamp:time.Date(2023, time.September, 27, 15, 40, 4, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"847180226"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 27, 15, 40, 4, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c839c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 27, 15, 40, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005c83a10), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-z6dk9", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc007632240), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-z6dk9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-z6dk9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-z6dk9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00571be00), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker-0", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0006adea0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00571be80)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00571bea0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00571bea8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00571beac), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0015755c0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 27, 15, 40, 4, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 27, 15, 40, 4, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 27, 15, 40, 4, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 27, 15, 40, 4, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.0.53.207", HostIPs:[]v1.HostIP(nil), PodIP:"10.244.1.188", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.188"}}, StartTime:time.Date(2023, time.September, 27, 15, 40, 4, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000364770)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003647e0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://941b4ce3042c858ce2a14faa7f497516a97e8b26872ebad6e7944d625a4879a0", Started:(*bool)(0xc00571bf4a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0076322c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc00571bf5f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0076322a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00571bf2f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Sep 27 15:40:46.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7514" for this suite. @ 09/27/23 15:40:46.032
• [41.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/27/23 15:40:46.042
  Sep 27 15:40:46.042: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename watch @ 09/27/23 15:40:46.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:46.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:46.053
  STEP: creating a new configmap @ 09/27/23 15:40:46.056
  STEP: modifying the configmap once @ 09/27/23 15:40:46.059
  STEP: modifying the configmap a second time @ 09/27/23 15:40:46.066
  STEP: deleting the configmap @ 09/27/23 15:40:46.071
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/27/23 15:40:46.075
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/27/23 15:40:46.076
  Sep 27 15:40:46.076: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9605  2fc5a2e1-b2a9-418f-99a5-20e5262ab5e5 28109 0 2023-09-27 15:40:46 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-27 15:40:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:40:46.076: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9605  2fc5a2e1-b2a9-418f-99a5-20e5262ab5e5 28110 0 2023-09-27 15:40:46 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-27 15:40:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:40:46.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9605" for this suite. @ 09/27/23 15:40:46.078
• [0.040 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 09/27/23 15:40:46.082
  Sep 27 15:40:46.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename disruption @ 09/27/23 15:40:46.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:46.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:46.093
  STEP: Creating a kubernetes client @ 09/27/23 15:40:46.095
  Sep 27 15:40:46.095: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename disruption-2 @ 09/27/23 15:40:46.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:46.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:46.106
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:40:46.111
  E0927 15:40:46.748216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:47.748383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:40:48.12
  E0927 15:40:48.749055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:49.749743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:40:50.129
  E0927 15:40:50.750627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:51.750737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 09/27/23 15:40:52.133
  STEP: listing a collection of PDBs in namespace disruption-171 @ 09/27/23 15:40:52.135
  STEP: deleting a collection of PDBs @ 09/27/23 15:40:52.137
  STEP: Waiting for the PDB collection to be deleted @ 09/27/23 15:40:52.146
  Sep 27 15:40:52.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:40:52.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8850" for this suite. @ 09/27/23 15:40:52.152
  STEP: Destroying namespace "disruption-171" for this suite. @ 09/27/23 15:40:52.156
• [6.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 09/27/23 15:40:52.165
  Sep 27 15:40:52.165: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename gc @ 09/27/23 15:40:52.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:52.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:52.179
  STEP: create the rc1 @ 09/27/23 15:40:52.184
  STEP: create the rc2 @ 09/27/23 15:40:52.187
  E0927 15:40:52.760206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:53.760785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:54.766780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:55.766978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:56.767106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:57.770088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/27/23 15:40:58.209
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/27/23 15:40:58.732
  STEP: wait for the rc to be deleted @ 09/27/23 15:40:58.739
  E0927 15:40:58.770266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:40:59.771303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:00.771701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:01.771952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:02.772075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:03.750: INFO: 70 pods remaining
  Sep 27 15:41:03.750: INFO: 70 pods has nil DeletionTimestamp
  Sep 27 15:41:03.750: INFO: 
  E0927 15:41:03.772171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:04.772586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:05.772808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:06.772937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:07.773173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/27/23 15:41:08.748
  W0927 15:41:08.752283      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 15:41:08.752: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 15:41:08.752: INFO: Deleting pod "simpletest-rc-to-be-deleted-27fg2" in namespace "gc-3813"
  Sep 27 15:41:08.764: INFO: Deleting pod "simpletest-rc-to-be-deleted-28bch" in namespace "gc-3813"
  E0927 15:41:08.773291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:08.781: INFO: Deleting pod "simpletest-rc-to-be-deleted-2g2pd" in namespace "gc-3813"
  Sep 27 15:41:08.794: INFO: Deleting pod "simpletest-rc-to-be-deleted-4729d" in namespace "gc-3813"
  Sep 27 15:41:08.805: INFO: Deleting pod "simpletest-rc-to-be-deleted-4lmmp" in namespace "gc-3813"
  Sep 27 15:41:08.821: INFO: Deleting pod "simpletest-rc-to-be-deleted-4pqgk" in namespace "gc-3813"
  Sep 27 15:41:08.835: INFO: Deleting pod "simpletest-rc-to-be-deleted-4q8tg" in namespace "gc-3813"
  Sep 27 15:41:08.848: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tx9z" in namespace "gc-3813"
  Sep 27 15:41:08.863: INFO: Deleting pod "simpletest-rc-to-be-deleted-62t7m" in namespace "gc-3813"
  Sep 27 15:41:08.876: INFO: Deleting pod "simpletest-rc-to-be-deleted-6cllp" in namespace "gc-3813"
  Sep 27 15:41:08.889: INFO: Deleting pod "simpletest-rc-to-be-deleted-6n42g" in namespace "gc-3813"
  Sep 27 15:41:08.910: INFO: Deleting pod "simpletest-rc-to-be-deleted-725q9" in namespace "gc-3813"
  Sep 27 15:41:08.926: INFO: Deleting pod "simpletest-rc-to-be-deleted-72mxz" in namespace "gc-3813"
  Sep 27 15:41:08.941: INFO: Deleting pod "simpletest-rc-to-be-deleted-787xp" in namespace "gc-3813"
  Sep 27 15:41:08.956: INFO: Deleting pod "simpletest-rc-to-be-deleted-797f5" in namespace "gc-3813"
  Sep 27 15:41:08.967: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ds5f" in namespace "gc-3813"
  Sep 27 15:41:08.981: INFO: Deleting pod "simpletest-rc-to-be-deleted-7hxp2" in namespace "gc-3813"
  Sep 27 15:41:08.999: INFO: Deleting pod "simpletest-rc-to-be-deleted-8ccmn" in namespace "gc-3813"
  Sep 27 15:41:09.011: INFO: Deleting pod "simpletest-rc-to-be-deleted-8lpjz" in namespace "gc-3813"
  Sep 27 15:41:09.030: INFO: Deleting pod "simpletest-rc-to-be-deleted-8m2fb" in namespace "gc-3813"
  Sep 27 15:41:09.043: INFO: Deleting pod "simpletest-rc-to-be-deleted-8nsmz" in namespace "gc-3813"
  Sep 27 15:41:09.052: INFO: Deleting pod "simpletest-rc-to-be-deleted-9l46v" in namespace "gc-3813"
  Sep 27 15:41:09.064: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhvsn" in namespace "gc-3813"
  Sep 27 15:41:09.078: INFO: Deleting pod "simpletest-rc-to-be-deleted-bpmqc" in namespace "gc-3813"
  Sep 27 15:41:09.090: INFO: Deleting pod "simpletest-rc-to-be-deleted-bzp99" in namespace "gc-3813"
  Sep 27 15:41:09.104: INFO: Deleting pod "simpletest-rc-to-be-deleted-c4n8z" in namespace "gc-3813"
  Sep 27 15:41:09.117: INFO: Deleting pod "simpletest-rc-to-be-deleted-c9gtx" in namespace "gc-3813"
  Sep 27 15:41:09.134: INFO: Deleting pod "simpletest-rc-to-be-deleted-cgkfd" in namespace "gc-3813"
  Sep 27 15:41:09.142: INFO: Deleting pod "simpletest-rc-to-be-deleted-ckwdd" in namespace "gc-3813"
  Sep 27 15:41:09.161: INFO: Deleting pod "simpletest-rc-to-be-deleted-cpmxt" in namespace "gc-3813"
  Sep 27 15:41:09.174: INFO: Deleting pod "simpletest-rc-to-be-deleted-d2xll" in namespace "gc-3813"
  Sep 27 15:41:09.191: INFO: Deleting pod "simpletest-rc-to-be-deleted-d5lfh" in namespace "gc-3813"
  Sep 27 15:41:09.207: INFO: Deleting pod "simpletest-rc-to-be-deleted-dcp74" in namespace "gc-3813"
  Sep 27 15:41:09.225: INFO: Deleting pod "simpletest-rc-to-be-deleted-dq755" in namespace "gc-3813"
  Sep 27 15:41:09.238: INFO: Deleting pod "simpletest-rc-to-be-deleted-f9grc" in namespace "gc-3813"
  Sep 27 15:41:09.257: INFO: Deleting pod "simpletest-rc-to-be-deleted-fkxm7" in namespace "gc-3813"
  Sep 27 15:41:09.274: INFO: Deleting pod "simpletest-rc-to-be-deleted-gbwvb" in namespace "gc-3813"
  Sep 27 15:41:09.294: INFO: Deleting pod "simpletest-rc-to-be-deleted-gdt8h" in namespace "gc-3813"
  Sep 27 15:41:09.326: INFO: Deleting pod "simpletest-rc-to-be-deleted-ghkkk" in namespace "gc-3813"
  Sep 27 15:41:09.371: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqdvk" in namespace "gc-3813"
  Sep 27 15:41:09.385: INFO: Deleting pod "simpletest-rc-to-be-deleted-gtksk" in namespace "gc-3813"
  Sep 27 15:41:09.398: INFO: Deleting pod "simpletest-rc-to-be-deleted-h4qzv" in namespace "gc-3813"
  Sep 27 15:41:09.416: INFO: Deleting pod "simpletest-rc-to-be-deleted-h5nqd" in namespace "gc-3813"
  Sep 27 15:41:09.441: INFO: Deleting pod "simpletest-rc-to-be-deleted-hhlv5" in namespace "gc-3813"
  Sep 27 15:41:09.450: INFO: Deleting pod "simpletest-rc-to-be-deleted-hpqjs" in namespace "gc-3813"
  Sep 27 15:41:09.464: INFO: Deleting pod "simpletest-rc-to-be-deleted-hrgw7" in namespace "gc-3813"
  Sep 27 15:41:09.479: INFO: Deleting pod "simpletest-rc-to-be-deleted-jcg5p" in namespace "gc-3813"
  Sep 27 15:41:09.494: INFO: Deleting pod "simpletest-rc-to-be-deleted-jfswc" in namespace "gc-3813"
  Sep 27 15:41:09.509: INFO: Deleting pod "simpletest-rc-to-be-deleted-jxvpd" in namespace "gc-3813"
  Sep 27 15:41:09.525: INFO: Deleting pod "simpletest-rc-to-be-deleted-kzq7v" in namespace "gc-3813"
  Sep 27 15:41:09.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3813" for this suite. @ 09/27/23 15:41:09.542
• [17.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 09/27/23 15:41:09.552
  Sep 27 15:41:09.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename security-context @ 09/27/23 15:41:09.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:09.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:09.567
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/27/23 15:41:09.577
  E0927 15:41:09.774152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:10.774904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:11.775660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:12.776729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:41:13.603
  Sep 27 15:41:13.605: INFO: Trying to get logs from node worker-1 pod security-context-984ac866-a830-4323-a8ff-df90a3e59a45 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:41:13.619
  Sep 27 15:41:13.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9432" for this suite. @ 09/27/23 15:41:13.634
• [4.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 09/27/23 15:41:13.639
  Sep 27 15:41:13.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:41:13.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:13.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:13.653
  STEP: create deployment with httpd image @ 09/27/23 15:41:13.656
  Sep 27 15:41:13.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-3687 create -f -'
  E0927 15:41:13.776848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:13.888: INFO: stderr: ""
  Sep 27 15:41:13.888: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/27/23 15:41:13.888
  Sep 27 15:41:13.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-3687 diff -f -'
  Sep 27 15:41:14.055: INFO: rc: 1
  Sep 27 15:41:14.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-3687 delete -f -'
  Sep 27 15:41:14.116: INFO: stderr: ""
  Sep 27 15:41:14.116: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Sep 27 15:41:14.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3687" for this suite. @ 09/27/23 15:41:14.119
• [0.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/27/23 15:41:14.127
  Sep 27 15:41:14.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 15:41:14.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:14.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:14.139
  E0927 15:41:14.777100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:15.777311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:16.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:41:16.155: INFO: Deleting pod "var-expansion-1e4761f0-ade9-49ff-89bb-3a3212443506" in namespace "var-expansion-6897"
  Sep 27 15:41:16.163: INFO: Wait up to 5m0s for pod "var-expansion-1e4761f0-ade9-49ff-89bb-3a3212443506" to be fully deleted
  E0927 15:41:16.777517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:17.777815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-6897" for this suite. @ 09/27/23 15:41:18.167
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 09/27/23 15:41:18.177
  Sep 27 15:41:18.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 15:41:18.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:18.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:18.19
  STEP: Creating a test namespace @ 09/27/23 15:41:18.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:18.204
  STEP: Creating a service in the namespace @ 09/27/23 15:41:18.206
  STEP: Deleting the namespace @ 09/27/23 15:41:18.216
  STEP: Waiting for the namespace to be removed. @ 09/27/23 15:41:18.223
  E0927 15:41:18.777964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:19.778725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:20.779311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:21.779921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:22.779961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:23.781033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/27/23 15:41:24.225
  STEP: Verifying there is no service in the namespace @ 09/27/23 15:41:24.239
  Sep 27 15:41:24.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2180" for this suite. @ 09/27/23 15:41:24.243
  STEP: Destroying namespace "nsdeletetest-270" for this suite. @ 09/27/23 15:41:24.247
  Sep 27 15:41:24.251: INFO: Namespace nsdeletetest-270 was already deleted
  STEP: Destroying namespace "nsdeletetest-8477" for this suite. @ 09/27/23 15:41:24.251
• [6.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 09/27/23 15:41:24.259
  Sep 27 15:41:24.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/27/23 15:41:24.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:24.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:24.273
  STEP: getting /apis @ 09/27/23 15:41:24.275
  STEP: getting /apis/storage.k8s.io @ 09/27/23 15:41:24.278
  STEP: getting /apis/storage.k8s.io/v1 @ 09/27/23 15:41:24.279
  STEP: creating @ 09/27/23 15:41:24.28
  STEP: watching @ 09/27/23 15:41:24.295
  Sep 27 15:41:24.295: INFO: starting watch
  STEP: getting @ 09/27/23 15:41:24.3
  STEP: listing in namespace @ 09/27/23 15:41:24.302
  STEP: listing across namespaces @ 09/27/23 15:41:24.303
  STEP: patching @ 09/27/23 15:41:24.305
  STEP: updating @ 09/27/23 15:41:24.309
  Sep 27 15:41:24.312: INFO: waiting for watch events with expected annotations in namespace
  Sep 27 15:41:24.313: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/27/23 15:41:24.313
  STEP: deleting a collection @ 09/27/23 15:41:24.323
  Sep 27 15:41:24.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8368" for this suite. @ 09/27/23 15:41:24.335
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/27/23 15:41:24.341
  Sep 27 15:41:24.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename svc-latency @ 09/27/23 15:41:24.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:24.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:24.352
  Sep 27 15:41:24.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-7307 @ 09/27/23 15:41:24.356
  I0927 15:41:24.360247      22 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7307, replica count: 1
  E0927 15:41:24.781122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0927 15:41:25.411150      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0927 15:41:25.781450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0927 15:41:26.411247      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 15:41:26.524: INFO: Created: latency-svc-lfrrw
  Sep 27 15:41:26.528: INFO: Got endpoints: latency-svc-lfrrw [16.969472ms]
  Sep 27 15:41:26.541: INFO: Created: latency-svc-bsv2s
  Sep 27 15:41:26.606: INFO: Got endpoints: latency-svc-bsv2s [77.958613ms]
  Sep 27 15:41:26.607: INFO: Created: latency-svc-k9frq
  Sep 27 15:41:26.614: INFO: Got endpoints: latency-svc-k9frq [85.219766ms]
  Sep 27 15:41:26.617: INFO: Created: latency-svc-5ppp4
  Sep 27 15:41:26.623: INFO: Got endpoints: latency-svc-5ppp4 [94.511446ms]
  Sep 27 15:41:26.626: INFO: Created: latency-svc-74jpq
  Sep 27 15:41:26.633: INFO: Got endpoints: latency-svc-74jpq [103.827935ms]
  Sep 27 15:41:26.635: INFO: Created: latency-svc-slwcv
  Sep 27 15:41:26.704: INFO: Created: latency-svc-wg6j7
  Sep 27 15:41:26.704: INFO: Got endpoints: latency-svc-slwcv [175.32093ms]
  Sep 27 15:41:26.713: INFO: Got endpoints: latency-svc-wg6j7 [183.890441ms]
  Sep 27 15:41:26.716: INFO: Created: latency-svc-66gxc
  Sep 27 15:41:26.727: INFO: Got endpoints: latency-svc-66gxc [198.055745ms]
  Sep 27 15:41:26.730: INFO: Created: latency-svc-tlzzj
  Sep 27 15:41:26.739: INFO: Got endpoints: latency-svc-tlzzj [209.418061ms]
  Sep 27 15:41:26.744: INFO: Created: latency-svc-bwssx
  Sep 27 15:41:26.753: INFO: Created: latency-svc-9kg8g
  Sep 27 15:41:26.753: INFO: Got endpoints: latency-svc-bwssx [224.035152ms]
  Sep 27 15:41:26.757: INFO: Got endpoints: latency-svc-9kg8g [227.586122ms]
  E0927 15:41:26.782446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:26.790: INFO: Created: latency-svc-dnqq5
  Sep 27 15:41:26.794: INFO: Got endpoints: latency-svc-dnqq5 [264.222485ms]
  Sep 27 15:41:26.800: INFO: Created: latency-svc-hn8rj
  Sep 27 15:41:26.847: INFO: Got endpoints: latency-svc-hn8rj [318.020732ms]
  Sep 27 15:41:26.851: INFO: Created: latency-svc-f62s6
  Sep 27 15:41:26.861: INFO: Got endpoints: latency-svc-f62s6 [331.360368ms]
  Sep 27 15:41:26.870: INFO: Created: latency-svc-zmdf5
  Sep 27 15:41:26.877: INFO: Got endpoints: latency-svc-zmdf5 [347.211019ms]
  Sep 27 15:41:27.002: INFO: Created: latency-svc-vbtsp
  Sep 27 15:41:27.012: INFO: Got endpoints: latency-svc-vbtsp [483.672477ms]
  Sep 27 15:41:27.013: INFO: Created: latency-svc-9b7mm
  Sep 27 15:41:27.022: INFO: Got endpoints: latency-svc-9b7mm [415.605275ms]
  Sep 27 15:41:27.023: INFO: Created: latency-svc-xcjmj
  Sep 27 15:41:27.032: INFO: Got endpoints: latency-svc-xcjmj [418.101888ms]
  Sep 27 15:41:27.035: INFO: Created: latency-svc-69vxc
  Sep 27 15:41:27.096: INFO: Got endpoints: latency-svc-69vxc [472.300762ms]
  Sep 27 15:41:27.097: INFO: Created: latency-svc-2p5nx
  Sep 27 15:41:27.100: INFO: Got endpoints: latency-svc-2p5nx [467.629695ms]
  Sep 27 15:41:27.150: INFO: Created: latency-svc-s2cfd
  Sep 27 15:41:27.158: INFO: Got endpoints: latency-svc-s2cfd [453.87812ms]
  Sep 27 15:41:27.159: INFO: Created: latency-svc-9lrbb
  Sep 27 15:41:27.166: INFO: Got endpoints: latency-svc-9lrbb [453.325388ms]
  Sep 27 15:41:27.169: INFO: Created: latency-svc-xbzq9
  Sep 27 15:41:27.232: INFO: Got endpoints: latency-svc-xbzq9 [504.830786ms]
  Sep 27 15:41:27.236: INFO: Created: latency-svc-mf7qh
  Sep 27 15:41:27.244: INFO: Created: latency-svc-7jv5z
  Sep 27 15:41:27.245: INFO: Got endpoints: latency-svc-mf7qh [506.144489ms]
  Sep 27 15:41:27.277: INFO: Got endpoints: latency-svc-7jv5z [522.753708ms]
  Sep 27 15:41:27.282: INFO: Created: latency-svc-tx79b
  Sep 27 15:41:27.287: INFO: Got endpoints: latency-svc-tx79b [529.9807ms]
  Sep 27 15:41:27.290: INFO: Created: latency-svc-2m8c7
  Sep 27 15:41:27.337: INFO: Got endpoints: latency-svc-2m8c7 [543.603466ms]
  Sep 27 15:41:27.340: INFO: Created: latency-svc-f9rhn
  Sep 27 15:41:27.346: INFO: Got endpoints: latency-svc-f9rhn [498.631932ms]
  Sep 27 15:41:27.349: INFO: Created: latency-svc-5vbnw
  Sep 27 15:41:27.358: INFO: Got endpoints: latency-svc-5vbnw [496.645311ms]
  Sep 27 15:41:27.359: INFO: Created: latency-svc-tqvsj
  Sep 27 15:41:27.368: INFO: Got endpoints: latency-svc-tqvsj [491.577318ms]
  Sep 27 15:41:27.370: INFO: Created: latency-svc-vnn78
  Sep 27 15:41:27.441: INFO: Got endpoints: latency-svc-vnn78 [428.900418ms]
  Sep 27 15:41:27.442: INFO: Created: latency-svc-2kqmv
  Sep 27 15:41:27.469: INFO: Got endpoints: latency-svc-2kqmv [447.22763ms]
  Sep 27 15:41:27.471: INFO: Created: latency-svc-fptwf
  Sep 27 15:41:27.475: INFO: Got endpoints: latency-svc-fptwf [442.657621ms]
  Sep 27 15:41:27.484: INFO: Created: latency-svc-lk2wl
  Sep 27 15:41:27.492: INFO: Got endpoints: latency-svc-lk2wl [396.206957ms]
  Sep 27 15:41:27.493: INFO: Created: latency-svc-fmj2m
  Sep 27 15:41:27.563: INFO: Got endpoints: latency-svc-fmj2m [462.269102ms]
  Sep 27 15:41:27.564: INFO: Created: latency-svc-4h59q
  Sep 27 15:41:27.572: INFO: Got endpoints: latency-svc-4h59q [414.090998ms]
  Sep 27 15:41:27.577: INFO: Created: latency-svc-2ssvb
  Sep 27 15:41:27.582: INFO: Got endpoints: latency-svc-2ssvb [415.481572ms]
  Sep 27 15:41:27.584: INFO: Created: latency-svc-gjvkc
  Sep 27 15:41:27.587: INFO: Got endpoints: latency-svc-gjvkc [354.492948ms]
  Sep 27 15:41:27.597: INFO: Created: latency-svc-x52z2
  Sep 27 15:41:27.634: INFO: Got endpoints: latency-svc-x52z2 [388.934987ms]
  Sep 27 15:41:27.638: INFO: Created: latency-svc-dxhvk
  Sep 27 15:41:27.644: INFO: Got endpoints: latency-svc-dxhvk [366.984006ms]
  Sep 27 15:41:27.646: INFO: Created: latency-svc-bdvdl
  Sep 27 15:41:27.655: INFO: Got endpoints: latency-svc-bdvdl [367.430452ms]
  Sep 27 15:41:27.656: INFO: Created: latency-svc-8m86c
  Sep 27 15:41:27.696: INFO: Got endpoints: latency-svc-8m86c [358.144991ms]
  Sep 27 15:41:27.700: INFO: Created: latency-svc-rt6td
  Sep 27 15:41:27.741: INFO: Got endpoints: latency-svc-rt6td [394.798867ms]
  Sep 27 15:41:27.742: INFO: Created: latency-svc-5fnff
  Sep 27 15:41:27.748: INFO: Got endpoints: latency-svc-5fnff [390.298421ms]
  Sep 27 15:41:27.757: INFO: Created: latency-svc-n4qb2
  Sep 27 15:41:27.765: INFO: Got endpoints: latency-svc-n4qb2 [396.581757ms]
  Sep 27 15:41:27.768: INFO: Created: latency-svc-lhpjk
  Sep 27 15:41:27.776: INFO: Got endpoints: latency-svc-lhpjk [335.380688ms]
  Sep 27 15:41:27.778: INFO: Created: latency-svc-m74db
  E0927 15:41:27.782900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:27.855: INFO: Got endpoints: latency-svc-m74db [385.979078ms]
  Sep 27 15:41:27.858: INFO: Created: latency-svc-mx2n5
  Sep 27 15:41:27.868: INFO: Got endpoints: latency-svc-mx2n5 [393.030607ms]
  Sep 27 15:41:27.869: INFO: Created: latency-svc-m4f7z
  Sep 27 15:41:27.879: INFO: Got endpoints: latency-svc-m4f7z [387.044276ms]
  Sep 27 15:41:27.880: INFO: Created: latency-svc-pzn8x
  Sep 27 15:41:27.890: INFO: Got endpoints: latency-svc-pzn8x [326.329851ms]
  Sep 27 15:41:27.893: INFO: Created: latency-svc-q5s6f
  Sep 27 15:41:27.897: INFO: Got endpoints: latency-svc-q5s6f [324.21181ms]
  Sep 27 15:41:27.906: INFO: Created: latency-svc-8dd82
  Sep 27 15:41:27.949: INFO: Got endpoints: latency-svc-8dd82 [366.852664ms]
  Sep 27 15:41:27.951: INFO: Created: latency-svc-v5b7f
  Sep 27 15:41:28.019: INFO: Got endpoints: latency-svc-v5b7f [432.157645ms]
  Sep 27 15:41:28.022: INFO: Created: latency-svc-l4h2s
  Sep 27 15:41:28.025: INFO: Got endpoints: latency-svc-l4h2s [390.986387ms]
  Sep 27 15:41:28.032: INFO: Created: latency-svc-tsp8b
  Sep 27 15:41:28.056: INFO: Got endpoints: latency-svc-tsp8b [412.050677ms]
  Sep 27 15:41:28.058: INFO: Created: latency-svc-l72sj
  Sep 27 15:41:28.104: INFO: Got endpoints: latency-svc-l72sj [449.089601ms]
  Sep 27 15:41:28.106: INFO: Created: latency-svc-rtkd8
  Sep 27 15:41:28.116: INFO: Got endpoints: latency-svc-rtkd8 [419.545527ms]
  Sep 27 15:41:28.118: INFO: Created: latency-svc-gj4lx
  Sep 27 15:41:28.174: INFO: Got endpoints: latency-svc-gj4lx [432.723151ms]
  Sep 27 15:41:28.177: INFO: Created: latency-svc-krs99
  Sep 27 15:41:28.185: INFO: Got endpoints: latency-svc-krs99 [437.105976ms]
  Sep 27 15:41:28.189: INFO: Created: latency-svc-6tjcp
  Sep 27 15:41:28.216: INFO: Got endpoints: latency-svc-6tjcp [450.249586ms]
  Sep 27 15:41:28.219: INFO: Created: latency-svc-7ghb2
  Sep 27 15:41:28.230: INFO: Got endpoints: latency-svc-7ghb2 [453.914831ms]
  Sep 27 15:41:28.232: INFO: Created: latency-svc-vg547
  Sep 27 15:41:28.242: INFO: Got endpoints: latency-svc-vg547 [386.951714ms]
  Sep 27 15:41:28.244: INFO: Created: latency-svc-j2gq6
  Sep 27 15:41:28.251: INFO: Got endpoints: latency-svc-j2gq6 [383.198714ms]
  Sep 27 15:41:28.254: INFO: Created: latency-svc-sjvht
  Sep 27 15:41:28.329: INFO: Got endpoints: latency-svc-sjvht [449.653696ms]
  Sep 27 15:41:28.332: INFO: Created: latency-svc-w9b6c
  Sep 27 15:41:28.340: INFO: Got endpoints: latency-svc-w9b6c [450.047627ms]
  Sep 27 15:41:28.341: INFO: Created: latency-svc-msv64
  Sep 27 15:41:28.350: INFO: Got endpoints: latency-svc-msv64 [452.82396ms]
  Sep 27 15:41:28.351: INFO: Created: latency-svc-w2lx8
  Sep 27 15:41:28.360: INFO: Created: latency-svc-j4bhs
  Sep 27 15:41:28.414: INFO: Got endpoints: latency-svc-w2lx8 [463.828159ms]
  Sep 27 15:41:28.417: INFO: Created: latency-svc-9n8nz
  Sep 27 15:41:28.423: INFO: Created: latency-svc-zkdpj
  Sep 27 15:41:28.483: INFO: Got endpoints: latency-svc-9n8nz [457.128326ms]
  Sep 27 15:41:28.483: INFO: Got endpoints: latency-svc-j4bhs [463.864888ms]
  Sep 27 15:41:28.486: INFO: Created: latency-svc-dcd6k
  Sep 27 15:41:28.492: INFO: Created: latency-svc-mjdxw
  Sep 27 15:41:28.541: INFO: Got endpoints: latency-svc-zkdpj [485.480497ms]
  Sep 27 15:41:28.544: INFO: Created: latency-svc-rl542
  Sep 27 15:41:28.549: INFO: Created: latency-svc-jt2f7
  Sep 27 15:41:28.558: INFO: Created: latency-svc-mzmxt
  Sep 27 15:41:28.565: INFO: Created: latency-svc-9b5dl
  Sep 27 15:41:28.620: INFO: Got endpoints: latency-svc-dcd6k [516.200155ms]
  Sep 27 15:41:28.624: INFO: Created: latency-svc-5gklx
  Sep 27 15:41:28.632: INFO: Got endpoints: latency-svc-mjdxw [516.275465ms]
  Sep 27 15:41:28.633: INFO: Created: latency-svc-wxxjj
  Sep 27 15:41:28.643: INFO: Created: latency-svc-pnqk7
  Sep 27 15:41:28.651: INFO: Created: latency-svc-b99j8
  Sep 27 15:41:28.687: INFO: Got endpoints: latency-svc-rl542 [512.888102ms]
  Sep 27 15:41:28.689: INFO: Created: latency-svc-pdjgg
  Sep 27 15:41:28.698: INFO: Created: latency-svc-cpckp
  Sep 27 15:41:28.707: INFO: Created: latency-svc-c8jc2
  Sep 27 15:41:28.715: INFO: Created: latency-svc-9tfcb
  Sep 27 15:41:28.771: INFO: Got endpoints: latency-svc-jt2f7 [586.188238ms]
  Sep 27 15:41:28.774: INFO: Created: latency-svc-8vtdw
  Sep 27 15:41:28.780: INFO: Got endpoints: latency-svc-mzmxt [564.391809ms]
  Sep 27 15:41:28.783: INFO: Created: latency-svc-fhdz6
  E0927 15:41:28.783656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:28.789: INFO: Created: latency-svc-r6jvf
  Sep 27 15:41:28.796: INFO: Created: latency-svc-sqlnm
  Sep 27 15:41:28.827: INFO: Created: latency-svc-n9rpq
  Sep 27 15:41:28.828: INFO: Got endpoints: latency-svc-9b5dl [597.616513ms]
  Sep 27 15:41:28.837: INFO: Created: latency-svc-njmkc
  Sep 27 15:41:28.846: INFO: Created: latency-svc-chdq7
  Sep 27 15:41:28.938: INFO: Got endpoints: latency-svc-5gklx [695.650931ms]
  Sep 27 15:41:28.938: INFO: Got endpoints: latency-svc-wxxjj [686.554581ms]
  Sep 27 15:41:28.952: INFO: Created: latency-svc-xqm4d
  Sep 27 15:41:28.991: INFO: Got endpoints: latency-svc-pnqk7 [662.074969ms]
  Sep 27 15:41:28.993: INFO: Created: latency-svc-6pf5q
  Sep 27 15:41:29.006: INFO: Created: latency-svc-7hvf2
  Sep 27 15:41:29.028: INFO: Got endpoints: latency-svc-b99j8 [688.466415ms]
  Sep 27 15:41:29.084: INFO: Got endpoints: latency-svc-pdjgg [734.396132ms]
  Sep 27 15:41:29.087: INFO: Created: latency-svc-6zzjn
  Sep 27 15:41:29.097: INFO: Created: latency-svc-qv2fg
  Sep 27 15:41:29.128: INFO: Got endpoints: latency-svc-cpckp [714.405553ms]
  Sep 27 15:41:29.171: INFO: Created: latency-svc-xs5k6
  Sep 27 15:41:29.178: INFO: Got endpoints: latency-svc-c8jc2 [695.265527ms]
  Sep 27 15:41:29.194: INFO: Created: latency-svc-bk6kc
  Sep 27 15:41:29.228: INFO: Got endpoints: latency-svc-9tfcb [744.97236ms]
  Sep 27 15:41:29.244: INFO: Created: latency-svc-mbk9k
  Sep 27 15:41:29.278: INFO: Got endpoints: latency-svc-8vtdw [736.65742ms]
  Sep 27 15:41:29.290: INFO: Created: latency-svc-2jkc7
  Sep 27 15:41:29.331: INFO: Got endpoints: latency-svc-fhdz6 [711.260939ms]
  Sep 27 15:41:29.380: INFO: Got endpoints: latency-svc-r6jvf [748.425715ms]
  Sep 27 15:41:29.383: INFO: Created: latency-svc-lff24
  Sep 27 15:41:29.394: INFO: Created: latency-svc-7w7bd
  Sep 27 15:41:29.455: INFO: Got endpoints: latency-svc-sqlnm [767.905775ms]
  Sep 27 15:41:29.471: INFO: Created: latency-svc-bqrc5
  Sep 27 15:41:29.478: INFO: Got endpoints: latency-svc-n9rpq [706.542931ms]
  Sep 27 15:41:29.494: INFO: Created: latency-svc-tkqjb
  Sep 27 15:41:29.531: INFO: Got endpoints: latency-svc-njmkc [750.748525ms]
  Sep 27 15:41:29.582: INFO: Got endpoints: latency-svc-chdq7 [753.126908ms]
  Sep 27 15:41:29.585: INFO: Created: latency-svc-fx2zx
  Sep 27 15:41:29.596: INFO: Created: latency-svc-fjk5d
  Sep 27 15:41:29.628: INFO: Got endpoints: latency-svc-xqm4d [689.596256ms]
  Sep 27 15:41:29.639: INFO: Created: latency-svc-ctdff
  Sep 27 15:41:29.762: INFO: Got endpoints: latency-svc-7hvf2 [770.162553ms]
  Sep 27 15:41:29.762: INFO: Got endpoints: latency-svc-6pf5q [823.824188ms]
  Sep 27 15:41:29.774: INFO: Created: latency-svc-jrlct
  E0927 15:41:29.784648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:29.816: INFO: Got endpoints: latency-svc-6zzjn [788.018241ms]
  Sep 27 15:41:29.819: INFO: Created: latency-svc-2rjsv
  Sep 27 15:41:29.847: INFO: Got endpoints: latency-svc-qv2fg [762.463254ms]
  Sep 27 15:41:29.849: INFO: Created: latency-svc-v4r5j
  Sep 27 15:41:29.893: INFO: Got endpoints: latency-svc-xs5k6 [764.539779ms]
  Sep 27 15:41:29.893: INFO: Created: latency-svc-h57gx
  Sep 27 15:41:29.905: INFO: Created: latency-svc-7kqc4
  Sep 27 15:41:29.930: INFO: Got endpoints: latency-svc-bk6kc [751.921067ms]
  Sep 27 15:41:29.968: INFO: Created: latency-svc-b8pmd
  Sep 27 15:41:29.981: INFO: Got endpoints: latency-svc-mbk9k [752.33811ms]
  Sep 27 15:41:29.991: INFO: Created: latency-svc-n889t
  Sep 27 15:41:30.031: INFO: Got endpoints: latency-svc-2jkc7 [752.851478ms]
  Sep 27 15:41:30.044: INFO: Created: latency-svc-7dld6
  Sep 27 15:41:30.082: INFO: Got endpoints: latency-svc-lff24 [750.655165ms]
  Sep 27 15:41:30.095: INFO: Created: latency-svc-v5bwn
  Sep 27 15:41:30.131: INFO: Got endpoints: latency-svc-7w7bd [750.894321ms]
  Sep 27 15:41:30.174: INFO: Created: latency-svc-wnvhr
  Sep 27 15:41:30.181: INFO: Got endpoints: latency-svc-bqrc5 [725.907443ms]
  Sep 27 15:41:30.194: INFO: Created: latency-svc-r72xd
  Sep 27 15:41:30.278: INFO: Got endpoints: latency-svc-tkqjb [799.971491ms]
  Sep 27 15:41:30.279: INFO: Got endpoints: latency-svc-fx2zx [748.035883ms]
  Sep 27 15:41:30.291: INFO: Created: latency-svc-wjlqm
  Sep 27 15:41:30.315: INFO: Created: latency-svc-9wlbf
  Sep 27 15:41:30.328: INFO: Got endpoints: latency-svc-fjk5d [746.790025ms]
  Sep 27 15:41:30.395: INFO: Got endpoints: latency-svc-ctdff [767.702844ms]
  Sep 27 15:41:30.397: INFO: Created: latency-svc-2k94d
  Sep 27 15:41:30.410: INFO: Created: latency-svc-bvmn7
  Sep 27 15:41:30.428: INFO: Got endpoints: latency-svc-jrlct [666.629133ms]
  Sep 27 15:41:30.443: INFO: Created: latency-svc-n5hw9
  Sep 27 15:41:30.479: INFO: Got endpoints: latency-svc-2rjsv [717.345034ms]
  Sep 27 15:41:30.528: INFO: Created: latency-svc-mj7vk
  Sep 27 15:41:30.529: INFO: Got endpoints: latency-svc-v4r5j [711.847987ms]
  Sep 27 15:41:30.577: INFO: Created: latency-svc-t787m
  Sep 27 15:41:30.583: INFO: Got endpoints: latency-svc-h57gx [735.836314ms]
  Sep 27 15:41:30.594: INFO: Created: latency-svc-7rrpn
  Sep 27 15:41:30.658: INFO: Got endpoints: latency-svc-7kqc4 [764.797333ms]
  Sep 27 15:41:30.671: INFO: Created: latency-svc-fq6zg
  Sep 27 15:41:30.678: INFO: Got endpoints: latency-svc-b8pmd [747.810975ms]
  Sep 27 15:41:30.692: INFO: Created: latency-svc-pdpzg
  Sep 27 15:41:30.733: INFO: Got endpoints: latency-svc-n889t [752.520033ms]
  Sep 27 15:41:30.781: INFO: Got endpoints: latency-svc-7dld6 [750.146758ms]
  Sep 27 15:41:30.782: INFO: Created: latency-svc-65456
  E0927 15:41:30.785475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:30.793: INFO: Created: latency-svc-kpdmt
  Sep 27 15:41:30.831: INFO: Got endpoints: latency-svc-v5bwn [748.681746ms]
  Sep 27 15:41:30.851: INFO: Created: latency-svc-txv2b
  Sep 27 15:41:30.904: INFO: Got endpoints: latency-svc-wnvhr [772.621779ms]
  Sep 27 15:41:30.917: INFO: Created: latency-svc-qrz9x
  Sep 27 15:41:30.928: INFO: Got endpoints: latency-svc-r72xd [746.861962ms]
  Sep 27 15:41:30.993: INFO: Got endpoints: latency-svc-wjlqm [714.735145ms]
  Sep 27 15:41:30.994: INFO: Created: latency-svc-4bc94
  Sep 27 15:41:31.034: INFO: Got endpoints: latency-svc-9wlbf [754.448397ms]
  Sep 27 15:41:31.035: INFO: Created: latency-svc-d7rhp
  Sep 27 15:41:31.045: INFO: Created: latency-svc-dlldt
  Sep 27 15:41:31.079: INFO: Got endpoints: latency-svc-2k94d [749.970934ms]
  Sep 27 15:41:31.090: INFO: Created: latency-svc-pgpxq
  Sep 27 15:41:31.128: INFO: Got endpoints: latency-svc-bvmn7 [732.973798ms]
  Sep 27 15:41:31.169: INFO: Created: latency-svc-gsx7p
  Sep 27 15:41:31.180: INFO: Got endpoints: latency-svc-n5hw9 [751.87086ms]
  Sep 27 15:41:31.192: INFO: Created: latency-svc-jlqfb
  Sep 27 15:41:31.231: INFO: Got endpoints: latency-svc-mj7vk [751.105014ms]
  Sep 27 15:41:31.268: INFO: Created: latency-svc-gbjcc
  Sep 27 15:41:31.282: INFO: Got endpoints: latency-svc-t787m [752.499048ms]
  Sep 27 15:41:31.293: INFO: Created: latency-svc-qbrph
  Sep 27 15:41:31.331: INFO: Got endpoints: latency-svc-7rrpn [748.770923ms]
  Sep 27 15:41:31.381: INFO: Got endpoints: latency-svc-fq6zg [722.33951ms]
  Sep 27 15:41:31.382: INFO: Created: latency-svc-24m86
  Sep 27 15:41:31.394: INFO: Created: latency-svc-zpzsb
  Sep 27 15:41:31.431: INFO: Got endpoints: latency-svc-pdpzg [753.141671ms]
  Sep 27 15:41:31.445: INFO: Created: latency-svc-vl25s
  Sep 27 15:41:31.492: INFO: Got endpoints: latency-svc-65456 [758.568428ms]
  Sep 27 15:41:31.506: INFO: Created: latency-svc-pbzgk
  Sep 27 15:41:31.529: INFO: Got endpoints: latency-svc-kpdmt [747.76325ms]
  Sep 27 15:41:31.603: INFO: Got endpoints: latency-svc-txv2b [771.555089ms]
  Sep 27 15:41:31.604: INFO: Created: latency-svc-q76dq
  Sep 27 15:41:31.618: INFO: Created: latency-svc-ztntf
  Sep 27 15:41:31.629: INFO: Got endpoints: latency-svc-qrz9x [725.150512ms]
  Sep 27 15:41:31.645: INFO: Created: latency-svc-jplkd
  Sep 27 15:41:31.681: INFO: Got endpoints: latency-svc-4bc94 [752.730974ms]
  Sep 27 15:41:31.698: INFO: Created: latency-svc-2xg9l
  Sep 27 15:41:31.756: INFO: Got endpoints: latency-svc-d7rhp [761.927136ms]
  E0927 15:41:31.786131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:31.803: INFO: Got endpoints: latency-svc-dlldt [769.064307ms]
  Sep 27 15:41:31.804: INFO: Created: latency-svc-xlvrk
  Sep 27 15:41:31.817: INFO: Created: latency-svc-shr7s
  Sep 27 15:41:31.828: INFO: Got endpoints: latency-svc-pgpxq [749.175065ms]
  Sep 27 15:41:31.915: INFO: Created: latency-svc-6bhqs
  Sep 27 15:41:31.915: INFO: Got endpoints: latency-svc-gsx7p [786.924576ms]
  Sep 27 15:41:31.931: INFO: Got endpoints: latency-svc-jlqfb [750.54747ms]
  Sep 27 15:41:31.933: INFO: Created: latency-svc-twl4l
  Sep 27 15:41:31.946: INFO: Created: latency-svc-tzs29
  Sep 27 15:41:31.978: INFO: Got endpoints: latency-svc-gbjcc [747.549201ms]
  Sep 27 15:41:32.040: INFO: Got endpoints: latency-svc-qbrph [758.114987ms]
  Sep 27 15:41:32.040: INFO: Created: latency-svc-9sjj8
  Sep 27 15:41:32.089: INFO: Got endpoints: latency-svc-24m86 [757.826581ms]
  Sep 27 15:41:32.093: INFO: Created: latency-svc-ggl29
  Sep 27 15:41:32.103: INFO: Created: latency-svc-l9mpx
  Sep 27 15:41:32.129: INFO: Got endpoints: latency-svc-zpzsb [748.0138ms]
  Sep 27 15:41:32.235: INFO: Created: latency-svc-7md9z
  Sep 27 15:41:32.235: INFO: Got endpoints: latency-svc-vl25s [804.151999ms]
  Sep 27 15:41:32.236: INFO: Got endpoints: latency-svc-pbzgk [743.96038ms]
  Sep 27 15:41:32.252: INFO: Created: latency-svc-mkq7q
  Sep 27 15:41:32.318: INFO: Got endpoints: latency-svc-q76dq [788.61657ms]
  Sep 27 15:41:32.323: INFO: Created: latency-svc-bx89k
  Sep 27 15:41:32.331: INFO: Got endpoints: latency-svc-ztntf [727.803815ms]
  Sep 27 15:41:32.335: INFO: Created: latency-svc-tcwwr
  Sep 27 15:41:32.347: INFO: Created: latency-svc-pwjp6
  Sep 27 15:41:32.381: INFO: Got endpoints: latency-svc-jplkd [751.545861ms]
  Sep 27 15:41:32.413: INFO: Created: latency-svc-bthss
  Sep 27 15:41:32.433: INFO: Got endpoints: latency-svc-2xg9l [751.955906ms]
  Sep 27 15:41:32.481: INFO: Got endpoints: latency-svc-xlvrk [724.674233ms]
  Sep 27 15:41:32.482: INFO: Created: latency-svc-wdrxm
  Sep 27 15:41:32.494: INFO: Created: latency-svc-42k4h
  Sep 27 15:41:32.533: INFO: Got endpoints: latency-svc-shr7s [730.1238ms]
  Sep 27 15:41:32.548: INFO: Created: latency-svc-d8p9c
  Sep 27 15:41:32.635: INFO: Got endpoints: latency-svc-twl4l [719.595817ms]
  Sep 27 15:41:32.636: INFO: Got endpoints: latency-svc-6bhqs [807.793396ms]
  Sep 27 15:41:32.649: INFO: Created: latency-svc-crdlb
  Sep 27 15:41:32.702: INFO: Got endpoints: latency-svc-tzs29 [770.296367ms]
  Sep 27 15:41:32.703: INFO: Created: latency-svc-dmvg7
  Sep 27 15:41:32.718: INFO: Created: latency-svc-gx658
  Sep 27 15:41:32.746: INFO: Got endpoints: latency-svc-9sjj8 [767.24287ms]
  Sep 27 15:41:32.762: INFO: Created: latency-svc-xxkmm
  Sep 27 15:41:32.779: INFO: Got endpoints: latency-svc-ggl29 [739.054234ms]
  E0927 15:41:32.786841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:32.793: INFO: Created: latency-svc-qptwj
  Sep 27 15:41:32.828: INFO: Got endpoints: latency-svc-l9mpx [739.000892ms]
  Sep 27 15:41:32.902: INFO: Got endpoints: latency-svc-7md9z [772.604742ms]
  Sep 27 15:41:32.903: INFO: Created: latency-svc-g5bln
  Sep 27 15:41:32.916: INFO: Created: latency-svc-mvdkb
  Sep 27 15:41:32.928: INFO: Got endpoints: latency-svc-mkq7q [693.032571ms]
  Sep 27 15:41:32.945: INFO: Created: latency-svc-2sxt6
  Sep 27 15:41:33.022: INFO: Got endpoints: latency-svc-bx89k [786.218981ms]
  Sep 27 15:41:33.035: INFO: Got endpoints: latency-svc-tcwwr [716.693984ms]
  Sep 27 15:41:33.039: INFO: Created: latency-svc-5km7v
  Sep 27 15:41:33.082: INFO: Got endpoints: latency-svc-pwjp6 [750.923724ms]
  Sep 27 15:41:33.084: INFO: Created: latency-svc-qdpr4
  Sep 27 15:41:33.110: INFO: Created: latency-svc-f64tk
  Sep 27 15:41:33.131: INFO: Got endpoints: latency-svc-bthss [750.174771ms]
  Sep 27 15:41:33.146: INFO: Created: latency-svc-7bpp7
  Sep 27 15:41:33.181: INFO: Got endpoints: latency-svc-wdrxm [748.066081ms]
  Sep 27 15:41:33.192: INFO: Created: latency-svc-r2p2d
  Sep 27 15:41:33.276: INFO: Got endpoints: latency-svc-42k4h [795.619845ms]
  Sep 27 15:41:33.278: INFO: Got endpoints: latency-svc-d8p9c [744.846441ms]
  Sep 27 15:41:33.319: INFO: Created: latency-svc-xr8mk
  Sep 27 15:41:33.325: INFO: Created: latency-svc-wr7v2
  Sep 27 15:41:33.332: INFO: Got endpoints: latency-svc-crdlb [696.962381ms]
  Sep 27 15:41:33.345: INFO: Created: latency-svc-r6fw8
  Sep 27 15:41:33.427: INFO: Got endpoints: latency-svc-dmvg7 [790.973737ms]
  Sep 27 15:41:33.429: INFO: Got endpoints: latency-svc-gx658 [727.060032ms]
  Sep 27 15:41:33.440: INFO: Created: latency-svc-stwjh
  Sep 27 15:41:33.490: INFO: Got endpoints: latency-svc-xxkmm [744.549302ms]
  Sep 27 15:41:33.491: INFO: Created: latency-svc-m97ls
  Sep 27 15:41:33.504: INFO: Created: latency-svc-k2hbd
  Sep 27 15:41:33.540: INFO: Got endpoints: latency-svc-qptwj [760.636464ms]
  Sep 27 15:41:33.552: INFO: Created: latency-svc-hv6b9
  Sep 27 15:41:33.581: INFO: Got endpoints: latency-svc-g5bln [752.328584ms]
  Sep 27 15:41:33.593: INFO: Created: latency-svc-66pfv
  Sep 27 15:41:33.679: INFO: Got endpoints: latency-svc-mvdkb [776.671984ms]
  Sep 27 15:41:33.679: INFO: Got endpoints: latency-svc-2sxt6 [750.425909ms]
  Sep 27 15:41:33.720: INFO: Created: latency-svc-lw4tj
  Sep 27 15:41:33.734: INFO: Got endpoints: latency-svc-5km7v [711.94442ms]
  Sep 27 15:41:33.737: INFO: Created: latency-svc-jlhh2
  Sep 27 15:41:33.750: INFO: Created: latency-svc-rsqjf
  E0927 15:41:33.786900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:33.824: INFO: Got endpoints: latency-svc-qdpr4 [789.302665ms]
  Sep 27 15:41:33.829: INFO: Got endpoints: latency-svc-f64tk [746.906057ms]
  Sep 27 15:41:33.850: INFO: Created: latency-svc-vb94p
  Sep 27 15:41:33.892: INFO: Got endpoints: latency-svc-7bpp7 [760.31237ms]
  Sep 27 15:41:33.893: INFO: Created: latency-svc-tfff5
  Sep 27 15:41:33.905: INFO: Created: latency-svc-qhvtl
  Sep 27 15:41:33.937: INFO: Got endpoints: latency-svc-r2p2d [756.068745ms]
  Sep 27 15:41:33.954: INFO: Created: latency-svc-bnglp
  Sep 27 15:41:33.980: INFO: Got endpoints: latency-svc-xr8mk [703.347518ms]
  Sep 27 15:41:33.993: INFO: Created: latency-svc-srktq
  Sep 27 15:41:34.029: INFO: Got endpoints: latency-svc-wr7v2 [750.334842ms]
  Sep 27 15:41:34.154: INFO: Got endpoints: latency-svc-stwjh [725.951039ms]
  Sep 27 15:41:34.154: INFO: Got endpoints: latency-svc-r6fw8 [821.376391ms]
  Sep 27 15:41:34.155: INFO: Created: latency-svc-2r8gm
  Sep 27 15:41:34.172: INFO: Created: latency-svc-xwx4p
  Sep 27 15:41:34.180: INFO: Got endpoints: latency-svc-m97ls [750.340519ms]
  Sep 27 15:41:34.185: INFO: Created: latency-svc-r8kfl
  Sep 27 15:41:34.194: INFO: Created: latency-svc-v47dn
  Sep 27 15:41:34.232: INFO: Got endpoints: latency-svc-k2hbd [742.156127ms]
  Sep 27 15:41:34.328: INFO: Got endpoints: latency-svc-hv6b9 [787.360761ms]
  Sep 27 15:41:34.331: INFO: Got endpoints: latency-svc-66pfv [749.828894ms]
  Sep 27 15:41:34.333: INFO: Created: latency-svc-w6bt7
  Sep 27 15:41:34.342: INFO: Created: latency-svc-shlmq
  Sep 27 15:41:34.354: INFO: Created: latency-svc-6vkwn
  Sep 27 15:41:34.378: INFO: Got endpoints: latency-svc-lw4tj [699.006621ms]
  Sep 27 15:41:34.489: INFO: Got endpoints: latency-svc-rsqjf [754.918859ms]
  Sep 27 15:41:34.489: INFO: Got endpoints: latency-svc-jlhh2 [810.47475ms]
  Sep 27 15:41:34.529: INFO: Got endpoints: latency-svc-vb94p [704.076604ms]
  Sep 27 15:41:34.580: INFO: Got endpoints: latency-svc-tfff5 [750.923006ms]
  Sep 27 15:41:34.632: INFO: Got endpoints: latency-svc-qhvtl [740.282337ms]
  Sep 27 15:41:34.679: INFO: Got endpoints: latency-svc-bnglp [741.342176ms]
  Sep 27 15:41:34.733: INFO: Got endpoints: latency-svc-srktq [752.902236ms]
  Sep 27 15:41:34.783: INFO: Got endpoints: latency-svc-2r8gm [754.412348ms]
  E0927 15:41:34.787755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:34.836: INFO: Got endpoints: latency-svc-xwx4p [682.007536ms]
  Sep 27 15:41:34.884: INFO: Got endpoints: latency-svc-r8kfl [729.715649ms]
  Sep 27 15:41:34.930: INFO: Got endpoints: latency-svc-v47dn [749.53126ms]
  Sep 27 15:41:34.981: INFO: Got endpoints: latency-svc-w6bt7 [748.607277ms]
  Sep 27 15:41:35.029: INFO: Got endpoints: latency-svc-shlmq [701.223774ms]
  Sep 27 15:41:35.078: INFO: Got endpoints: latency-svc-6vkwn [747.278163ms]
  Sep 27 15:41:35.078: INFO: Latencies: [77.958613ms 85.219766ms 94.511446ms 103.827935ms 175.32093ms 183.890441ms 198.055745ms 209.418061ms 224.035152ms 227.586122ms 264.222485ms 318.020732ms 324.21181ms 326.329851ms 331.360368ms 335.380688ms 347.211019ms 354.492948ms 358.144991ms 366.852664ms 366.984006ms 367.430452ms 383.198714ms 385.979078ms 386.951714ms 387.044276ms 388.934987ms 390.298421ms 390.986387ms 393.030607ms 394.798867ms 396.206957ms 396.581757ms 412.050677ms 414.090998ms 415.481572ms 415.605275ms 418.101888ms 419.545527ms 428.900418ms 432.157645ms 432.723151ms 437.105976ms 442.657621ms 447.22763ms 449.089601ms 449.653696ms 450.047627ms 450.249586ms 452.82396ms 453.325388ms 453.87812ms 453.914831ms 457.128326ms 462.269102ms 463.828159ms 463.864888ms 467.629695ms 472.300762ms 483.672477ms 485.480497ms 491.577318ms 496.645311ms 498.631932ms 504.830786ms 506.144489ms 512.888102ms 516.200155ms 516.275465ms 522.753708ms 529.9807ms 543.603466ms 564.391809ms 586.188238ms 597.616513ms 662.074969ms 666.629133ms 682.007536ms 686.554581ms 688.466415ms 689.596256ms 693.032571ms 695.265527ms 695.650931ms 696.962381ms 699.006621ms 701.223774ms 703.347518ms 704.076604ms 706.542931ms 711.260939ms 711.847987ms 711.94442ms 714.405553ms 714.735145ms 716.693984ms 717.345034ms 719.595817ms 722.33951ms 724.674233ms 725.150512ms 725.907443ms 725.951039ms 727.060032ms 727.803815ms 729.715649ms 730.1238ms 732.973798ms 734.396132ms 735.836314ms 736.65742ms 739.000892ms 739.054234ms 740.282337ms 741.342176ms 742.156127ms 743.96038ms 744.549302ms 744.846441ms 744.97236ms 746.790025ms 746.861962ms 746.906057ms 747.278163ms 747.549201ms 747.76325ms 747.810975ms 748.0138ms 748.035883ms 748.066081ms 748.425715ms 748.607277ms 748.681746ms 748.770923ms 749.175065ms 749.53126ms 749.828894ms 749.970934ms 750.146758ms 750.174771ms 750.334842ms 750.340519ms 750.425909ms 750.54747ms 750.655165ms 750.748525ms 750.894321ms 750.923006ms 750.923724ms 751.105014ms 751.545861ms 751.87086ms 751.921067ms 751.955906ms 752.328584ms 752.33811ms 752.499048ms 752.520033ms 752.730974ms 752.851478ms 752.902236ms 753.126908ms 753.141671ms 754.412348ms 754.448397ms 754.918859ms 756.068745ms 757.826581ms 758.114987ms 758.568428ms 760.31237ms 760.636464ms 761.927136ms 762.463254ms 764.539779ms 764.797333ms 767.24287ms 767.702844ms 767.905775ms 769.064307ms 770.162553ms 770.296367ms 771.555089ms 772.604742ms 772.621779ms 776.671984ms 786.218981ms 786.924576ms 787.360761ms 788.018241ms 788.61657ms 789.302665ms 790.973737ms 795.619845ms 799.971491ms 804.151999ms 807.793396ms 810.47475ms 821.376391ms 823.824188ms]
  Sep 27 15:41:35.079: INFO: 50 %ile: 725.150512ms
  Sep 27 15:41:35.079: INFO: 90 %ile: 770.162553ms
  Sep 27 15:41:35.079: INFO: 99 %ile: 821.376391ms
  Sep 27 15:41:35.079: INFO: Total sample count: 200
  Sep 27 15:41:35.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7307" for this suite. @ 09/27/23 15:41:35.084
• [10.748 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 09/27/23 15:41:35.089
  Sep 27 15:41:35.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:41:35.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:35.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:35.102
  Sep 27 15:41:35.104: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:41:35.787914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/27/23 15:41:36.353
  Sep 27 15:41:36.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-541 --namespace=crd-publish-openapi-541 create -f -'
  E0927 15:41:36.788352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:37.788461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:38.788700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:38.839: INFO: stderr: ""
  Sep 27 15:41:38.839: INFO: stdout: "e2e-test-crd-publish-openapi-5759-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 27 15:41:38.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-541 --namespace=crd-publish-openapi-541 delete e2e-test-crd-publish-openapi-5759-crds test-cr'
  Sep 27 15:41:38.904: INFO: stderr: ""
  Sep 27 15:41:38.904: INFO: stdout: "e2e-test-crd-publish-openapi-5759-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Sep 27 15:41:38.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-541 --namespace=crd-publish-openapi-541 apply -f -'
  Sep 27 15:41:39.073: INFO: stderr: ""
  Sep 27 15:41:39.073: INFO: stdout: "e2e-test-crd-publish-openapi-5759-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 27 15:41:39.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-541 --namespace=crd-publish-openapi-541 delete e2e-test-crd-publish-openapi-5759-crds test-cr'
  Sep 27 15:41:39.138: INFO: stderr: ""
  Sep 27 15:41:39.138: INFO: stdout: "e2e-test-crd-publish-openapi-5759-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/27/23 15:41:39.138
  Sep 27 15:41:39.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=crd-publish-openapi-541 explain e2e-test-crd-publish-openapi-5759-crds'
  Sep 27 15:41:39.328: INFO: stderr: ""
  Sep 27 15:41:39.328: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5759-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0927 15:41:39.789397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:40.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-541" for this suite. @ 09/27/23 15:41:40.654
• [5.571 seconds]
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 09/27/23 15:41:40.66
  Sep 27 15:41:40.661: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename limitrange @ 09/27/23 15:41:40.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:40.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:40.676
  STEP: Creating a LimitRange @ 09/27/23 15:41:40.68
  STEP: Setting up watch @ 09/27/23 15:41:40.68
  E0927 15:41:40.790288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Submitting a LimitRange @ 09/27/23 15:41:40.824
  STEP: Verifying LimitRange creation was observed @ 09/27/23 15:41:40.95
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/27/23 15:41:40.95
  Sep 27 15:41:40.953: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 27 15:41:40.953: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/27/23 15:41:40.953
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/27/23 15:41:40.964
  Sep 27 15:41:40.967: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 27 15:41:40.967: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/27/23 15:41:40.967
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/27/23 15:41:40.975
  Sep 27 15:41:40.977: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Sep 27 15:41:40.978: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/27/23 15:41:40.978
  STEP: Failing to create a Pod with more than max resources @ 09/27/23 15:41:40.979
  STEP: Updating a LimitRange @ 09/27/23 15:41:40.981
  STEP: Verifying LimitRange updating is effective @ 09/27/23 15:41:41.035
  E0927 15:41:41.791072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:42.791348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/27/23 15:41:43.068
  STEP: Failing to create a Pod with more than max resources @ 09/27/23 15:41:43.076
  STEP: Deleting a LimitRange @ 09/27/23 15:41:43.078
  STEP: Verifying the LimitRange was deleted @ 09/27/23 15:41:43.092
  E0927 15:41:43.791453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:44.791668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:45.792118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:46.792700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:47.793685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:48.095: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/27/23 15:41:48.095
  Sep 27 15:41:48.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5908" for this suite. @ 09/27/23 15:41:48.107
• [7.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 09/27/23 15:41:48.117
  Sep 27 15:41:48.117: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:41:48.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:48.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:48.131
  Sep 27 15:41:48.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:41:48.794084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:49.794663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0927 15:41:50.673658      22 warnings.go:70] unknown field "alpha"
  W0927 15:41:50.673685      22 warnings.go:70] unknown field "beta"
  W0927 15:41:50.673693      22 warnings.go:70] unknown field "delta"
  W0927 15:41:50.673702      22 warnings.go:70] unknown field "epsilon"
  W0927 15:41:50.673709      22 warnings.go:70] unknown field "gamma"
  E0927 15:41:50.795599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:51.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6717" for this suite. @ 09/27/23 15:41:51.207
• [3.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 09/27/23 15:41:51.212
  Sep 27 15:41:51.212: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:41:51.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:51.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:51.227
  Sep 27 15:41:51.230: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:41:51.796535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:52.796619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0927 15:41:53.786331      22 warnings.go:70] unknown field "alpha"
  W0927 15:41:53.786364      22 warnings.go:70] unknown field "beta"
  W0927 15:41:53.786373      22 warnings.go:70] unknown field "delta"
  W0927 15:41:53.786380      22 warnings.go:70] unknown field "epsilon"
  W0927 15:41:53.786387      22 warnings.go:70] unknown field "gamma"
  E0927 15:41:53.796789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:41:54.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9093" for this suite. @ 09/27/23 15:41:54.318
• [3.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 09/27/23 15:41:54.326
  Sep 27 15:41:54.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:41:54.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:54.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:54.342
  STEP: Creating a ResourceQuota @ 09/27/23 15:41:54.344
  STEP: Getting a ResourceQuota @ 09/27/23 15:41:54.348
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/27/23 15:41:54.349
  STEP: Patching the ResourceQuota @ 09/27/23 15:41:54.352
  STEP: Deleting a Collection of ResourceQuotas @ 09/27/23 15:41:54.358
  STEP: Verifying the deleted ResourceQuota @ 09/27/23 15:41:54.364
  Sep 27 15:41:54.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5685" for this suite. @ 09/27/23 15:41:54.368
• [0.047 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 09/27/23 15:41:54.373
  Sep 27 15:41:54.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/27/23 15:41:54.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:54.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:54.386
  STEP: create the container to handle the HTTPGet hook request. @ 09/27/23 15:41:54.391
  E0927 15:41:54.797109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:55.797781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/27/23 15:41:56.409
  E0927 15:41:56.797877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:57.798012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/27/23 15:41:58.419
  E0927 15:41:58.799015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:41:59.799645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/27/23 15:42:00.431
  Sep 27 15:42:00.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6242" for this suite. @ 09/27/23 15:42:00.438
• [6.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 09/27/23 15:42:00.445
  Sep 27 15:42:00.445: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 15:42:00.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:42:00.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:42:00.458
  STEP: creating service in namespace services-7932 @ 09/27/23 15:42:00.461
  STEP: creating service affinity-nodeport-transition in namespace services-7932 @ 09/27/23 15:42:00.461
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7932 @ 09/27/23 15:42:00.475
  I0927 15:42:00.480225      22 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-7932, replica count: 3
  E0927 15:42:00.800364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:01.800763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:02.800842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0927 15:42:03.530795      22 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 15:42:03.536: INFO: Creating new exec pod
  E0927 15:42:03.801588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:04.802151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:05.802677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:42:06.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7932 exec execpod-affinity5qgqk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Sep 27 15:42:06.714: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Sep 27 15:42:06.714: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:42:06.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7932 exec execpod-affinity5qgqk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.220.230 80'
  E0927 15:42:06.803403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:42:06.858: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.220.230 80\nConnection to 10.105.220.230 80 port [tcp/http] succeeded!\n"
  Sep 27 15:42:06.858: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:42:06.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7932 exec execpod-affinity5qgqk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.53.207 31436'
  Sep 27 15:42:07.017: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.53.207 31436\nConnection to 10.0.53.207 31436 port [tcp/*] succeeded!\n"
  Sep 27 15:42:07.017: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:42:07.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7932 exec execpod-affinity5qgqk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.51.64 31436'
  Sep 27 15:42:07.174: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.51.64 31436\nConnection to 10.0.51.64 31436 port [tcp/*] succeeded!\n"
  Sep 27 15:42:07.174: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:42:07.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7932 exec execpod-affinity5qgqk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.53.207:31436/ ; done'
  Sep 27 15:42:07.405: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n"
  Sep 27 15:42:07.405: INFO: stdout: "\naffinity-nodeport-transition-x7nl6\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-x7nl6\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-wbm7x\naffinity-nodeport-transition-x7nl6\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-x7nl6\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-x7nl6\naffinity-nodeport-transition-wbm7x\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-wbm7x\naffinity-nodeport-transition-wbm7x\naffinity-nodeport-transition-x7nl6"
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-x7nl6
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-x7nl6
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-wbm7x
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-x7nl6
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-x7nl6
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-x7nl6
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-wbm7x
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-wbm7x
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-wbm7x
  Sep 27 15:42:07.405: INFO: Received response from host: affinity-nodeport-transition-x7nl6
  Sep 27 15:42:07.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-7932 exec execpod-affinity5qgqk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.53.207:31436/ ; done'
  Sep 27 15:42:07.624: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.53.207:31436/\n"
  Sep 27 15:42:07.624: INFO: stdout: "\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz\naffinity-nodeport-transition-4jwmz"
  Sep 27 15:42:07.624: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.624: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Received response from host: affinity-nodeport-transition-4jwmz
  Sep 27 15:42:07.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:42:07.627: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7932, will wait for the garbage collector to delete the pods @ 09/27/23 15:42:07.642
  Sep 27 15:42:07.702: INFO: Deleting ReplicationController affinity-nodeport-transition took: 4.377403ms
  Sep 27 15:42:07.803: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.147439ms
  E0927 15:42:07.803401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:08.804014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:09.804557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:10.805247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7932" for this suite. @ 09/27/23 15:42:10.922
• [10.486 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 09/27/23 15:42:10.932
  Sep 27 15:42:10.932: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 15:42:10.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:42:10.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:42:10.944
  STEP: creating service multi-endpoint-test in namespace services-5848 @ 09/27/23 15:42:10.949
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5848 to expose endpoints map[] @ 09/27/23 15:42:10.999
  Sep 27 15:42:11.001: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0927 15:42:11.805548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:42:12.007: INFO: successfully validated that service multi-endpoint-test in namespace services-5848 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5848 @ 09/27/23 15:42:12.007
  E0927 15:42:12.805623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:13.805859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5848 to expose endpoints map[pod1:[100]] @ 09/27/23 15:42:14.022
  Sep 27 15:42:14.027: INFO: successfully validated that service multi-endpoint-test in namespace services-5848 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5848 @ 09/27/23 15:42:14.027
  E0927 15:42:14.806412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:15.806665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5848 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/27/23 15:42:16.038
  Sep 27 15:42:16.047: INFO: successfully validated that service multi-endpoint-test in namespace services-5848 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/27/23 15:42:16.047
  Sep 27 15:42:16.047: INFO: Creating new exec pod
  E0927 15:42:16.806748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:17.806969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:18.807572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:42:19.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5848 exec execpod2rbh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Sep 27 15:42:19.208: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Sep 27 15:42:19.208: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:42:19.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5848 exec execpod2rbh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.37.7 80'
  Sep 27 15:42:19.355: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.37.7 80\nConnection to 10.99.37.7 80 port [tcp/http] succeeded!\n"
  Sep 27 15:42:19.355: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:42:19.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5848 exec execpod2rbh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Sep 27 15:42:19.497: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Sep 27 15:42:19.497: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:42:19.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=services-5848 exec execpod2rbh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.37.7 81'
  Sep 27 15:42:19.631: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.37.7 81\nConnection to 10.99.37.7 81 port [tcp/*] succeeded!\n"
  Sep 27 15:42:19.631: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5848 @ 09/27/23 15:42:19.631
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5848 to expose endpoints map[pod2:[101]] @ 09/27/23 15:42:19.642
  Sep 27 15:42:19.653: INFO: successfully validated that service multi-endpoint-test in namespace services-5848 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5848 @ 09/27/23 15:42:19.653
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5848 to expose endpoints map[] @ 09/27/23 15:42:19.662
  Sep 27 15:42:19.671: INFO: successfully validated that service multi-endpoint-test in namespace services-5848 exposes endpoints map[]
  Sep 27 15:42:19.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5848" for this suite. @ 09/27/23 15:42:19.689
• [8.766 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 09/27/23 15:42:19.698
  Sep 27 15:42:19.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename dns @ 09/27/23 15:42:19.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:42:19.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:42:19.713
  STEP: Creating a test headless service @ 09/27/23 15:42:19.715
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7922.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7922.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local;sleep 1; done
   @ 09/27/23 15:42:19.719
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7922.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7922.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local;sleep 1; done
   @ 09/27/23 15:42:19.719
  STEP: creating a pod to probe DNS @ 09/27/23 15:42:19.719
  STEP: submitting the pod to kubernetes @ 09/27/23 15:42:19.719
  E0927 15:42:19.808113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:20.808521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/27/23 15:42:21.733
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:42:21.735
  Sep 27 15:42:21.740: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:21.743: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:21.745: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:21.747: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:21.750: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:21.752: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:21.755: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:21.757: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:21.757: INFO: Lookups using dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local]

  Sep 27 15:42:21.762: INFO: Pod client logs for webserver: 
  Sep 27 15:42:21.766: INFO: Pod client logs for querier: 
  Sep 27 15:42:21.770: INFO: Pod client logs for jessie-querier: 
  E0927 15:42:21.809108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:22.809364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:23.809610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:24.810068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:25.810194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:42:26.774: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:26.777: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:26.779: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:26.782: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:26.784: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:26.787: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:26.789: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:26.792: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:26.792: INFO: Lookups using dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local]

  Sep 27 15:42:26.797: INFO: Pod client logs for webserver: 
  Sep 27 15:42:26.801: INFO: Pod client logs for querier: 
  Sep 27 15:42:26.806: INFO: Pod client logs for jessie-querier: 
  E0927 15:42:26.810414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:27.810637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:28.810888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:29.811588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:30.811923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:42:31.775: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:31.778: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:31.780: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:31.783: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:31.785: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:31.788: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:31.790: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:31.793: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:31.793: INFO: Lookups using dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local]

  Sep 27 15:42:31.798: INFO: Pod client logs for webserver: 
  Sep 27 15:42:31.802: INFO: Pod client logs for querier: 
  Sep 27 15:42:31.806: INFO: Pod client logs for jessie-querier: 
  E0927 15:42:31.812515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:32.812919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:33.813154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:34.813576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:35.813757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:42:36.774: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:36.777: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:36.779: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:36.782: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:36.784: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:36.786: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:36.789: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:36.791: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:36.791: INFO: Lookups using dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local]

  Sep 27 15:42:36.796: INFO: Pod client logs for webserver: 
  Sep 27 15:42:36.800: INFO: Pod client logs for querier: 
  Sep 27 15:42:36.804: INFO: Pod client logs for jessie-querier: 
  E0927 15:42:36.813973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:37.814211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:38.814484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:39.815059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:40.815238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:42:41.774: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:41.777: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:41.780: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:41.782: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:41.785: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:41.787: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:41.789: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:41.792: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:41.792: INFO: Lookups using dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local]

  Sep 27 15:42:41.796: INFO: Pod client logs for webserver: 
  Sep 27 15:42:41.801: INFO: Pod client logs for querier: 
  Sep 27 15:42:41.808: INFO: Pod client logs for jessie-querier: 
  E0927 15:42:41.815633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:42.815878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:43.816139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:44.816700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:45.816824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:42:46.774: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:46.777: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:46.779: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:46.781: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:46.784: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:46.786: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:46.789: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:46.791: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local from pod dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334: the server could not find the requested resource (get pods dns-test-f0540e79-3d10-4018-ae87-03057556b334)
  Sep 27 15:42:46.791: INFO: Lookups using dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7922.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7922.svc.cluster.local jessie_udp@dns-test-service-2.dns-7922.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7922.svc.cluster.local]

  Sep 27 15:42:46.796: INFO: Pod client logs for webserver: 
  Sep 27 15:42:46.800: INFO: Pod client logs for querier: 
  Sep 27 15:42:46.804: INFO: Pod client logs for jessie-querier: 
  E0927 15:42:46.817587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:47.817861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:48.818147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:49.818961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:50.819216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:42:51.792: INFO: DNS probes using dns-7922/dns-test-f0540e79-3d10-4018-ae87-03057556b334 succeeded

  Sep 27 15:42:51.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:42:51.794
  STEP: deleting the test headless service @ 09/27/23 15:42:51.806
  E0927 15:42:51.819862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-7922" for this suite. @ 09/27/23 15:42:51.82
• [32.127 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 09/27/23 15:42:51.828
  Sep 27 15:42:51.828: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 15:42:51.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:42:51.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:42:51.842
  STEP: Creating service test in namespace statefulset-1454 @ 09/27/23 15:42:51.844
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/27/23 15:42:51.848
  STEP: Creating stateful set ss in namespace statefulset-1454 @ 09/27/23 15:42:51.85
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1454 @ 09/27/23 15:42:51.86
  Sep 27 15:42:51.862: INFO: Found 0 stateful pods, waiting for 1
  E0927 15:42:52.820397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:53.820445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:54.820889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:55.821181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:56.821315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:57.821527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:58.821737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:42:59.822554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:00.822820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:01.823050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:01.866: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/27/23 15:43:01.866
  Sep 27 15:43:01.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-1454 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 15:43:02.007: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 15:43:02.007: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 15:43:02.007: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 15:43:02.009: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0927 15:43:02.823272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:03.823568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:04.823999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:05.824255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:06.824418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:07.824687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:08.824822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:09.825405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:10.825734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:11.826030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:12.013: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 15:43:12.013: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 27 15:43:12.023: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999872s
  E0927 15:43:12.826133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:13.027: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997066201s
  E0927 15:43:13.826874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:14.030: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.99406491s
  E0927 15:43:14.827070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:15.033: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.991078721s
  E0927 15:43:15.828021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:16.035: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.988253819s
  E0927 15:43:16.828827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:17.038: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.985540036s
  E0927 15:43:17.829308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:18.041: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.982960144s
  E0927 15:43:18.829486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:19.044: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.979287418s
  E0927 15:43:19.829733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:20.047: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.976521069s
  E0927 15:43:20.830523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:21.050: INFO: Verifying statefulset ss doesn't scale past 1 for another 973.71088ms
  E0927 15:43:21.831376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1454 @ 09/27/23 15:43:22.05
  Sep 27 15:43:22.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-1454 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 15:43:22.215: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 15:43:22.215: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 15:43:22.215: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 15:43:22.218: INFO: Found 1 stateful pods, waiting for 3
  E0927 15:43:22.831519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:23.831913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:24.832916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:25.833152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:26.833399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:27.833637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:28.833885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:29.834555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:30.834798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:31.834927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:32.221: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 15:43:32.221: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 15:43:32.221: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/27/23 15:43:32.221
  STEP: Scale down will halt with unhealthy stateful pod @ 09/27/23 15:43:32.221
  Sep 27 15:43:32.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-1454 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 15:43:32.363: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 15:43:32.363: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 15:43:32.363: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 15:43:32.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-1454 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 15:43:32.536: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 15:43:32.537: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 15:43:32.537: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 15:43:32.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-1454 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 15:43:32.686: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 15:43:32.686: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 15:43:32.686: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 15:43:32.686: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 27 15:43:32.688: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0927 15:43:32.835621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:33.835698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:34.836751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:35.836865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:36.837253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:37.837631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:38.838176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:39.838368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:40.838634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:41.838784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:42.693: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 15:43:42.693: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 15:43:42.693: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 15:43:42.702: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999998829s
  E0927 15:43:42.839622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:43.705: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997217516s
  E0927 15:43:43.840636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:44.708: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993913832s
  E0927 15:43:44.840970      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:45.711: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.990899283s
  E0927 15:43:45.841948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:46.715: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.987242724s
  E0927 15:43:46.842490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:47.718: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.984371892s
  E0927 15:43:47.843401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:48.721: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.981458522s
  E0927 15:43:48.844323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:49.724: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.978101181s
  E0927 15:43:49.844661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:50.727: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.975171856s
  E0927 15:43:50.845721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:51.730: INFO: Verifying statefulset ss doesn't scale past 3 for another 972.149113ms
  E0927 15:43:51.846481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1454 @ 09/27/23 15:43:52.731
  Sep 27 15:43:52.735: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-1454 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0927 15:43:52.846548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:43:52.882: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 15:43:52.883: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 15:43:52.883: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 15:43:52.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-1454 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 15:43:53.024: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 15:43:53.025: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 15:43:53.025: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 15:43:53.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-1454 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 15:43:53.183: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 15:43:53.183: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 15:43:53.183: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 15:43:53.183: INFO: Scaling statefulset ss to 0
  E0927 15:43:53.846613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:54.847534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:55.847585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:56.848118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:57.848331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:58.848513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:43:59.849115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:00.849400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:01.849533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:02.849757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/27/23 15:44:03.195
  Sep 27 15:44:03.195: INFO: Deleting all statefulset in ns statefulset-1454
  Sep 27 15:44:03.196: INFO: Scaling statefulset ss to 0
  Sep 27 15:44:03.202: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 15:44:03.204: INFO: Deleting statefulset ss
  Sep 27 15:44:03.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1454" for this suite. @ 09/27/23 15:44:03.214
• [71.392 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 09/27/23 15:44:03.22
  Sep 27 15:44:03.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename sched-preemption @ 09/27/23 15:44:03.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:44:03.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:44:03.238
  Sep 27 15:44:03.251: INFO: Waiting up to 1m0s for all nodes to be ready
  E0927 15:44:03.850668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:04.851326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:05.851454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:06.851655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:07.851661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:08.852755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:09.853785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:10.853879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:11.854314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:12.854419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:13.854973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:14.855412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:15.855669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:16.856766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:17.857042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:18.857746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:19.858521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:20.858722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:21.859569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:22.859831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:23.860901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:24.861384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:25.861552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:26.861799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:27.862123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:28.862558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:29.863182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:30.863440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:31.863763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:32.864709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:33.865738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:34.865964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:35.866570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:36.866847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:37.867423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:38.868040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:39.868576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:40.868827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:41.869160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:42.869409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:43.870263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:44.870369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:45.871222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:46.871350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:47.871731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:48.872394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:49.873077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:50.873334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:51.873793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:52.874014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:53.874602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:54.874832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:55.875645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:56.875884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:57.876032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:58.876374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:44:59.876681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:00.877133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:01.877305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:02.877715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:03.265: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/27/23 15:45:03.267
  Sep 27 15:45:03.285: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 27 15:45:03.289: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 27 15:45:03.307: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 27 15:45:03.315: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/27/23 15:45:03.315
  E0927 15:45:03.878041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:04.878306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/27/23 15:45:05.325
  E0927 15:45:05.878314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:06.879323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:07.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6078" for this suite. @ 09/27/23 15:45:07.363
• [64.147 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 09/27/23 15:45:07.367
  Sep 27 15:45:07.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:45:07.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:07.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:07.39
  STEP: creating a replication controller @ 09/27/23 15:45:07.393
  Sep 27 15:45:07.393: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 create -f -'
  E0927 15:45:07.880443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:07.887: INFO: stderr: ""
  Sep 27 15:45:07.887: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/27/23 15:45:07.887
  Sep 27 15:45:07.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:45:07.960: INFO: stderr: ""
  Sep 27 15:45:07.960: INFO: stdout: "update-demo-nautilus-6lw9t update-demo-nautilus-ktlhr "
  Sep 27 15:45:07.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-6lw9t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:45:08.025: INFO: stderr: ""
  Sep 27 15:45:08.025: INFO: stdout: ""
  Sep 27 15:45:08.025: INFO: update-demo-nautilus-6lw9t is created but not running
  E0927 15:45:08.881219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:09.881379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:10.881623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:11.882333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:12.882449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:13.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:45:13.089: INFO: stderr: ""
  Sep 27 15:45:13.089: INFO: stdout: "update-demo-nautilus-6lw9t update-demo-nautilus-ktlhr "
  Sep 27 15:45:13.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-6lw9t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:45:13.149: INFO: stderr: ""
  Sep 27 15:45:13.149: INFO: stdout: "true"
  Sep 27 15:45:13.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-6lw9t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:45:13.209: INFO: stderr: ""
  Sep 27 15:45:13.209: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:45:13.209: INFO: validating pod update-demo-nautilus-6lw9t
  Sep 27 15:45:13.214: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:45:13.214: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:45:13.214: INFO: update-demo-nautilus-6lw9t is verified up and running
  Sep 27 15:45:13.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-ktlhr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:45:13.290: INFO: stderr: ""
  Sep 27 15:45:13.290: INFO: stdout: "true"
  Sep 27 15:45:13.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-ktlhr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:45:13.353: INFO: stderr: ""
  Sep 27 15:45:13.353: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:45:13.353: INFO: validating pod update-demo-nautilus-ktlhr
  Sep 27 15:45:13.358: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:45:13.358: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:45:13.358: INFO: update-demo-nautilus-ktlhr is verified up and running
  STEP: scaling down the replication controller @ 09/27/23 15:45:13.359
  Sep 27 15:45:13.360: INFO: scanned /root for discovery docs: <nil>
  Sep 27 15:45:13.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0927 15:45:13.883232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:14.440: INFO: stderr: ""
  Sep 27 15:45:14.440: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/27/23 15:45:14.44
  Sep 27 15:45:14.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:45:14.501: INFO: stderr: ""
  Sep 27 15:45:14.501: INFO: stdout: "update-demo-nautilus-6lw9t "
  Sep 27 15:45:14.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-6lw9t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:45:14.562: INFO: stderr: ""
  Sep 27 15:45:14.562: INFO: stdout: "true"
  Sep 27 15:45:14.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-6lw9t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:45:14.622: INFO: stderr: ""
  Sep 27 15:45:14.622: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:45:14.622: INFO: validating pod update-demo-nautilus-6lw9t
  Sep 27 15:45:14.625: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:45:14.625: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:45:14.625: INFO: update-demo-nautilus-6lw9t is verified up and running
  STEP: scaling up the replication controller @ 09/27/23 15:45:14.625
  Sep 27 15:45:14.626: INFO: scanned /root for discovery docs: <nil>
  Sep 27 15:45:14.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0927 15:45:14.883404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:15.704: INFO: stderr: ""
  Sep 27 15:45:15.704: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/27/23 15:45:15.704
  Sep 27 15:45:15.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:45:15.767: INFO: stderr: ""
  Sep 27 15:45:15.767: INFO: stdout: "update-demo-nautilus-6lw9t update-demo-nautilus-gd4ml "
  Sep 27 15:45:15.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-6lw9t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:45:15.828: INFO: stderr: ""
  Sep 27 15:45:15.828: INFO: stdout: "true"
  Sep 27 15:45:15.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-6lw9t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0927 15:45:15.883637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:15.889: INFO: stderr: ""
  Sep 27 15:45:15.889: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:45:15.889: INFO: validating pod update-demo-nautilus-6lw9t
  Sep 27 15:45:15.892: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:45:15.892: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:45:15.892: INFO: update-demo-nautilus-6lw9t is verified up and running
  Sep 27 15:45:15.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-gd4ml -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:45:15.954: INFO: stderr: ""
  Sep 27 15:45:15.955: INFO: stdout: ""
  Sep 27 15:45:15.955: INFO: update-demo-nautilus-gd4ml is created but not running
  E0927 15:45:16.883979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:17.884235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:18.884804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:19.885057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:20.885142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:20.955: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:45:21.017: INFO: stderr: ""
  Sep 27 15:45:21.017: INFO: stdout: "update-demo-nautilus-6lw9t update-demo-nautilus-gd4ml "
  Sep 27 15:45:21.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-6lw9t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:45:21.079: INFO: stderr: ""
  Sep 27 15:45:21.079: INFO: stdout: "true"
  Sep 27 15:45:21.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-6lw9t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:45:21.138: INFO: stderr: ""
  Sep 27 15:45:21.138: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:45:21.138: INFO: validating pod update-demo-nautilus-6lw9t
  Sep 27 15:45:21.141: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:45:21.141: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:45:21.141: INFO: update-demo-nautilus-6lw9t is verified up and running
  Sep 27 15:45:21.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-gd4ml -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:45:21.200: INFO: stderr: ""
  Sep 27 15:45:21.200: INFO: stdout: "true"
  Sep 27 15:45:21.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods update-demo-nautilus-gd4ml -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:45:21.260: INFO: stderr: ""
  Sep 27 15:45:21.260: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:45:21.260: INFO: validating pod update-demo-nautilus-gd4ml
  Sep 27 15:45:21.265: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:45:21.265: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:45:21.265: INFO: update-demo-nautilus-gd4ml is verified up and running
  STEP: using delete to clean up resources @ 09/27/23 15:45:21.265
  Sep 27 15:45:21.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 delete --grace-period=0 --force -f -'
  Sep 27 15:45:21.327: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 15:45:21.327: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 27 15:45:21.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get rc,svc -l name=update-demo --no-headers'
  Sep 27 15:45:21.407: INFO: stderr: "No resources found in kubectl-890 namespace.\n"
  Sep 27 15:45:21.407: INFO: stdout: ""
  Sep 27 15:45:21.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-890 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 27 15:45:21.487: INFO: stderr: ""
  Sep 27 15:45:21.487: INFO: stdout: ""
  Sep 27 15:45:21.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-890" for this suite. @ 09/27/23 15:45:21.498
• [14.136 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/27/23 15:45:21.503
  Sep 27 15:45:21.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/27/23 15:45:21.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:21.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:21.521
  STEP: mirroring a new custom Endpoint @ 09/27/23 15:45:21.536
  Sep 27 15:45:21.548: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0927 15:45:21.885960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:22.886346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/27/23 15:45:23.551
  Sep 27 15:45:23.558: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0927 15:45:23.886584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:24.886831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 09/27/23 15:45:25.562
  Sep 27 15:45:25.567: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0927 15:45:25.886961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:26.887187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:27.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-7357" for this suite. @ 09/27/23 15:45:27.572
• [6.073 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 09/27/23 15:45:27.576
  Sep 27 15:45:27.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 15:45:27.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:27.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:27.589
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/27/23 15:45:27.591
  Sep 27 15:45:27.599: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0927 15:45:27.888237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:28.889087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:29.889251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:30.889516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:31.889648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:32.602: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 15:45:32.602
  STEP: getting scale subresource @ 09/27/23 15:45:32.602
  STEP: updating a scale subresource @ 09/27/23 15:45:32.604
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/27/23 15:45:32.614
  STEP: Patch a scale subresource @ 09/27/23 15:45:32.616
  Sep 27 15:45:32.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6494" for this suite. @ 09/27/23 15:45:32.64
• [5.084 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/27/23 15:45:32.661
  Sep 27 15:45:32.661: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename containers @ 09/27/23 15:45:32.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:32.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:32.691
  E0927 15:45:32.890213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:33.890636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:34.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2108" for this suite. @ 09/27/23 15:45:34.72
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 09/27/23 15:45:34.73
  Sep 27 15:45:34.731: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename services @ 09/27/23 15:45:34.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:34.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:34.76
  STEP: fetching services @ 09/27/23 15:45:34.793
  Sep 27 15:45:34.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5195" for this suite. @ 09/27/23 15:45:34.798
• [0.080 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 09/27/23 15:45:34.812
  Sep 27 15:45:34.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:45:34.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:34.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:34.831
  STEP: Setting up server cert @ 09/27/23 15:45:34.854
  E0927 15:45:34.891587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:45:35.249
  STEP: Deploying the webhook pod @ 09/27/23 15:45:35.255
  STEP: Wait for the deployment to be ready @ 09/27/23 15:45:35.27
  Sep 27 15:45:35.273: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 15:45:35.891653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:36.892213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:37.280: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:45:37.892745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:38.892963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:39.283: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:45:39.893053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:40.893281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:41.283: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:45:41.893819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:42.893980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:43.282: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:45:43.894608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:44.894800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:45.282: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 45, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 15:45:45.894956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:46.895116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 15:45:47.283
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:45:47.335
  E0927 15:45:47.896042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:45:48.336: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 27 15:45:48.340: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/27/23 15:45:48.848
  STEP: Creating a custom resource that should be denied by the webhook @ 09/27/23 15:45:48.865
  E0927 15:45:48.897119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:49.897686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/27/23 15:45:50.89
  STEP: Updating the custom resource with disallowed data should be denied @ 09/27/23 15:45:50.896
  E0927 15:45:50.898212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the custom resource should be denied @ 09/27/23 15:45:50.902
  STEP: Remove the offending key and value from the custom resource data @ 09/27/23 15:45:50.906
  STEP: Deleting the updated custom resource should be successful @ 09/27/23 15:45:50.913
  Sep 27 15:45:50.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1897" for this suite. @ 09/27/23 15:45:51.464
  STEP: Destroying namespace "webhook-markers-376" for this suite. @ 09/27/23 15:45:51.471
• [16.663 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/27/23 15:45:51.475
  Sep 27 15:45:51.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:45:51.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:51.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:51.487
  STEP: Creating configMap with name projected-configmap-test-volume-d4c6a2c4-fb7e-44f2-95ba-7eb1a76142d7 @ 09/27/23 15:45:51.49
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:45:51.493
  E0927 15:45:51.898399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:52.898633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:45:53.503
  Sep 27 15:45:53.505: INFO: Trying to get logs from node worker-1 pod pod-projected-configmaps-c1bd701c-518d-4822-80b5-e8ba853f83de container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:45:53.51
  Sep 27 15:45:53.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1462" for this suite. @ 09/27/23 15:45:53.524
• [2.053 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 09/27/23 15:45:53.529
  Sep 27 15:45:53.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:45:53.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:53.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:53.557
  STEP: Creating a ResourceQuota with best effort scope @ 09/27/23 15:45:53.56
  STEP: Ensuring ResourceQuota status is calculated @ 09/27/23 15:45:53.564
  E0927 15:45:53.899614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:54.899848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/27/23 15:45:55.568
  STEP: Ensuring ResourceQuota status is calculated @ 09/27/23 15:45:55.573
  E0927 15:45:55.900142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:56.900334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/27/23 15:45:57.576
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/27/23 15:45:57.584
  E0927 15:45:57.900397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:45:58.901264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/27/23 15:45:59.588
  E0927 15:45:59.902001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:00.902421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/27/23 15:46:01.591
  STEP: Ensuring resource quota status released the pod usage @ 09/27/23 15:46:01.6
  E0927 15:46:01.902738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:02.902996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/27/23 15:46:03.602
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/27/23 15:46:03.612
  E0927 15:46:03.903758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:04.903931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/27/23 15:46:05.615
  E0927 15:46:05.904624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:06.904874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/27/23 15:46:07.618
  STEP: Ensuring resource quota status released the pod usage @ 09/27/23 15:46:07.628
  E0927 15:46:07.904995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:08.905493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:09.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3083" for this suite. @ 09/27/23 15:46:09.634
• [16.111 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 09/27/23 15:46:09.641
  Sep 27 15:46:09.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 15:46:09.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:46:09.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:46:09.653
  STEP: Creating service test in namespace statefulset-7523 @ 09/27/23 15:46:09.656
  STEP: Creating stateful set ss in namespace statefulset-7523 @ 09/27/23 15:46:09.661
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7523 @ 09/27/23 15:46:09.666
  Sep 27 15:46:09.668: INFO: Found 0 stateful pods, waiting for 1
  E0927 15:46:09.906243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:10.906505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:11.906741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:12.906965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:13.907454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:14.907756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:15.908014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:16.908454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:17.908585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:18.909212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:19.672: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/27/23 15:46:19.672
  Sep 27 15:46:19.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-7523 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 15:46:19.819: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 15:46:19.819: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 15:46:19.819: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 15:46:19.822: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0927 15:46:19.909286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:20.909532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:21.909786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:22.909916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:23.910411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:24.910539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:25.910696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:26.910957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:27.911236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:28.911824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:29.825: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 15:46:29.825: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 27 15:46:29.836: INFO: POD   NODE      PHASE    GRACE  CONDITIONS
  Sep 27 15:46:29.836: INFO: ss-0  worker-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:09 +0000 UTC  }]
  Sep 27 15:46:29.836: INFO: 
  Sep 27 15:46:29.836: INFO: StatefulSet ss has not reached scale 3, at 1
  E0927 15:46:29.912575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:30.839: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997819531s
  E0927 15:46:30.913272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:31.842: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.994945083s
  E0927 15:46:31.913349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:32.845: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.991917716s
  E0927 15:46:32.914227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:33.848: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.988998106s
  E0927 15:46:33.914281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:34.852: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.985835914s
  E0927 15:46:34.914497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:35.855: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.981752256s
  E0927 15:46:35.915425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:36.858: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.978806409s
  E0927 15:46:36.916453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:37.861: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.975791743s
  E0927 15:46:37.917470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:38.864: INFO: Verifying statefulset ss doesn't scale past 3 for another 972.577039ms
  E0927 15:46:38.917713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7523 @ 09/27/23 15:46:39.865
  Sep 27 15:46:39.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-7523 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0927 15:46:39.918123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:40.016: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 15:46:40.016: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 15:46:40.016: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 15:46:40.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-7523 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 15:46:40.183: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 27 15:46:40.183: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 15:46:40.183: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 15:46:40.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-7523 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 15:46:40.334: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 27 15:46:40.334: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 15:46:40.334: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 15:46:40.336: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 15:46:40.336: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=false
  E0927 15:46:40.918922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:41.919187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:42.919344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:43.919637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:44.919855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:45.920016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:46.920716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:47.920922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:48.921502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:49.921682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:46:50.340: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 15:46:50.340: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 15:46:50.340: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/27/23 15:46:50.34
  Sep 27 15:46:50.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-7523 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 15:46:50.491: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 15:46:50.491: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 15:46:50.491: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 15:46:50.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-7523 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 15:46:50.642: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 15:46:50.642: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 15:46:50.642: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 15:46:50.642: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=statefulset-7523 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 15:46:50.797: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 15:46:50.797: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 15:46:50.797: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 15:46:50.797: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 27 15:46:50.799: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0927 15:46:50.922660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:51.922911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:52.923143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:53.923622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:54.924050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:55.924272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:56.924644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:57.924883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:58.925467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:46:59.925618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:00.804: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 15:47:00.804: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 15:47:00.804: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 15:47:00.813: INFO: POD   NODE      PHASE    GRACE  CONDITIONS
  Sep 27 15:47:00.813: INFO: ss-0  worker-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:09 +0000 UTC  }]
  Sep 27 15:47:00.813: INFO: ss-1  worker-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:29 +0000 UTC  }]
  Sep 27 15:47:00.813: INFO: ss-2  worker-0  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:46:29 +0000 UTC  }]
  Sep 27 15:47:00.813: INFO: 
  Sep 27 15:47:00.813: INFO: StatefulSet ss has not reached scale 0, at 3
  E0927 15:47:00.926517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:01.815: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.99733615s
  E0927 15:47:01.927200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:02.818: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.994293821s
  E0927 15:47:02.928156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:03.821: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.991511968s
  E0927 15:47:03.928469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:04.824: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.988420352s
  E0927 15:47:04.929160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:05.827: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.985540969s
  E0927 15:47:05.930032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:06.831: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.982291118s
  E0927 15:47:06.930888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:07.834: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.978972978s
  E0927 15:47:07.931473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:08.836: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.976364499s
  E0927 15:47:08.932524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:09.839: INFO: Verifying statefulset ss doesn't scale past 0 for another 973.363941ms
  E0927 15:47:09.933097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7523 @ 09/27/23 15:47:10.84
  Sep 27 15:47:10.842: INFO: Scaling statefulset ss to 0
  Sep 27 15:47:10.848: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 15:47:10.850: INFO: Deleting all statefulset in ns statefulset-7523
  Sep 27 15:47:10.852: INFO: Scaling statefulset ss to 0
  Sep 27 15:47:10.857: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 15:47:10.859: INFO: Deleting statefulset ss
  Sep 27 15:47:10.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7523" for this suite. @ 09/27/23 15:47:10.876
• [61.242 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 09/27/23 15:47:10.883
  Sep 27 15:47:10.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:47:10.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:10.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:10.895
  Sep 27 15:47:10.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-7159 create -f -'
  E0927 15:47:10.934068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:11.133: INFO: stderr: ""
  Sep 27 15:47:11.133: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Sep 27 15:47:11.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-7159 create -f -'
  Sep 27 15:47:11.336: INFO: stderr: ""
  Sep 27 15:47:11.336: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/27/23 15:47:11.336
  E0927 15:47:11.934850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:12.340: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:47:12.340: INFO: Found 0 / 1
  E0927 15:47:12.934948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:13.340: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:47:13.340: INFO: Found 1 / 1
  Sep 27 15:47:13.340: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 27 15:47:13.341: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:47:13.342: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 27 15:47:13.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-7159 describe pod agnhost-primary-ddmdm'
  Sep 27 15:47:13.407: INFO: stderr: ""
  Sep 27 15:47:13.407: INFO: stdout: "Name:             agnhost-primary-ddmdm\nNamespace:        kubectl-7159\nPriority:         0\nService Account:  default\nNode:             worker-1/10.0.51.64\nStart Time:       Wed, 27 Sep 2023 15:47:11 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.0.157\nIPs:\n  IP:           10.244.0.157\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://94cc2dc7558bf4fa96b3d6125e805ec6ff009d7c40e6bd06f06a6461f13371ab\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 27 Sep 2023 15:47:11 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-8c2hs (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-8c2hs:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-7159/agnhost-primary-ddmdm to worker-1\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Sep 27 15:47:13.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-7159 describe rc agnhost-primary'
  Sep 27 15:47:13.476: INFO: stderr: ""
  Sep 27 15:47:13.476: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7159\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-ddmdm\n"
  Sep 27 15:47:13.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-7159 describe service agnhost-primary'
  Sep 27 15:47:13.541: INFO: stderr: ""
  Sep 27 15:47:13.541: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-7159\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.109.110.72\nIPs:               10.109.110.72\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.0.157:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Sep 27 15:47:13.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-7159 describe node worker-0'
  Sep 27 15:47:13.620: INFO: stderr: ""
  Sep 27 15:47:13.620: INFO: stdout: "Name:               worker-0\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=worker-0\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 27 Sep 2023 14:08:08 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker-0\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 27 Sep 2023 15:47:03 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Wed, 27 Sep 2023 15:46:36 +0000   Wed, 27 Sep 2023 14:08:08 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Wed, 27 Sep 2023 15:46:36 +0000   Wed, 27 Sep 2023 14:08:08 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Wed, 27 Sep 2023 15:46:36 +0000   Wed, 27 Sep 2023 14:08:08 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Wed, 27 Sep 2023 15:46:36 +0000   Wed, 27 Sep 2023 14:08:27 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.0.53.207\n  Hostname:    worker-0\nCapacity:\n  cpu:                    4\n  ephemeral-storage:      50620216Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7604744Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    4\n  ephemeral-storage:      46651590989\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7502344Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 efb1173a803746f4811dc3f6d7b1695e\n  System UUID:                ec20d8ba-94cc-69f2-85c2-4ad2d14a814c\n  Boot ID:                    a422145e-d996-468b-aa93-c573455c19bd\n  Kernel Version:             6.2.0-1012-aws\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.6\n  Kubelet Version:            v1.28.2+k0s\n  Kube-Proxy Version:         v1.28.2+k0s\nPodCIDR:                      10.244.1.0/24\nPodCIDRs:                     10.244.1.0/24\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-85df575cdb-glg7x                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     98m\n  kube-system                 konnectivity-agent-lm7w4                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         99m\n  kube-system                 kube-proxy-x8hwg                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         99m\n  kube-system                 kube-router-2lqf8                                          250m (6%)     0 (0%)      16Mi (0%)        0 (0%)         99m\n  kube-system                 metrics-server-7556957bb7-ghxpt                            10m (0%)      0 (0%)      30M (0%)         0 (0%)         50m\n  sonobuoy                    sonobuoy-e2e-job-4b71ff61f1034ef7                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         98m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-b787ee2df2274f0e-rrrhb    0 (0%)        0 (0%)      0 (0%)           0 (0%)         98m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests        Limits\n  --------               --------        ------\n  cpu                    360m (9%)       0 (0%)\n  memory                 120177536 (1%)  170Mi (2%)\n  ephemeral-storage      0 (0%)          0 (0%)\n  hugepages-1Gi          0 (0%)          0 (0%)\n  hugepages-2Mi          0 (0%)          0 (0%)\n  scheduling.k8s.io/foo  0               0\nEvents:                  <none>\n"
  Sep 27 15:47:13.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3330785094 --namespace=kubectl-7159 describe namespace kubectl-7159'
  Sep 27 15:47:13.684: INFO: stderr: ""
  Sep 27 15:47:13.684: INFO: stdout: "Name:         kubectl-7159\nLabels:       e2e-framework=kubectl\n              e2e-run=e834fd57-3420-4fde-a8f4-ee0ee883c5e8\n              kubernetes.io/metadata.name=kubectl-7159\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Sep 27 15:47:13.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7159" for this suite. @ 09/27/23 15:47:13.686
• [2.808 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 09/27/23 15:47:13.692
  Sep 27 15:47:13.692: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:47:13.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:13.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:13.71
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/27/23 15:47:13.712
  E0927 15:47:13.935800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:14.936722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:47:15.726
  Sep 27 15:47:15.728: INFO: Trying to get logs from node worker-1 pod pod-c06d09b1-0d07-4750-89e3-3e3593213d53 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:47:15.735
  Sep 27 15:47:15.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2236" for this suite. @ 09/27/23 15:47:15.745
• [2.059 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/27/23 15:47:15.751
  Sep 27 15:47:15.751: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:47:15.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:15.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:15.765
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:47:15.768
  E0927 15:47:15.936885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:16.937164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:47:17.778
  Sep 27 15:47:17.779: INFO: Trying to get logs from node worker-0 pod downwardapi-volume-d6aa4a19-ed5d-4b98-a4bb-6a09d0c2b223 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:47:17.793
  Sep 27 15:47:17.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4804" for this suite. @ 09/27/23 15:47:17.804
• [2.058 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/27/23 15:47:17.819
  Sep 27 15:47:17.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename kubelet-test @ 09/27/23 15:47:17.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:17.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:17.831
  E0927 15:47:17.937809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:18.938455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:47:19.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3378" for this suite. @ 09/27/23 15:47:19.855
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/27/23 15:47:19.861
  Sep 27 15:47:19.861: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename crd-watch @ 09/27/23 15:47:19.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:19.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:19.874
  Sep 27 15:47:19.877: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  E0927 15:47:19.938781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:20.938849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:21.939049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/27/23 15:47:22.408
  Sep 27 15:47:22.414: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:47:22Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:47:22Z]] name:name1 resourceVersion:33925 uid:29d5dea1-7f56-480b-a025-683ee46504d5] num:map[num1:9223372036854775807 num2:1000000]]}
  E0927 15:47:22.940130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:23.940606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:24.940824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:25.941037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:26.941372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:27.941717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:28.942267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:29.942491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:30.942719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:31.942984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/27/23 15:47:32.414
  Sep 27 15:47:32.419: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:47:32Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:47:32Z]] name:name2 resourceVersion:33964 uid:2eafcef2-b909-45b3-a91f-a271360d2838] num:map[num1:9223372036854775807 num2:1000000]]}
  E0927 15:47:32.943172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:33.943662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:34.943759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:35.944725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:36.945196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:37.945583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:38.946046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:39.946223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:40.946533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:41.947453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/27/23 15:47:42.42
  Sep 27 15:47:42.425: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:47:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:47:42Z]] name:name1 resourceVersion:33986 uid:29d5dea1-7f56-480b-a025-683ee46504d5] num:map[num1:9223372036854775807 num2:1000000]]}
  E0927 15:47:42.947665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:43.948087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:44.948719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:45.948846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:46.949049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:47.949185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:48.949773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:49.949902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:50.950112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:51.950327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/27/23 15:47:52.426
  Sep 27 15:47:52.433: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:47:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:47:52Z]] name:name2 resourceVersion:34007 uid:2eafcef2-b909-45b3-a91f-a271360d2838] num:map[num1:9223372036854775807 num2:1000000]]}
  E0927 15:47:52.950617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:53.951027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:54.951256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:55.951480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:56.951736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:57.951854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:58.952388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:47:59.952511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:00.952661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:01.952853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/27/23 15:48:02.433
  Sep 27 15:48:02.438: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:47:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:47:42Z]] name:name1 resourceVersion:34034 uid:29d5dea1-7f56-480b-a025-683ee46504d5] num:map[num1:9223372036854775807 num2:1000000]]}
  E0927 15:48:02.953080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:03.953607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:04.953829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:05.954027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:06.954244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:07.954362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:08.954856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:09.955088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:10.955309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:11.955533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/27/23 15:48:12.439
  Sep 27 15:48:12.445: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:47:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:47:52Z]] name:name2 resourceVersion:34055 uid:2eafcef2-b909-45b3-a91f-a271360d2838] num:map[num1:9223372036854775807 num2:1000000]]}
  E0927 15:48:12.955653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:13.956063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:14.956258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:15.956714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:16.956932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:17.957157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:18.957756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:19.958090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:20.958311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:21.958361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:48:22.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0927 15:48:22.958679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-watch-3294" for this suite. @ 09/27/23 15:48:22.959
• [63.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/27/23 15:48:22.963
  Sep 27 15:48:22.963: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:48:22.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:48:22.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:48:22.975
  STEP: Creating configMap with name projected-configmap-test-volume-f01798ef-4c12-4bd8-93cc-7794779803e4 @ 09/27/23 15:48:22.978
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:48:22.981
  E0927 15:48:23.959640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:24.960753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:48:24.993
  Sep 27 15:48:24.995: INFO: Trying to get logs from node worker-1 pod pod-projected-configmaps-8299df29-7274-4503-b15b-b577e1d969cf container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:48:24.999
  Sep 27 15:48:25.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4347" for this suite. @ 09/27/23 15:48:25.012
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 09/27/23 15:48:25.017
  Sep 27 15:48:25.017: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename dns @ 09/27/23 15:48:25.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:48:25.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:48:25.033
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4328.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4328.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/27/23 15:48:25.035
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4328.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4328.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/27/23 15:48:25.035
  STEP: creating a pod to probe /etc/hosts @ 09/27/23 15:48:25.035
  STEP: submitting the pod to kubernetes @ 09/27/23 15:48:25.035
  E0927 15:48:25.960966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:26.961383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/27/23 15:48:27.046
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:48:27.047
  Sep 27 15:48:27.060: INFO: DNS probes using dns-4328/dns-test-b33e2d15-48e0-4773-8fab-b92f0286844a succeeded

  Sep 27 15:48:27.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:48:27.062
  STEP: Destroying namespace "dns-4328" for this suite. @ 09/27/23 15:48:27.074
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/27/23 15:48:27.079
  Sep 27 15:48:27.079: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:48:27.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:48:27.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:48:27.09
  STEP: Creating secret with name secret-test-7e2256d9-49a4-4b29-b274-2a56549237c7 @ 09/27/23 15:48:27.092
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:48:27.095
  E0927 15:48:27.961479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:28.962081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:29.962906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:30.963204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:48:31.109
  Sep 27 15:48:31.110: INFO: Trying to get logs from node worker-1 pod pod-secrets-6b494671-1f01-4469-b042-0d44dfc7da55 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:48:31.115
  Sep 27 15:48:31.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4450" for this suite. @ 09/27/23 15:48:31.133
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/27/23 15:48:31.138
  Sep 27 15:48:31.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:48:31.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:48:31.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:48:31.154
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:48:31.157
  E0927 15:48:31.963563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:32.963649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:33.964704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:34.964945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 15:48:35.17
  Sep 27 15:48:35.172: INFO: Trying to get logs from node worker-1 pod downwardapi-volume-5b2895a9-52e6-43bf-ad97-c4dd3d2a8c08 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:48:35.177
  Sep 27 15:48:35.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3118" for this suite. @ 09/27/23 15:48:35.203
• [4.071 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 09/27/23 15:48:35.21
  Sep 27 15:48:35.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename gc @ 09/27/23 15:48:35.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:48:35.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:48:35.228
  STEP: create the rc @ 09/27/23 15:48:35.233
  W0927 15:48:35.238485      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0927 15:48:35.965800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:36.969099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:37.970951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:38.977434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:39.978346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:40.979713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/27/23 15:48:41.242
  STEP: wait for the rc to be deleted @ 09/27/23 15:48:41.248
  E0927 15:48:41.980743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:42.980923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:43.981423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:44.981660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:45.981890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/27/23 15:48:46.25
  E0927 15:48:46.982291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:47.982423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:48.983252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:49.983439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:50.983639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:51.983876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:52.984089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:53.984653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:54.984791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:55.984999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:56.985263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:57.985512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:58.986552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:48:59.986763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:00.986986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:01.987203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:02.987368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:03.987617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:04.987830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:05.988706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:06.988849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:07.989048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:08.989641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:09.989840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:10.990054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:11.990265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:12.990484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:13.990898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:14.991125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 15:49:15.991550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/27/23 15:49:16.259
  W0927 15:49:16.263591      22 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 15:49:16.263: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 15:49:16.263: INFO: Deleting pod "simpletest.rc-2w5kc" in namespace "gc-7800"
  Sep 27 15:49:16.271: INFO: Deleting pod "simpletest.rc-2w624" in namespace "gc-7800"
  Sep 27 15:49:16.279: INFO: Deleting pod "simpletest.rc-4h6r5" in namespace "gc-7800"
  Sep 27 15:49:16.289: INFO: Deleting pod "simpletest.rc-58m5d" in namespace "gc-7800"
  Sep 27 15:49:16.301: INFO: Deleting pod "simpletest.rc-58r4m" in namespace "gc-7800"
  Sep 27 15:49:16.313: INFO: Deleting pod "simpletest.rc-5hvw4" in namespace "gc-7800"
  Sep 27 15:49:16.324: INFO: Deleting pod "simpletest.rc-5z7gl" in namespace "gc-7800"
  Sep 27 15:49:16.335: INFO: Deleting pod "simpletest.rc-64586" in namespace "gc-7800"
  Sep 27 15:49:16.345: INFO: Deleting pod "simpletest.rc-6cfcq" in namespace "gc-7800"
  Sep 27 15:49:16.354: INFO: Deleting pod "simpletest.rc-6d7f8" in namespace "gc-7800"
  Sep 27 15:49:16.364: INFO: Deleting pod "simpletest.rc-6p5mg" in namespace "gc-7800"
  Sep 27 15:49:16.375: INFO: Deleting pod "simpletest.rc-79m9j" in namespace "gc-7800"
  Sep 27 15:49:16.387: INFO: Deleting pod "simpletest.rc-7dsqj" in namespace "gc-7800"
  Sep 27 15:49:16.396: INFO: Deleting pod "simpletest.rc-7qcvv" in namespace "gc-7800"
  Sep 27 15:49:16.409: INFO: Deleting pod "simpletest.rc-8ds59" in namespace "gc-7800"
  Sep 27 15:49:16.422: INFO: Deleting pod "simpletest.rc-8jkjg" in namespace "gc-7800"
  Sep 27 15:49:16.438: INFO: Deleting pod "simpletest.rc-8tpp5" in namespace "gc-7800"
  Sep 27 15:49:16.452: INFO: Deleting pod "simpletest.rc-968vv" in namespace "gc-7800"
  Sep 27 15:49:16.464: INFO: Deleting pod "simpletest.rc-9h4hs" in namespace "gc-7800"
  Sep 27 15:49:16.477: INFO: Deleting pod "simpletest.rc-9kf8q" in namespace "gc-7800"
  Sep 27 15:49:16.488: INFO: Deleting pod "simpletest.rc-9qg6t" in namespace "gc-7800"
  Sep 27 15:49:16.501: INFO: Deleting pod "simpletest.rc-9rx8b" in namespace "gc-7800"
  Sep 27 15:49:16.509: INFO: Deleting pod "simpletest.rc-blncn" in namespace "gc-7800"
  Sep 27 15:49:16.524: INFO: Deleting pod "simpletest.rc-bmk72" in namespace "gc-7800"
  Sep 27 15:49:16.541: INFO: Deleting pod "simpletest.rc-bvmbr" in namespace "gc-7800"
  Sep 27 15:49:16.553: INFO: Deleting pod "simpletest.rc-bvwz7" in namespace "gc-7800"
  Sep 27 15:49:16.567: INFO: Deleting pod "simpletest.rc-bz52v" in namespace "gc-7800"
  Sep 27 15:49:16.577: INFO: Deleting pod "simpletest.rc-c79xx" in namespace "gc-7800"
  Sep 27 15:49:16.590: INFO: Deleting pod "simpletest.rc-chfbb" in namespace "gc-7800"
  Sep 27 15:49:16.606: INFO: Deleting pod "simpletest.rc-cm959" in namespace "gc-7800"
  Sep 27 15:49:16.617: INFO: Deleting pod "simpletest.rc-crpls" in namespace "gc-7800"
  Sep 27 15:49:16.630: INFO: Deleting pod "simpletest.rc-ct8tw" in namespace "gc-7800"
  Sep 27 15:49:16.646: INFO: Deleting pod "simpletest.rc-cvzkh" in namespace "gc-7800"
  Sep 27 15:49:16.664: INFO: Deleting pod "simpletest.rc-d6zr5" in namespace "gc-7800"
  Sep 27 15:49:16.697: INFO: Deleting pod "simpletest.rc-fblzh" in namespace "gc-7800"
  Sep 27 15:49:16.740: INFO: Deleting pod "simpletest.rc-fbxgd" in namespace "gc-7800"
  Sep 27 15:49:16.757: INFO: Deleting pod "simpletest.rc-fcsdq" in namespace "gc-7800"
  Sep 27 15:49:16.772: INFO: Deleting pod "simpletest.rc-fj9mq" in namespace "gc-7800"
  Sep 27 15:49:16.782: INFO: Deleting pod "simpletest.rc-fm5pk" in namespace "gc-7800"
  Sep 27 15:49:16.799: INFO: Deleting pod "simpletest.rc-fn7nm" in namespace "gc-7800"
  Sep 27 15:49:16.821: INFO: Deleting pod "simpletest.rc-fx4zd" in namespace "gc-7800"
  Sep 27 15:49:16.839: INFO: Deleting pod "simpletest.rc-g7hz8" in namespace "gc-7800"
  Sep 27 15:49:16.856: INFO: Deleting pod "simpletest.rc-g9ks6" in namespace "gc-7800"
  Sep 27 15:49:16.867: INFO: Deleting pod "simpletest.rc-gflwd" in namespace "gc-7800"
  Sep 27 15:49:16.879: INFO: Deleting pod "simpletest.rc-h69tv" in namespace "gc-7800"
  Sep 27 15:49:16.890: INFO: Deleting pod "simpletest.rc-h6xd2" in namespace "gc-7800"
  Sep 27 15:49:16.900: INFO: Deleting pod "simpletest.rc-h9zf7" in namespace "gc-7800"
  Sep 27 15:49:16.917: INFO: Deleting pod "simpletest.rc-hkss9" in namespace "gc-7800"
  Sep 27 15:49:16.925: INFO: Deleting pod "simpletest.rc-hqzmm" in namespace "gc-7800"
  Sep 27 15:49:16.937: INFO: Deleting pod "simpletest.rc-j4gxs" in namespace "gc-7800"
  Sep 27 15:49:16.957: INFO: Deleting pod "simpletest.rc-jmg8b" in namespace "gc-7800"
  Sep 27 15:49:16.973: INFO: Deleting pod "simpletest.rc-k75pt" in namespace "gc-7800"
  E0927 15:49:16.992394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:49:17.008: INFO: Deleting pod "simpletest.rc-kh489" in namespace "gc-7800"
  Sep 27 15:49:17.022: INFO: Deleting pod "simpletest.rc-lq7l7" in namespace "gc-7800"
  Sep 27 15:49:17.037: INFO: Deleting pod "simpletest.rc-lsch9" in namespace "gc-7800"
  Sep 27 15:49:17.050: INFO: Deleting pod "simpletest.rc-ml78d" in namespace "gc-7800"
  Sep 27 15:49:17.079: INFO: Deleting pod "simpletest.rc-mn57h" in namespace "gc-7800"
  Sep 27 15:49:17.101: INFO: Deleting pod "simpletest.rc-n7c9w" in namespace "gc-7800"
  Sep 27 15:49:17.114: INFO: Deleting pod "simpletest.rc-ncllq" in namespace "gc-7800"
  Sep 27 15:49:17.128: INFO: Deleting pod "simpletest.rc-nhsxr" in namespace "gc-7800"
  Sep 27 15:49:17.138: INFO: Deleting pod "simpletest.rc-nzg7z" in namespace "gc-7800"
  Sep 27 15:49:17.162: INFO: Deleting pod "simpletest.rc-p4kfn" in namespace "gc-7800"
  Sep 27 15:49:17.204: INFO: Deleting pod "simpletest.rc-pflvv" in namespace "gc-7800"
  Sep 27 15:49:17.217: INFO: Deleting pod "simpletest.rc-phg7t" in namespace "gc-7800"
  Sep 27 15:49:17.230: INFO: Deleting pod "simpletest.rc-q6r4g" in namespace "gc-7800"
  Sep 27 15:49:17.254: INFO: Deleting pod "simpletest.rc-qdz2j" in namespace "gc-7800"
  Sep 27 15:49:17.272: INFO: Deleting pod "simpletest.rc-qg5gm" in namespace "gc-7800"
  Sep 27 15:49:17.286: INFO: Deleting pod "simpletest.rc-qnkth" in namespace "gc-7800"
  Sep 27 15:49:17.304: INFO: Deleting pod "simpletest.rc-qv8jt" in namespace "gc-7800"
  Sep 27 15:49:17.325: INFO: Deleting pod "simpletest.rc-qwqrf" in namespace "gc-7800"
  Sep 27 15:49:17.363: INFO: Deleting pod "simpletest.rc-rdppv" in namespace "gc-7800"
  Sep 27 15:49:17.416: INFO: Deleting pod "simpletest.rc-rgk7p" in namespace "gc-7800"
  Sep 27 15:49:17.463: INFO: Deleting pod "simpletest.rc-rk669" in namespace "gc-7800"
  Sep 27 15:49:17.524: INFO: Deleting pod "simpletest.rc-rspjc" in namespace "gc-7800"
  Sep 27 15:49:17.564: INFO: Deleting pod "simpletest.rc-s27wb" in namespace "gc-7800"
  Sep 27 15:49:17.613: INFO: Deleting pod "simpletest.rc-skrhg" in namespace "gc-7800"
  Sep 27 15:49:17.670: INFO: Deleting pod "simpletest.rc-sw5q4" in namespace "gc-7800"
  Sep 27 15:49:17.712: INFO: Deleting pod "simpletest.rc-sxjvq" in namespace "gc-7800"
  Sep 27 15:49:17.771: INFO: Deleting pod "simpletest.rc-szd4c" in namespace "gc-7800"
  Sep 27 15:49:17.812: INFO: Deleting pod "simpletest.rc-t7w2h" in namespace "gc-7800"
  Sep 27 15:49:17.861: INFO: Deleting pod "simpletest.rc-tblgf" in namespace "gc-7800"
  Sep 27 15:49:17.910: INFO: Deleting pod "simpletest.rc-tjvbd" in namespace "gc-7800"
  Sep 27 15:49:17.966: INFO: Deleting pod "simpletest.rc-tmzbz" in namespace "gc-7800"
  E0927 15:49:17.992542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:49:18.011: INFO: Deleting pod "simpletest.rc-tprch" in namespace "gc-7800"
  Sep 27 15:49:18.065: INFO: Deleting pod "simpletest.rc-v28h4" in namespace "gc-7800"
  Sep 27 15:49:18.118: INFO: Deleting pod "simpletest.rc-vc2mj" in namespace "gc-7800"
  Sep 27 15:49:18.162: INFO: Deleting pod "simpletest.rc-vjmkl" in namespace "gc-7800"
  Sep 27 15:49:18.212: INFO: Deleting pod "simpletest.rc-vkc6n" in namespace "gc-7800"
  Sep 27 15:49:18.312: INFO: Deleting pod "simpletest.rc-vmg9h" in namespace "gc-7800"
  Sep 27 15:49:18.321: INFO: Deleting pod "simpletest.rc-vz6dq" in namespace "gc-7800"
  Sep 27 15:49:18.365: INFO: Deleting pod "simpletest.rc-w6rbz" in namespace "gc-7800"
  Sep 27 15:49:18.412: INFO: Deleting pod "simpletest.rc-w8grz" in namespace "gc-7800"
  Sep 27 15:49:18.468: INFO: Deleting pod "simpletest.rc-wskkv" in namespace "gc-7800"
  Sep 27 15:49:18.514: INFO: Deleting pod "simpletest.rc-x9m4x" in namespace "gc-7800"
  Sep 27 15:49:18.564: INFO: Deleting pod "simpletest.rc-xdm7v" in namespace "gc-7800"
  Sep 27 15:49:18.618: INFO: Deleting pod "simpletest.rc-xfqkx" in namespace "gc-7800"
  Sep 27 15:49:18.665: INFO: Deleting pod "simpletest.rc-xpqzr" in namespace "gc-7800"
  Sep 27 15:49:18.720: INFO: Deleting pod "simpletest.rc-z48vx" in namespace "gc-7800"
  Sep 27 15:49:18.763: INFO: Deleting pod "simpletest.rc-z7qnf" in namespace "gc-7800"
  Sep 27 15:49:18.823: INFO: Deleting pod "simpletest.rc-zfp9x" in namespace "gc-7800"
  Sep 27 15:49:18.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7800" for this suite. @ 09/27/23 15:49:18.906
• [43.758 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/27/23 15:49:18.968
  Sep 27 15:49:18.968: INFO: >>> kubeConfig: /tmp/kubeconfig-3330785094
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 15:49:18.97
  E0927 15:49:18.993229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:49:19.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:49:19.007
  Sep 27 15:49:19.039: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/27/23 15:49:19.045
  Sep 27 15:49:19.049: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:49:19.050: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/27/23 15:49:19.05
  Sep 27 15:49:19.067: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:49:19.067: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 15:49:19.993655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:49:20.070: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:49:20.070: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 15:49:20.994748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:49:21.070: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:49:21.070: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 15:49:21.995222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:49:22.069: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:49:22.069: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/27/23 15:49:22.071
  Sep 27 15:49:22.083: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:49:22.083: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0927 15:49:22.995540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:49:23.086: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:49:23.086: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/27/23 15:49:23.086
  Sep 27 15:49:23.097: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:49:23.097: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 15:49:23.996518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:49:24.100: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:49:24.100: INFO: Node worker-0 is running 0 daemon pod, expected 1
  E0927 15:49:24.996658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:49:25.100: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:49:25.100: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 15:49:25.103
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7285, will wait for the garbage collector to delete the pods @ 09/27/23 15:49:25.103
  Sep 27 15:49:25.162: INFO: Deleting DaemonSet.extensions daemon-set took: 5.462204ms
  Sep 27 15:49:25.262: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.553447ms
  E0927 15:49:25.997676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 15:49:26.665: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:49:26.665: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 15:49:26.667: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36177"},"items":null}

  Sep 27 15:49:26.668: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36177"},"items":null}

  Sep 27 15:49:26.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7285" for this suite. @ 09/27/23 15:49:26.687
• [7.724 seconds]
------------------------------
S
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Sep 27 15:49:26.695: INFO: Running AfterSuite actions on node 1
  Sep 27 15:49:26.696: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.072 seconds]
------------------------------

Ran 380 of 7387 Specs in 6027.641 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h40m27.992059558s
Test Suite Passed
