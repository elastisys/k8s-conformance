  I0824 14:09:18.943563      14 e2e.go:117] Starting e2e run "d9d2b905-f445-420f-9083-5a97f4c1f284" on Ginkgo node 1
  Aug 24 14:09:19.003: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1692886158 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Aug 24 14:09:19.323: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 14:09:19.330: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Aug 24 14:09:19.397: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Aug 24 14:09:19.408: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  Aug 24 14:09:19.408: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'cilium-node-init' (0 seconds elapsed)
  Aug 24 14:09:19.408: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Aug 24 14:09:19.408: INFO: e2e test version: v1.28.1
  Aug 24 14:09:19.410: INFO: kube-apiserver version: v1.28.1
  Aug 24 14:09:19.410: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 14:09:19.417: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 08/24/23 14:09:19.912
  Aug 24 14:09:19.912: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 14:09:19.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:09:19.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:09:19.962
  STEP: Creating pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236 @ 08/24/23 14:09:19.968
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 14:09:32.097
  Aug 24 14:09:32.102: INFO: Initial restart count of pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 is 0
  Aug 24 14:09:32.108: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:34.115: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:36.123: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:38.129: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:40.136: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:42.144: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:44.151: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:46.157: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:48.165: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:50.175: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:52.185: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:54.194: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:56.201: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:09:58.212: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:00.220: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:02.225: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:04.232: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:06.239: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:08.246: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:10.255: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:12.264: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:14.272: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:16.280: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:18.287: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:20.295: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:22.303: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:24.310: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:26.318: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:28.326: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:30.336: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:32.350: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:34.358: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:36.365: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:38.374: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:40.386: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:42.394: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:44.401: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:46.409: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:48.418: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:50.428: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:52.436: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:54.443: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:56.451: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:10:58.460: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:00.471: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:02.480: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:04.488: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:06.498: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:08.506: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:10.514: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:12.522: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:14.565: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:16.575: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:18.592: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:20.606: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:22.613: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:24.624: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:26.630: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:28.637: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:30.648: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:32.658: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:34.669: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:36.675: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:38.682: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:40.693: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:42.703: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:44.711: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:46.719: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:48.731: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:50.739: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:52.745: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:54.751: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:56.759: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:11:58.768: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:00.776: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:02.785: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:04.791: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:06.798: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:08.807: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:10.815: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:12.822: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:14.828: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:16.835: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:18.847: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:20.854: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:22.863: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:24.871: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:26.879: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:28.888: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:30.899: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:32.905: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:34.914: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:36.922: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:38.930: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:40.940: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:42.946: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:44.953: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:46.962: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:48.971: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:50.981: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:52.987: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:54.996: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:57.004: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:12:59.012: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:01.024: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:03.032: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:05.039: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:07.048: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:09.058: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:11.067: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:13.074: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:15.083: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:17.090: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:19.098: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:21.109: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:23.117: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:25.124: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:27.130: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:29.137: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:31.150: INFO: Get pod test-grpc-dbcf6506-54b2-4869-afa9-200f3143ab51 in namespace container-probe-2236
  Aug 24 14:13:33.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 14:13:33.16
  STEP: Destroying namespace "container-probe-2236" for this suite. @ 08/24/23 14:13:33.206
• [253.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 08/24/23 14:13:33.245
  Aug 24 14:13:33.245: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-runtime @ 08/24/23 14:13:33.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:13:33.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:13:33.302
  STEP: create the container @ 08/24/23 14:13:33.309
  W0824 14:13:33.336801      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/24/23 14:13:33.34
  STEP: get the container status @ 08/24/23 14:13:38.387
  STEP: the container should be terminated @ 08/24/23 14:13:38.394
  STEP: the termination message should be set @ 08/24/23 14:13:38.395
  Aug 24 14:13:38.395: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/24/23 14:13:38.396
  Aug 24 14:13:38.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1505" for this suite. @ 08/24/23 14:13:38.427
• [5.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 08/24/23 14:13:38.445
  Aug 24 14:13:38.445: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 14:13:38.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:13:38.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:13:38.509
  Aug 24 14:13:38.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6496" for this suite. @ 08/24/23 14:13:38.685
• [0.269 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 08/24/23 14:13:38.739
  Aug 24 14:13:38.740: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename security-context-test @ 08/24/23 14:13:38.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:13:38.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:13:38.788
  Aug 24 14:13:42.877: INFO: Got logs for pod "busybox-privileged-false-29e13eca-aa36-4dbc-a344-c8d5ebf1a9e0": "ip: RTNETLINK answers: Operation not permitted\n"
  Aug 24 14:13:42.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7121" for this suite. @ 08/24/23 14:13:42.888
• [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 08/24/23 14:13:42.916
  Aug 24 14:13:42.916: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename gc @ 08/24/23 14:13:42.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:13:42.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:13:42.957
  STEP: create the rc1 @ 08/24/23 14:13:42.974
  STEP: create the rc2 @ 08/24/23 14:13:42.987
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 08/24/23 14:13:49.044
  STEP: delete the rc simpletest-rc-to-be-deleted @ 08/24/23 14:13:51.634
  STEP: wait for the rc to be deleted @ 08/24/23 14:13:51.711
  Aug 24 14:13:56.782: INFO: 77 pods remaining
  Aug 24 14:13:56.786: INFO: 72 pods has nil DeletionTimestamp
  Aug 24 14:13:56.786: INFO: 
  Aug 24 14:14:01.870: INFO: 52 pods remaining
  Aug 24 14:14:01.871: INFO: 50 pods has nil DeletionTimestamp
  Aug 24 14:14:01.871: INFO: 
  STEP: Gathering metrics @ 08/24/23 14:14:06.906
  Aug 24 14:14:10.236: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 14:14:10.237: INFO: Deleting pod "simpletest-rc-to-be-deleted-2hfb2" in namespace "gc-3661"
  Aug 24 14:14:10.310: INFO: Deleting pod "simpletest-rc-to-be-deleted-2kfkp" in namespace "gc-3661"
  Aug 24 14:14:10.447: INFO: Deleting pod "simpletest-rc-to-be-deleted-2nh9g" in namespace "gc-3661"
  Aug 24 14:14:10.587: INFO: Deleting pod "simpletest-rc-to-be-deleted-2vtqs" in namespace "gc-3661"
  Aug 24 14:14:10.783: INFO: Deleting pod "simpletest-rc-to-be-deleted-4h8mm" in namespace "gc-3661"
  Aug 24 14:14:10.828: INFO: Deleting pod "simpletest-rc-to-be-deleted-4s86n" in namespace "gc-3661"
  Aug 24 14:14:10.866: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tk4v" in namespace "gc-3661"
  Aug 24 14:14:11.053: INFO: Deleting pod "simpletest-rc-to-be-deleted-52gk4" in namespace "gc-3661"
  Aug 24 14:14:11.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-56kb6" in namespace "gc-3661"
  Aug 24 14:14:11.166: INFO: Deleting pod "simpletest-rc-to-be-deleted-5lxts" in namespace "gc-3661"
  Aug 24 14:14:11.203: INFO: Deleting pod "simpletest-rc-to-be-deleted-5nhm6" in namespace "gc-3661"
  Aug 24 14:14:11.268: INFO: Deleting pod "simpletest-rc-to-be-deleted-5xft4" in namespace "gc-3661"
  Aug 24 14:14:11.413: INFO: Deleting pod "simpletest-rc-to-be-deleted-69vmc" in namespace "gc-3661"
  Aug 24 14:14:11.655: INFO: Deleting pod "simpletest-rc-to-be-deleted-726ft" in namespace "gc-3661"
  Aug 24 14:14:11.704: INFO: Deleting pod "simpletest-rc-to-be-deleted-76f9b" in namespace "gc-3661"
  Aug 24 14:14:11.830: INFO: Deleting pod "simpletest-rc-to-be-deleted-8dbr9" in namespace "gc-3661"
  Aug 24 14:14:11.951: INFO: Deleting pod "simpletest-rc-to-be-deleted-8h929" in namespace "gc-3661"
  Aug 24 14:14:12.031: INFO: Deleting pod "simpletest-rc-to-be-deleted-8l4x5" in namespace "gc-3661"
  Aug 24 14:14:12.089: INFO: Deleting pod "simpletest-rc-to-be-deleted-8rmpw" in namespace "gc-3661"
  Aug 24 14:14:12.155: INFO: Deleting pod "simpletest-rc-to-be-deleted-9ctxx" in namespace "gc-3661"
  Aug 24 14:14:12.221: INFO: Deleting pod "simpletest-rc-to-be-deleted-9jhsh" in namespace "gc-3661"
  Aug 24 14:14:12.274: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xpqf" in namespace "gc-3661"
  Aug 24 14:14:12.326: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9gsm" in namespace "gc-3661"
  Aug 24 14:14:12.422: INFO: Deleting pod "simpletest-rc-to-be-deleted-bblh9" in namespace "gc-3661"
  Aug 24 14:14:12.510: INFO: Deleting pod "simpletest-rc-to-be-deleted-bghw9" in namespace "gc-3661"
  Aug 24 14:14:12.579: INFO: Deleting pod "simpletest-rc-to-be-deleted-bn2nc" in namespace "gc-3661"
  Aug 24 14:14:12.658: INFO: Deleting pod "simpletest-rc-to-be-deleted-bnqmn" in namespace "gc-3661"
  Aug 24 14:14:12.789: INFO: Deleting pod "simpletest-rc-to-be-deleted-bnvn9" in namespace "gc-3661"
  Aug 24 14:14:12.857: INFO: Deleting pod "simpletest-rc-to-be-deleted-bxjdn" in namespace "gc-3661"
  Aug 24 14:14:12.968: INFO: Deleting pod "simpletest-rc-to-be-deleted-bzml5" in namespace "gc-3661"
  Aug 24 14:14:13.069: INFO: Deleting pod "simpletest-rc-to-be-deleted-bzn8q" in namespace "gc-3661"
  Aug 24 14:14:13.128: INFO: Deleting pod "simpletest-rc-to-be-deleted-c6lpb" in namespace "gc-3661"
  Aug 24 14:14:13.293: INFO: Deleting pod "simpletest-rc-to-be-deleted-cqhfn" in namespace "gc-3661"
  Aug 24 14:14:13.421: INFO: Deleting pod "simpletest-rc-to-be-deleted-crc6n" in namespace "gc-3661"
  Aug 24 14:14:13.474: INFO: Deleting pod "simpletest-rc-to-be-deleted-cx95f" in namespace "gc-3661"
  Aug 24 14:14:13.507: INFO: Deleting pod "simpletest-rc-to-be-deleted-dwzxh" in namespace "gc-3661"
  Aug 24 14:14:13.622: INFO: Deleting pod "simpletest-rc-to-be-deleted-f8fzd" in namespace "gc-3661"
  Aug 24 14:14:14.046: INFO: Deleting pod "simpletest-rc-to-be-deleted-f9wkj" in namespace "gc-3661"
  Aug 24 14:14:14.086: INFO: Deleting pod "simpletest-rc-to-be-deleted-fmt8z" in namespace "gc-3661"
  Aug 24 14:14:14.269: INFO: Deleting pod "simpletest-rc-to-be-deleted-fn5kw" in namespace "gc-3661"
  Aug 24 14:14:14.307: INFO: Deleting pod "simpletest-rc-to-be-deleted-fr9rw" in namespace "gc-3661"
  Aug 24 14:14:14.363: INFO: Deleting pod "simpletest-rc-to-be-deleted-g8bmw" in namespace "gc-3661"
  Aug 24 14:14:14.427: INFO: Deleting pod "simpletest-rc-to-be-deleted-gckpx" in namespace "gc-3661"
  Aug 24 14:14:14.457: INFO: Deleting pod "simpletest-rc-to-be-deleted-ggjhs" in namespace "gc-3661"
  Aug 24 14:14:14.632: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxktt" in namespace "gc-3661"
  Aug 24 14:14:14.896: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqjbz" in namespace "gc-3661"
  Aug 24 14:14:14.935: INFO: Deleting pod "simpletest-rc-to-be-deleted-jvvgj" in namespace "gc-3661"
  Aug 24 14:14:15.032: INFO: Deleting pod "simpletest-rc-to-be-deleted-jwhjh" in namespace "gc-3661"
  Aug 24 14:14:15.156: INFO: Deleting pod "simpletest-rc-to-be-deleted-kfm9k" in namespace "gc-3661"
  Aug 24 14:14:15.235: INFO: Deleting pod "simpletest-rc-to-be-deleted-kg79h" in namespace "gc-3661"
  Aug 24 14:14:15.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3661" for this suite. @ 08/24/23 14:14:15.327
• [32.439 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 08/24/23 14:14:15.382
  Aug 24 14:14:15.382: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename subpath @ 08/24/23 14:14:15.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:14:15.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:14:15.576
  STEP: Setting up data @ 08/24/23 14:14:15.591
  STEP: Creating pod pod-subpath-test-configmap-d8zg @ 08/24/23 14:14:15.67
  STEP: Creating a pod to test atomic-volume-subpath @ 08/24/23 14:14:15.671
  STEP: Saw pod success @ 08/24/23 14:14:57.352
  Aug 24 14:14:57.359: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-subpath-test-configmap-d8zg container test-container-subpath-configmap-d8zg: <nil>
  STEP: delete the pod @ 08/24/23 14:14:57.371
  STEP: Deleting pod pod-subpath-test-configmap-d8zg @ 08/24/23 14:14:57.394
  Aug 24 14:14:57.395: INFO: Deleting pod "pod-subpath-test-configmap-d8zg" in namespace "subpath-3485"
  Aug 24 14:14:57.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3485" for this suite. @ 08/24/23 14:14:57.41
• [42.045 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 08/24/23 14:14:57.425
  Aug 24 14:14:57.425: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 14:14:57.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:14:57.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:14:57.475
  STEP: Creating configMap with name configmap-test-upd-3d222688-c256-4ebf-991e-e5036a01a3d5 @ 08/24/23 14:14:57.489
  STEP: Creating the pod @ 08/24/23 14:14:57.497
  STEP: Updating configmap configmap-test-upd-3d222688-c256-4ebf-991e-e5036a01a3d5 @ 08/24/23 14:14:59.555
  STEP: waiting to observe update in volume @ 08/24/23 14:14:59.563
  Aug 24 14:15:01.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3073" for this suite. @ 08/24/23 14:15:01.592
• [4.178 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 08/24/23 14:15:01.605
  Aug 24 14:15:01.606: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 14:15:01.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:15:01.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:15:01.642
  Aug 24 14:15:01.647: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: creating the pod @ 08/24/23 14:15:01.649
  STEP: submitting the pod to kubernetes @ 08/24/23 14:15:01.65
  Aug 24 14:15:03.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-477" for this suite. @ 08/24/23 14:15:03.741
• [2.145 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 08/24/23 14:15:03.755
  Aug 24 14:15:03.755: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename subpath @ 08/24/23 14:15:03.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:15:03.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:15:03.796
  STEP: Setting up data @ 08/24/23 14:15:03.802
  STEP: Creating pod pod-subpath-test-configmap-dc2g @ 08/24/23 14:15:03.819
  STEP: Creating a pod to test atomic-volume-subpath @ 08/24/23 14:15:03.819
  STEP: Saw pod success @ 08/24/23 14:15:27.975
  Aug 24 14:15:27.983: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-subpath-test-configmap-dc2g container test-container-subpath-configmap-dc2g: <nil>
  STEP: delete the pod @ 08/24/23 14:15:27.997
  STEP: Deleting pod pod-subpath-test-configmap-dc2g @ 08/24/23 14:15:28.023
  Aug 24 14:15:28.023: INFO: Deleting pod "pod-subpath-test-configmap-dc2g" in namespace "subpath-2465"
  Aug 24 14:15:28.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2465" for this suite. @ 08/24/23 14:15:28.039
• [24.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 08/24/23 14:15:28.068
  Aug 24 14:15:28.068: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:15:28.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:15:28.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:15:28.116
  STEP: Creating configMap with name projected-configmap-test-volume-map-4aa0eabc-226b-4ed6-aaed-577fdbfe530a @ 08/24/23 14:15:28.12
  STEP: Creating a pod to test consume configMaps @ 08/24/23 14:15:28.13
  STEP: Saw pod success @ 08/24/23 14:15:32.194
  Aug 24 14:15:32.200: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-configmaps-6381ea01-63d4-4ce0-8d7e-447e21318098 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:15:32.215
  Aug 24 14:15:32.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7194" for this suite. @ 08/24/23 14:15:32.263
• [4.211 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 08/24/23 14:15:32.282
  Aug 24 14:15:32.282: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 14:15:32.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:15:32.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:15:32.335
  Aug 24 14:15:32.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-2370 version'
  Aug 24 14:15:32.611: INFO: stderr: ""
  Aug 24 14:15:32.611: INFO: stdout: "Client Version: v1.28.1\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.1\n"
  Aug 24 14:15:32.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2370" for this suite. @ 08/24/23 14:15:32.619
• [0.351 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 08/24/23 14:15:32.633
  Aug 24 14:15:32.633: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 14:15:32.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:15:32.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:15:32.681
  STEP: Creating secret with name secret-test-map-6f810281-bc88-4002-98d1-f55e596288f9 @ 08/24/23 14:15:32.692
  STEP: Creating a pod to test consume secrets @ 08/24/23 14:15:32.707
  STEP: Saw pod success @ 08/24/23 14:15:36.765
  Aug 24 14:15:36.771: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-secrets-31324246-b8d3-43dc-a4d2-1eeac5a776c6 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 14:15:36.784
  Aug 24 14:15:36.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9995" for this suite. @ 08/24/23 14:15:36.825
• [4.207 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 08/24/23 14:15:36.843
  Aug 24 14:15:36.843: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 14:15:36.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:15:36.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:15:36.881
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/24/23 14:15:36.886
  STEP: Saw pod success @ 08/24/23 14:15:40.936
  Aug 24 14:15:40.942: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-13dd5233-75eb-4a4d-a4e1-e41d62efbe1d container test-container: <nil>
  STEP: delete the pod @ 08/24/23 14:15:40.957
  Aug 24 14:15:40.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1136" for this suite. @ 08/24/23 14:15:40.993
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 08/24/23 14:15:41.016
  Aug 24 14:15:41.016: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename runtimeclass @ 08/24/23 14:15:41.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:15:41.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:15:41.08
  Aug 24 14:15:43.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-516" for this suite. @ 08/24/23 14:15:43.175
• [2.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 08/24/23 14:15:43.21
  Aug 24 14:15:43.210: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 14:15:43.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:15:43.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:15:43.259
  Aug 24 14:15:43.267: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/24/23 14:15:45.831
  Aug 24 14:15:45.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-3395 --namespace=crd-publish-openapi-3395 create -f -'
  Aug 24 14:15:47.557: INFO: stderr: ""
  Aug 24 14:15:47.557: INFO: stdout: "e2e-test-crd-publish-openapi-7477-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Aug 24 14:15:47.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-3395 --namespace=crd-publish-openapi-3395 delete e2e-test-crd-publish-openapi-7477-crds test-cr'
  Aug 24 14:15:47.834: INFO: stderr: ""
  Aug 24 14:15:47.834: INFO: stdout: "e2e-test-crd-publish-openapi-7477-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Aug 24 14:15:47.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-3395 --namespace=crd-publish-openapi-3395 apply -f -'
  Aug 24 14:15:49.142: INFO: stderr: ""
  Aug 24 14:15:49.142: INFO: stdout: "e2e-test-crd-publish-openapi-7477-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Aug 24 14:15:49.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-3395 --namespace=crd-publish-openapi-3395 delete e2e-test-crd-publish-openapi-7477-crds test-cr'
  Aug 24 14:15:49.377: INFO: stderr: ""
  Aug 24 14:15:49.377: INFO: stdout: "e2e-test-crd-publish-openapi-7477-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/24/23 14:15:49.378
  Aug 24 14:15:49.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-3395 explain e2e-test-crd-publish-openapi-7477-crds'
  Aug 24 14:15:49.806: INFO: stderr: ""
  Aug 24 14:15:49.806: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7477-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Aug 24 14:15:51.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3395" for this suite. @ 08/24/23 14:15:51.985
• [8.793 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 08/24/23 14:15:52.005
  Aug 24 14:15:52.005: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename dns @ 08/24/23 14:15:52.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:15:52.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:15:52.047
  STEP: Creating a test headless service @ 08/24/23 14:15:52.052
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4672.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4672.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4672.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4672.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4672.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4672.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4672.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4672.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4672.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4672.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4672.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4672.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 206.42.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.42.206_udp@PTR;check="$$(dig +tcp +noall +answer +search 206.42.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.42.206_tcp@PTR;sleep 1; done
   @ 08/24/23 14:15:52.104
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4672.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4672.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4672.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4672.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4672.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4672.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4672.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4672.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4672.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4672.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4672.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4672.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 206.42.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.42.206_udp@PTR;check="$$(dig +tcp +noall +answer +search 206.42.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.42.206_tcp@PTR;sleep 1; done
   @ 08/24/23 14:15:52.104
  STEP: creating a pod to probe DNS @ 08/24/23 14:15:52.104
  STEP: submitting the pod to kubernetes @ 08/24/23 14:15:52.105
  STEP: retrieving the pod @ 08/24/23 14:16:24.291
  STEP: looking for the results for each expected name from probers @ 08/24/23 14:16:24.298
  Aug 24 14:16:24.312: INFO: Unable to read wheezy_udp@dns-test-service.dns-4672.svc.cluster.local from pod dns-4672/dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7: the server could not find the requested resource (get pods dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7)
  Aug 24 14:16:24.318: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4672.svc.cluster.local from pod dns-4672/dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7: the server could not find the requested resource (get pods dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7)
  Aug 24 14:16:24.362: INFO: Unable to read jessie_udp@dns-test-service.dns-4672.svc.cluster.local from pod dns-4672/dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7: the server could not find the requested resource (get pods dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7)
  Aug 24 14:16:24.367: INFO: Unable to read jessie_tcp@dns-test-service.dns-4672.svc.cluster.local from pod dns-4672/dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7: the server could not find the requested resource (get pods dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7)
  Aug 24 14:16:24.372: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4672.svc.cluster.local from pod dns-4672/dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7: the server could not find the requested resource (get pods dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7)
  Aug 24 14:16:24.377: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4672.svc.cluster.local from pod dns-4672/dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7: the server could not find the requested resource (get pods dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7)
  Aug 24 14:16:24.400: INFO: Lookups using dns-4672/dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7 failed for: [wheezy_udp@dns-test-service.dns-4672.svc.cluster.local wheezy_tcp@dns-test-service.dns-4672.svc.cluster.local jessie_udp@dns-test-service.dns-4672.svc.cluster.local jessie_tcp@dns-test-service.dns-4672.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4672.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4672.svc.cluster.local]

  Aug 24 14:16:24.411: INFO: Pod client logs for webserver: 
  Aug 24 14:16:24.420: INFO: Pod client logs for querier: 
  Aug 24 14:16:24.429: INFO: Pod client logs for jessie-querier: 
  Aug 24 14:16:29.560: INFO: DNS probes using dns-4672/dns-test-5949b3d2-5b4f-41b3-9cc6-fd27747de9d7 succeeded

  Aug 24 14:16:29.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 14:16:29.568
  STEP: deleting the test service @ 08/24/23 14:16:29.613
  STEP: deleting the test headless service @ 08/24/23 14:16:29.755
  STEP: Destroying namespace "dns-4672" for this suite. @ 08/24/23 14:16:29.783
• [37.806 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 08/24/23 14:16:29.845
  Aug 24 14:16:29.845: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 14:16:29.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:16:29.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:16:29.888
  STEP: Creating pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445 @ 08/24/23 14:16:29.893
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 14:16:33.948
  Aug 24 14:16:33.955: INFO: Initial restart count of pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 is 0
  Aug 24 14:16:33.984: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:35.992: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:37.998: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:40.008: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:42.021: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:44.028: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:46.036: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:48.044: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:50.054: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:52.063: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:54.070: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:56.082: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:16:58.091: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:00.100: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:02.108: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:04.116: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:06.124: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:08.132: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:10.144: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:12.152: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:14.161: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:16.170: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:18.185: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:20.196: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:22.207: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:24.215: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:26.231: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:28.239: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:30.258: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:32.266: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:34.275: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:36.282: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:38.289: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:40.297: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:42.323: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:44.332: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:46.343: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:48.351: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:50.359: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:52.369: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:54.377: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:56.388: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:17:58.397: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:00.407: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:02.414: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:04.422: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:06.429: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:08.438: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:10.450: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:12.461: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:14.470: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:16.477: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:18.487: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:20.496: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:22.504: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:24.511: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:26.533: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:28.542: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:30.569: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:32.579: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:34.587: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:36.595: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:38.606: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:40.615: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:42.624: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:44.633: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:46.640: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:48.647: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:50.658: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:52.667: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:54.676: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:56.688: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:18:58.695: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:00.707: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:02.716: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:04.731: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:06.739: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:08.745: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:10.755: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:12.764: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:14.772: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:16.781: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:18.789: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:20.798: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:22.807: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:24.816: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:26.825: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:28.833: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:30.849: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:32.857: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:34.868: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:36.876: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:38.882: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:40.892: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:42.904: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:44.912: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:46.928: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:48.935: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:50.944: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:52.956: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:54.964: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:56.985: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:19:58.994: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:01.005: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:03.014: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:05.033: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:07.044: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:09.053: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:11.060: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:13.080: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:15.095: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:17.103: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:19.113: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:21.122: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:23.130: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:25.138: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:27.148: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:29.156: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:31.170: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:33.176: INFO: Get pod test-webserver-4c3e9825-5a4a-48dd-b5e9-acca546a4ac3 in namespace container-probe-445
  Aug 24 14:20:35.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 14:20:35.184
  STEP: Destroying namespace "container-probe-445" for this suite. @ 08/24/23 14:20:35.242
• [245.428 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 08/24/23 14:20:35.273
  Aug 24 14:20:35.273: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 14:20:35.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:20:35.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:20:35.323
  Aug 24 14:20:35.391: INFO: Create a RollingUpdate DaemonSet
  Aug 24 14:20:35.407: INFO: Check that daemon pods launch on every node of the cluster
  Aug 24 14:20:35.425: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:35.426: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:36.447: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:36.447: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:37.446: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:37.447: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:38.458: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:38.458: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:39.443: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:39.443: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:40.459: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:40.459: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:41.443: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:41.443: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:42.446: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:42.446: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:43.456: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:43.456: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:44.459: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:44.459: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:45.443: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:45.443: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:46.443: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:20:46.443: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:47.443: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 14:20:47.443: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:48.442: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 14:20:48.442: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:49.445: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 14:20:49.445: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:50.442: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 14:20:50.442: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:51.443: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 14:20:51.444: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:52.446: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 14:20:52.446: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:20:53.441: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 14:20:53.442: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  Aug 24 14:20:53.442: INFO: Update the DaemonSet to trigger a rollout
  Aug 24 14:20:53.461: INFO: Updating DaemonSet daemon-set
  Aug 24 14:20:54.529: INFO: Roll back the DaemonSet before rollout is complete
  Aug 24 14:20:54.548: INFO: Updating DaemonSet daemon-set
  Aug 24 14:20:54.549: INFO: Make sure DaemonSet rollback is complete
  Aug 24 14:20:54.556: INFO: Wrong image for pod: daemon-set-tl2dd. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Aug 24 14:20:54.557: INFO: Pod daemon-set-tl2dd is not available
  Aug 24 14:21:00.620: INFO: Pod daemon-set-b86rt is not available
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 14:21:00.644
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1962, will wait for the garbage collector to delete the pods @ 08/24/23 14:21:00.646
  Aug 24 14:21:00.717: INFO: Deleting DaemonSet.extensions daemon-set took: 14.177196ms
  Aug 24 14:21:00.818: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.202967ms
  Aug 24 14:21:03.830: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:21:03.830: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 14:21:03.847: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12060"},"items":null}

  Aug 24 14:21:03.854: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12060"},"items":null}

  Aug 24 14:21:03.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1962" for this suite. @ 08/24/23 14:21:03.888
• [28.630 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 08/24/23 14:21:03.912
  Aug 24 14:21:03.912: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 14:21:03.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:21:03.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:21:03.953
  Aug 24 14:21:03.994: INFO: created pod pod-service-account-defaultsa
  Aug 24 14:21:03.994: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Aug 24 14:21:04.007: INFO: created pod pod-service-account-mountsa
  Aug 24 14:21:04.007: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Aug 24 14:21:04.024: INFO: created pod pod-service-account-nomountsa
  Aug 24 14:21:04.025: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Aug 24 14:21:04.040: INFO: created pod pod-service-account-defaultsa-mountspec
  Aug 24 14:21:04.040: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Aug 24 14:21:04.053: INFO: created pod pod-service-account-mountsa-mountspec
  Aug 24 14:21:04.053: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Aug 24 14:21:04.068: INFO: created pod pod-service-account-nomountsa-mountspec
  Aug 24 14:21:04.068: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Aug 24 14:21:04.078: INFO: created pod pod-service-account-defaultsa-nomountspec
  Aug 24 14:21:04.078: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Aug 24 14:21:04.089: INFO: created pod pod-service-account-mountsa-nomountspec
  Aug 24 14:21:04.089: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Aug 24 14:21:04.104: INFO: created pod pod-service-account-nomountsa-nomountspec
  Aug 24 14:21:04.104: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Aug 24 14:21:04.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5709" for this suite. @ 08/24/23 14:21:04.138
• [0.351 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 08/24/23 14:21:04.271
  Aug 24 14:21:04.271: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename deployment @ 08/24/23 14:21:04.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:21:04.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:21:04.382
  Aug 24 14:21:04.392: INFO: Creating deployment "test-recreate-deployment"
  Aug 24 14:21:04.450: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Aug 24 14:21:04.468: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  Aug 24 14:21:06.538: INFO: Waiting deployment "test-recreate-deployment" to complete
  Aug 24 14:21:06.554: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 21, 4, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 21, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 21, 4, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 21, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-dd4bc9d6d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:21:08.571: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 21, 4, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 21, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 21, 4, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 21, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-dd4bc9d6d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:21:10.582: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Aug 24 14:21:10.604: INFO: Updating deployment test-recreate-deployment
  Aug 24 14:21:10.604: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Aug 24 14:21:10.974: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2462",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9dd6e1d6-cdf8-4dde-abdc-a2cb926b34ed",
      ResourceVersion: (string) (len=5) "12240",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483664,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483664,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 14:21:10.991: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2462",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4f7c8a3-da0a-4f64-b6be-89960a6b19be",
      ResourceVersion: (string) (len=5) "12239",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483670,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "9dd6e1d6-cdf8-4dde-abdc-a2cb926b34ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 64 64 36 65 31  64 36 2d 63 64 66 38 2d  |\"9dd6e1d6-cdf8-|
              00000120  34 64 64 65 2d 61 62 64  63 2d 61 32 63 62 39 32  |4dde-abdc-a2cb92|
              00000130  36 62 33 34 65 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6b34ed\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 14:21:11.006: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Aug 24 14:21:11.007: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2462",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38d1f117-66e7-4e40-a2ab-c1560381a622",
      ResourceVersion: (string) (len=5) "12227",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483664,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "9dd6e1d6-cdf8-4dde-abdc-a2cb926b34ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 64 64 36 65 31  64 36 2d 63 64 66 38 2d  |\"9dd6e1d6-cdf8-|
              00000120  34 64 64 65 2d 61 62 64  63 2d 61 32 63 62 39 32  |4dde-abdc-a2cb92|
              00000130  36 62 33 34 65 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6b34ed\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 14:21:11.021: INFO: Pod "test-recreate-deployment-76fb77d45-tw8zl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-tw8zl",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-2462",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81dfde57-70c7-4a2d-816a-b47658e7bb5d",
      ResourceVersion: (string) (len=5) "12241",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483670,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "b4f7c8a3-da0a-4f64-b6be-89960a6b19be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  66 37 63 38 61 33 2d 64  |d\":\"b4f7c8a3-d|
              00000090  61 30 61 2d 34 66 36 34  2d 62 36 62 65 2d 38 39  |a0a-4f64-b6be-89|
              000000a0  39 36 30 61 36 62 31 39  62 65 5c 22 7d 22 3a 7b  |960a6b19be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7xc84",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7xc84",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483670,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483670,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:21:11.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2462" for this suite. @ 08/24/23 14:21:11.044
• [6.789 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 08/24/23 14:21:11.067
  Aug 24 14:21:11.067: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename podtemplate @ 08/24/23 14:21:11.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:21:11.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:21:11.112
  STEP: Create a pod template @ 08/24/23 14:21:11.12
  STEP: Replace a pod template @ 08/24/23 14:21:11.129
  Aug 24 14:21:11.150: INFO: Found updated podtemplate annotation: "true"

  Aug 24 14:21:11.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1562" for this suite. @ 08/24/23 14:21:11.16
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 08/24/23 14:21:11.177
  Aug 24 14:21:11.178: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 14:21:11.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:21:11.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:21:11.22
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 08/24/23 14:21:11.224
  STEP: Saw pod success @ 08/24/23 14:21:15.294
  Aug 24 14:21:15.315: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-083f3da3-4128-4c5d-acf1-5b0c62aead7e container test-container: <nil>
  STEP: delete the pod @ 08/24/23 14:21:15.363
  Aug 24 14:21:15.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2403" for this suite. @ 08/24/23 14:21:15.428
• [4.271 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 08/24/23 14:21:15.458
  Aug 24 14:21:15.459: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 14:21:15.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:21:15.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:21:15.519
  STEP: Creating service test in namespace statefulset-1158 @ 08/24/23 14:21:15.535
  STEP: Creating stateful set ss in namespace statefulset-1158 @ 08/24/23 14:21:15.563
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1158 @ 08/24/23 14:21:15.588
  Aug 24 14:21:15.603: INFO: Found 0 stateful pods, waiting for 1
  Aug 24 14:21:25.618: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 08/24/23 14:21:25.618
  Aug 24 14:21:25.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-1158 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:21:26.004: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:21:26.004: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:21:26.004: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 14:21:26.016: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Aug 24 14:21:36.036: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 14:21:36.036: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 24 14:21:36.142: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999224s
  Aug 24 14:21:37.180: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.929294145s
  Aug 24 14:21:38.189: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.890845327s
  Aug 24 14:21:39.201: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.881176485s
  Aug 24 14:21:40.210: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.869421558s
  Aug 24 14:21:41.218: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.860934385s
  Aug 24 14:21:42.227: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.853040082s
  Aug 24 14:21:43.237: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.843822466s
  Aug 24 14:21:44.249: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.83441347s
  Aug 24 14:21:45.258: INFO: Verifying statefulset ss doesn't scale past 3 for another 821.839833ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1158 @ 08/24/23 14:21:46.258
  Aug 24 14:21:46.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-1158 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:21:46.611: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 14:21:46.611: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:21:46.611: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:21:46.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-1158 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:21:46.962: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Aug 24 14:21:46.962: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:21:46.962: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:21:46.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-1158 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:21:47.253: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Aug 24 14:21:47.253: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:21:47.253: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:21:47.259: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:21:47.259: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:21:47.259: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 08/24/23 14:21:47.259
  Aug 24 14:21:47.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-1158 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:21:47.539: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:21:47.539: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:21:47.539: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 14:21:47.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-1158 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:21:47.828: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:21:47.828: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:21:47.829: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 14:21:47.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-1158 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:21:48.210: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:21:48.210: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:21:48.211: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 14:21:48.211: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 24 14:21:48.215: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Aug 24 14:21:58.239: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 14:21:58.240: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 14:21:58.241: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 14:21:58.286: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Aug 24 14:21:58.286: INFO: ss-0  dae4wichuiha-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:15 +0000 UTC  }]
  Aug 24 14:21:58.286: INFO: ss-1  dae4wichuiha-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:36 +0000 UTC  }]
  Aug 24 14:21:58.286: INFO: ss-2  dae4wichuiha-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:48 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:36 +0000 UTC  }]
  Aug 24 14:21:58.286: INFO: 
  Aug 24 14:21:58.286: INFO: StatefulSet ss has not reached scale 0, at 3
  Aug 24 14:21:59.329: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Aug 24 14:21:59.329: INFO: ss-0  dae4wichuiha-1  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:15 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:48 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:48 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:15 +0000 UTC  }]
  Aug 24 14:21:59.329: INFO: ss-1  dae4wichuiha-2  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:36 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:48 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:48 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 14:21:36 +0000 UTC  }]
  Aug 24 14:21:59.329: INFO: 
  Aug 24 14:21:59.329: INFO: StatefulSet ss has not reached scale 0, at 2
  Aug 24 14:22:00.337: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.948403934s
  Aug 24 14:22:01.348: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.939674495s
  Aug 24 14:22:02.354: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.928579922s
  Aug 24 14:22:03.362: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.922786178s
  Aug 24 14:22:04.369: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.914427867s
  Aug 24 14:22:05.376: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.908046409s
  Aug 24 14:22:06.384: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.9007821s
  Aug 24 14:22:07.391: INFO: Verifying statefulset ss doesn't scale past 0 for another 892.845611ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1158 @ 08/24/23 14:22:08.391
  Aug 24 14:22:08.399: INFO: Scaling statefulset ss to 0
  Aug 24 14:22:08.420: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 14:22:08.429: INFO: Deleting all statefulset in ns statefulset-1158
  Aug 24 14:22:08.438: INFO: Scaling statefulset ss to 0
  Aug 24 14:22:08.457: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 14:22:08.462: INFO: Deleting statefulset ss
  Aug 24 14:22:08.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1158" for this suite. @ 08/24/23 14:22:08.498
• [53.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 08/24/23 14:22:08.526
  Aug 24 14:22:08.526: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-watch @ 08/24/23 14:22:08.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:22:08.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:22:08.57
  Aug 24 14:22:08.575: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Creating first CR  @ 08/24/23 14:22:11.228
  Aug 24 14:22:11.239: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T14:22:11Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T14:22:11Z]] name:name1 resourceVersion:12638 uid:46de6977-f57a-4fd9-a980-9294c2dc5974] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 08/24/23 14:22:21.242
  Aug 24 14:22:21.259: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T14:22:21Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T14:22:21Z]] name:name2 resourceVersion:12691 uid:21bfc5bc-2c04-4afc-b5df-8c105f77efca] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 08/24/23 14:22:31.26
  Aug 24 14:22:31.275: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T14:22:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T14:22:31Z]] name:name1 resourceVersion:12711 uid:46de6977-f57a-4fd9-a980-9294c2dc5974] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 08/24/23 14:22:41.278
  Aug 24 14:22:41.295: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T14:22:21Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T14:22:41Z]] name:name2 resourceVersion:12733 uid:21bfc5bc-2c04-4afc-b5df-8c105f77efca] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 08/24/23 14:22:51.298
  Aug 24 14:22:51.315: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T14:22:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T14:22:31Z]] name:name1 resourceVersion:12754 uid:46de6977-f57a-4fd9-a980-9294c2dc5974] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 08/24/23 14:23:01.318
  Aug 24 14:23:01.337: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-24T14:22:21Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-24T14:22:41Z]] name:name2 resourceVersion:12776 uid:21bfc5bc-2c04-4afc-b5df-8c105f77efca] num:map[num1:9223372036854775807 num2:1000000]]}
  Aug 24 14:23:11.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7123" for this suite. @ 08/24/23 14:23:11.891
• [63.378 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 08/24/23 14:23:11.925
  Aug 24 14:23:11.925: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 14:23:11.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:23:11.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:23:11.962
  STEP: Create a pod @ 08/24/23 14:23:11.967
  STEP: patching /status @ 08/24/23 14:23:16.014
  Aug 24 14:23:16.029: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Aug 24 14:23:16.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4791" for this suite. @ 08/24/23 14:23:16.036
• [4.126 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 08/24/23 14:23:16.051
  Aug 24 14:23:16.051: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 14:23:16.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:23:16.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:23:16.137
  STEP: Create a Replicaset @ 08/24/23 14:23:16.146
  STEP: Verify that the required pods have come up. @ 08/24/23 14:23:16.158
  Aug 24 14:23:16.168: INFO: Pod name sample-pod: Found 0 pods out of 1
  Aug 24 14:23:21.178: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 14:23:21.178
  STEP: Getting /status @ 08/24/23 14:23:21.179
  Aug 24 14:23:21.193: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 08/24/23 14:23:21.193
  Aug 24 14:23:21.216: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 08/24/23 14:23:21.216
  Aug 24 14:23:21.232: INFO: Observed &ReplicaSet event: ADDED
  Aug 24 14:23:21.234: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 14:23:21.234: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 14:23:21.236: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 14:23:21.237: INFO: Found replicaset test-rs in namespace replicaset-3437 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 24 14:23:21.237: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 08/24/23 14:23:21.237
  Aug 24 14:23:21.237: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 24 14:23:21.264: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 08/24/23 14:23:21.264
  Aug 24 14:23:21.275: INFO: Observed &ReplicaSet event: ADDED
  Aug 24 14:23:21.276: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 14:23:21.281: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 14:23:21.284: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 14:23:21.285: INFO: Observed replicaset test-rs in namespace replicaset-3437 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 14:23:21.287: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 24 14:23:21.288: INFO: Found replicaset test-rs in namespace replicaset-3437 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Aug 24 14:23:21.288: INFO: Replicaset test-rs has a patched status
  Aug 24 14:23:21.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3437" for this suite. @ 08/24/23 14:23:21.303
• [5.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 08/24/23 14:23:21.324
  Aug 24 14:23:21.324: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-runtime @ 08/24/23 14:23:21.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:23:21.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:23:21.37
  STEP: create the container @ 08/24/23 14:23:21.383
  W0824 14:23:21.400294      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 08/24/23 14:23:21.4
  STEP: get the container status @ 08/24/23 14:23:24.469
  STEP: the container should be terminated @ 08/24/23 14:23:24.474
  STEP: the termination message should be set @ 08/24/23 14:23:24.475
  Aug 24 14:23:24.475: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/24/23 14:23:24.476
  Aug 24 14:23:24.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5415" for this suite. @ 08/24/23 14:23:24.518
• [3.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 08/24/23 14:23:24.539
  Aug 24 14:23:24.539: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename security-context-test @ 08/24/23 14:23:24.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:23:24.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:23:24.57
  Aug 24 14:23:28.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6231" for this suite. @ 08/24/23 14:23:28.617
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 08/24/23 14:23:28.638
  Aug 24 14:23:28.638: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 14:23:28.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:23:28.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:23:28.675
  STEP: Setting up server cert @ 08/24/23 14:23:28.722
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 14:23:29.894
  STEP: Deploying the webhook pod @ 08/24/23 14:23:29.91
  STEP: Wait for the deployment to be ready @ 08/24/23 14:23:29.938
  Aug 24 14:23:30.015: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/24/23 14:23:32.043
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 14:23:32.078
  Aug 24 14:23:33.078: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/24/23 14:23:33.101
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/24/23 14:23:33.148
  STEP: Creating a dummy validating-webhook-configuration object @ 08/24/23 14:23:33.181
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 08/24/23 14:23:33.201
  STEP: Creating a dummy mutating-webhook-configuration object @ 08/24/23 14:23:33.213
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 08/24/23 14:23:33.23
  Aug 24 14:23:33.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6223" for this suite. @ 08/24/23 14:23:33.442
  STEP: Destroying namespace "webhook-markers-88" for this suite. @ 08/24/23 14:23:33.453
• [4.827 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 08/24/23 14:23:33.468
  Aug 24 14:23:33.468: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:23:33.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:23:33.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:23:33.507
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:23:33.512
  STEP: Saw pod success @ 08/24/23 14:23:37.557
  Aug 24 14:23:37.562: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-9485d335-7a3c-414f-a297-1fa1db9909c4 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:23:37.589
  Aug 24 14:23:37.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9004" for this suite. @ 08/24/23 14:23:37.624
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 08/24/23 14:23:37.649
  Aug 24 14:23:37.650: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 14:23:37.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:23:37.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:23:37.686
  STEP: Creating a test namespace @ 08/24/23 14:23:37.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:23:37.726
  STEP: Creating a pod in the namespace @ 08/24/23 14:23:37.731
  STEP: Waiting for the pod to have running status @ 08/24/23 14:23:37.751
  STEP: Deleting the namespace @ 08/24/23 14:23:39.795
  STEP: Waiting for the namespace to be removed. @ 08/24/23 14:23:39.806
  STEP: Recreating the namespace @ 08/24/23 14:23:50.814
  STEP: Verifying there are no pods in the namespace @ 08/24/23 14:23:50.846
  Aug 24 14:23:50.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4231" for this suite. @ 08/24/23 14:23:50.86
  STEP: Destroying namespace "nsdeletetest-37" for this suite. @ 08/24/23 14:23:50.874
  Aug 24 14:23:50.879: INFO: Namespace nsdeletetest-37 was already deleted
  STEP: Destroying namespace "nsdeletetest-2900" for this suite. @ 08/24/23 14:23:50.88
• [13.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 08/24/23 14:23:50.901
  Aug 24 14:23:50.901: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename deployment @ 08/24/23 14:23:50.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:23:50.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:23:50.944
  STEP: creating a Deployment @ 08/24/23 14:23:50.956
  STEP: waiting for Deployment to be created @ 08/24/23 14:23:50.967
  STEP: waiting for all Replicas to be Ready @ 08/24/23 14:23:50.97
  Aug 24 14:23:50.975: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 14:23:50.975: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 14:23:50.989: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 14:23:50.989: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 14:23:51.007: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 14:23:51.007: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 14:23:51.143: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 14:23:51.143: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 24 14:23:52.277: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Aug 24 14:23:52.278: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Aug 24 14:23:52.536: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 08/24/23 14:23:52.536
  Aug 24 14:23:52.557: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 08/24/23 14:23:52.557
  Aug 24 14:23:52.562: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0
  Aug 24 14:23:52.562: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0
  Aug 24 14:23:52.563: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0
  Aug 24 14:23:52.563: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0
  Aug 24 14:23:52.563: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0
  Aug 24 14:23:52.564: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0
  Aug 24 14:23:52.564: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0
  Aug 24 14:23:52.565: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 0
  Aug 24 14:23:52.565: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  Aug 24 14:23:52.566: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  Aug 24 14:23:52.566: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:52.567: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:52.567: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:52.567: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:52.581: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:52.582: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:52.620: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:52.620: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:52.646: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  Aug 24 14:23:52.646: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  Aug 24 14:23:52.660: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  Aug 24 14:23:52.661: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  Aug 24 14:23:54.317: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:54.317: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:54.349: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  STEP: listing Deployments @ 08/24/23 14:23:54.349
  Aug 24 14:23:54.371: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 08/24/23 14:23:54.372
  Aug 24 14:23:54.399: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 08/24/23 14:23:54.399
  Aug 24 14:23:54.576: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 14:23:54.576: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 14:23:54.576: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 14:23:54.632: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 14:23:56.612: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 14:23:56.653: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 14:23:56.678: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 14:23:56.730: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 24 14:23:58.321: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 08/24/23 14:23:58.431
  STEP: fetching the DeploymentStatus @ 08/24/23 14:23:58.467
  Aug 24 14:23:58.479: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  Aug 24 14:23:58.480: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  Aug 24 14:23:58.481: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  Aug 24 14:23:58.481: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 1
  Aug 24 14:23:58.482: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:58.483: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 3
  Aug 24 14:23:58.491: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:58.491: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 2
  Aug 24 14:23:58.492: INFO: observed Deployment test-deployment in namespace deployment-2205 with ReadyReplicas 3
  STEP: deleting the Deployment @ 08/24/23 14:23:58.492
  Aug 24 14:23:58.570: INFO: observed event type MODIFIED
  Aug 24 14:23:58.570: INFO: observed event type MODIFIED
  Aug 24 14:23:58.570: INFO: observed event type MODIFIED
  Aug 24 14:23:58.571: INFO: observed event type MODIFIED
  Aug 24 14:23:58.571: INFO: observed event type MODIFIED
  Aug 24 14:23:58.571: INFO: observed event type MODIFIED
  Aug 24 14:23:58.571: INFO: observed event type MODIFIED
  Aug 24 14:23:58.571: INFO: observed event type MODIFIED
  Aug 24 14:23:58.571: INFO: observed event type MODIFIED
  Aug 24 14:23:58.571: INFO: observed event type MODIFIED
  Aug 24 14:23:58.571: INFO: observed event type MODIFIED
  Aug 24 14:23:58.571: INFO: observed event type MODIFIED
  Aug 24 14:23:58.595: INFO: Log out all the ReplicaSets if there is no deployment created
  Aug 24 14:23:58.611: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7576188b-4e4c-42f1-8004-3f9220782e15",
      ResourceVersion: (string) (len=5) "13315",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483832,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c61ee966-7794-476d-9dea-8ffbf77c2855",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 36 31 65  65 39 36 36 2d 37 37 39  |":\"c61ee966-779|
              00000130  34 2d 34 37 36 64 2d 39  64 65 61 2d 38 66 66 62  |4-476d-9dea-8ffb|
              00000140  66 37 37 63 32 38 35 35  5c 22 7d 22 3a 7b 7d 7d  |f77c2855\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 24 14:23:58.663: INFO: pod: "test-deployment-64fd565c98-8w749":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-8w749",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-2205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5393c2ba-536d-4763-9eac-08209eeef90d",
      ResourceVersion: (string) (len=5) "13321",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483832,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "7576188b-4e4c-42f1-8004-3f9220782e15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 35 37 36 31 38 38 62  |uid\":\"7576188b|
              000000a0  2d 34 65 34 63 2d 34 32  66 31 2d 38 30 30 34 2d  |-4e4c-42f1-8004-|
              000000b0  33 66 39 32 32 30 37 38  32 65 31 35 5c 22 7d 22  |3f9220782e15\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=479) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              00000130  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              00000140  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000160  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000170  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000180  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              00000190  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001a0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001b0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001c0  22 66 3a 70 68 61 73 65  22 3a 7b 7d 2c 22 66 3a  |"f:phase":{},"f:|
              000001d0  73 74 61 72 74 54 69 6d  65 22 3a 7b 7d 7d 7d     |startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pmmpt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pmmpt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483832,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828483833,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828483838,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=72) "cri-o://519f545639464360802097336b6ba11ea6f0735b176483b13fdb1204de525555"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=64) "e6f1816883972d4be47bd48879a08919b96afcd344132622e4d444987919323c",
          ContainerID: (string) (len=72) "cri-o://519f545639464360802097336b6ba11ea6f0735b176483b13fdb1204de525555",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 24 14:23:58.739: INFO: pod: "test-deployment-64fd565c98-hfhsg":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-hfhsg",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-2205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af89afb7-cece-44ec-a479-8d2ab2258059",
      ResourceVersion: (string) (len=5) "13282",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483834,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483838,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "7576188b-4e4c-42f1-8004-3f9220782e15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  37 35 37 36 31 38 38 62  |uid\":\"7576188b|
              000000a0  2d 34 65 34 63 2d 34 32  66 31 2d 38 30 30 34 2d  |-4e4c-42f1-8004-|
              000000b0  33 66 39 32 32 30 37 38  32 65 31 35 5c 22 7d 22  |3f9220782e15\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 32 30 36 5c 22 7d  |10.233.65.206\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t85dz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t85dz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483834,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828483835,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=64) "e6f1816883972d4be47bd48879a08919b96afcd344132622e4d444987919323c",
          ContainerID: (string) (len=72) "cri-o://db5f00bf4ce7abcb4175ac2bf1a276beb579b47d650c556992c3ca2fbb5567a8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 24 14:23:58.772: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b010f7c7-a8fe-4252-a6bc-cbc757515013",
      ResourceVersion: (string) (len=5) "13224",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c61ee966-7794-476d-9dea-8ffbf77c2855",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 36 31 65  65 39 36 36 2d 37 37 39  |":\"c61ee966-779|
              00000130  34 2d 34 37 36 64 2d 39  64 65 61 2d 38 66 66 62  |4-476d-9dea-8ffb|
              00000140  66 37 37 63 32 38 35 35  5c 22 7d 22 3a 7b 7d 7d  |f77c2855\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 24 14:23:58.786: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ed7d936-69df-40a3-b0a6-63d1429982c9",
      ResourceVersion: (string) (len=5) "13307",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483834,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c61ee966-7794-476d-9dea-8ffbf77c2855",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 36 31 65  65 39 36 36 2d 37 37 39  |":\"c61ee966-779|
              00000130  34 2d 34 37 36 64 2d 39  64 65 61 2d 38 66 66 62  |4-476d-9dea-8ffb|
              00000140  66 37 37 63 32 38 35 35  5c 22 7d 22 3a 7b 7d 7d  |f77c2855\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 24 14:23:58.805: INFO: pod: "test-deployment-79ff746c4-jxqnq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-jxqnq",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-2205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc339dd9-a211-484f-b676-3456aa78f69e",
      ResourceVersion: (string) (len=5) "13326",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483834,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "0ed7d936-69df-40a3-b0a6-63d1429982c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 65 64 37 64 39 33 36  |uid\":\"0ed7d936|
              000000a0  2d 36 39 64 66 2d 34 30  61 33 2d 62 30 61 36 2d  |-69df-40a3-b0a6-|
              000000b0  36 33 64 31 34 32 39 39  38 32 63 39 5c 22 7d 22  |63d1429982c9\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 39 36 5c 22 7d 22  |10.233.65.96\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9kfwc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9kfwc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.96",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.96"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483834,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828483835,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://99e3bfa7db54c83c147a8aecaa0c33fba355478f154075a6da410cf715e29689",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 24 14:23:58.810: INFO: pod: "test-deployment-79ff746c4-s6bt6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-s6bt6",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-2205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a0f1bd7-8286-4c50-9fb0-8b10c258caaa",
      ResourceVersion: (string) (len=5) "13327",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "0ed7d936-69df-40a3-b0a6-63d1429982c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 65 64 37 64 39 33 36  |uid\":\"0ed7d936|
              000000a0  2d 36 39 64 66 2d 34 30  61 33 2d 62 30 61 36 2d  |-69df-40a3-b0a6-|
              000000b0  36 33 64 31 34 32 39 39  38 32 63 39 5c 22 7d 22  |63d1429982c9\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 35 35 5c 22 7d  |10.233.64.155\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6m25b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6m25b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828483836,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828483836,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828483837,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://047e207c014451d917ba8952e1c08a79eee635ade8fd5a42c73589438ed06269",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 24 14:23:58.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2205" for this suite. @ 08/24/23 14:23:58.831
• [7.942 seconds]
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 08/24/23 14:23:58.844
  Aug 24 14:23:58.844: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 14:23:58.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:23:58.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:23:58.891
  STEP: Create set of pods @ 08/24/23 14:23:58.895
  Aug 24 14:23:58.913: INFO: created test-pod-1
  Aug 24 14:23:58.925: INFO: created test-pod-2
  Aug 24 14:23:58.940: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 08/24/23 14:23:58.94
  STEP: waiting for all pods to be deleted @ 08/24/23 14:24:03.072
  Aug 24 14:24:03.091: INFO: Pod quantity 3 is different from expected quantity 0
  Aug 24 14:24:04.105: INFO: Pod quantity 2 is different from expected quantity 0
  Aug 24 14:24:05.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5034" for this suite. @ 08/24/23 14:24:05.108
• [6.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 08/24/23 14:24:05.14
  Aug 24 14:24:05.140: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 14:24:05.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:24:05.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:24:05.197
  STEP: creating a secret @ 08/24/23 14:24:05.207
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 08/24/23 14:24:05.222
  STEP: patching the secret @ 08/24/23 14:24:05.229
  STEP: deleting the secret using a LabelSelector @ 08/24/23 14:24:05.248
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 08/24/23 14:24:05.261
  Aug 24 14:24:05.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3159" for this suite. @ 08/24/23 14:24:05.276
• [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 08/24/23 14:24:05.294
  Aug 24 14:24:05.294: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/24/23 14:24:05.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:24:05.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:24:05.338
  Aug 24 14:24:05.343: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 14:24:06.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7665" for this suite. @ 08/24/23 14:24:06.629
• [1.357 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 08/24/23 14:24:06.653
  Aug 24 14:24:06.653: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 14:24:06.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:24:06.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:24:06.691
  STEP: Creating pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590 @ 08/24/23 14:24:06.696
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 14:24:08.747
  Aug 24 14:24:08.753: INFO: Initial restart count of pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 is 0
  Aug 24 14:24:08.760: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:10.767: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:12.776: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:14.786: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:16.798: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:18.808: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:20.816: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:22.824: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:24.836: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:26.847: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:28.854: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:30.874: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:32.887: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:34.899: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:36.911: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:38.917: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:40.927: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:42.935: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:44.943: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:46.954: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:48.963: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:50.971: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:52.979: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:54.988: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:56.997: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:24:59.007: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:25:01.017: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:25:03.026: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:25:05.042: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:25:07.049: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:25:09.058: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:25:11.066: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:25:13.086: INFO: Get pod test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 in namespace container-probe-8590
  Aug 24 14:25:13.086: INFO: Restart count of pod container-probe-8590/test-grpc-3895217c-3bee-4a73-bbd5-7a6a2c1e9d11 is now 1 (1m4.332256449s elapsed)
  Aug 24 14:25:13.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 14:25:13.102
  STEP: Destroying namespace "container-probe-8590" for this suite. @ 08/24/23 14:25:13.135
• [66.501 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 08/24/23 14:25:13.16
  Aug 24 14:25:13.160: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 14:25:13.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:25:13.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:25:13.208
  STEP: Counting existing ResourceQuota @ 08/24/23 14:25:13.215
  STEP: Creating a ResourceQuota @ 08/24/23 14:25:18.224
  STEP: Ensuring resource quota status is calculated @ 08/24/23 14:25:18.237
  STEP: Creating a ReplicationController @ 08/24/23 14:25:20.249
  STEP: Ensuring resource quota status captures replication controller creation @ 08/24/23 14:25:20.287
  STEP: Deleting a ReplicationController @ 08/24/23 14:25:22.298
  STEP: Ensuring resource quota status released usage @ 08/24/23 14:25:22.314
  Aug 24 14:25:24.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3491" for this suite. @ 08/24/23 14:25:24.338
• [11.194 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 08/24/23 14:25:24.359
  Aug 24 14:25:24.359: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename disruption @ 08/24/23 14:25:24.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:25:24.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:25:24.405
  STEP: Waiting for the pdb to be processed @ 08/24/23 14:25:24.426
  STEP: Updating PodDisruptionBudget status @ 08/24/23 14:25:26.45
  STEP: Waiting for all pods to be running @ 08/24/23 14:25:26.478
  Aug 24 14:25:26.494: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 08/24/23 14:25:28.507
  STEP: Waiting for the pdb to be processed @ 08/24/23 14:25:28.545
  STEP: Patching PodDisruptionBudget status @ 08/24/23 14:25:28.57
  STEP: Waiting for the pdb to be processed @ 08/24/23 14:25:28.598
  Aug 24 14:25:28.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8269" for this suite. @ 08/24/23 14:25:28.616
• [4.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 08/24/23 14:25:28.638
  Aug 24 14:25:28.638: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl-logs @ 08/24/23 14:25:28.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:25:28.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:25:28.677
  STEP: creating an pod @ 08/24/23 14:25:28.681
  Aug 24 14:25:28.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-logs-646 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Aug 24 14:25:28.880: INFO: stderr: ""
  Aug 24 14:25:28.880: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 08/24/23 14:25:28.881
  Aug 24 14:25:28.882: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Aug 24 14:25:30.911: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 08/24/23 14:25:30.911
  Aug 24 14:25:30.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-logs-646 logs logs-generator logs-generator'
  Aug 24 14:25:31.237: INFO: stderr: ""
  Aug 24 14:25:31.237: INFO: stdout: "I0824 14:25:30.091165       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/2llv 224\nI0824 14:25:30.290864       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/x2xt 346\nI0824 14:25:30.491363       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/sw7k 304\nI0824 14:25:30.692347       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/f2xt 588\nI0824 14:25:30.890867       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/mjxf 294\nI0824 14:25:31.095372       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/x58z 248\n"
  STEP: limiting log lines @ 08/24/23 14:25:31.237
  Aug 24 14:25:31.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-logs-646 logs logs-generator logs-generator --tail=1'
  Aug 24 14:25:31.569: INFO: stderr: ""
  Aug 24 14:25:31.572: INFO: stdout: "I0824 14:25:31.490847       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/7dk 594\n"
  Aug 24 14:25:31.574: INFO: got output "I0824 14:25:31.490847       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/7dk 594\n"
  STEP: limiting log bytes @ 08/24/23 14:25:31.575
  Aug 24 14:25:31.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-logs-646 logs logs-generator logs-generator --limit-bytes=1'
  Aug 24 14:25:31.774: INFO: stderr: ""
  Aug 24 14:25:31.775: INFO: stdout: "I"
  Aug 24 14:25:31.775: INFO: got output "I"
  STEP: exposing timestamps @ 08/24/23 14:25:31.775
  Aug 24 14:25:31.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-logs-646 logs logs-generator logs-generator --tail=1 --timestamps'
  Aug 24 14:25:31.950: INFO: stderr: ""
  Aug 24 14:25:31.950: INFO: stdout: "2023-08-24T14:25:31.890962155Z I0824 14:25:31.890854       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/dcn 582\n"
  Aug 24 14:25:31.950: INFO: got output "2023-08-24T14:25:31.890962155Z I0824 14:25:31.890854       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/dcn 582\n"
  STEP: restricting to a time range @ 08/24/23 14:25:31.951
  Aug 24 14:25:34.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-logs-646 logs logs-generator logs-generator --since=1s'
  Aug 24 14:25:34.629: INFO: stderr: ""
  Aug 24 14:25:34.629: INFO: stdout: "I0824 14:25:33.690887       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/pwh 580\nI0824 14:25:33.891462       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/nncx 435\nI0824 14:25:34.090916       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/xs4 247\nI0824 14:25:34.291372       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/kmb 369\nI0824 14:25:34.490833       1 logs_generator.go:76] 22 GET /api/v1/namespaces/default/pods/6xp 573\n"
  Aug 24 14:25:34.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-logs-646 logs logs-generator logs-generator --since=24h'
  Aug 24 14:25:34.814: INFO: stderr: ""
  Aug 24 14:25:34.814: INFO: stdout: "I0824 14:25:30.091165       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/2llv 224\nI0824 14:25:30.290864       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/x2xt 346\nI0824 14:25:30.491363       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/sw7k 304\nI0824 14:25:30.692347       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/f2xt 588\nI0824 14:25:30.890867       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/mjxf 294\nI0824 14:25:31.095372       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/x58z 248\nI0824 14:25:31.291360       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/k5k 486\nI0824 14:25:31.490847       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/7dk 594\nI0824 14:25:31.691355       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/89h8 528\nI0824 14:25:31.890854       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/dcn 582\nI0824 14:25:32.091334       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/swxj 576\nI0824 14:25:32.291344       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/ggc 311\nI0824 14:25:32.492487       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/z7f2 328\nI0824 14:25:32.691393       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/qh8j 238\nI0824 14:25:32.890889       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/5qw 244\nI0824 14:25:33.093181       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/2vrh 364\nI0824 14:25:33.290525       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/fg9 346\nI0824 14:25:33.491410       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/nlp 269\nI0824 14:25:33.690887       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/pwh 580\nI0824 14:25:33.891462       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/nncx 435\nI0824 14:25:34.090916       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/xs4 247\nI0824 14:25:34.291372       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/kmb 369\nI0824 14:25:34.490833       1 logs_generator.go:76] 22 GET /api/v1/namespaces/default/pods/6xp 573\nI0824 14:25:34.691485       1 logs_generator.go:76] 23 POST /api/v1/namespaces/ns/pods/97td 243\n"
  Aug 24 14:25:34.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-logs-646 delete pod logs-generator'
  Aug 24 14:25:35.801: INFO: stderr: ""
  Aug 24 14:25:35.801: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Aug 24 14:25:35.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-646" for this suite. @ 08/24/23 14:25:35.815
• [7.191 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 08/24/23 14:25:35.832
  Aug 24 14:25:35.832: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 14:25:35.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:25:35.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:25:35.874
  STEP: Creating configMap with name configmap-test-volume-1d648b29-7d8d-4dac-bc3a-fac34eb404f8 @ 08/24/23 14:25:35.879
  STEP: Creating a pod to test consume configMaps @ 08/24/23 14:25:35.888
  STEP: Saw pod success @ 08/24/23 14:25:39.931
  Aug 24 14:25:39.937: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-configmaps-2e3a2878-0341-4ea8-a6d3-55e4234b281d container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:25:39.947
  Aug 24 14:25:39.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7174" for this suite. @ 08/24/23 14:25:39.984
• [4.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 08/24/23 14:25:40.006
  Aug 24 14:25:40.006: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 14:25:40.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:25:40.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:25:40.041
  STEP: Creating configMap with name configmap-test-volume-8488eb93-275b-4920-8455-6a6da73ac223 @ 08/24/23 14:25:40.045
  STEP: Creating a pod to test consume configMaps @ 08/24/23 14:25:40.053
  STEP: Saw pod success @ 08/24/23 14:25:44.106
  Aug 24 14:25:44.118: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-configmaps-f4a8c65e-8398-480a-957d-53bcab7f36fb container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:25:44.135
  Aug 24 14:25:44.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7086" for this suite. @ 08/24/23 14:25:44.172
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 08/24/23 14:25:44.195
  Aug 24 14:25:44.195: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 14:25:44.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:25:44.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:25:44.235
  STEP: Setting up server cert @ 08/24/23 14:25:44.283
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 14:25:44.771
  STEP: Deploying the webhook pod @ 08/24/23 14:25:44.783
  STEP: Wait for the deployment to be ready @ 08/24/23 14:25:44.807
  Aug 24 14:25:44.849: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/24/23 14:25:46.87
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 14:25:46.911
  Aug 24 14:25:47.912: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 08/24/23 14:25:47.924
  STEP: create a configmap that should be updated by the webhook @ 08/24/23 14:25:47.96
  Aug 24 14:25:47.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8843" for this suite. @ 08/24/23 14:25:48.133
  STEP: Destroying namespace "webhook-markers-6966" for this suite. @ 08/24/23 14:25:48.156
• [3.976 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 08/24/23 14:25:48.175
  Aug 24 14:25:48.175: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename discovery @ 08/24/23 14:25:48.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:25:48.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:25:48.217
  STEP: Setting up server cert @ 08/24/23 14:25:48.224
  Aug 24 14:25:48.947: INFO: Checking APIGroup: apiregistration.k8s.io
  Aug 24 14:25:48.949: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Aug 24 14:25:48.949: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Aug 24 14:25:48.949: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Aug 24 14:25:48.949: INFO: Checking APIGroup: apps
  Aug 24 14:25:48.950: INFO: PreferredVersion.GroupVersion: apps/v1
  Aug 24 14:25:48.950: INFO: Versions found [{apps/v1 v1}]
  Aug 24 14:25:48.950: INFO: apps/v1 matches apps/v1
  Aug 24 14:25:48.950: INFO: Checking APIGroup: events.k8s.io
  Aug 24 14:25:48.951: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Aug 24 14:25:48.951: INFO: Versions found [{events.k8s.io/v1 v1}]
  Aug 24 14:25:48.951: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Aug 24 14:25:48.951: INFO: Checking APIGroup: authentication.k8s.io
  Aug 24 14:25:48.953: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Aug 24 14:25:48.953: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Aug 24 14:25:48.953: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Aug 24 14:25:48.953: INFO: Checking APIGroup: authorization.k8s.io
  Aug 24 14:25:48.955: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Aug 24 14:25:48.955: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Aug 24 14:25:48.955: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Aug 24 14:25:48.955: INFO: Checking APIGroup: autoscaling
  Aug 24 14:25:48.957: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Aug 24 14:25:48.957: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Aug 24 14:25:48.957: INFO: autoscaling/v2 matches autoscaling/v2
  Aug 24 14:25:48.957: INFO: Checking APIGroup: batch
  Aug 24 14:25:48.958: INFO: PreferredVersion.GroupVersion: batch/v1
  Aug 24 14:25:48.958: INFO: Versions found [{batch/v1 v1}]
  Aug 24 14:25:48.958: INFO: batch/v1 matches batch/v1
  Aug 24 14:25:48.958: INFO: Checking APIGroup: certificates.k8s.io
  Aug 24 14:25:48.960: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Aug 24 14:25:48.960: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Aug 24 14:25:48.960: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Aug 24 14:25:48.960: INFO: Checking APIGroup: networking.k8s.io
  Aug 24 14:25:48.962: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Aug 24 14:25:48.962: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Aug 24 14:25:48.962: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Aug 24 14:25:48.962: INFO: Checking APIGroup: policy
  Aug 24 14:25:48.964: INFO: PreferredVersion.GroupVersion: policy/v1
  Aug 24 14:25:48.964: INFO: Versions found [{policy/v1 v1}]
  Aug 24 14:25:48.964: INFO: policy/v1 matches policy/v1
  Aug 24 14:25:48.965: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Aug 24 14:25:48.967: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Aug 24 14:25:48.967: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Aug 24 14:25:48.967: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Aug 24 14:25:48.967: INFO: Checking APIGroup: storage.k8s.io
  Aug 24 14:25:48.968: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Aug 24 14:25:48.968: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Aug 24 14:25:48.968: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Aug 24 14:25:48.968: INFO: Checking APIGroup: admissionregistration.k8s.io
  Aug 24 14:25:48.970: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Aug 24 14:25:48.970: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Aug 24 14:25:48.971: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Aug 24 14:25:48.971: INFO: Checking APIGroup: apiextensions.k8s.io
  Aug 24 14:25:48.973: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Aug 24 14:25:48.973: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Aug 24 14:25:48.973: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Aug 24 14:25:48.973: INFO: Checking APIGroup: scheduling.k8s.io
  Aug 24 14:25:48.974: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Aug 24 14:25:48.974: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Aug 24 14:25:48.975: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Aug 24 14:25:48.975: INFO: Checking APIGroup: coordination.k8s.io
  Aug 24 14:25:48.976: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Aug 24 14:25:48.976: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Aug 24 14:25:48.976: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Aug 24 14:25:48.976: INFO: Checking APIGroup: node.k8s.io
  Aug 24 14:25:48.978: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Aug 24 14:25:48.978: INFO: Versions found [{node.k8s.io/v1 v1}]
  Aug 24 14:25:48.978: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Aug 24 14:25:48.978: INFO: Checking APIGroup: discovery.k8s.io
  Aug 24 14:25:48.980: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Aug 24 14:25:48.980: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Aug 24 14:25:48.980: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Aug 24 14:25:48.980: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Aug 24 14:25:48.982: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Aug 24 14:25:48.982: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Aug 24 14:25:48.982: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Aug 24 14:25:48.982: INFO: Checking APIGroup: cilium.io
  Aug 24 14:25:48.984: INFO: PreferredVersion.GroupVersion: cilium.io/v2
  Aug 24 14:25:48.984: INFO: Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  Aug 24 14:25:48.985: INFO: cilium.io/v2 matches cilium.io/v2
  Aug 24 14:25:48.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4660" for this suite. @ 08/24/23 14:25:48.996
• [0.840 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 08/24/23 14:25:49.017
  Aug 24 14:25:49.017: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:25:49.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:25:49.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:25:49.063
  STEP: Creating the pod @ 08/24/23 14:25:49.068
  Aug 24 14:25:51.646: INFO: Successfully updated pod "labelsupdate70f84f97-1d08-4279-be6c-4b89ccbeb39c"
  Aug 24 14:25:53.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6997" for this suite. @ 08/24/23 14:25:53.734
• [4.733 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 08/24/23 14:25:53.768
  Aug 24 14:25:53.768: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:25:53.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:25:53.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:25:53.807
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:25:53.813
  STEP: Saw pod success @ 08/24/23 14:25:57.871
  Aug 24 14:25:57.877: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-4d0eeea4-fee3-4c7c-9059-7419c3d3e691 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:25:57.895
  Aug 24 14:25:57.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9385" for this suite. @ 08/24/23 14:25:57.932
• [4.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 08/24/23 14:25:57.949
  Aug 24 14:25:57.949: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 14:25:57.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:25:58.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:25:58.032
  Aug 24 14:25:58.047: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 08/24/23 14:26:00.134
  Aug 24 14:26:00.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 --namespace=crd-publish-openapi-8916 create -f -'
  Aug 24 14:26:01.500: INFO: stderr: ""
  Aug 24 14:26:01.500: INFO: stdout: "e2e-test-crd-publish-openapi-2242-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Aug 24 14:26:01.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 --namespace=crd-publish-openapi-8916 delete e2e-test-crd-publish-openapi-2242-crds test-foo'
  Aug 24 14:26:01.658: INFO: stderr: ""
  Aug 24 14:26:01.658: INFO: stdout: "e2e-test-crd-publish-openapi-2242-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Aug 24 14:26:01.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 --namespace=crd-publish-openapi-8916 apply -f -'
  Aug 24 14:26:02.908: INFO: stderr: ""
  Aug 24 14:26:02.909: INFO: stdout: "e2e-test-crd-publish-openapi-2242-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Aug 24 14:26:02.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 --namespace=crd-publish-openapi-8916 delete e2e-test-crd-publish-openapi-2242-crds test-foo'
  Aug 24 14:26:03.124: INFO: stderr: ""
  Aug 24 14:26:03.124: INFO: stdout: "e2e-test-crd-publish-openapi-2242-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 08/24/23 14:26:03.125
  Aug 24 14:26:03.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 --namespace=crd-publish-openapi-8916 create -f -'
  Aug 24 14:26:03.639: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 08/24/23 14:26:03.639
  Aug 24 14:26:03.640: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 --namespace=crd-publish-openapi-8916 create -f -'
  Aug 24 14:26:04.016: INFO: rc: 1
  Aug 24 14:26:04.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 --namespace=crd-publish-openapi-8916 apply -f -'
  Aug 24 14:26:04.419: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 08/24/23 14:26:04.419
  Aug 24 14:26:04.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 --namespace=crd-publish-openapi-8916 create -f -'
  Aug 24 14:26:04.920: INFO: rc: 1
  Aug 24 14:26:04.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 --namespace=crd-publish-openapi-8916 apply -f -'
  Aug 24 14:26:05.358: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 08/24/23 14:26:05.358
  Aug 24 14:26:05.358: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 explain e2e-test-crd-publish-openapi-2242-crds'
  Aug 24 14:26:05.747: INFO: stderr: ""
  Aug 24 14:26:05.747: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2242-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 08/24/23 14:26:05.748
  Aug 24 14:26:05.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 explain e2e-test-crd-publish-openapi-2242-crds.metadata'
  Aug 24 14:26:06.102: INFO: stderr: ""
  Aug 24 14:26:06.102: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2242-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Aug 24 14:26:06.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 explain e2e-test-crd-publish-openapi-2242-crds.spec'
  Aug 24 14:26:06.437: INFO: stderr: ""
  Aug 24 14:26:06.438: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2242-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Aug 24 14:26:06.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 explain e2e-test-crd-publish-openapi-2242-crds.spec.bars'
  Aug 24 14:26:06.829: INFO: stderr: ""
  Aug 24 14:26:06.829: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2242-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 08/24/23 14:26:06.83
  Aug 24 14:26:06.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-8916 explain e2e-test-crd-publish-openapi-2242-crds.spec.bars2'
  Aug 24 14:26:07.166: INFO: rc: 1
  Aug 24 14:26:09.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8916" for this suite. @ 08/24/23 14:26:09.233
• [11.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 08/24/23 14:26:09.26
  Aug 24 14:26:09.260: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/24/23 14:26:09.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:26:09.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:26:09.31
  STEP: creating @ 08/24/23 14:26:09.318
  STEP: getting @ 08/24/23 14:26:09.357
  STEP: listing in namespace @ 08/24/23 14:26:09.364
  STEP: patching @ 08/24/23 14:26:09.374
  STEP: deleting @ 08/24/23 14:26:09.39
  Aug 24 14:26:09.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1027" for this suite. @ 08/24/23 14:26:09.55
• [0.302 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 08/24/23 14:26:09.567
  Aug 24 14:26:09.567: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 14:26:09.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:26:09.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:26:09.594
  STEP: creating service in namespace services-6759 @ 08/24/23 14:26:09.599
  STEP: creating service affinity-nodeport in namespace services-6759 @ 08/24/23 14:26:09.6
  STEP: creating replication controller affinity-nodeport in namespace services-6759 @ 08/24/23 14:26:09.633
  I0824 14:26:09.651189      14 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-6759, replica count: 3
  I0824 14:26:12.714626      14 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0824 14:26:15.716118      14 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 14:26:15.758: INFO: Creating new exec pod
  Aug 24 14:26:18.796: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-6759 exec execpod-affinity879pn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Aug 24 14:26:19.094: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Aug 24 14:26:19.094: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:26:19.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-6759 exec execpod-affinity879pn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.42.119 80'
  Aug 24 14:26:19.349: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.42.119 80\nConnection to 10.233.42.119 80 port [tcp/http] succeeded!\n"
  Aug 24 14:26:19.349: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:26:19.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-6759 exec execpod-affinity879pn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.197 32089'
  Aug 24 14:26:19.595: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.197 32089\nConnection to 192.168.121.197 32089 port [tcp/*] succeeded!\n"
  Aug 24 14:26:19.595: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:26:19.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-6759 exec execpod-affinity879pn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.163 32089'
  Aug 24 14:26:19.926: INFO: stderr: "+ + nc -v -t -w 2 192.168.121.163 32089\necho hostName\nConnection to 192.168.121.163 32089 port [tcp/*] succeeded!\n"
  Aug 24 14:26:19.926: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:26:19.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-6759 exec execpod-affinity879pn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.197:32089/ ; done'
  Aug 24 14:26:20.355: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:32089/\n"
  Aug 24 14:26:20.355: INFO: stdout: "\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv\naffinity-nodeport-s5htv"
  Aug 24 14:26:20.355: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.355: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.355: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.355: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.355: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.355: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.355: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.355: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.356: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.356: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.356: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.356: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.356: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.356: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.356: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.356: INFO: Received response from host: affinity-nodeport-s5htv
  Aug 24 14:26:20.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 14:26:20.366: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6759, will wait for the garbage collector to delete the pods @ 08/24/23 14:26:20.386
  Aug 24 14:26:20.551: INFO: Deleting ReplicationController affinity-nodeport took: 103.833874ms
  Aug 24 14:26:20.551: INFO: Terminating ReplicationController affinity-nodeport pods took: 300.402µs
  STEP: Destroying namespace "services-6759" for this suite. @ 08/24/23 14:26:23.407
• [13.858 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 08/24/23 14:26:23.425
  Aug 24 14:26:23.425: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename ingress @ 08/24/23 14:26:23.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:26:23.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:26:23.468
  STEP: getting /apis @ 08/24/23 14:26:23.473
  STEP: getting /apis/networking.k8s.io @ 08/24/23 14:26:23.482
  STEP: getting /apis/networking.k8s.iov1 @ 08/24/23 14:26:23.485
  STEP: creating @ 08/24/23 14:26:23.487
  STEP: getting @ 08/24/23 14:26:23.521
  STEP: listing @ 08/24/23 14:26:23.526
  STEP: watching @ 08/24/23 14:26:23.531
  Aug 24 14:26:23.531: INFO: starting watch
  STEP: cluster-wide listing @ 08/24/23 14:26:23.532
  STEP: cluster-wide watching @ 08/24/23 14:26:23.536
  Aug 24 14:26:23.536: INFO: starting watch
  STEP: patching @ 08/24/23 14:26:23.543
  STEP: updating @ 08/24/23 14:26:23.557
  Aug 24 14:26:23.573: INFO: waiting for watch events with expected annotations
  Aug 24 14:26:23.574: INFO: saw patched and updated annotations
  STEP: patching /status @ 08/24/23 14:26:23.577
  STEP: updating /status @ 08/24/23 14:26:23.608
  STEP: get /status @ 08/24/23 14:26:23.626
  STEP: deleting @ 08/24/23 14:26:23.633
  STEP: deleting a collection @ 08/24/23 14:26:23.652
  Aug 24 14:26:23.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3556" for this suite. @ 08/24/23 14:26:23.687
• [0.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 08/24/23 14:26:23.714
  Aug 24 14:26:23.714: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename aggregator @ 08/24/23 14:26:23.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:26:23.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:26:23.755
  Aug 24 14:26:23.760: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Registering the sample API server. @ 08/24/23 14:26:23.762
  Aug 24 14:26:24.317: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Aug 24 14:26:24.412: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Aug 24 14:26:26.502: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:28.509: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:30.513: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:32.533: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:34.511: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:36.511: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:38.509: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:40.514: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:42.513: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:44.509: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:46.509: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:48.514: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 24 14:26:50.651: INFO: Waited 128.494587ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 08/24/23 14:26:50.73
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 08/24/23 14:26:50.736
  STEP: List APIServices @ 08/24/23 14:26:50.754
  Aug 24 14:26:50.768: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 08/24/23 14:26:50.768
  Aug 24 14:26:50.794: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 08/24/23 14:26:50.795
  Aug 24 14:26:50.818: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.August, 24, 14, 26, 50, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 08/24/23 14:26:50.818
  Aug 24 14:26:50.828: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-08-24 14:26:50 +0000 UTC Passed all checks passed}
  Aug 24 14:26:50.828: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 14:26:50.828: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 08/24/23 14:26:50.828
  Aug 24 14:26:50.849: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1328708035" @ 08/24/23 14:26:50.849
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 08/24/23 14:26:50.87
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 08/24/23 14:26:50.88
  STEP: Patch APIService Status @ 08/24/23 14:26:50.886
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 08/24/23 14:26:50.898
  Aug 24 14:26:50.906: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-08-24 14:26:50 +0000 UTC Passed all checks passed}
  Aug 24 14:26:50.907: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 14:26:50.907: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Aug 24 14:26:50.908: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 08/24/23 14:26:50.908
  STEP: Confirm that the generated APIService has been deleted @ 08/24/23 14:26:50.918
  Aug 24 14:26:50.918: INFO: Requesting list of APIServices to confirm quantity
  Aug 24 14:26:50.925: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Aug 24 14:26:50.925: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Aug 24 14:26:51.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2902" for this suite. @ 08/24/23 14:26:51.186
• [27.487 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 08/24/23 14:26:51.205
  Aug 24 14:26:51.205: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sched-pred @ 08/24/23 14:26:51.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:26:51.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:26:51.247
  Aug 24 14:26:51.251: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 24 14:26:51.266: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 14:26:51.271: INFO: 
  Logging pods the apiserver thinks is on node dae4wichuiha-1 before test
  Aug 24 14:26:51.288: INFO: cilium-mdfhj from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.289: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 14:26:51.289: INFO: cilium-node-init-7k8b9 from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.290: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 14:26:51.290: INFO: coredns-5dd5756b68-bks6b from kube-system started at 2023-08-24 13:14:30 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.291: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 14:26:51.291: INFO: kube-addon-manager-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.292: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Aug 24 14:26:51.292: INFO: kube-apiserver-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.293: INFO: 	Container kube-apiserver ready: true, restart count 0
  Aug 24 14:26:51.293: INFO: kube-controller-manager-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.293: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Aug 24 14:26:51.293: INFO: kube-proxy-n7wmg from kube-system started at 2023-08-24 13:13:26 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.293: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 14:26:51.293: INFO: kube-scheduler-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.294: INFO: 	Container kube-scheduler ready: true, restart count 0
  Aug 24 14:26:51.294: INFO: sonobuoy from sonobuoy started at 2023-08-24 14:08:32 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.294: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 24 14:26:51.294: INFO: sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-psrg2 from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 14:26:51.294: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 14:26:51.294: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 14:26:51.295: INFO: 
  Logging pods the apiserver thinks is on node dae4wichuiha-2 before test
  Aug 24 14:26:51.312: INFO: cilium-5xp7q from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.312: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 14:26:51.312: INFO: cilium-node-init-qdzkp from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.312: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 14:26:51.312: INFO: cilium-operator-7d96878f5-7qj9z from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.312: INFO: 	Container cilium-operator ready: true, restart count 0
  Aug 24 14:26:51.312: INFO: coredns-5dd5756b68-prz6s from kube-system started at 2023-08-24 13:14:24 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.312: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 14:26:51.312: INFO: kube-addon-manager-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.312: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Aug 24 14:26:51.312: INFO: kube-apiserver-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.312: INFO: 	Container kube-apiserver ready: true, restart count 0
  Aug 24 14:26:51.312: INFO: kube-controller-manager-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.312: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Aug 24 14:26:51.312: INFO: kube-proxy-8brvc from kube-system started at 2023-08-24 13:13:27 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.313: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 14:26:51.313: INFO: kube-scheduler-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 14:26:51.313: INFO: 	Container kube-scheduler ready: true, restart count 0
  Aug 24 14:26:51.313: INFO: sonobuoy-e2e-job-da352b1d444c47a1 from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 14:26:51.313: INFO: 	Container e2e ready: true, restart count 0
  Aug 24 14:26:51.313: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 14:26:51.313: INFO: sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-jwqcj from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 14:26:51.313: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 14:26:51.313: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node dae4wichuiha-1 @ 08/24/23 14:26:51.358
  STEP: verifying the node has the label node dae4wichuiha-2 @ 08/24/23 14:26:51.441
  Aug 24 14:26:51.482: INFO: Pod cilium-5xp7q requesting resource cpu=0m on Node dae4wichuiha-2
  Aug 24 14:26:51.482: INFO: Pod cilium-mdfhj requesting resource cpu=0m on Node dae4wichuiha-1
  Aug 24 14:26:51.482: INFO: Pod cilium-node-init-7k8b9 requesting resource cpu=100m on Node dae4wichuiha-1
  Aug 24 14:26:51.482: INFO: Pod cilium-node-init-qdzkp requesting resource cpu=100m on Node dae4wichuiha-2
  Aug 24 14:26:51.482: INFO: Pod cilium-operator-7d96878f5-7qj9z requesting resource cpu=0m on Node dae4wichuiha-2
  Aug 24 14:26:51.482: INFO: Pod coredns-5dd5756b68-bks6b requesting resource cpu=100m on Node dae4wichuiha-1
  Aug 24 14:26:51.482: INFO: Pod coredns-5dd5756b68-prz6s requesting resource cpu=100m on Node dae4wichuiha-2
  Aug 24 14:26:51.482: INFO: Pod kube-addon-manager-dae4wichuiha-1 requesting resource cpu=5m on Node dae4wichuiha-1
  Aug 24 14:26:51.482: INFO: Pod kube-addon-manager-dae4wichuiha-2 requesting resource cpu=5m on Node dae4wichuiha-2
  Aug 24 14:26:51.482: INFO: Pod kube-apiserver-dae4wichuiha-1 requesting resource cpu=250m on Node dae4wichuiha-1
  Aug 24 14:26:51.482: INFO: Pod kube-apiserver-dae4wichuiha-2 requesting resource cpu=250m on Node dae4wichuiha-2
  Aug 24 14:26:51.482: INFO: Pod kube-controller-manager-dae4wichuiha-1 requesting resource cpu=200m on Node dae4wichuiha-1
  Aug 24 14:26:51.482: INFO: Pod kube-controller-manager-dae4wichuiha-2 requesting resource cpu=200m on Node dae4wichuiha-2
  Aug 24 14:26:51.482: INFO: Pod kube-proxy-8brvc requesting resource cpu=0m on Node dae4wichuiha-2
  Aug 24 14:26:51.482: INFO: Pod kube-proxy-n7wmg requesting resource cpu=0m on Node dae4wichuiha-1
  Aug 24 14:26:51.482: INFO: Pod kube-scheduler-dae4wichuiha-1 requesting resource cpu=100m on Node dae4wichuiha-1
  Aug 24 14:26:51.482: INFO: Pod kube-scheduler-dae4wichuiha-2 requesting resource cpu=100m on Node dae4wichuiha-2
  Aug 24 14:26:51.482: INFO: Pod sonobuoy requesting resource cpu=0m on Node dae4wichuiha-1
  Aug 24 14:26:51.483: INFO: Pod sonobuoy-e2e-job-da352b1d444c47a1 requesting resource cpu=0m on Node dae4wichuiha-2
  Aug 24 14:26:51.483: INFO: Pod sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-jwqcj requesting resource cpu=0m on Node dae4wichuiha-2
  Aug 24 14:26:51.483: INFO: Pod sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-psrg2 requesting resource cpu=0m on Node dae4wichuiha-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 08/24/23 14:26:51.483
  Aug 24 14:26:51.483: INFO: Creating a pod which consumes cpu=591m on Node dae4wichuiha-1
  Aug 24 14:26:51.523: INFO: Creating a pod which consumes cpu=591m on Node dae4wichuiha-2
  STEP: Creating another pod that requires unavailable amount of CPU. @ 08/24/23 14:26:53.567
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5c739e68-ab5e-4dd5-b1f6-34d6d73c3ee9.177e57f31c060249], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2244/filler-pod-5c739e68-ab5e-4dd5-b1f6-34d6d73c3ee9 to dae4wichuiha-2] @ 08/24/23 14:26:53.575
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5c739e68-ab5e-4dd5-b1f6-34d6d73c3ee9.177e57f350966203], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/24/23 14:26:53.575
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5c739e68-ab5e-4dd5-b1f6-34d6d73c3ee9.177e57f35e96ec7b], Reason = [Created], Message = [Created container filler-pod-5c739e68-ab5e-4dd5-b1f6-34d6d73c3ee9] @ 08/24/23 14:26:53.575
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5c739e68-ab5e-4dd5-b1f6-34d6d73c3ee9.177e57f360987527], Reason = [Started], Message = [Started container filler-pod-5c739e68-ab5e-4dd5-b1f6-34d6d73c3ee9] @ 08/24/23 14:26:53.575
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d16e6a4c-ec17-40d1-a33d-c885e5170c78.177e57f31814daa2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2244/filler-pod-d16e6a4c-ec17-40d1-a33d-c885e5170c78 to dae4wichuiha-1] @ 08/24/23 14:26:53.575
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d16e6a4c-ec17-40d1-a33d-c885e5170c78.177e57f3538c9d5a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/24/23 14:26:53.575
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d16e6a4c-ec17-40d1-a33d-c885e5170c78.177e57f36570953f], Reason = [Created], Message = [Created container filler-pod-d16e6a4c-ec17-40d1-a33d-c885e5170c78] @ 08/24/23 14:26:53.575
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d16e6a4c-ec17-40d1-a33d-c885e5170c78.177e57f36a8c0038], Reason = [Started], Message = [Started container filler-pod-d16e6a4c-ec17-40d1-a33d-c885e5170c78] @ 08/24/23 14:26:53.575
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.177e57f392e52880], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod..] @ 08/24/23 14:26:53.596
  STEP: removing the label node off the node dae4wichuiha-1 @ 08/24/23 14:26:54.6
  STEP: verifying the node doesn't have the label node @ 08/24/23 14:26:54.622
  STEP: removing the label node off the node dae4wichuiha-2 @ 08/24/23 14:26:54.629
  STEP: verifying the node doesn't have the label node @ 08/24/23 14:26:54.68
  Aug 24 14:26:54.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2244" for this suite. @ 08/24/23 14:26:54.705
• [3.525 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 08/24/23 14:26:54.73
  Aug 24 14:26:54.731: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename gc @ 08/24/23 14:26:54.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:26:54.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:26:54.778
  STEP: create the rc @ 08/24/23 14:26:54.789
  W0824 14:26:54.807429      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 08/24/23 14:26:59.824
  STEP: wait for all pods to be garbage collected @ 08/24/23 14:26:59.845
  STEP: Gathering metrics @ 08/24/23 14:27:04.86
  Aug 24 14:27:05.060: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 14:27:05.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8314" for this suite. @ 08/24/23 14:27:05.071
• [10.354 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 08/24/23 14:27:05.085
  Aug 24 14:27:05.085: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:27:05.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:27:05.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:27:05.126
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:27:05.131
  STEP: Saw pod success @ 08/24/23 14:27:09.184
  Aug 24 14:27:09.190: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-33a57a04-db61-49dc-92c7-eb50a1cf7765 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:27:09.207
  Aug 24 14:27:09.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2710" for this suite. @ 08/24/23 14:27:09.243
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 08/24/23 14:27:09.259
  Aug 24 14:27:09.260: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 14:27:09.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:27:09.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:27:09.292
  STEP: Creating namespace "e2e-ns-pt5x6" @ 08/24/23 14:27:09.297
  Aug 24 14:27:09.327: INFO: Namespace "e2e-ns-pt5x6-3568" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-pt5x6-3568" @ 08/24/23 14:27:09.328
  Aug 24 14:27:09.407: INFO: Namespace "e2e-ns-pt5x6-3568" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-pt5x6-3568" @ 08/24/23 14:27:09.407
  Aug 24 14:27:09.483: INFO: Namespace "e2e-ns-pt5x6-3568" has []v1.FinalizerName{"kubernetes"}
  Aug 24 14:27:09.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5873" for this suite. @ 08/24/23 14:27:09.489
  STEP: Destroying namespace "e2e-ns-pt5x6-3568" for this suite. @ 08/24/23 14:27:09.504
• [0.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 08/24/23 14:27:09.53
  Aug 24 14:27:09.530: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 14:27:09.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:27:09.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:27:09.56
  STEP: Setting up server cert @ 08/24/23 14:27:09.597
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 14:27:10.848
  STEP: Deploying the webhook pod @ 08/24/23 14:27:10.866
  STEP: Wait for the deployment to be ready @ 08/24/23 14:27:10.886
  Aug 24 14:27:10.910: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/24/23 14:27:12.932
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 14:27:12.952
  Aug 24 14:27:13.953: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 08/24/23 14:27:13.981
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/24/23 14:27:13.981
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 08/24/23 14:27:14.014
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 08/24/23 14:27:15.042
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/24/23 14:27:15.042
  STEP: Having no error when timeout is longer than webhook latency @ 08/24/23 14:27:16.104
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/24/23 14:27:16.104
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 08/24/23 14:27:21.171
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/24/23 14:27:21.171
  Aug 24 14:27:26.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4526" for this suite. @ 08/24/23 14:27:26.414
  STEP: Destroying namespace "webhook-markers-3608" for this suite. @ 08/24/23 14:27:26.435
• [16.919 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 08/24/23 14:27:26.467
  Aug 24 14:27:26.467: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename watch @ 08/24/23 14:27:26.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:27:26.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:27:26.522
  STEP: creating a watch on configmaps with label A @ 08/24/23 14:27:26.526
  STEP: creating a watch on configmaps with label B @ 08/24/23 14:27:26.528
  STEP: creating a watch on configmaps with label A or B @ 08/24/23 14:27:26.53
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 08/24/23 14:27:26.534
  Aug 24 14:27:26.545: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8841  161b5807-b527-42be-913f-4ae42b40d71e 14751 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:27:26.546: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8841  161b5807-b527-42be-913f-4ae42b40d71e 14751 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 08/24/23 14:27:26.546
  Aug 24 14:27:26.584: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8841  161b5807-b527-42be-913f-4ae42b40d71e 14752 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:27:26.585: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8841  161b5807-b527-42be-913f-4ae42b40d71e 14752 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 08/24/23 14:27:26.585
  Aug 24 14:27:26.616: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8841  161b5807-b527-42be-913f-4ae42b40d71e 14753 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:27:26.617: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8841  161b5807-b527-42be-913f-4ae42b40d71e 14753 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 08/24/23 14:27:26.617
  Aug 24 14:27:26.627: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8841  161b5807-b527-42be-913f-4ae42b40d71e 14754 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:27:26.631: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8841  161b5807-b527-42be-913f-4ae42b40d71e 14754 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 08/24/23 14:27:26.632
  Aug 24 14:27:26.645: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8841  f4740d85-1698-47f7-9df7-078f75eb4e6a 14755 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:27:26.646: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8841  f4740d85-1698-47f7-9df7-078f75eb4e6a 14755 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 08/24/23 14:27:36.647
  Aug 24 14:27:36.660: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8841  f4740d85-1698-47f7-9df7-078f75eb4e6a 14792 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:27:36.661: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8841  f4740d85-1698-47f7-9df7-078f75eb4e6a 14792 0 2023-08-24 14:27:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-24 14:27:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:27:46.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8841" for this suite. @ 08/24/23 14:27:46.673
• [20.229 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 08/24/23 14:27:46.697
  Aug 24 14:27:46.697: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:27:46.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:27:46.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:27:46.742
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:27:46.747
  STEP: Saw pod success @ 08/24/23 14:27:50.8
  Aug 24 14:27:50.813: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-22205097-930c-42c8-8970-2c276452873b container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:27:50.825
  Aug 24 14:27:50.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-162" for this suite. @ 08/24/23 14:27:50.864
• [4.178 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 08/24/23 14:27:50.88
  Aug 24 14:27:50.881: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename endpointslicemirroring @ 08/24/23 14:27:50.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:27:50.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:27:50.924
  STEP: mirroring a new custom Endpoint @ 08/24/23 14:27:50.951
  Aug 24 14:27:50.984: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 08/24/23 14:27:52.992
  Aug 24 14:27:53.014: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 08/24/23 14:27:55.02
  Aug 24 14:27:55.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-3342" for this suite. @ 08/24/23 14:27:55.087
• [4.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 08/24/23 14:27:55.125
  Aug 24 14:27:55.125: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename gc @ 08/24/23 14:27:55.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:27:55.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:27:55.168
  STEP: create the deployment @ 08/24/23 14:27:55.171
  W0824 14:27:55.182560      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/24/23 14:27:55.182
  STEP: delete the deployment @ 08/24/23 14:27:55.2
  STEP: wait for all rs to be garbage collected @ 08/24/23 14:27:55.228
  STEP: expected 0 pods, got 2 pods @ 08/24/23 14:27:55.307
  STEP: Gathering metrics @ 08/24/23 14:27:55.845
  Aug 24 14:27:56.060: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 14:27:56.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1767" for this suite. @ 08/24/23 14:27:56.082
• [0.971 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 08/24/23 14:27:56.115
  Aug 24 14:27:56.116: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 14:27:56.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:27:56.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:27:56.189
  STEP: Creating service test in namespace statefulset-8460 @ 08/24/23 14:27:56.197
  STEP: Creating a new StatefulSet @ 08/24/23 14:27:56.215
  Aug 24 14:27:56.262: INFO: Found 0 stateful pods, waiting for 3
  Aug 24 14:28:06.272: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:28:06.272: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:28:06.273: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:28:06.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8460 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:28:06.641: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:28:06.641: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:28:06.641: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/24/23 14:28:16.677
  Aug 24 14:28:16.721: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 08/24/23 14:28:16.721
  STEP: Updating Pods in reverse ordinal order @ 08/24/23 14:28:26.764
  Aug 24 14:28:26.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8460 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:28:27.152: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 14:28:27.152: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:28:27.152: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:28:37.197: INFO: Waiting for StatefulSet statefulset-8460/ss2 to complete update
  Aug 24 14:28:37.198: INFO: Waiting for Pod statefulset-8460/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Aug 24 14:28:37.198: INFO: Waiting for Pod statefulset-8460/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Aug 24 14:28:47.217: INFO: Waiting for StatefulSet statefulset-8460/ss2 to complete update
  Aug 24 14:28:47.217: INFO: Waiting for Pod statefulset-8460/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Aug 24 14:28:57.215: INFO: Waiting for StatefulSet statefulset-8460/ss2 to complete update
  Aug 24 14:28:57.216: INFO: Waiting for Pod statefulset-8460/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 08/24/23 14:29:07.213
  Aug 24 14:29:07.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8460 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:29:07.509: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:29:07.509: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:29:07.509: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 14:29:17.579: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 08/24/23 14:29:27.627
  Aug 24 14:29:27.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8460 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:29:27.922: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 14:29:27.922: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:29:27.922: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:29:37.973: INFO: Deleting all statefulset in ns statefulset-8460
  Aug 24 14:29:37.978: INFO: Scaling statefulset ss2 to 0
  Aug 24 14:29:48.022: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 14:29:48.028: INFO: Deleting statefulset ss2
  Aug 24 14:29:48.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8460" for this suite. @ 08/24/23 14:29:48.073
• [111.969 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 08/24/23 14:29:48.094
  Aug 24 14:29:48.094: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename limitrange @ 08/24/23 14:29:48.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:29:48.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:29:48.131
  STEP: Creating a LimitRange @ 08/24/23 14:29:48.135
  STEP: Setting up watch @ 08/24/23 14:29:48.136
  STEP: Submitting a LimitRange @ 08/24/23 14:29:48.243
  STEP: Verifying LimitRange creation was observed @ 08/24/23 14:29:48.254
  STEP: Fetching the LimitRange to ensure it has proper values @ 08/24/23 14:29:48.255
  Aug 24 14:29:48.260: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Aug 24 14:29:48.260: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 08/24/23 14:29:48.26
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 08/24/23 14:29:48.273
  Aug 24 14:29:48.282: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Aug 24 14:29:48.283: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 08/24/23 14:29:48.284
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 08/24/23 14:29:48.295
  Aug 24 14:29:48.302: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Aug 24 14:29:48.302: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 08/24/23 14:29:48.302
  STEP: Failing to create a Pod with more than max resources @ 08/24/23 14:29:48.306
  STEP: Updating a LimitRange @ 08/24/23 14:29:48.31
  STEP: Verifying LimitRange updating is effective @ 08/24/23 14:29:48.321
  STEP: Creating a Pod with less than former min resources @ 08/24/23 14:29:50.328
  STEP: Failing to create a Pod with more than max resources @ 08/24/23 14:29:50.339
  STEP: Deleting a LimitRange @ 08/24/23 14:29:50.344
  STEP: Verifying the LimitRange was deleted @ 08/24/23 14:29:50.355
  Aug 24 14:29:55.371: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 08/24/23 14:29:55.371
  Aug 24 14:29:55.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-651" for this suite. @ 08/24/23 14:29:55.422
• [7.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 08/24/23 14:29:55.471
  Aug 24 14:29:55.471: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:29:55.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:29:55.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:29:55.507
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:29:55.513
  STEP: Saw pod success @ 08/24/23 14:29:59.555
  Aug 24 14:29:59.561: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-847497cd-c8ea-4861-ba7a-32f2ab0f81ea container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:29:59.584
  Aug 24 14:29:59.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7782" for this suite. @ 08/24/23 14:29:59.613
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 08/24/23 14:29:59.625
  Aug 24 14:29:59.625: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sched-preemption @ 08/24/23 14:29:59.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:29:59.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:29:59.658
  Aug 24 14:29:59.690: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 24 14:30:59.742: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/24/23 14:30:59.747
  Aug 24 14:30:59.747: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/24/23 14:30:59.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:30:59.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:30:59.786
  STEP: Finding an available node @ 08/24/23 14:30:59.791
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/24/23 14:30:59.791
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/24/23 14:31:01.843
  Aug 24 14:31:01.876: INFO: found a healthy node: dae4wichuiha-1
  Aug 24 14:31:08.054: INFO: pods created so far: [1 1 1]
  Aug 24 14:31:08.054: INFO: length of pods created so far: 3
  Aug 24 14:31:10.076: INFO: pods created so far: [2 2 1]
  Aug 24 14:31:17.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 14:31:17.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8780" for this suite. @ 08/24/23 14:31:17.196
  STEP: Destroying namespace "sched-preemption-153" for this suite. @ 08/24/23 14:31:17.21
• [77.595 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 08/24/23 14:31:17.233
  Aug 24 14:31:17.233: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename containers @ 08/24/23 14:31:17.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:31:17.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:31:17.269
  STEP: Creating a pod to test override arguments @ 08/24/23 14:31:17.273
  STEP: Saw pod success @ 08/24/23 14:31:21.305
  Aug 24 14:31:21.310: INFO: Trying to get logs from node dae4wichuiha-1 pod client-containers-11df4b35-a6f0-4c16-a51c-154c2e65074b container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:31:21.321
  Aug 24 14:31:21.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4263" for this suite. @ 08/24/23 14:31:21.35
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 08/24/23 14:31:21.368
  Aug 24 14:31:21.368: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 14:31:21.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:31:21.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:31:21.408
  STEP: Counting existing ResourceQuota @ 08/24/23 14:31:21.413
  STEP: Creating a ResourceQuota @ 08/24/23 14:31:26.425
  STEP: Ensuring resource quota status is calculated @ 08/24/23 14:31:26.441
  STEP: Creating a ReplicaSet @ 08/24/23 14:31:28.459
  STEP: Ensuring resource quota status captures replicaset creation @ 08/24/23 14:31:28.478
  STEP: Deleting a ReplicaSet @ 08/24/23 14:31:30.529
  STEP: Ensuring resource quota status released usage @ 08/24/23 14:31:30.567
  Aug 24 14:31:32.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5351" for this suite. @ 08/24/23 14:31:32.584
• [11.227 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 08/24/23 14:31:32.597
  Aug 24 14:31:32.597: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename watch @ 08/24/23 14:31:32.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:31:32.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:31:32.634
  STEP: creating a watch on configmaps with a certain label @ 08/24/23 14:31:32.644
  STEP: creating a new configmap @ 08/24/23 14:31:32.647
  STEP: modifying the configmap once @ 08/24/23 14:31:32.657
  STEP: changing the label value of the configmap @ 08/24/23 14:31:32.673
  STEP: Expecting to observe a delete notification for the watched object @ 08/24/23 14:31:32.688
  Aug 24 14:31:32.699: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7160  d1dd65d2-1cb9-425d-b3e8-7b59512dc843 16113 0 2023-08-24 14:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 14:31:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:31:32.700: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7160  d1dd65d2-1cb9-425d-b3e8-7b59512dc843 16114 0 2023-08-24 14:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 14:31:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:31:32.700: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7160  d1dd65d2-1cb9-425d-b3e8-7b59512dc843 16115 0 2023-08-24 14:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 14:31:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 08/24/23 14:31:32.7
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 08/24/23 14:31:32.713
  STEP: changing the label value of the configmap back @ 08/24/23 14:31:42.713
  STEP: modifying the configmap a third time @ 08/24/23 14:31:42.739
  STEP: deleting the configmap @ 08/24/23 14:31:42.75
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 08/24/23 14:31:42.76
  Aug 24 14:31:42.760: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7160  d1dd65d2-1cb9-425d-b3e8-7b59512dc843 16143 0 2023-08-24 14:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 14:31:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:31:42.761: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7160  d1dd65d2-1cb9-425d-b3e8-7b59512dc843 16145 0 2023-08-24 14:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 14:31:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:31:42.761: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7160  d1dd65d2-1cb9-425d-b3e8-7b59512dc843 16146 0 2023-08-24 14:31:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-24 14:31:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 14:31:42.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7160" for this suite. @ 08/24/23 14:31:42.772
• [10.186 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 08/24/23 14:31:42.785
  Aug 24 14:31:42.785: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sched-preemption @ 08/24/23 14:31:42.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:31:42.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:31:42.822
  Aug 24 14:31:42.853: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 24 14:32:42.899: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/24/23 14:32:42.904
  Aug 24 14:32:42.946: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Aug 24 14:32:42.958: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Aug 24 14:32:43.005: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Aug 24 14:32:43.017: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/24/23 14:32:43.017
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 08/24/23 14:32:45.09
  Aug 24 14:32:49.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5438" for this suite. @ 08/24/23 14:32:49.257
• [66.488 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 08/24/23 14:32:49.288
  Aug 24 14:32:49.288: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename certificates @ 08/24/23 14:32:49.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:32:49.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:32:49.329
  STEP: getting /apis @ 08/24/23 14:32:50.807
  STEP: getting /apis/certificates.k8s.io @ 08/24/23 14:32:50.814
  STEP: getting /apis/certificates.k8s.io/v1 @ 08/24/23 14:32:50.816
  STEP: creating @ 08/24/23 14:32:50.818
  STEP: getting @ 08/24/23 14:32:50.852
  STEP: listing @ 08/24/23 14:32:50.858
  STEP: watching @ 08/24/23 14:32:50.866
  Aug 24 14:32:50.866: INFO: starting watch
  STEP: patching @ 08/24/23 14:32:50.868
  STEP: updating @ 08/24/23 14:32:50.88
  Aug 24 14:32:50.890: INFO: waiting for watch events with expected annotations
  Aug 24 14:32:50.890: INFO: saw patched and updated annotations
  STEP: getting /approval @ 08/24/23 14:32:50.891
  STEP: patching /approval @ 08/24/23 14:32:50.897
  STEP: updating /approval @ 08/24/23 14:32:50.909
  STEP: getting /status @ 08/24/23 14:32:50.924
  STEP: patching /status @ 08/24/23 14:32:50.931
  STEP: updating /status @ 08/24/23 14:32:50.944
  STEP: deleting @ 08/24/23 14:32:50.959
  STEP: deleting a collection @ 08/24/23 14:32:50.979
  Aug 24 14:32:51.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6585" for this suite. @ 08/24/23 14:32:51.017
• [1.742 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 08/24/23 14:32:51.036
  Aug 24 14:32:51.036: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename containers @ 08/24/23 14:32:51.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:32:51.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:32:51.075
  STEP: Creating a pod to test override all @ 08/24/23 14:32:51.079
  STEP: Saw pod success @ 08/24/23 14:32:55.157
  Aug 24 14:32:55.168: INFO: Trying to get logs from node dae4wichuiha-1 pod client-containers-111be2bf-b343-42e6-8c17-2fbf228a9705 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:32:55.226
  Aug 24 14:32:55.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8954" for this suite. @ 08/24/23 14:32:55.281
• [4.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 08/24/23 14:32:55.32
  Aug 24 14:32:55.320: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/24/23 14:32:55.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:32:55.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:32:55.583
  STEP: creating a target pod @ 08/24/23 14:32:55.591
  STEP: adding an ephemeral container @ 08/24/23 14:32:57.657
  STEP: checking pod container endpoints @ 08/24/23 14:32:59.706
  Aug 24 14:32:59.707: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4858 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:32:59.707: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 14:32:59.709: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:32:59.710: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-4858/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Aug 24 14:32:59.841: INFO: Exec stderr: ""
  Aug 24 14:32:59.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4858" for this suite. @ 08/24/23 14:32:59.862
• [4.563 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 08/24/23 14:32:59.89
  Aug 24 14:32:59.890: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pod-network-test @ 08/24/23 14:32:59.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:32:59.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:32:59.931
  STEP: Performing setup for networking test in namespace pod-network-test-3979 @ 08/24/23 14:32:59.937
  STEP: creating a selector @ 08/24/23 14:32:59.937
  STEP: Creating the service pods in kubernetes @ 08/24/23 14:32:59.937
  Aug 24 14:32:59.937: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 08/24/23 14:33:22.113
  Aug 24 14:33:24.160: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Aug 24 14:33:24.160: INFO: Breadth first check of 10.233.64.64 on host 192.168.121.197...
  Aug 24 14:33:24.167: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.121:9080/dial?request=hostname&protocol=udp&host=10.233.64.64&port=8081&tries=1'] Namespace:pod-network-test-3979 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:33:24.167: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 14:33:24.170: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:33:24.171: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3979/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.121%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.64%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 24 14:33:24.330: INFO: Waiting for responses: map[]
  Aug 24 14:33:24.331: INFO: reached 10.233.64.64 after 0/1 tries
  Aug 24 14:33:24.331: INFO: Breadth first check of 10.233.65.169 on host 192.168.121.163...
  Aug 24 14:33:24.337: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.121:9080/dial?request=hostname&protocol=udp&host=10.233.65.169&port=8081&tries=1'] Namespace:pod-network-test-3979 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:33:24.337: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 14:33:24.339: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:33:24.339: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3979/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.121%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.169%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 24 14:33:24.470: INFO: Waiting for responses: map[]
  Aug 24 14:33:24.471: INFO: reached 10.233.65.169 after 0/1 tries
  Aug 24 14:33:24.471: INFO: Going to retry 0 out of 2 pods....
  Aug 24 14:33:24.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3979" for this suite. @ 08/24/23 14:33:24.482
• [24.607 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 08/24/23 14:33:24.5
  Aug 24 14:33:24.501: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename security-context @ 08/24/23 14:33:24.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:33:24.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:33:24.543
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/24/23 14:33:24.547
  STEP: Saw pod success @ 08/24/23 14:33:28.601
  Aug 24 14:33:28.607: INFO: Trying to get logs from node dae4wichuiha-1 pod security-context-21b488e4-efd3-490d-81f6-4ce9ee85c9ad container test-container: <nil>
  STEP: delete the pod @ 08/24/23 14:33:28.62
  Aug 24 14:33:28.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2060" for this suite. @ 08/24/23 14:33:28.658
• [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 08/24/23 14:33:28.673
  Aug 24 14:33:28.673: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename events @ 08/24/23 14:33:28.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:33:28.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:33:28.714
  STEP: Create set of events @ 08/24/23 14:33:28.719
  Aug 24 14:33:28.731: INFO: created test-event-1
  Aug 24 14:33:28.739: INFO: created test-event-2
  Aug 24 14:33:28.746: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 08/24/23 14:33:28.747
  STEP: delete collection of events @ 08/24/23 14:33:28.755
  Aug 24 14:33:28.755: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/24/23 14:33:28.79
  Aug 24 14:33:28.790: INFO: requesting list of events to confirm quantity
  Aug 24 14:33:28.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7976" for this suite. @ 08/24/23 14:33:28.804
• [0.143 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 08/24/23 14:33:28.822
  Aug 24 14:33:28.823: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename dns @ 08/24/23 14:33:28.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:33:28.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:33:28.86
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9701.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9701.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 08/24/23 14:33:28.864
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9701.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9701.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 08/24/23 14:33:28.865
  STEP: creating a pod to probe /etc/hosts @ 08/24/23 14:33:28.865
  STEP: submitting the pod to kubernetes @ 08/24/23 14:33:28.866
  STEP: retrieving the pod @ 08/24/23 14:33:32.919
  STEP: looking for the results for each expected name from probers @ 08/24/23 14:33:32.927
  Aug 24 14:33:32.961: INFO: DNS probes using dns-9701/dns-test-43ffd3d6-902c-493f-a99a-e08ad48f381e succeeded

  Aug 24 14:33:32.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 14:33:32.971
  STEP: Destroying namespace "dns-9701" for this suite. @ 08/24/23 14:33:32.99
• [4.234 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 08/24/23 14:33:33.056
  Aug 24 14:33:33.056: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename discovery @ 08/24/23 14:33:33.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:33:33.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:33:33.122
  STEP: Setting up server cert @ 08/24/23 14:33:33.133
  STEP: Requesting APIResourceList from "/api/v1" @ 08/24/23 14:33:34.759
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 08/24/23 14:33:34.761
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 08/24/23 14:33:34.762
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 08/24/23 14:33:34.764
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 08/24/23 14:33:34.765
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 08/24/23 14:33:34.766
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 08/24/23 14:33:34.768
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 08/24/23 14:33:34.769
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 08/24/23 14:33:34.77
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 08/24/23 14:33:34.772
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 08/24/23 14:33:34.777
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 08/24/23 14:33:34.778
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 08/24/23 14:33:34.779
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 08/24/23 14:33:34.781
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 08/24/23 14:33:34.782
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 08/24/23 14:33:34.784
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 08/24/23 14:33:34.785
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 08/24/23 14:33:34.786
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 08/24/23 14:33:34.789
  Aug 24 14:33:34.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1295" for this suite. @ 08/24/23 14:33:34.801
• [1.761 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 08/24/23 14:33:34.82
  Aug 24 14:33:34.820: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename dns @ 08/24/23 14:33:34.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:33:34.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:33:34.86
  STEP: Creating a test headless service @ 08/24/23 14:33:34.865
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3563 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3563;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3563 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3563;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3563.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3563.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3563.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3563.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3563.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3563.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3563.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3563.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3563.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3563.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3563.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3563.svc;check="$$(dig +notcp +noall +answer +search 123.39.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.39.123_udp@PTR;check="$$(dig +tcp +noall +answer +search 123.39.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.39.123_tcp@PTR;sleep 1; done
   @ 08/24/23 14:33:34.911
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3563 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3563;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3563 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3563;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3563.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3563.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3563.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3563.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3563.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3563.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3563.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3563.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3563.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3563.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3563.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3563.svc;check="$$(dig +notcp +noall +answer +search 123.39.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.39.123_udp@PTR;check="$$(dig +tcp +noall +answer +search 123.39.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.39.123_tcp@PTR;sleep 1; done
   @ 08/24/23 14:33:34.911
  STEP: creating a pod to probe DNS @ 08/24/23 14:33:34.911
  STEP: submitting the pod to kubernetes @ 08/24/23 14:33:34.912
  STEP: retrieving the pod @ 08/24/23 14:33:38.964
  STEP: looking for the results for each expected name from probers @ 08/24/23 14:33:38.969
  Aug 24 14:33:38.981: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:38.988: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:38.994: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:38.998: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:39.004: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:39.010: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:39.047: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:39.053: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:39.059: INFO: Unable to read jessie_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:39.064: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:39.070: INFO: Unable to read jessie_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:39.075: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:39.107: INFO: Lookups using dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3563 wheezy_tcp@dns-test-service.dns-3563 wheezy_udp@dns-test-service.dns-3563.svc wheezy_tcp@dns-test-service.dns-3563.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3563 jessie_tcp@dns-test-service.dns-3563 jessie_udp@dns-test-service.dns-3563.svc jessie_tcp@dns-test-service.dns-3563.svc]

  Aug 24 14:33:39.117: INFO: Pod client logs for webserver: 
  Aug 24 14:33:39.130: INFO: Pod client logs for querier: 
  Aug 24 14:33:39.144: INFO: Pod client logs for jessie-querier: 
  Aug 24 14:33:44.153: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.162: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.168: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.175: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.182: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.187: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.241: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.248: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.261: INFO: Unable to read jessie_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.269: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.276: INFO: Unable to read jessie_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.282: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:44.327: INFO: Lookups using dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3563 wheezy_tcp@dns-test-service.dns-3563 wheezy_udp@dns-test-service.dns-3563.svc wheezy_tcp@dns-test-service.dns-3563.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3563 jessie_tcp@dns-test-service.dns-3563 jessie_udp@dns-test-service.dns-3563.svc jessie_tcp@dns-test-service.dns-3563.svc]

  Aug 24 14:33:44.339: INFO: Pod client logs for webserver: 
  Aug 24 14:33:44.352: INFO: Pod client logs for querier: 
  Aug 24 14:33:44.364: INFO: Pod client logs for jessie-querier: 
  Aug 24 14:33:49.155: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.161: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.168: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.175: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.182: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.189: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.244: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.250: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.256: INFO: Unable to read jessie_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.262: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.268: INFO: Unable to read jessie_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.274: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:49.306: INFO: Lookups using dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3563 wheezy_tcp@dns-test-service.dns-3563 wheezy_udp@dns-test-service.dns-3563.svc wheezy_tcp@dns-test-service.dns-3563.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3563 jessie_tcp@dns-test-service.dns-3563 jessie_udp@dns-test-service.dns-3563.svc jessie_tcp@dns-test-service.dns-3563.svc]

  Aug 24 14:33:49.317: INFO: Pod client logs for webserver: 
  Aug 24 14:33:49.328: INFO: Pod client logs for querier: 
  Aug 24 14:33:49.344: INFO: Pod client logs for jessie-querier: 
  Aug 24 14:33:54.155: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.162: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.172: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.182: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.190: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.200: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.241: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.247: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.254: INFO: Unable to read jessie_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.261: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.267: INFO: Unable to read jessie_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.274: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:54.313: INFO: Lookups using dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3563 wheezy_tcp@dns-test-service.dns-3563 wheezy_udp@dns-test-service.dns-3563.svc wheezy_tcp@dns-test-service.dns-3563.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3563 jessie_tcp@dns-test-service.dns-3563 jessie_udp@dns-test-service.dns-3563.svc jessie_tcp@dns-test-service.dns-3563.svc]

  Aug 24 14:33:54.326: INFO: Pod client logs for webserver: 
  Aug 24 14:33:54.336: INFO: Pod client logs for querier: 
  Aug 24 14:33:54.349: INFO: Pod client logs for jessie-querier: 
  Aug 24 14:33:59.153: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.161: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.186: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.295: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.331: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.337: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.384: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.395: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.402: INFO: Unable to read jessie_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.411: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.421: INFO: Unable to read jessie_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.430: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:33:59.482: INFO: Lookups using dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3563 wheezy_tcp@dns-test-service.dns-3563 wheezy_udp@dns-test-service.dns-3563.svc wheezy_tcp@dns-test-service.dns-3563.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3563 jessie_tcp@dns-test-service.dns-3563 jessie_udp@dns-test-service.dns-3563.svc jessie_tcp@dns-test-service.dns-3563.svc]

  Aug 24 14:33:59.498: INFO: Pod client logs for webserver: 
  Aug 24 14:33:59.512: INFO: Pod client logs for querier: 
  Aug 24 14:33:59.524: INFO: Pod client logs for jessie-querier: 
  Aug 24 14:34:04.152: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.165: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.174: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.183: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.195: INFO: Unable to read wheezy_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.206: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.266: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.272: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.280: INFO: Unable to read jessie_udp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.287: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563 from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.292: INFO: Unable to read jessie_udp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.298: INFO: Unable to read jessie_tcp@dns-test-service.dns-3563.svc from pod dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb: the server could not find the requested resource (get pods dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb)
  Aug 24 14:34:04.346: INFO: Lookups using dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3563 wheezy_tcp@dns-test-service.dns-3563 wheezy_udp@dns-test-service.dns-3563.svc wheezy_tcp@dns-test-service.dns-3563.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3563 jessie_tcp@dns-test-service.dns-3563 jessie_udp@dns-test-service.dns-3563.svc jessie_tcp@dns-test-service.dns-3563.svc]

  Aug 24 14:34:04.359: INFO: Pod client logs for webserver: 
  Aug 24 14:34:04.372: INFO: Pod client logs for querier: 
  Aug 24 14:34:04.384: INFO: Pod client logs for jessie-querier: 
  Aug 24 14:34:09.308: INFO: DNS probes using dns-3563/dns-test-d8a5b0e7-e4fd-4f6a-93d4-c82d971fbcfb succeeded

  Aug 24 14:34:09.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 14:34:09.318
  STEP: deleting the test service @ 08/24/23 14:34:09.405
  STEP: deleting the test headless service @ 08/24/23 14:34:09.468
  STEP: Destroying namespace "dns-3563" for this suite. @ 08/24/23 14:34:09.504
• [34.701 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 08/24/23 14:34:09.528
  Aug 24 14:34:09.528: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 14:34:09.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:34:09.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:34:09.575
  STEP: Creating Pod @ 08/24/23 14:34:09.579
  STEP: Reading file content from the nginx-container @ 08/24/23 14:34:11.609
  Aug 24 14:34:11.610: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5229 PodName:pod-sharedvolume-1063d9aa-95f0-4450-a9ae-3fa666769bec ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 14:34:11.610: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 14:34:11.611: INFO: ExecWithOptions: Clientset creation
  Aug 24 14:34:11.611: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-5229/pods/pod-sharedvolume-1063d9aa-95f0-4450-a9ae-3fa666769bec/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Aug 24 14:34:11.772: INFO: Exec stderr: ""
  Aug 24 14:34:11.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5229" for this suite. @ 08/24/23 14:34:11.782
• [2.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 08/24/23 14:34:11.815
  Aug 24 14:34:11.817: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sched-preemption @ 08/24/23 14:34:11.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:34:11.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:34:11.863
  Aug 24 14:34:11.893: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 24 14:35:11.965: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/24/23 14:35:11.972
  Aug 24 14:35:12.014: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Aug 24 14:35:12.034: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Aug 24 14:35:12.079: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Aug 24 14:35:12.090: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/24/23 14:35:12.132
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 08/24/23 14:35:16.197
  Aug 24 14:35:20.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2352" for this suite. @ 08/24/23 14:35:20.358
• [68.558 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 08/24/23 14:35:20.378
  Aug 24 14:35:20.379: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 14:35:20.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:35:20.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:35:20.418
  STEP: creating Agnhost RC @ 08/24/23 14:35:20.423
  Aug 24 14:35:20.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4273 create -f -'
  Aug 24 14:35:21.137: INFO: stderr: ""
  Aug 24 14:35:21.143: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/24/23 14:35:21.143
  Aug 24 14:35:22.154: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 14:35:22.154: INFO: Found 0 / 1
  Aug 24 14:35:23.157: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 14:35:23.158: INFO: Found 1 / 1
  Aug 24 14:35:23.158: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 08/24/23 14:35:23.159
  Aug 24 14:35:23.164: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 14:35:23.165: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 24 14:35:23.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4273 patch pod agnhost-primary-bxnf6 -p {"metadata":{"annotations":{"x":"y"}}}'
  Aug 24 14:35:23.376: INFO: stderr: ""
  Aug 24 14:35:23.376: INFO: stdout: "pod/agnhost-primary-bxnf6 patched\n"
  STEP: checking annotations @ 08/24/23 14:35:23.376
  Aug 24 14:35:23.384: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 14:35:23.384: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 24 14:35:23.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4273" for this suite. @ 08/24/23 14:35:23.393
• [3.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 08/24/23 14:35:23.413
  Aug 24 14:35:23.414: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 14:35:23.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:35:23.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:35:23.452
  STEP: Creating configMap with name configmap-test-upd-02b5c780-d269-44dc-875d-1dc7837ca672 @ 08/24/23 14:35:23.464
  STEP: Creating the pod @ 08/24/23 14:35:23.473
  STEP: Waiting for pod with text data @ 08/24/23 14:35:25.511
  STEP: Waiting for pod with binary data @ 08/24/23 14:35:25.528
  Aug 24 14:35:25.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6207" for this suite. @ 08/24/23 14:35:25.554
• [2.156 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 08/24/23 14:35:25.57
  Aug 24 14:35:25.571: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 14:35:25.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:35:25.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:35:25.63
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/24/23 14:35:25.643
  STEP: Saw pod success @ 08/24/23 14:35:29.726
  Aug 24 14:35:29.734: INFO: Trying to get logs from node dae4wichuiha-2 pod pod-f5d0cb20-715f-4894-bdb7-3cab69acf433 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 14:35:29.765
  Aug 24 14:35:29.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9832" for this suite. @ 08/24/23 14:35:29.809
• [4.254 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 08/24/23 14:35:29.826
  Aug 24 14:35:29.827: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:35:29.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:35:29.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:35:29.907
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 14:35:29.911
  STEP: Saw pod success @ 08/24/23 14:35:33.974
  Aug 24 14:35:33.987: INFO: Trying to get logs from node dae4wichuiha-2 pod downwardapi-volume-306bbf48-079b-4df5-987e-768b74986b33 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 14:35:34.015
  Aug 24 14:35:34.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1664" for this suite. @ 08/24/23 14:35:34.087
• [4.288 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 08/24/23 14:35:34.116
  Aug 24 14:35:34.116: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 14:35:34.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:35:34.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:35:34.158
  STEP: Creating service test in namespace statefulset-8438 @ 08/24/23 14:35:34.172
  Aug 24 14:35:34.223: INFO: Found 0 stateful pods, waiting for 1
  Aug 24 14:35:44.232: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 08/24/23 14:35:44.244
  W0824 14:35:44.265738      14 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Aug 24 14:35:44.284: INFO: Found 1 stateful pods, waiting for 2
  Aug 24 14:35:54.299: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:35:54.299: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 08/24/23 14:35:54.311
  STEP: Delete all of the StatefulSets @ 08/24/23 14:35:54.317
  STEP: Verify that StatefulSets have been deleted @ 08/24/23 14:35:54.333
  Aug 24 14:35:54.349: INFO: Deleting all statefulset in ns statefulset-8438
  Aug 24 14:35:54.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8438" for this suite. @ 08/24/23 14:35:54.41
• [20.311 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 08/24/23 14:35:54.429
  Aug 24 14:35:54.429: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 14:35:54.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:35:54.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:35:54.491
  STEP: Creating a pod to test env composition @ 08/24/23 14:35:54.496
  STEP: Saw pod success @ 08/24/23 14:35:58.553
  Aug 24 14:35:58.561: INFO: Trying to get logs from node dae4wichuiha-1 pod var-expansion-116b05cf-9ead-4787-8607-b4900449e132 container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 14:35:58.583
  Aug 24 14:35:58.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-922" for this suite. @ 08/24/23 14:35:58.618
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 08/24/23 14:35:58.634
  Aug 24 14:35:58.634: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 14:35:58.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:35:58.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:35:58.671
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 08/24/23 14:35:58.677
  STEP: When a replicaset with a matching selector is created @ 08/24/23 14:36:00.72
  STEP: Then the orphan pod is adopted @ 08/24/23 14:36:00.738
  STEP: When the matched label of one of its pods change @ 08/24/23 14:36:01.751
  Aug 24 14:36:01.757: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/24/23 14:36:01.779
  Aug 24 14:36:01.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3764" for this suite. @ 08/24/23 14:36:01.832
• [3.232 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 08/24/23 14:36:01.882
  Aug 24 14:36:01.882: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/24/23 14:36:01.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:36:01.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:36:01.918
  STEP: create the container to handle the HTTPGet hook request. @ 08/24/23 14:36:01.931
  STEP: create the pod with lifecycle hook @ 08/24/23 14:36:03.985
  STEP: check poststart hook @ 08/24/23 14:36:06.029
  STEP: delete the pod with lifecycle hook @ 08/24/23 14:36:06.04
  Aug 24 14:36:08.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-858" for this suite. @ 08/24/23 14:36:08.081
• [6.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 08/24/23 14:36:08.097
  Aug 24 14:36:08.097: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename events @ 08/24/23 14:36:08.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:36:08.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:36:08.139
  STEP: Create set of events @ 08/24/23 14:36:08.144
  STEP: get a list of Events with a label in the current namespace @ 08/24/23 14:36:08.173
  STEP: delete a list of events @ 08/24/23 14:36:08.179
  Aug 24 14:36:08.179: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/24/23 14:36:08.224
  Aug 24 14:36:08.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5602" for this suite. @ 08/24/23 14:36:08.239
• [0.156 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 08/24/23 14:36:08.256
  Aug 24 14:36:08.256: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 14:36:08.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:36:08.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:36:08.294
  STEP: Creating service test in namespace statefulset-8655 @ 08/24/23 14:36:08.299
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 08/24/23 14:36:08.313
  STEP: Creating stateful set ss in namespace statefulset-8655 @ 08/24/23 14:36:08.32
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8655 @ 08/24/23 14:36:08.333
  Aug 24 14:36:08.350: INFO: Found 0 stateful pods, waiting for 1
  Aug 24 14:36:18.363: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 08/24/23 14:36:18.364
  Aug 24 14:36:18.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8655 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:36:18.679: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:36:18.679: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:36:18.679: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 14:36:18.686: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Aug 24 14:36:28.695: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 14:36:28.695: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 24 14:36:28.733: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999264s
  Aug 24 14:36:29.740: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.981888923s
  Aug 24 14:36:30.747: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.976384034s
  Aug 24 14:36:31.756: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.968781886s
  Aug 24 14:36:32.764: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.960970666s
  Aug 24 14:36:33.771: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.953165714s
  Aug 24 14:36:34.782: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.945360141s
  Aug 24 14:36:35.791: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.93315367s
  Aug 24 14:36:36.799: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.92615666s
  Aug 24 14:36:37.805: INFO: Verifying statefulset ss doesn't scale past 1 for another 917.828329ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8655 @ 08/24/23 14:36:38.806
  Aug 24 14:36:38.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8655 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:36:39.120: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 14:36:39.120: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:36:39.120: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:36:39.126: INFO: Found 1 stateful pods, waiting for 3
  Aug 24 14:36:49.135: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:36:49.135: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 14:36:49.135: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 08/24/23 14:36:49.135
  STEP: Scale down will halt with unhealthy stateful pod @ 08/24/23 14:36:49.135
  Aug 24 14:36:49.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8655 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:36:49.468: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:36:49.469: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:36:49.469: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 14:36:49.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8655 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:36:49.833: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:36:49.833: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:36:49.833: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 14:36:49.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8655 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 24 14:36:50.169: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 24 14:36:50.170: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 24 14:36:50.170: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 24 14:36:50.170: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 24 14:36:50.190: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Aug 24 14:37:00.208: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 14:37:00.208: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 14:37:00.208: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Aug 24 14:37:00.239: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999439s
  Aug 24 14:37:01.248: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.989565099s
  Aug 24 14:37:02.259: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.979393214s
  Aug 24 14:37:03.267: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.96930999s
  Aug 24 14:37:04.278: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.961045161s
  Aug 24 14:37:05.289: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.948219102s
  Aug 24 14:37:06.298: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.939421287s
  Aug 24 14:37:07.308: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.929930852s
  Aug 24 14:37:08.319: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.920405676s
  Aug 24 14:37:09.328: INFO: Verifying statefulset ss doesn't scale past 3 for another 908.718764ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8655 @ 08/24/23 14:37:10.328
  Aug 24 14:37:10.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8655 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:37:10.622: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 14:37:10.622: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:37:10.622: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:37:10.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8655 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:37:10.943: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 14:37:10.943: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:37:10.943: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:37:10.945: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=statefulset-8655 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 24 14:37:11.274: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 24 14:37:11.274: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 24 14:37:11.274: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 24 14:37:11.274: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 08/24/23 14:37:21.317
  Aug 24 14:37:21.318: INFO: Deleting all statefulset in ns statefulset-8655
  Aug 24 14:37:21.326: INFO: Scaling statefulset ss to 0
  Aug 24 14:37:21.345: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 14:37:21.350: INFO: Deleting statefulset ss
  Aug 24 14:37:21.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8655" for this suite. @ 08/24/23 14:37:21.388
• [73.148 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 08/24/23 14:37:21.407
  Aug 24 14:37:21.407: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sched-pred @ 08/24/23 14:37:21.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:37:21.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:37:21.449
  Aug 24 14:37:21.455: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 24 14:37:21.479: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 14:37:21.486: INFO: 
  Logging pods the apiserver thinks is on node dae4wichuiha-1 before test
  Aug 24 14:37:21.505: INFO: cilium-mdfhj from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.505: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 14:37:21.505: INFO: cilium-node-init-7k8b9 from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.505: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 14:37:21.505: INFO: coredns-5dd5756b68-bks6b from kube-system started at 2023-08-24 13:14:30 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.505: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 14:37:21.505: INFO: kube-addon-manager-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.505: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Aug 24 14:37:21.505: INFO: kube-apiserver-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.505: INFO: 	Container kube-apiserver ready: true, restart count 0
  Aug 24 14:37:21.505: INFO: kube-controller-manager-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.505: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Aug 24 14:37:21.505: INFO: kube-proxy-n7wmg from kube-system started at 2023-08-24 13:13:26 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.505: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 14:37:21.505: INFO: kube-scheduler-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.505: INFO: 	Container kube-scheduler ready: true, restart count 0
  Aug 24 14:37:21.505: INFO: sonobuoy from sonobuoy started at 2023-08-24 14:08:32 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.505: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 24 14:37:21.505: INFO: sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-psrg2 from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 14:37:21.505: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 14:37:21.505: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 14:37:21.505: INFO: 
  Logging pods the apiserver thinks is on node dae4wichuiha-2 before test
  Aug 24 14:37:21.520: INFO: cilium-5xp7q from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.520: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 14:37:21.520: INFO: cilium-node-init-qdzkp from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.520: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 14:37:21.520: INFO: cilium-operator-7d96878f5-7qj9z from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.520: INFO: 	Container cilium-operator ready: true, restart count 0
  Aug 24 14:37:21.520: INFO: coredns-5dd5756b68-prz6s from kube-system started at 2023-08-24 13:14:24 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.520: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 14:37:21.520: INFO: kube-addon-manager-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.521: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Aug 24 14:37:21.521: INFO: kube-apiserver-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.521: INFO: 	Container kube-apiserver ready: true, restart count 0
  Aug 24 14:37:21.521: INFO: kube-controller-manager-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.521: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Aug 24 14:37:21.521: INFO: kube-proxy-8brvc from kube-system started at 2023-08-24 13:13:27 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.521: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 14:37:21.521: INFO: kube-scheduler-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 14:37:21.521: INFO: 	Container kube-scheduler ready: true, restart count 0
  Aug 24 14:37:21.521: INFO: sonobuoy-e2e-job-da352b1d444c47a1 from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 14:37:21.521: INFO: 	Container e2e ready: true, restart count 0
  Aug 24 14:37:21.521: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 14:37:21.521: INFO: sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-jwqcj from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 14:37:21.521: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 14:37:21.521: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/24/23 14:37:21.521
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/24/23 14:37:23.573
  STEP: Trying to apply a random label on the found node. @ 08/24/23 14:37:23.599
  STEP: verifying the node has the label kubernetes.io/e2e-17cbbd75-b53e-4f34-803b-81f89abc69e8 95 @ 08/24/23 14:37:23.624
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 08/24/23 14:37:23.638
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.197 on the node which pod4 resides and expect not scheduled @ 08/24/23 14:37:25.663
  STEP: removing the label kubernetes.io/e2e-17cbbd75-b53e-4f34-803b-81f89abc69e8 off the node dae4wichuiha-1 @ 08/24/23 14:42:25.681
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-17cbbd75-b53e-4f34-803b-81f89abc69e8 @ 08/24/23 14:42:25.712
  Aug 24 14:42:25.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1481" for this suite. @ 08/24/23 14:42:25.732
• [304.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 08/24/23 14:42:25.751
  Aug 24 14:42:25.751: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 14:42:25.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:42:25.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:42:25.792
  STEP: creating an Endpoint @ 08/24/23 14:42:25.802
  STEP: waiting for available Endpoint @ 08/24/23 14:42:25.826
  STEP: listing all Endpoints @ 08/24/23 14:42:25.828
  STEP: updating the Endpoint @ 08/24/23 14:42:25.834
  STEP: fetching the Endpoint @ 08/24/23 14:42:25.844
  STEP: patching the Endpoint @ 08/24/23 14:42:25.849
  STEP: fetching the Endpoint @ 08/24/23 14:42:25.867
  STEP: deleting the Endpoint by Collection @ 08/24/23 14:42:25.872
  STEP: waiting for Endpoint deletion @ 08/24/23 14:42:25.889
  STEP: fetching the Endpoint @ 08/24/23 14:42:25.891
  Aug 24 14:42:25.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7137" for this suite. @ 08/24/23 14:42:25.906
• [0.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 08/24/23 14:42:25.927
  Aug 24 14:42:25.927: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 14:42:25.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:42:25.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:42:25.956
  STEP: Creating a pod to test substitution in volume subpath @ 08/24/23 14:42:25.96
  STEP: Saw pod success @ 08/24/23 14:42:30.008
  Aug 24 14:42:30.017: INFO: Trying to get logs from node dae4wichuiha-1 pod var-expansion-204ba751-8f8c-4962-87e2-c4eafd86d25a container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 14:42:30.058
  Aug 24 14:42:30.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1797" for this suite. @ 08/24/23 14:42:30.1
• [4.186 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 08/24/23 14:42:30.114
  Aug 24 14:42:30.115: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename endpointslice @ 08/24/23 14:42:30.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:42:30.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:42:30.203
  Aug 24 14:42:30.226: INFO: Endpoints addresses: [192.168.121.163 192.168.121.197] , ports: [6443]
  Aug 24 14:42:30.226: INFO: EndpointSlices addresses: [192.168.121.163 192.168.121.197] , ports: [6443]
  Aug 24 14:42:30.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1691" for this suite. @ 08/24/23 14:42:30.232
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 08/24/23 14:42:30.249
  Aug 24 14:42:30.249: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 14:42:30.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:42:30.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:42:30.284
  STEP: Read namespace status @ 08/24/23 14:42:30.291
  Aug 24 14:42:30.300: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 08/24/23 14:42:30.301
  Aug 24 14:42:30.320: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 08/24/23 14:42:30.321
  Aug 24 14:42:30.341: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Aug 24 14:42:30.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6802" for this suite. @ 08/24/23 14:42:30.351
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 08/24/23 14:42:30.371
  Aug 24 14:42:30.371: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 14:42:30.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:42:30.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:42:30.417
  STEP: Creating configMap with name cm-test-opt-del-c37ba580-e75e-462e-ba2a-c7d165f4f519 @ 08/24/23 14:42:30.44
  STEP: Creating configMap with name cm-test-opt-upd-cfa00ff4-ef06-48b6-a9d0-a8806fbc0aa8 @ 08/24/23 14:42:30.451
  STEP: Creating the pod @ 08/24/23 14:42:30.459
  STEP: Deleting configmap cm-test-opt-del-c37ba580-e75e-462e-ba2a-c7d165f4f519 @ 08/24/23 14:42:34.602
  STEP: Updating configmap cm-test-opt-upd-cfa00ff4-ef06-48b6-a9d0-a8806fbc0aa8 @ 08/24/23 14:42:34.613
  STEP: Creating configMap with name cm-test-opt-create-a4c4de39-76d2-451b-8f34-2663ddedf626 @ 08/24/23 14:42:34.62
  STEP: waiting to observe update in volume @ 08/24/23 14:42:34.627
  Aug 24 14:43:55.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8139" for this suite. @ 08/24/23 14:43:55.363
• [85.010 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 08/24/23 14:43:55.387
  Aug 24 14:43:55.387: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-runtime @ 08/24/23 14:43:55.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:43:55.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:43:55.427
  STEP: create the container @ 08/24/23 14:43:55.433
  W0824 14:43:55.451640      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/24/23 14:43:55.452
  STEP: get the container status @ 08/24/23 14:43:59.503
  STEP: the container should be terminated @ 08/24/23 14:43:59.508
  STEP: the termination message should be set @ 08/24/23 14:43:59.508
  Aug 24 14:43:59.508: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 08/24/23 14:43:59.509
  Aug 24 14:43:59.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8086" for this suite. @ 08/24/23 14:43:59.564
• [4.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 08/24/23 14:43:59.582
  Aug 24 14:43:59.582: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:43:59.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:43:59.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:43:59.625
  STEP: Creating configMap with name projected-configmap-test-volume-map-66e129ff-238f-4020-bb5c-ea8cbea4db52 @ 08/24/23 14:43:59.63
  STEP: Creating a pod to test consume configMaps @ 08/24/23 14:43:59.639
  STEP: Saw pod success @ 08/24/23 14:44:03.683
  Aug 24 14:44:03.689: INFO: Trying to get logs from node dae4wichuiha-2 pod pod-projected-configmaps-c52795ef-0e8f-4598-ae5f-36d5df062c6f container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:44:03.721
  Aug 24 14:44:03.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-542" for this suite. @ 08/24/23 14:44:03.768
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 08/24/23 14:44:03.789
  Aug 24 14:44:03.789: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 14:44:03.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:03.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:03.838
  STEP: Saw pod success @ 08/24/23 14:44:09.991
  Aug 24 14:44:09.999: INFO: Trying to get logs from node dae4wichuiha-1 pod client-envvars-656bbdd9-22f3-4dd7-a367-124e54b1c30b container env3cont: <nil>
  STEP: delete the pod @ 08/24/23 14:44:10.018
  Aug 24 14:44:10.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7969" for this suite. @ 08/24/23 14:44:10.06
• [6.288 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 08/24/23 14:44:10.079
  Aug 24 14:44:10.079: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename containers @ 08/24/23 14:44:10.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:10.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:10.124
  Aug 24 14:44:12.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-43" for this suite. @ 08/24/23 14:44:12.219
• [2.155 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 08/24/23 14:44:12.238
  Aug 24 14:44:12.238: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/24/23 14:44:12.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:12.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:12.275
  Aug 24 14:44:14.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 08/24/23 14:44:14.373
  STEP: Cleaning up the configmap @ 08/24/23 14:44:14.386
  STEP: Cleaning up the pod @ 08/24/23 14:44:14.402
  STEP: Destroying namespace "emptydir-wrapper-2608" for this suite. @ 08/24/23 14:44:14.427
• [2.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 08/24/23 14:44:14.444
  Aug 24 14:44:14.444: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 14:44:14.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:14.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:14.493
  STEP: creating a replication controller @ 08/24/23 14:44:14.501
  Aug 24 14:44:14.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 create -f -'
  Aug 24 14:44:16.142: INFO: stderr: ""
  Aug 24 14:44:16.142: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/24/23 14:44:16.142
  Aug 24 14:44:16.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 14:44:16.564: INFO: stderr: ""
  Aug 24 14:44:16.564: INFO: stdout: "update-demo-nautilus-8jzjc update-demo-nautilus-fm7gz "
  Aug 24 14:44:16.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-8jzjc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 14:44:16.939: INFO: stderr: ""
  Aug 24 14:44:16.939: INFO: stdout: ""
  Aug 24 14:44:16.939: INFO: update-demo-nautilus-8jzjc is created but not running
  Aug 24 14:44:21.945: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 14:44:22.287: INFO: stderr: ""
  Aug 24 14:44:22.287: INFO: stdout: "update-demo-nautilus-8jzjc update-demo-nautilus-fm7gz "
  Aug 24 14:44:22.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-8jzjc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 14:44:22.592: INFO: stderr: ""
  Aug 24 14:44:22.592: INFO: stdout: ""
  Aug 24 14:44:22.592: INFO: update-demo-nautilus-8jzjc is created but not running
  Aug 24 14:44:27.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 14:44:27.776: INFO: stderr: ""
  Aug 24 14:44:27.776: INFO: stdout: "update-demo-nautilus-8jzjc update-demo-nautilus-fm7gz "
  Aug 24 14:44:27.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-8jzjc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 14:44:28.038: INFO: stderr: ""
  Aug 24 14:44:28.038: INFO: stdout: ""
  Aug 24 14:44:28.038: INFO: update-demo-nautilus-8jzjc is created but not running
  Aug 24 14:44:33.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 14:44:33.265: INFO: stderr: ""
  Aug 24 14:44:33.265: INFO: stdout: "update-demo-nautilus-8jzjc update-demo-nautilus-fm7gz "
  Aug 24 14:44:33.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-8jzjc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 14:44:33.407: INFO: stderr: ""
  Aug 24 14:44:33.407: INFO: stdout: "true"
  Aug 24 14:44:33.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-8jzjc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 14:44:33.551: INFO: stderr: ""
  Aug 24 14:44:33.551: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 14:44:33.551: INFO: validating pod update-demo-nautilus-8jzjc
  Aug 24 14:44:33.572: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 14:44:33.572: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 14:44:33.572: INFO: update-demo-nautilus-8jzjc is verified up and running
  Aug 24 14:44:33.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-fm7gz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 14:44:33.785: INFO: stderr: ""
  Aug 24 14:44:33.785: INFO: stdout: "true"
  Aug 24 14:44:33.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-fm7gz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 14:44:33.997: INFO: stderr: ""
  Aug 24 14:44:33.997: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 14:44:33.997: INFO: validating pod update-demo-nautilus-fm7gz
  Aug 24 14:44:34.013: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 14:44:34.013: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 14:44:34.013: INFO: update-demo-nautilus-fm7gz is verified up and running
  STEP: scaling down the replication controller @ 08/24/23 14:44:34.013
  Aug 24 14:44:34.031: INFO: scanned /root for discovery docs: <nil>
  Aug 24 14:44:34.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Aug 24 14:44:35.266: INFO: stderr: ""
  Aug 24 14:44:35.266: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/24/23 14:44:35.266
  Aug 24 14:44:35.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 14:44:35.475: INFO: stderr: ""
  Aug 24 14:44:35.475: INFO: stdout: "update-demo-nautilus-fm7gz "
  Aug 24 14:44:35.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-fm7gz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 14:44:35.644: INFO: stderr: ""
  Aug 24 14:44:35.644: INFO: stdout: "true"
  Aug 24 14:44:35.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-fm7gz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 14:44:35.818: INFO: stderr: ""
  Aug 24 14:44:35.818: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 14:44:35.818: INFO: validating pod update-demo-nautilus-fm7gz
  Aug 24 14:44:35.825: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 14:44:35.825: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 14:44:35.825: INFO: update-demo-nautilus-fm7gz is verified up and running
  STEP: scaling up the replication controller @ 08/24/23 14:44:35.825
  Aug 24 14:44:35.835: INFO: scanned /root for discovery docs: <nil>
  Aug 24 14:44:35.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Aug 24 14:44:37.079: INFO: stderr: ""
  Aug 24 14:44:37.080: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/24/23 14:44:37.08
  Aug 24 14:44:37.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 14:44:37.272: INFO: stderr: ""
  Aug 24 14:44:37.272: INFO: stdout: "update-demo-nautilus-cv9p7 update-demo-nautilus-fm7gz "
  Aug 24 14:44:37.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-cv9p7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 14:44:37.416: INFO: stderr: ""
  Aug 24 14:44:37.416: INFO: stdout: ""
  Aug 24 14:44:37.416: INFO: update-demo-nautilus-cv9p7 is created but not running
  Aug 24 14:44:42.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 14:44:42.596: INFO: stderr: ""
  Aug 24 14:44:42.596: INFO: stdout: "update-demo-nautilus-cv9p7 update-demo-nautilus-fm7gz "
  Aug 24 14:44:42.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-cv9p7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 14:44:42.743: INFO: stderr: ""
  Aug 24 14:44:42.743: INFO: stdout: "true"
  Aug 24 14:44:42.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-cv9p7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 14:44:42.890: INFO: stderr: ""
  Aug 24 14:44:42.890: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 14:44:42.890: INFO: validating pod update-demo-nautilus-cv9p7
  Aug 24 14:44:42.905: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 14:44:42.905: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 14:44:42.905: INFO: update-demo-nautilus-cv9p7 is verified up and running
  Aug 24 14:44:42.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-fm7gz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 14:44:43.050: INFO: stderr: ""
  Aug 24 14:44:43.050: INFO: stdout: "true"
  Aug 24 14:44:43.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods update-demo-nautilus-fm7gz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 14:44:43.215: INFO: stderr: ""
  Aug 24 14:44:43.215: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 14:44:43.215: INFO: validating pod update-demo-nautilus-fm7gz
  Aug 24 14:44:43.224: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 14:44:43.224: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 14:44:43.224: INFO: update-demo-nautilus-fm7gz is verified up and running
  STEP: using delete to clean up resources @ 08/24/23 14:44:43.224
  Aug 24 14:44:43.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 delete --grace-period=0 --force -f -'
  Aug 24 14:44:43.395: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 14:44:43.395: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Aug 24 14:44:43.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get rc,svc -l name=update-demo --no-headers'
  Aug 24 14:44:43.767: INFO: stderr: "No resources found in kubectl-540 namespace.\n"
  Aug 24 14:44:43.767: INFO: stdout: ""
  Aug 24 14:44:43.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-540 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 24 14:44:43.998: INFO: stderr: ""
  Aug 24 14:44:43.998: INFO: stdout: ""
  Aug 24 14:44:43.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-540" for this suite. @ 08/24/23 14:44:44.018
• [29.609 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 08/24/23 14:44:44.054
  Aug 24 14:44:44.054: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename subjectreview @ 08/24/23 14:44:44.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:44.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:44.115
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6049" @ 08/24/23 14:44:44.121
  Aug 24 14:44:44.131: INFO: saUsername: "system:serviceaccount:subjectreview-6049:e2e"
  Aug 24 14:44:44.131: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6049"}
  Aug 24 14:44:44.131: INFO: saUID: "47afe02c-a420-485d-9d0e-a5e1294c48a9"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6049:e2e" @ 08/24/23 14:44:44.131
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6049:e2e" @ 08/24/23 14:44:44.132
  Aug 24 14:44:44.138: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6049:e2e" api 'list' configmaps in "subjectreview-6049" namespace @ 08/24/23 14:44:44.138
  Aug 24 14:44:44.147: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6049:e2e" @ 08/24/23 14:44:44.147
  Aug 24 14:44:44.151: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Aug 24 14:44:44.152: INFO: LocalSubjectAccessReview has been verified
  Aug 24 14:44:44.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6049" for this suite. @ 08/24/23 14:44:44.162
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 08/24/23 14:44:44.185
  Aug 24 14:44:44.185: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/24/23 14:44:44.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:44.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:44.224
  STEP: Creating two CSIDrivers @ 08/24/23 14:44:44.228
  STEP: Getting "inline-driver-a970e8a3-ca37-4e62-ae92-ea255d661836" & "inline-driver-f6809537-760e-45d1-ae4f-02c5d78e8f81" @ 08/24/23 14:44:44.263
  STEP: Patching the CSIDriver "inline-driver-f6809537-760e-45d1-ae4f-02c5d78e8f81" @ 08/24/23 14:44:44.279
  STEP: Updating the CSIDriver "inline-driver-f6809537-760e-45d1-ae4f-02c5d78e8f81" @ 08/24/23 14:44:44.301
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3774" @ 08/24/23 14:44:44.316
  STEP: Deleting CSIDriver "inline-driver-a970e8a3-ca37-4e62-ae92-ea255d661836" @ 08/24/23 14:44:44.323
  STEP: Confirm deletion of CSIDriver "inline-driver-a970e8a3-ca37-4e62-ae92-ea255d661836" @ 08/24/23 14:44:44.335
  STEP: Deleting CSIDriver "inline-driver-f6809537-760e-45d1-ae4f-02c5d78e8f81" via DeleteCollection @ 08/24/23 14:44:44.342
  STEP: Confirm deletion of CSIDriver "inline-driver-f6809537-760e-45d1-ae4f-02c5d78e8f81" @ 08/24/23 14:44:44.355
  Aug 24 14:44:44.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3774" for this suite. @ 08/24/23 14:44:44.369
• [0.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 08/24/23 14:44:44.387
  Aug 24 14:44:44.387: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 14:44:44.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:44.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:44.45
  STEP: Setting up server cert @ 08/24/23 14:44:44.507
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 14:44:45.589
  STEP: Deploying the webhook pod @ 08/24/23 14:44:45.6
  STEP: Wait for the deployment to be ready @ 08/24/23 14:44:45.625
  Aug 24 14:44:45.644: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/24/23 14:44:47.668
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 14:44:47.693
  Aug 24 14:44:48.694: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 24 14:44:48.706: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5273-crds.webhook.example.com via the AdmissionRegistration API @ 08/24/23 14:44:49.258
  STEP: Creating a custom resource while v1 is storage version @ 08/24/23 14:44:49.411
  STEP: Patching Custom Resource Definition to set v2 as storage @ 08/24/23 14:44:51.446
  STEP: Patching the custom resource while v2 is storage version @ 08/24/23 14:44:51.476
  Aug 24 14:44:51.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8430" for this suite. @ 08/24/23 14:44:52.443
  STEP: Destroying namespace "webhook-markers-2156" for this suite. @ 08/24/23 14:44:52.458
• [8.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 08/24/23 14:44:52.478
  Aug 24 14:44:52.478: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 14:44:52.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:52.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:52.526
  STEP: Counting existing ResourceQuota @ 08/24/23 14:44:52.531
  STEP: Creating a ResourceQuota @ 08/24/23 14:44:57.538
  STEP: Ensuring resource quota status is calculated @ 08/24/23 14:44:57.556
  Aug 24 14:44:59.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1864" for this suite. @ 08/24/23 14:44:59.572
• [7.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 08/24/23 14:44:59.596
  Aug 24 14:44:59.597: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 14:44:59.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:44:59.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:44:59.636
  Aug 24 14:45:01.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 14:45:01.695: INFO: Deleting pod "var-expansion-f2a7976c-0ffe-4801-b5b5-1b52455d8f0e" in namespace "var-expansion-7819"
  Aug 24 14:45:01.711: INFO: Wait up to 5m0s for pod "var-expansion-f2a7976c-0ffe-4801-b5b5-1b52455d8f0e" to be fully deleted
  STEP: Destroying namespace "var-expansion-7819" for this suite. @ 08/24/23 14:45:03.731
• [4.147 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 08/24/23 14:45:03.746
  Aug 24 14:45:03.746: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 14:45:03.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:03.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:03.788
  Aug 24 14:45:03.797: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4341 create -f -'
  Aug 24 14:45:04.611: INFO: stderr: ""
  Aug 24 14:45:04.611: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Aug 24 14:45:04.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4341 create -f -'
  Aug 24 14:45:05.356: INFO: stderr: ""
  Aug 24 14:45:05.356: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/24/23 14:45:05.356
  Aug 24 14:45:06.368: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 14:45:06.368: INFO: Found 0 / 1
  Aug 24 14:45:07.364: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 14:45:07.364: INFO: Found 1 / 1
  Aug 24 14:45:07.364: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Aug 24 14:45:07.370: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 14:45:07.371: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 24 14:45:07.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4341 describe pod agnhost-primary-hs5mz'
  Aug 24 14:45:07.527: INFO: stderr: ""
  Aug 24 14:45:07.527: INFO: stdout: "Name:             agnhost-primary-hs5mz\nNamespace:        kubectl-4341\nPriority:         0\nService Account:  default\nNode:             dae4wichuiha-1/192.168.121.197\nStart Time:       Thu, 24 Aug 2023 14:45:04 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.64.160\nIPs:\n  IP:           10.233.64.160\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://238d62ad405442255ec18d126ee8f0f2a6d3be019d97881cb0ce3882f6c0afbb\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 24 Aug 2023 14:45:05 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-l7tsl (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-l7tsl:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-4341/agnhost-primary-hs5mz to dae4wichuiha-1\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Aug 24 14:45:07.528: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4341 describe rc agnhost-primary'
  Aug 24 14:45:07.701: INFO: stderr: ""
  Aug 24 14:45:07.701: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4341\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-hs5mz\n"
  Aug 24 14:45:07.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4341 describe service agnhost-primary'
  Aug 24 14:45:07.858: INFO: stderr: ""
  Aug 24 14:45:07.858: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-4341\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.48.114\nIPs:               10.233.48.114\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.64.160:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Aug 24 14:45:07.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4341 describe node dae4wichuiha-1'
  Aug 24 14:45:08.081: INFO: stderr: ""
  Aug 24 14:45:08.081: INFO: stdout: "Name:               dae4wichuiha-1\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=dae4wichuiha-1\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 24 Aug 2023 13:03:20 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  dae4wichuiha-1\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 24 Aug 2023 14:45:06 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 24 Aug 2023 13:14:25 +0000   Thu, 24 Aug 2023 13:14:25 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Thu, 24 Aug 2023 14:44:34 +0000   Thu, 24 Aug 2023 13:03:17 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 24 Aug 2023 14:44:34 +0000   Thu, 24 Aug 2023 13:03:17 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 24 Aug 2023 14:44:34 +0000   Thu, 24 Aug 2023 13:03:17 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 24 Aug 2023 14:44:34 +0000   Thu, 24 Aug 2023 13:03:20 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.121.197\n  Hostname:    dae4wichuiha-1\nCapacity:\n  cpu:                  2\n  ephemeral-storage:    115008636Ki\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  memory:               8123904Ki\n  pods:                 110\nAllocatable:\n  cpu:                  1600m\n  ephemeral-storage:    111880401014\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  memory:               3274240Ki\n  pods:                 110\nSystem Info:\n  Machine ID:                 f90a4fc5f1ed402bb7d7f397ed1099c0\n  System UUID:                f90a4fc5-f1ed-402b-b7d7-f397ed1099c0\n  Boot ID:                    73ae8b16-191f-4a70-aa7b-3891739ba0a3\n  Kernel Version:             6.2.0-26-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.28.0\n  Kubelet Version:            v1.28.1\n  Kube-Proxy Version:         v1.28.1\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (11 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cilium-mdfhj                                               100m (6%)     0 (0%)      100Mi (3%)       0 (0%)         91m\n  kube-system                 cilium-node-init-7k8b9                                     100m (6%)     0 (0%)      100Mi (3%)       0 (0%)         91m\n  kube-system                 coredns-5dd5756b68-bks6b                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     90m\n  kube-system                 kube-addon-manager-dae4wichuiha-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         101m\n  kube-system                 kube-apiserver-dae4wichuiha-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         101m\n  kube-system                 kube-controller-manager-dae4wichuiha-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         101m\n  kube-system                 kube-proxy-n7wmg                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         91m\n  kube-system                 kube-scheduler-dae4wichuiha-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         101m\n  kubectl-4341                agnhost-primary-hs5mz                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         4s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         36m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-psrg2    0 (0%)        0 (0%)      0 (0%)           0 (0%)         36m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource             Requests     Limits\n  --------             --------     ------\n  cpu                  855m (53%)   0 (0%)\n  memory               320Mi (10%)  170Mi (5%)\n  ephemeral-storage    0 (0%)       0 (0%)\n  hugepages-1Gi        0 (0%)       0 (0%)\n  hugepages-2Mi        0 (0%)       0 (0%)\n  example.com/fakecpu  0            0\nEvents:                <none>\n"
  Aug 24 14:45:08.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4341 describe namespace kubectl-4341'
  Aug 24 14:45:08.245: INFO: stderr: ""
  Aug 24 14:45:08.245: INFO: stdout: "Name:         kubectl-4341\nLabels:       e2e-framework=kubectl\n              e2e-run=d9d2b905-f445-420f-9083-5a97f4c1f284\n              kubernetes.io/metadata.name=kubectl-4341\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Aug 24 14:45:08.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4341" for this suite. @ 08/24/23 14:45:08.254
• [4.532 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 08/24/23 14:45:08.279
  Aug 24 14:45:08.279: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 14:45:08.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:08.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:08.314
  Aug 24 14:45:08.318: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  W0824 14:45:08.322503      14 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000c7ca70 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0824 14:45:11.278019      14 warnings.go:70] unknown field "alpha"
  W0824 14:45:11.278343      14 warnings.go:70] unknown field "beta"
  W0824 14:45:11.278528      14 warnings.go:70] unknown field "delta"
  W0824 14:45:11.278831      14 warnings.go:70] unknown field "epsilon"
  W0824 14:45:11.279073      14 warnings.go:70] unknown field "gamma"
  Aug 24 14:45:11.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5192" for this suite. @ 08/24/23 14:45:11.866
• [3.596 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 08/24/23 14:45:11.876
  Aug 24 14:45:11.877: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename podtemplate @ 08/24/23 14:45:11.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:11.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:11.914
  STEP: Create set of pod templates @ 08/24/23 14:45:11.92
  Aug 24 14:45:11.931: INFO: created test-podtemplate-1
  Aug 24 14:45:11.943: INFO: created test-podtemplate-2
  Aug 24 14:45:11.953: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 08/24/23 14:45:11.953
  STEP: delete collection of pod templates @ 08/24/23 14:45:11.958
  Aug 24 14:45:11.958: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 08/24/23 14:45:11.991
  Aug 24 14:45:11.991: INFO: requesting list of pod templates to confirm quantity
  Aug 24 14:45:11.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8277" for this suite. @ 08/24/23 14:45:12.005
• [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 08/24/23 14:45:12.029
  Aug 24 14:45:12.029: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename cronjob @ 08/24/23 14:45:12.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:45:12.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:45:12.087
  STEP: Creating a ForbidConcurrent cronjob @ 08/24/23 14:45:12.092
  STEP: Ensuring a job is scheduled @ 08/24/23 14:45:12.104
  STEP: Ensuring exactly one is scheduled @ 08/24/23 14:46:02.114
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/24/23 14:46:02.122
  STEP: Ensuring no more jobs are scheduled @ 08/24/23 14:46:02.13
  STEP: Removing cronjob @ 08/24/23 14:51:02.147
  Aug 24 14:51:02.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1000" for this suite. @ 08/24/23 14:51:02.179
• [350.164 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 08/24/23 14:51:02.198
  Aug 24 14:51:02.198: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename podtemplate @ 08/24/23 14:51:02.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:02.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:02.246
  Aug 24 14:51:02.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6991" for this suite. @ 08/24/23 14:51:02.304
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 08/24/23 14:51:02.336
  Aug 24 14:51:02.336: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 14:51:02.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:02.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:02.377
  STEP: Creating replication controller my-hostname-basic-86b90089-a81a-4c2a-ab9e-e27135019ba0 @ 08/24/23 14:51:02.382
  Aug 24 14:51:02.401: INFO: Pod name my-hostname-basic-86b90089-a81a-4c2a-ab9e-e27135019ba0: Found 0 pods out of 1
  Aug 24 14:51:07.425: INFO: Pod name my-hostname-basic-86b90089-a81a-4c2a-ab9e-e27135019ba0: Found 1 pods out of 1
  Aug 24 14:51:07.425: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-86b90089-a81a-4c2a-ab9e-e27135019ba0" are running
  Aug 24 14:51:07.437: INFO: Pod "my-hostname-basic-86b90089-a81a-4c2a-ab9e-e27135019ba0-n8sn5" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:51:02 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:51:04 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:51:04 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 14:51:02 +0000 UTC Reason: Message:}])
  Aug 24 14:51:07.441: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/24/23 14:51:07.441
  Aug 24 14:51:07.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5573" for this suite. @ 08/24/23 14:51:07.493
• [5.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 08/24/23 14:51:07.527
  Aug 24 14:51:07.527: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename csistoragecapacity @ 08/24/23 14:51:07.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:07.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:07.597
  STEP: getting /apis @ 08/24/23 14:51:07.609
  STEP: getting /apis/storage.k8s.io @ 08/24/23 14:51:07.643
  STEP: getting /apis/storage.k8s.io/v1 @ 08/24/23 14:51:07.648
  STEP: creating @ 08/24/23 14:51:07.652
  STEP: watching @ 08/24/23 14:51:07.698
  Aug 24 14:51:07.703: INFO: starting watch
  STEP: getting @ 08/24/23 14:51:07.728
  STEP: listing in namespace @ 08/24/23 14:51:07.742
  STEP: listing across namespaces @ 08/24/23 14:51:07.759
  STEP: patching @ 08/24/23 14:51:07.774
  STEP: updating @ 08/24/23 14:51:07.791
  Aug 24 14:51:07.812: INFO: waiting for watch events with expected annotations in namespace
  Aug 24 14:51:07.816: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 08/24/23 14:51:07.818
  STEP: deleting a collection @ 08/24/23 14:51:07.86
  Aug 24 14:51:07.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9684" for this suite. @ 08/24/23 14:51:07.918
• [0.408 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 08/24/23 14:51:07.938
  Aug 24 14:51:07.938: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 14:51:07.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:07.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:07.976
  STEP: creating a Namespace @ 08/24/23 14:51:07.98
  STEP: patching the Namespace @ 08/24/23 14:51:08.011
  STEP: get the Namespace and ensuring it has the label @ 08/24/23 14:51:08.024
  Aug 24 14:51:08.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1533" for this suite. @ 08/24/23 14:51:08.038
  STEP: Destroying namespace "nspatchtest-c32e1015-e4a1-44b4-a5c3-feba7d2c22e4-1215" for this suite. @ 08/24/23 14:51:08.052
• [0.131 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 08/24/23 14:51:08.08
  Aug 24 14:51:08.080: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:51:08.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:08.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:08.122
  STEP: Creating a pod to test downward api env vars @ 08/24/23 14:51:08.126
  STEP: Saw pod success @ 08/24/23 14:51:12.177
  Aug 24 14:51:12.184: INFO: Trying to get logs from node dae4wichuiha-1 pod downward-api-18be2575-2eb5-40b5-908d-f08d9f738b7c container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 14:51:12.226
  Aug 24 14:51:12.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7295" for this suite. @ 08/24/23 14:51:12.271
• [4.206 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 08/24/23 14:51:12.289
  Aug 24 14:51:12.289: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 14:51:12.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:12.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:12.325
  STEP: Creating projection with secret that has name secret-emptykey-test-d1f85297-117a-4c74-8b2c-a3665669e9e7 @ 08/24/23 14:51:12.328
  Aug 24 14:51:12.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7967" for this suite. @ 08/24/23 14:51:12.34
• [0.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 08/24/23 14:51:12.357
  Aug 24 14:51:12.357: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 14:51:12.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:12.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:12.402
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/24/23 14:51:12.407
  Aug 24 14:51:12.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-674 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Aug 24 14:51:12.702: INFO: stderr: ""
  Aug 24 14:51:12.702: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/24/23 14:51:12.703
  Aug 24 14:51:12.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-674 delete pods e2e-test-httpd-pod'
  Aug 24 14:51:14.172: INFO: stderr: ""
  Aug 24 14:51:14.172: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 24 14:51:14.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-674" for this suite. @ 08/24/23 14:51:14.189
• [1.849 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 08/24/23 14:51:14.208
  Aug 24 14:51:14.209: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 14:51:14.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:14.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:14.304
  STEP: creating service in namespace services-245 @ 08/24/23 14:51:14.314
  STEP: creating service affinity-nodeport-transition in namespace services-245 @ 08/24/23 14:51:14.314
  STEP: creating replication controller affinity-nodeport-transition in namespace services-245 @ 08/24/23 14:51:14.354
  I0824 14:51:14.393800      14 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-245, replica count: 3
  I0824 14:51:17.454724      14 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0824 14:51:20.456204      14 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 14:51:20.481: INFO: Creating new exec pod
  Aug 24 14:51:23.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-245 exec execpod-affinitydbjn7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Aug 24 14:51:23.920: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Aug 24 14:51:23.920: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:51:23.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-245 exec execpod-affinitydbjn7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.53.176 80'
  Aug 24 14:51:24.211: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.53.176 80\nConnection to 10.233.53.176 80 port [tcp/http] succeeded!\n"
  Aug 24 14:51:24.211: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:51:24.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-245 exec execpod-affinitydbjn7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.197 31987'
  Aug 24 14:51:24.480: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.197 31987\nConnection to 192.168.121.197 31987 port [tcp/*] succeeded!\n"
  Aug 24 14:51:24.480: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:51:24.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-245 exec execpod-affinitydbjn7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.163 31987'
  Aug 24 14:51:24.752: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.163 31987\nConnection to 192.168.121.163 31987 port [tcp/*] succeeded!\n"
  Aug 24 14:51:24.752: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:51:24.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-245 exec execpod-affinitydbjn7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.197:31987/ ; done'
  Aug 24 14:51:25.556: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n"
  Aug 24 14:51:25.557: INFO: stdout: "\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-vjfrp\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-vjfrp\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-vjfrp\naffinity-nodeport-transition-vjfrp\naffinity-nodeport-transition-vjfrp\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-vjfrp\naffinity-nodeport-transition-k4vvx\naffinity-nodeport-transition-vjfrp\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-vjfrp\naffinity-nodeport-transition-k4vvx"
  Aug 24 14:51:25.557: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:25.557: INFO: Received response from host: affinity-nodeport-transition-vjfrp
  Aug 24 14:51:25.557: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:25.557: INFO: Received response from host: affinity-nodeport-transition-vjfrp
  Aug 24 14:51:25.557: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:25.557: INFO: Received response from host: affinity-nodeport-transition-vjfrp
  Aug 24 14:51:25.557: INFO: Received response from host: affinity-nodeport-transition-vjfrp
  Aug 24 14:51:25.558: INFO: Received response from host: affinity-nodeport-transition-vjfrp
  Aug 24 14:51:25.558: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:25.558: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:25.558: INFO: Received response from host: affinity-nodeport-transition-vjfrp
  Aug 24 14:51:25.558: INFO: Received response from host: affinity-nodeport-transition-k4vvx
  Aug 24 14:51:25.558: INFO: Received response from host: affinity-nodeport-transition-vjfrp
  Aug 24 14:51:25.558: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:25.558: INFO: Received response from host: affinity-nodeport-transition-vjfrp
  Aug 24 14:51:25.558: INFO: Received response from host: affinity-nodeport-transition-k4vvx
  Aug 24 14:51:25.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-245 exec execpod-affinitydbjn7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.197:31987/ ; done'
  Aug 24 14:51:26.092: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.197:31987/\n"
  Aug 24 14:51:26.093: INFO: stdout: "\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965\naffinity-nodeport-transition-8k965"
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Received response from host: affinity-nodeport-transition-8k965
  Aug 24 14:51:26.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 14:51:26.101: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-245, will wait for the garbage collector to delete the pods @ 08/24/23 14:51:26.14
  Aug 24 14:51:26.215: INFO: Deleting ReplicationController affinity-nodeport-transition took: 14.844646ms
  Aug 24 14:51:26.326: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 111.280742ms
  STEP: Destroying namespace "services-245" for this suite. @ 08/24/23 14:51:29.478
• [15.298 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 08/24/23 14:51:29.51
  Aug 24 14:51:29.511: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 14:51:29.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:29.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:29.562
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-175 @ 08/24/23 14:51:29.566
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/24/23 14:51:29.59
  STEP: creating service externalsvc in namespace services-175 @ 08/24/23 14:51:29.595
  STEP: creating replication controller externalsvc in namespace services-175 @ 08/24/23 14:51:29.618
  I0824 14:51:29.635724      14 runners.go:197] Created replication controller with name: externalsvc, namespace: services-175, replica count: 2
  I0824 14:51:32.698816      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 08/24/23 14:51:32.715
  Aug 24 14:51:32.787: INFO: Creating new exec pod
  Aug 24 14:51:34.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-175 exec execpod9j275 -- /bin/sh -x -c nslookup clusterip-service.services-175.svc.cluster.local'
  Aug 24 14:51:35.395: INFO: stderr: "+ nslookup clusterip-service.services-175.svc.cluster.local\n"
  Aug 24 14:51:35.395: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-175.svc.cluster.local\tcanonical name = externalsvc.services-175.svc.cluster.local.\nName:\texternalsvc.services-175.svc.cluster.local\nAddress: 10.233.30.34\n\n"
  Aug 24 14:51:35.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-175, will wait for the garbage collector to delete the pods @ 08/24/23 14:51:35.424
  Aug 24 14:51:35.506: INFO: Deleting ReplicationController externalsvc took: 14.41409ms
  Aug 24 14:51:35.611: INFO: Terminating ReplicationController externalsvc pods took: 104.667726ms
  Aug 24 14:51:38.447: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-175" for this suite. @ 08/24/23 14:51:38.469
• [9.009 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 08/24/23 14:51:38.522
  Aug 24 14:51:38.522: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 14:51:38.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:38.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:38.587
  STEP: Creating a test namespace @ 08/24/23 14:51:38.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:38.622
  STEP: Creating a service in the namespace @ 08/24/23 14:51:38.626
  STEP: Deleting the namespace @ 08/24/23 14:51:38.645
  STEP: Waiting for the namespace to be removed. @ 08/24/23 14:51:38.672
  STEP: Recreating the namespace @ 08/24/23 14:51:44.681
  STEP: Verifying there is no service in the namespace @ 08/24/23 14:51:44.718
  Aug 24 14:51:44.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5158" for this suite. @ 08/24/23 14:51:44.745
  STEP: Destroying namespace "nsdeletetest-7345" for this suite. @ 08/24/23 14:51:44.758
  Aug 24 14:51:44.764: INFO: Namespace nsdeletetest-7345 was already deleted
  STEP: Destroying namespace "nsdeletetest-4498" for this suite. @ 08/24/23 14:51:44.764
• [6.255 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 08/24/23 14:51:44.777
  Aug 24 14:51:44.777: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 14:51:44.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:44.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:44.812
  STEP: Creating a ResourceQuota @ 08/24/23 14:51:44.817
  STEP: Getting a ResourceQuota @ 08/24/23 14:51:44.827
  STEP: Updating a ResourceQuota @ 08/24/23 14:51:44.834
  STEP: Verifying a ResourceQuota was modified @ 08/24/23 14:51:44.851
  STEP: Deleting a ResourceQuota @ 08/24/23 14:51:44.855
  STEP: Verifying the deleted ResourceQuota @ 08/24/23 14:51:44.871
  Aug 24 14:51:44.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5650" for this suite. @ 08/24/23 14:51:44.888
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 08/24/23 14:51:44.913
  Aug 24 14:51:44.913: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:51:44.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:45.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:45.174
  STEP: Creating the pod @ 08/24/23 14:51:45.179
  Aug 24 14:51:47.753: INFO: Successfully updated pod "annotationupdate9f9868c8-af0d-45ad-a776-ca2a7bbb141f"
  Aug 24 14:51:49.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7297" for this suite. @ 08/24/23 14:51:49.81
• [4.914 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 08/24/23 14:51:49.838
  Aug 24 14:51:49.838: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename job @ 08/24/23 14:51:49.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:51:49.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:51:49.987
  STEP: Creating Indexed job @ 08/24/23 14:51:50.004
  STEP: Ensuring job reaches completions @ 08/24/23 14:51:50.029
  STEP: Ensuring pods with index for job exist @ 08/24/23 14:52:00.039
  Aug 24 14:52:00.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-617" for this suite. @ 08/24/23 14:52:00.064
• [10.243 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 08/24/23 14:52:00.085
  Aug 24 14:52:00.085: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename deployment @ 08/24/23 14:52:00.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:52:00.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:52:00.136
  Aug 24 14:52:00.142: INFO: Creating deployment "webserver-deployment"
  Aug 24 14:52:00.154: INFO: Waiting for observed generation 1
  Aug 24 14:52:02.448: INFO: Waiting for all required pods to come up
  Aug 24 14:52:02.492: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 08/24/23 14:52:02.492
  Aug 24 14:52:04.796: INFO: Waiting for deployment "webserver-deployment" to complete
  Aug 24 14:52:04.805: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Aug 24 14:52:04.820: INFO: Updating deployment webserver-deployment
  Aug 24 14:52:04.820: INFO: Waiting for observed generation 2
  Aug 24 14:52:06.866: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Aug 24 14:52:06.878: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Aug 24 14:52:06.903: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Aug 24 14:52:06.926: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Aug 24 14:52:06.927: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Aug 24 14:52:06.933: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Aug 24 14:52:06.943: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Aug 24 14:52:06.943: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Aug 24 14:52:06.963: INFO: Updating deployment webserver-deployment
  Aug 24 14:52:06.963: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Aug 24 14:52:06.985: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Aug 24 14:52:07.017: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Aug 24 14:52:07.091: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff06fba3-cd54-40aa-96ab-8bdf1fe9b918",
      ResourceVersion: (string) (len=5) "21377",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 14:52:07.152: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
      ResourceVersion: (string) (len=5) "21367",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "ff06fba3-cd54-40aa-96ab-8bdf1fe9b918",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 66 30 36 66 62  61 33 2d 63 64 35 34 2d  |\"ff06fba3-cd54-|
              00000120  34 30 61 61 2d 39 36 61  62 2d 38 62 64 66 31 66  |40aa-96ab-8bdf1f|
              00000130  65 39 62 39 31 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e9b918\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 14:52:07.162: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Aug 24 14:52:07.166: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
      ResourceVersion: (string) (len=5) "21363",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "ff06fba3-cd54-40aa-96ab-8bdf1fe9b918",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 66 30 36 66 62  61 33 2d 63 64 35 34 2d  |\"ff06fba3-cd54-|
              00000120  34 30 61 61 2d 39 36 61  62 2d 38 62 64 66 31 66  |40aa-96ab-8bdf1f|
              00000130  65 39 62 39 31 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e9b918\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 14:52:07.866: INFO: Pod "webserver-deployment-557759b7c7-25jkz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-25jkz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed515d1d-3b3c-4d07-aa84-663a491ab568",
      ResourceVersion: (string) (len=5) "21422",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2m476",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2m476",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:07.979: INFO: Pod "webserver-deployment-557759b7c7-4v2bt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4v2bt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78614750-e56c-47d5-aca0-1cd4b3345108",
      ResourceVersion: (string) (len=5) "21433",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z9sm2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z9sm2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.026: INFO: Pod "webserver-deployment-557759b7c7-59nfr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-59nfr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d2409f9-4433-484c-a28d-a6f7f59b1ba6",
      ResourceVersion: (string) (len=5) "21456",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ns4tq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ns4tq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.077: INFO: Pod "webserver-deployment-557759b7c7-66wwq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-66wwq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2243a72-ce81-42e8-ab84-b261b6e397e5",
      ResourceVersion: (string) (len=5) "21430",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vwfxk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vwfxk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.093: INFO: Pod "webserver-deployment-557759b7c7-68zdv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-68zdv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96e6902f-c7f2-41c0-80b9-997b11de5fc3",
      ResourceVersion: (string) (len=5) "21256",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 5c 22 7d 22 3a  |10.233.65.1\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5swqm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5swqm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.233.65.1",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.233.65.1"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485523,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://c50e51ece0749a1eded40fadcd62ead04cfa6302b3ce76343531c44925895692",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.104: INFO: Pod "webserver-deployment-557759b7c7-8wj7v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8wj7v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03b549bc-7189-47fc-9676-cd3839417ed3",
      ResourceVersion: (string) (len=5) "21446",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zjvn4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zjvn4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.133: INFO: Pod "webserver-deployment-557759b7c7-bqk4p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bqk4p",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c61e126-bff5-4e5a-a92e-284be7c2d381",
      ResourceVersion: (string) (len=5) "21448",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zmdf6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zmdf6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.165: INFO: Pod "webserver-deployment-557759b7c7-c442c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-c442c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c156df44-bfd2-47a7-912c-0f68c6aa68d7",
      ResourceVersion: (string) (len=5) "21228",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485523,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 38 32 5c 22 7d 22  |10.233.64.82\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7cbx9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7cbx9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485523,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485523,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485522,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://a4b67bb2a2d71b1d5a13119eda279bf3af00a1e360b87b3c15c18a7636a20a67",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.204: INFO: Pod "webserver-deployment-557759b7c7-d4p8j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-d4p8j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "302b3f12-f6e0-42b1-b2b6-607f36ebcc8c",
      ResourceVersion: (string) (len=5) "21453",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p2hmc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p2hmc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.236: INFO: Pod "webserver-deployment-557759b7c7-d8h2t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-d8h2t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0860ee73-f1f8-4b05-96df-2c50f6ff02c1",
      ResourceVersion: (string) (len=5) "21437",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hq2vq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hq2vq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.256: INFO: Pod "webserver-deployment-557759b7c7-h5s6d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-h5s6d",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66cbb9c3-d155-4113-a7ee-6852cc8c18c8",
      ResourceVersion: (string) (len=5) "21236",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485523,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 37 34 5c 22 7d  |10.233.64.174\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j4wx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j4wx8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485523,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485523,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485523,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://63f8ac92d3b3463e8b46215a98821c26b9a5986449fb5c2b2cd79d6bf049ce82",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.282: INFO: Pod "webserver-deployment-557759b7c7-j9z9b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-j9z9b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2099b16-f4b5-4591-a12b-5ec127f3ec1c",
      ResourceVersion: (string) (len=5) "21245",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 33 33 5c 22 7d  |10.233.65.133\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-krb58",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-krb58",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485523,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://01e685d949ab07f7363b1626e2c64397697e5b823f7de77555196730b1eff964",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.294: INFO: Pod "webserver-deployment-557759b7c7-kcdpr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kcdpr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "423149e9-3df7-49f3-a72f-da210dda010f",
      ResourceVersion: (string) (len=5) "21254",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 33 35 5c 22 7d 22  |10.233.65.35\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z5pnb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z5pnb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485523,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://2db817856ed3b5360e16eed985c9891323e2992e9521b71984d5a1af3e69468c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.311: INFO: Pod "webserver-deployment-557759b7c7-pgbps" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pgbps",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bce85fe6-e3f5-4466-bc88-b478b1736471",
      ResourceVersion: (string) (len=5) "21376",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qnf9c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qnf9c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.335: INFO: Pod "webserver-deployment-557759b7c7-q7zlt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q7zlt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca36cc2b-2dee-4cdc-afa6-3365ee36619b",
      ResourceVersion: (string) (len=5) "21247",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 36 38 5c 22 7d  |10.233.65.168\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w6pkm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w6pkm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485523,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://3e1247cdd6b0939cf6b6426f4720857edfd3434de15769c59e47b81980f983a4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.347: INFO: Pod "webserver-deployment-557759b7c7-rft7b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rft7b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e3674a4-edc1-4175-9544-aa616a531a7e",
      ResourceVersion: (string) (len=5) "21458",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gh4cf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gh4cf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.354: INFO: Pod "webserver-deployment-557759b7c7-snp8w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-snp8w",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "456a5f6e-c25f-450c-a3d1-4115c9f14ef5",
      ResourceVersion: (string) (len=5) "21405",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zb2f6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zb2f6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.362: INFO: Pod "webserver-deployment-557759b7c7-sx2nm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sx2nm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82b3df38-5dba-4bd0-8527-545fbbd65127",
      ResourceVersion: (string) (len=5) "21389",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4l4xl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4l4xl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.365: INFO: Pod "webserver-deployment-557759b7c7-tfpkq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tfpkq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "521a6585-069d-4413-833c-aae1f0e1432c",
      ResourceVersion: (string) (len=5) "21251",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 32 37 5c 22 7d  |10.233.65.127\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h84sz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h84sz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.127",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.127"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485523,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://df9997da4ccbf672e6b09e71c67abdfe6ace00288ef1423f7596cc21ea0a5061",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.369: INFO: Pod "webserver-deployment-557759b7c7-z2js4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z2js4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0313cdbb-74d6-42e1-8867-93ddeb575721",
      ResourceVersion: (string) (len=5) "21231",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "2b923bec-852d-4510-96de-2ee5ae93b267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 62  39 32 33 62 65 63 2d 38  |d\":\"2b923bec-8|
              00000090  35 32 64 2d 34 35 31 30  2d 39 36 64 65 2d 32 65  |52d-4510-96de-2e|
              000000a0  65 35 61 65 39 33 62 32  36 37 5c 22 7d 22 3a 7b  |e5ae93b267\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485523,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 30 37 5c 22 7d  |10.233.64.107\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vr5r5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vr5r5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485523,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485523,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485520,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485520,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485523,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://75d0467dc4a0ecb6c083109959e6e6d6715d48cd13a36aaeb1b46b2b65d1081e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.376: INFO: Pod "webserver-deployment-9b4f5bf69-4hp6x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4hp6x",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d94ef2d5-06e1-4dc9-bbec-634dc4b9f47c",
      ResourceVersion: (string) (len=5) "21450",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sxcps",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sxcps",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.387: INFO: Pod "webserver-deployment-9b4f5bf69-5pck5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5pck5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90ffe759-9332-47f8-9099-732361712f9f",
      ResourceVersion: (string) (len=5) "21445",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w2pjn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w2pjn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.393: INFO: Pod "webserver-deployment-9b4f5bf69-65qmt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-65qmt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "725efea6-6dcd-46aa-8175-9e8fe86f1ae8",
      ResourceVersion: (string) (len=5) "21399",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cg4t9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cg4t9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.395: INFO: Pod "webserver-deployment-9b4f5bf69-7sfz5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7sfz5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99134564-ead2-4672-b8cb-241142fc9eb6",
      ResourceVersion: (string) (len=5) "21442",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cf9x7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cf9x7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.399: INFO: Pod "webserver-deployment-9b4f5bf69-9gqnw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9gqnw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c97729cf-5ad4-4999-8372-c40156856e12",
      ResourceVersion: (string) (len=5) "21402",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lwb4h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lwb4h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.404: INFO: Pod "webserver-deployment-9b4f5bf69-c6kdh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-c6kdh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed39a91f-9ea7-4f97-838c-9f20a64e47eb",
      ResourceVersion: (string) (len=5) "21295",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vjflc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vjflc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.414: INFO: Pod "webserver-deployment-9b4f5bf69-jvhkp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jvhkp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a3b295d-4693-433e-b597-b7f58fcb6dda",
      ResourceVersion: (string) (len=5) "21312",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ww74q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ww74q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.417: INFO: Pod "webserver-deployment-9b4f5bf69-khsqd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-khsqd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8761b262-72e5-4765-8c3b-66627d8d01b4",
      ResourceVersion: (string) (len=5) "21385",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2w8p8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2w8p8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.427: INFO: Pod "webserver-deployment-9b4f5bf69-kwnr2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kwnr2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "efbcf264-d46c-46bd-b749-ef4d2e799aa2",
      ResourceVersion: (string) (len=5) "21400",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9sd8j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9sd8j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.430: INFO: Pod "webserver-deployment-9b4f5bf69-l2ppx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-l2ppx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "494da1db-1b60-45d2-9b97-717dff92fdeb",
      ResourceVersion: (string) (len=5) "21285",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8nc9f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8nc9f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.461: INFO: Pod "webserver-deployment-9b4f5bf69-twdbt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-twdbt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41d0a6b3-99be-4757-8c02-52efde81645d",
      ResourceVersion: (string) (len=5) "21454",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-48vdb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-48vdb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.468: INFO: Pod "webserver-deployment-9b4f5bf69-w82ls" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-w82ls",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09d40764-3bf4-4a5c-887d-6ac8f619b44e",
      ResourceVersion: (string) (len=5) "21276",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sf26d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sf26d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485524,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485524,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.478: INFO: Pod "webserver-deployment-9b4f5bf69-zfd5t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zfd5t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4047",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ade31234-f6d3-486f-8486-c1fe8d0f5cba",
      ResourceVersion: (string) (len=5) "21310",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "64afa9ed-865e-4ccb-a5ff-22b709a2a498",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 34  61 66 61 39 65 64 2d 38  |d\":\"64afa9ed-8|
              00000090  36 35 65 2d 34 63 63 62  2d 61 35 66 66 2d 32 32  |65e-4ccb-a5ff-22|
              000000a0  62 37 30 39 61 32 61 34  39 38 5c 22 7d 22 3a 7b  |b709a2a498\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vzvcb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vzvcb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:52:08.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4047" for this suite. @ 08/24/23 14:52:08.496
• [8.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 08/24/23 14:52:08.52
  Aug 24 14:52:08.520: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename taint-single-pod @ 08/24/23 14:52:08.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:52:08.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:52:08.582
  Aug 24 14:52:08.595: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 24 14:53:08.652: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 14:53:08.659: INFO: Starting informer...
  STEP: Starting pod... @ 08/24/23 14:53:08.66
  Aug 24 14:53:08.891: INFO: Pod is running on dae4wichuiha-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/24/23 14:53:08.892
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/24/23 14:53:08.916
  STEP: Waiting short time to make sure Pod is queued for deletion @ 08/24/23 14:53:08.929
  Aug 24 14:53:08.930: INFO: Pod wasn't evicted. Proceeding
  Aug 24 14:53:08.930: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/24/23 14:53:08.968
  STEP: Waiting some time to make sure that toleration time passed. @ 08/24/23 14:53:08.983
  Aug 24 14:54:23.985: INFO: Pod wasn't evicted. Test successful
  Aug 24 14:54:23.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1316" for this suite. @ 08/24/23 14:54:23.997
• [135.490 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 08/24/23 14:54:24.011
  Aug 24 14:54:24.011: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 14:54:24.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:24.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:24.056
  STEP: set up a multi version CRD @ 08/24/23 14:54:24.066
  Aug 24 14:54:24.070: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: mark a version not serverd @ 08/24/23 14:54:28.858
  STEP: check the unserved version gets removed @ 08/24/23 14:54:28.901
  STEP: check the other version is not changed @ 08/24/23 14:54:30.658
  Aug 24 14:54:34.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6835" for this suite. @ 08/24/23 14:54:34.444
• [10.448 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 08/24/23 14:54:34.462
  Aug 24 14:54:34.463: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename proxy @ 08/24/23 14:54:34.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:34.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:34.51
  STEP: starting an echo server on multiple ports @ 08/24/23 14:54:34.548
  STEP: creating replication controller proxy-service-h4hxf in namespace proxy-9750 @ 08/24/23 14:54:34.549
  I0824 14:54:34.591389      14 runners.go:197] Created replication controller with name: proxy-service-h4hxf, namespace: proxy-9750, replica count: 1
  I0824 14:54:35.643446      14 runners.go:197] proxy-service-h4hxf Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0824 14:54:36.645306      14 runners.go:197] proxy-service-h4hxf Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 14:54:36.653: INFO: setup took 2.138186961s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 08/24/23 14:54:36.654
  Aug 24 14:54:36.698: INFO: (0) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 43.658306ms)
  Aug 24 14:54:36.699: INFO: (0) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 41.977917ms)
  Aug 24 14:54:36.699: INFO: (0) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 43.136651ms)
  Aug 24 14:54:36.700: INFO: (0) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 42.144665ms)
  Aug 24 14:54:36.713: INFO: (0) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 55.238964ms)
  Aug 24 14:54:36.713: INFO: (0) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 56.689242ms)
  Aug 24 14:54:36.713: INFO: (0) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 55.504119ms)
  Aug 24 14:54:36.713: INFO: (0) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 55.900195ms)
  Aug 24 14:54:36.714: INFO: (0) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 55.823311ms)
  Aug 24 14:54:36.714: INFO: (0) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 56.884959ms)
  Aug 24 14:54:36.714: INFO: (0) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 55.912975ms)
  Aug 24 14:54:36.725: INFO: (0) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 66.633359ms)
  Aug 24 14:54:36.725: INFO: (0) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 67.325817ms)
  Aug 24 14:54:36.725: INFO: (0) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 67.86097ms)
  Aug 24 14:54:36.727: INFO: (0) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 69.985179ms)
  Aug 24 14:54:36.727: INFO: (0) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 70.247613ms)
  Aug 24 14:54:36.765: INFO: (1) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 34.843013ms)
  Aug 24 14:54:36.765: INFO: (1) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 35.484463ms)
  Aug 24 14:54:36.765: INFO: (1) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 35.066549ms)
  Aug 24 14:54:36.765: INFO: (1) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 36.146223ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 37.128477ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 39.493335ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 37.184875ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 36.727302ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 36.558874ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 36.22621ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 37.129934ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 36.182169ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 37.418432ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 36.927447ms)
  Aug 24 14:54:36.767: INFO: (1) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 36.463874ms)
  Aug 24 14:54:36.768: INFO: (1) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 38.910794ms)
  Aug 24 14:54:36.782: INFO: (2) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 13.233599ms)
  Aug 24 14:54:36.782: INFO: (2) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 13.030781ms)
  Aug 24 14:54:36.785: INFO: (2) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 16.129928ms)
  Aug 24 14:54:36.785: INFO: (2) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 16.733079ms)
  Aug 24 14:54:36.796: INFO: (2) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 27.345366ms)
  Aug 24 14:54:36.797: INFO: (2) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 28.066423ms)
  Aug 24 14:54:36.799: INFO: (2) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 28.304664ms)
  Aug 24 14:54:36.801: INFO: (2) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 29.570895ms)
  Aug 24 14:54:36.804: INFO: (2) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 32.005147ms)
  Aug 24 14:54:36.804: INFO: (2) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 32.881589ms)
  Aug 24 14:54:36.805: INFO: (2) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 33.578256ms)
  Aug 24 14:54:36.808: INFO: (2) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 37.010994ms)
  Aug 24 14:54:36.811: INFO: (2) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 42.162157ms)
  Aug 24 14:54:36.812: INFO: (2) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 40.42825ms)
  Aug 24 14:54:36.813: INFO: (2) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 42.089875ms)
  Aug 24 14:54:36.813: INFO: (2) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 41.905227ms)
  Aug 24 14:54:36.828: INFO: (3) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 14.362796ms)
  Aug 24 14:54:36.838: INFO: (3) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 24.703455ms)
  Aug 24 14:54:36.840: INFO: (3) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 25.528354ms)
  Aug 24 14:54:36.841: INFO: (3) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 26.892568ms)
  Aug 24 14:54:36.842: INFO: (3) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 27.479087ms)
  Aug 24 14:54:36.842: INFO: (3) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 27.576021ms)
  Aug 24 14:54:36.845: INFO: (3) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 29.832904ms)
  Aug 24 14:54:36.847: INFO: (3) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 31.54776ms)
  Aug 24 14:54:36.847: INFO: (3) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 32.087487ms)
  Aug 24 14:54:36.847: INFO: (3) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 32.316298ms)
  Aug 24 14:54:36.850: INFO: (3) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 34.928948ms)
  Aug 24 14:54:36.852: INFO: (3) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 36.235478ms)
  Aug 24 14:54:36.853: INFO: (3) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 37.001027ms)
  Aug 24 14:54:36.853: INFO: (3) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 36.413202ms)
  Aug 24 14:54:36.853: INFO: (3) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 38.898937ms)
  Aug 24 14:54:36.853: INFO: (3) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 38.074778ms)
  Aug 24 14:54:36.886: INFO: (4) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 31.235015ms)
  Aug 24 14:54:36.886: INFO: (4) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 30.903374ms)
  Aug 24 14:54:36.886: INFO: (4) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 31.405625ms)
  Aug 24 14:54:36.886: INFO: (4) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 31.060747ms)
  Aug 24 14:54:36.886: INFO: (4) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 31.284658ms)
  Aug 24 14:54:36.886: INFO: (4) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 18.944074ms)
  Aug 24 14:54:36.886: INFO: (4) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 31.239024ms)
  Aug 24 14:54:36.886: INFO: (4) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 31.002145ms)
  Aug 24 14:54:36.887: INFO: (4) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 31.137697ms)
  Aug 24 14:54:36.887: INFO: (4) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 30.896188ms)
  Aug 24 14:54:36.887: INFO: (4) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 29.717854ms)
  Aug 24 14:54:36.887: INFO: (4) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 31.110098ms)
  Aug 24 14:54:36.887: INFO: (4) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 31.578978ms)
  Aug 24 14:54:36.887: INFO: (4) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 30.628484ms)
  Aug 24 14:54:36.890: INFO: (4) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 34.093581ms)
  Aug 24 14:54:36.897: INFO: (4) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 40.288858ms)
  Aug 24 14:54:36.929: INFO: (5) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 31.788111ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 30.149012ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 32.210101ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 29.20898ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 30.090383ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 26.098815ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 27.567042ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 30.910437ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 27.021658ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 27.423885ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 29.038506ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 26.443106ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 27.276834ms)
  Aug 24 14:54:36.930: INFO: (5) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 32.939323ms)
  Aug 24 14:54:36.931: INFO: (5) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 30.856552ms)
  Aug 24 14:54:36.932: INFO: (5) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 29.151437ms)
  Aug 24 14:54:36.960: INFO: (6) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 27.354825ms)
  Aug 24 14:54:36.961: INFO: (6) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 26.044305ms)
  Aug 24 14:54:36.961: INFO: (6) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 28.184394ms)
  Aug 24 14:54:36.961: INFO: (6) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 27.937805ms)
  Aug 24 14:54:36.961: INFO: (6) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 26.317244ms)
  Aug 24 14:54:36.961: INFO: (6) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 26.458346ms)
  Aug 24 14:54:36.961: INFO: (6) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 28.066682ms)
  Aug 24 14:54:36.961: INFO: (6) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 26.255593ms)
  Aug 24 14:54:36.960: INFO: (6) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 25.016532ms)
  Aug 24 14:54:36.969: INFO: (6) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 33.694519ms)
  Aug 24 14:54:36.989: INFO: (6) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 53.122137ms)
  Aug 24 14:54:36.989: INFO: (6) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 54.648095ms)
  Aug 24 14:54:36.989: INFO: (6) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 53.722741ms)
  Aug 24 14:54:36.990: INFO: (6) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 53.844291ms)
  Aug 24 14:54:36.990: INFO: (6) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 54.107657ms)
  Aug 24 14:54:36.990: INFO: (6) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 54.473552ms)
  Aug 24 14:54:37.008: INFO: (7) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 17.194345ms)
  Aug 24 14:54:37.008: INFO: (7) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 17.089683ms)
  Aug 24 14:54:37.026: INFO: (7) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 34.606046ms)
  Aug 24 14:54:37.029: INFO: (7) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 37.1662ms)
  Aug 24 14:54:37.029: INFO: (7) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 37.364768ms)
  Aug 24 14:54:37.029: INFO: (7) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 36.374797ms)
  Aug 24 14:54:37.030: INFO: (7) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 36.933716ms)
  Aug 24 14:54:37.030: INFO: (7) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 37.160913ms)
  Aug 24 14:54:37.030: INFO: (7) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 37.158529ms)
  Aug 24 14:54:37.030: INFO: (7) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 37.259925ms)
  Aug 24 14:54:37.030: INFO: (7) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 37.473826ms)
  Aug 24 14:54:37.030: INFO: (7) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 37.648932ms)
  Aug 24 14:54:37.031: INFO: (7) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 37.895304ms)
  Aug 24 14:54:37.031: INFO: (7) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 37.812486ms)
  Aug 24 14:54:37.031: INFO: (7) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 37.876375ms)
  Aug 24 14:54:37.032: INFO: (7) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 39.191168ms)
  Aug 24 14:54:37.052: INFO: (8) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 20.567428ms)
  Aug 24 14:54:37.053: INFO: (8) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 20.838121ms)
  Aug 24 14:54:37.060: INFO: (8) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 27.428056ms)
  Aug 24 14:54:37.060: INFO: (8) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 27.482727ms)
  Aug 24 14:54:37.060: INFO: (8) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 27.890958ms)
  Aug 24 14:54:37.060: INFO: (8) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 27.534437ms)
  Aug 24 14:54:37.060: INFO: (8) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 27.924341ms)
  Aug 24 14:54:37.060: INFO: (8) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 27.456853ms)
  Aug 24 14:54:37.060: INFO: (8) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 27.752096ms)
  Aug 24 14:54:37.066: INFO: (8) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 32.872142ms)
  Aug 24 14:54:37.067: INFO: (8) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 34.212722ms)
  Aug 24 14:54:37.068: INFO: (8) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 35.318725ms)
  Aug 24 14:54:37.068: INFO: (8) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 35.074953ms)
  Aug 24 14:54:37.076: INFO: (8) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 43.397574ms)
  Aug 24 14:54:37.076: INFO: (8) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 43.568663ms)
  Aug 24 14:54:37.076: INFO: (8) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 43.434725ms)
  Aug 24 14:54:37.094: INFO: (9) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 13.725979ms)
  Aug 24 14:54:37.094: INFO: (9) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 17.303894ms)
  Aug 24 14:54:37.106: INFO: (9) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 25.691624ms)
  Aug 24 14:54:37.106: INFO: (9) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 25.761719ms)
  Aug 24 14:54:37.106: INFO: (9) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 26.952128ms)
  Aug 24 14:54:37.107: INFO: (9) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 27.873713ms)
  Aug 24 14:54:37.107: INFO: (9) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 27.419968ms)
  Aug 24 14:54:37.107: INFO: (9) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 27.792774ms)
  Aug 24 14:54:37.107: INFO: (9) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 27.284241ms)
  Aug 24 14:54:37.107: INFO: (9) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 27.590463ms)
  Aug 24 14:54:37.111: INFO: (9) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 32.512626ms)
  Aug 24 14:54:37.116: INFO: (9) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 36.881861ms)
  Aug 24 14:54:37.117: INFO: (9) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 36.540683ms)
  Aug 24 14:54:37.118: INFO: (9) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 38.664653ms)
  Aug 24 14:54:37.118: INFO: (9) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 38.031182ms)
  Aug 24 14:54:37.119: INFO: (9) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 38.483452ms)
  Aug 24 14:54:37.134: INFO: (10) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 15.705262ms)
  Aug 24 14:54:37.135: INFO: (10) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 15.287589ms)
  Aug 24 14:54:37.141: INFO: (10) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 22.207626ms)
  Aug 24 14:54:37.142: INFO: (10) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 22.119517ms)
  Aug 24 14:54:37.142: INFO: (10) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 22.284485ms)
  Aug 24 14:54:37.150: INFO: (10) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 30.540036ms)
  Aug 24 14:54:37.150: INFO: (10) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 30.170839ms)
  Aug 24 14:54:37.151: INFO: (10) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 30.443577ms)
  Aug 24 14:54:37.152: INFO: (10) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 18.444654ms)
  Aug 24 14:54:37.152: INFO: (10) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 31.518589ms)
  Aug 24 14:54:37.152: INFO: (10) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 31.853364ms)
  Aug 24 14:54:37.153: INFO: (10) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 33.301986ms)
  Aug 24 14:54:37.153: INFO: (10) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 31.712911ms)
  Aug 24 14:54:37.153: INFO: (10) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 31.929215ms)
  Aug 24 14:54:37.153: INFO: (10) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 18.653315ms)
  Aug 24 14:54:37.153: INFO: (10) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 32.533485ms)
  Aug 24 14:54:37.168: INFO: (11) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 14.424522ms)
  Aug 24 14:54:37.176: INFO: (11) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 21.612674ms)
  Aug 24 14:54:37.180: INFO: (11) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 25.665418ms)
  Aug 24 14:54:37.180: INFO: (11) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 26.273592ms)
  Aug 24 14:54:37.189: INFO: (11) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 33.592806ms)
  Aug 24 14:54:37.189: INFO: (11) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 34.690714ms)
  Aug 24 14:54:37.190: INFO: (11) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 35.640872ms)
  Aug 24 14:54:37.190: INFO: (11) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 35.720219ms)
  Aug 24 14:54:37.190: INFO: (11) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 35.537668ms)
  Aug 24 14:54:37.190: INFO: (11) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 35.282033ms)
  Aug 24 14:54:37.190: INFO: (11) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 35.710373ms)
  Aug 24 14:54:37.191: INFO: (11) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 36.265439ms)
  Aug 24 14:54:37.191: INFO: (11) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 36.06937ms)
  Aug 24 14:54:37.191: INFO: (11) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 35.526227ms)
  Aug 24 14:54:37.200: INFO: (11) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 45.331989ms)
  Aug 24 14:54:37.200: INFO: (11) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 44.91755ms)
  Aug 24 14:54:37.220: INFO: (12) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 18.77243ms)
  Aug 24 14:54:37.260: INFO: (12) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 57.955937ms)
  Aug 24 14:54:37.356: INFO: (12) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 152.783052ms)
  Aug 24 14:54:37.356: INFO: (12) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 152.763483ms)
  Aug 24 14:54:37.356: INFO: (12) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 153.353147ms)
  Aug 24 14:54:37.356: INFO: (12) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 154.204595ms)
  Aug 24 14:54:37.356: INFO: (12) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 152.823242ms)
  Aug 24 14:54:37.356: INFO: (12) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 154.0351ms)
  Aug 24 14:54:37.359: INFO: (12) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 156.928319ms)
  Aug 24 14:54:37.359: INFO: (12) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 156.15681ms)
  Aug 24 14:54:37.359: INFO: (12) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 155.935518ms)
  Aug 24 14:54:37.359: INFO: (12) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 157.463516ms)
  Aug 24 14:54:37.359: INFO: (12) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 156.06976ms)
  Aug 24 14:54:37.359: INFO: (12) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 155.979619ms)
  Aug 24 14:54:37.359: INFO: (12) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 157.455769ms)
  Aug 24 14:54:37.359: INFO: (12) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 156.192334ms)
  Aug 24 14:54:37.393: INFO: (13) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 21.016366ms)
  Aug 24 14:54:37.393: INFO: (13) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 18.596148ms)
  Aug 24 14:54:37.393: INFO: (13) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 21.17746ms)
  Aug 24 14:54:37.393: INFO: (13) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 18.529387ms)
  Aug 24 14:54:37.393: INFO: (13) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 28.103984ms)
  Aug 24 14:54:37.407: INFO: (13) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 29.910116ms)
  Aug 24 14:54:37.408: INFO: (13) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 34.848679ms)
  Aug 24 14:54:37.408: INFO: (13) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 33.033573ms)
  Aug 24 14:54:37.408: INFO: (13) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 31.215746ms)
  Aug 24 14:54:37.408: INFO: (13) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 31.548111ms)
  Aug 24 14:54:37.408: INFO: (13) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 31.714634ms)
  Aug 24 14:54:37.409: INFO: (13) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 34.147253ms)
  Aug 24 14:54:37.409: INFO: (13) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 31.854763ms)
  Aug 24 14:54:37.409: INFO: (13) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 33.55187ms)
  Aug 24 14:54:37.409: INFO: (13) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 32.187771ms)
  Aug 24 14:54:37.409: INFO: (13) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 32.643303ms)
  Aug 24 14:54:37.436: INFO: (14) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 25.595395ms)
  Aug 24 14:54:37.437: INFO: (14) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 26.450496ms)
  Aug 24 14:54:37.437: INFO: (14) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 26.461276ms)
  Aug 24 14:54:37.437: INFO: (14) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 26.951093ms)
  Aug 24 14:54:37.437: INFO: (14) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 26.56182ms)
  Aug 24 14:54:37.437: INFO: (14) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 26.68278ms)
  Aug 24 14:54:37.437: INFO: (14) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 27.239085ms)
  Aug 24 14:54:37.437: INFO: (14) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 26.364376ms)
  Aug 24 14:54:37.437: INFO: (14) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 26.328002ms)
  Aug 24 14:54:37.437: INFO: (14) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 26.522199ms)
  Aug 24 14:54:37.446: INFO: (14) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 35.011633ms)
  Aug 24 14:54:37.446: INFO: (14) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 35.750886ms)
  Aug 24 14:54:37.446: INFO: (14) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 34.909001ms)
  Aug 24 14:54:37.446: INFO: (14) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 35.64097ms)
  Aug 24 14:54:37.448: INFO: (14) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 37.531808ms)
  Aug 24 14:54:37.449: INFO: (14) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 37.817487ms)
  Aug 24 14:54:37.468: INFO: (15) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 19.149492ms)
  Aug 24 14:54:37.471: INFO: (15) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 22.057354ms)
  Aug 24 14:54:37.471: INFO: (15) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 22.451274ms)
  Aug 24 14:54:37.471: INFO: (15) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 22.426579ms)
  Aug 24 14:54:37.492: INFO: (15) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 41.426604ms)
  Aug 24 14:54:37.492: INFO: (15) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 24.264918ms)
  Aug 24 14:54:37.494: INFO: (15) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 44.642306ms)
  Aug 24 14:54:37.494: INFO: (15) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 43.984792ms)
  Aug 24 14:54:37.496: INFO: (15) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 24.186357ms)
  Aug 24 14:54:37.497: INFO: (15) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 46.81075ms)
  Aug 24 14:54:37.497: INFO: (15) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 47.292886ms)
  Aug 24 14:54:37.498: INFO: (15) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 25.634946ms)
  Aug 24 14:54:37.497: INFO: (15) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 25.316278ms)
  Aug 24 14:54:37.498: INFO: (15) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 25.803052ms)
  Aug 24 14:54:37.498: INFO: (15) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 48.754344ms)
  Aug 24 14:54:37.498: INFO: (15) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 26.514975ms)
  Aug 24 14:54:37.512: INFO: (16) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 13.335616ms)
  Aug 24 14:54:37.520: INFO: (16) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 19.889287ms)
  Aug 24 14:54:37.522: INFO: (16) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 21.984349ms)
  Aug 24 14:54:37.525: INFO: (16) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 25.710605ms)
  Aug 24 14:54:37.531: INFO: (16) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 31.350954ms)
  Aug 24 14:54:37.531: INFO: (16) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 31.596414ms)
  Aug 24 14:54:37.531: INFO: (16) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 31.38061ms)
  Aug 24 14:54:37.531: INFO: (16) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 32.100766ms)
  Aug 24 14:54:37.531: INFO: (16) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 32.205473ms)
  Aug 24 14:54:37.531: INFO: (16) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 31.953779ms)
  Aug 24 14:54:37.531: INFO: (16) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 31.346399ms)
  Aug 24 14:54:37.531: INFO: (16) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 31.887933ms)
  Aug 24 14:54:37.532: INFO: (16) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 31.651888ms)
  Aug 24 14:54:37.531: INFO: (16) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 31.215207ms)
  Aug 24 14:54:37.539: INFO: (16) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 38.825725ms)
  Aug 24 14:54:37.542: INFO: (16) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 41.513899ms)
  Aug 24 14:54:37.551: INFO: (17) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 9.152042ms)
  Aug 24 14:54:37.581: INFO: (17) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 32.493467ms)
  Aug 24 14:54:37.582: INFO: (17) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 33.223623ms)
  Aug 24 14:54:37.582: INFO: (17) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 33.527912ms)
  Aug 24 14:54:37.582: INFO: (17) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 33.729719ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 33.897955ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 33.898092ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 34.205457ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 34.057816ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 34.114622ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 33.60106ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 34.09161ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 33.526325ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 33.592894ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 34.964915ms)
  Aug 24 14:54:37.583: INFO: (17) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 34.8004ms)
  Aug 24 14:54:37.608: INFO: (18) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 18.980129ms)
  Aug 24 14:54:37.620: INFO: (18) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 31.554196ms)
  Aug 24 14:54:37.620: INFO: (18) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 30.280854ms)
  Aug 24 14:54:37.620: INFO: (18) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 31.969127ms)
  Aug 24 14:54:37.620: INFO: (18) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 30.881003ms)
  Aug 24 14:54:37.620: INFO: (18) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 31.492251ms)
  Aug 24 14:54:37.621: INFO: (18) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 30.885757ms)
  Aug 24 14:54:37.621: INFO: (18) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 31.531596ms)
  Aug 24 14:54:37.621: INFO: (18) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 31.972447ms)
  Aug 24 14:54:37.621: INFO: (18) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 31.066157ms)
  Aug 24 14:54:37.623: INFO: (18) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 33.738892ms)
  Aug 24 14:54:37.623: INFO: (18) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 33.802746ms)
  Aug 24 14:54:37.623: INFO: (18) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 34.344583ms)
  Aug 24 14:54:37.623: INFO: (18) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 33.80201ms)
  Aug 24 14:54:37.626: INFO: (18) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 36.267909ms)
  Aug 24 14:54:37.624: INFO: (18) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 35.728612ms)
  Aug 24 14:54:37.640: INFO: (19) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 12.394883ms)
  Aug 24 14:54:37.640: INFO: (19) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:460/proxy/: tls baz (200; 13.392512ms)
  Aug 24 14:54:37.662: INFO: (19) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:160/proxy/: foo (200; 31.866607ms)
  Aug 24 14:54:37.662: INFO: (19) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:462/proxy/: tls qux (200; 29.747636ms)
  Aug 24 14:54:37.663: INFO: (19) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname1/proxy/: foo (200; 35.61936ms)
  Aug 24 14:54:37.663: INFO: (19) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 30.681278ms)
  Aug 24 14:54:37.663: INFO: (19) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname1/proxy/: foo (200; 31.990309ms)
  Aug 24 14:54:37.663: INFO: (19) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:162/proxy/: bar (200; 29.881013ms)
  Aug 24 14:54:37.663: INFO: (19) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">test<... (200; 30.274436ms)
  Aug 24 14:54:37.663: INFO: (19) /api/v1/namespaces/proxy-9750/services/proxy-service-h4hxf:portname2/proxy/: bar (200; 30.523551ms)
  Aug 24 14:54:37.663: INFO: (19) /api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/https:proxy-service-h4hxf-fmnqh:443/proxy/tlsrewritem... (200; 30.638456ms)
  Aug 24 14:54:37.666: INFO: (19) /api/v1/namespaces/proxy-9750/services/http:proxy-service-h4hxf:portname2/proxy/: bar (200; 33.59166ms)
  Aug 24 14:54:37.666: INFO: (19) /api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/proxy-service-h4hxf-fmnqh/proxy/rewriteme">test</a> (200; 33.569263ms)
  Aug 24 14:54:37.666: INFO: (19) /api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/: <a href="/api/v1/namespaces/proxy-9750/pods/http:proxy-service-h4hxf-fmnqh:1080/proxy/rewriteme">... (200; 35.188427ms)
  Aug 24 14:54:37.670: INFO: (19) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname1/proxy/: tls baz (200; 37.118292ms)
  Aug 24 14:54:37.674: INFO: (19) /api/v1/namespaces/proxy-9750/services/https:proxy-service-h4hxf:tlsportname2/proxy/: tls qux (200; 41.234766ms)
  Aug 24 14:54:37.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-h4hxf in namespace proxy-9750, will wait for the garbage collector to delete the pods @ 08/24/23 14:54:37.682
  Aug 24 14:54:37.756: INFO: Deleting ReplicationController proxy-service-h4hxf took: 15.646184ms
  Aug 24 14:54:37.857: INFO: Terminating ReplicationController proxy-service-h4hxf pods took: 101.701148ms
  STEP: Destroying namespace "proxy-9750" for this suite. @ 08/24/23 14:54:40.259
• [5.809 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 08/24/23 14:54:40.273
  Aug 24 14:54:40.273: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:54:40.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:40.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:40.315
  STEP: Creating projection with secret that has name projected-secret-test-map-475d6bfd-81cb-4030-a3ce-5dea59f68ec0 @ 08/24/23 14:54:40.318
  STEP: Creating a pod to test consume secrets @ 08/24/23 14:54:40.326
  STEP: Saw pod success @ 08/24/23 14:54:44.371
  Aug 24 14:54:44.376: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-secrets-4b774f61-91ba-4b23-9d7f-2e3d8df02d8b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 14:54:44.399
  Aug 24 14:54:44.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3358" for this suite. @ 08/24/23 14:54:44.43
• [4.175 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 08/24/23 14:54:44.448
  Aug 24 14:54:44.448: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:54:44.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:44.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:44.484
  STEP: Creating configMap with name projected-configmap-test-volume-a8b37d1f-90fb-41f1-991f-ee00a619d511 @ 08/24/23 14:54:44.488
  STEP: Creating a pod to test consume configMaps @ 08/24/23 14:54:44.498
  STEP: Saw pod success @ 08/24/23 14:54:48.562
  Aug 24 14:54:48.567: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-configmaps-cc22cba2-d7a7-4ce9-b057-0992f2f31c97 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:54:48.578
  Aug 24 14:54:48.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8603" for this suite. @ 08/24/23 14:54:48.62
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 08/24/23 14:54:48.633
  Aug 24 14:54:48.633: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 14:54:48.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:48.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:48.666
  STEP: Setting up server cert @ 08/24/23 14:54:48.705
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 14:54:49.646
  STEP: Deploying the webhook pod @ 08/24/23 14:54:49.656
  STEP: Wait for the deployment to be ready @ 08/24/23 14:54:49.676
  Aug 24 14:54:49.747: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/24/23 14:54:51.766
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 14:54:51.786
  Aug 24 14:54:52.787: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/24/23 14:54:52.797
  STEP: create a pod @ 08/24/23 14:54:52.824
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 08/24/23 14:54:54.851
  Aug 24 14:54:54.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=webhook-756 attach --namespace=webhook-756 to-be-attached-pod -i -c=container1'
  Aug 24 14:54:55.095: INFO: rc: 1
  Aug 24 14:54:55.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-756" for this suite. @ 08/24/23 14:54:55.2
  STEP: Destroying namespace "webhook-markers-5035" for this suite. @ 08/24/23 14:54:55.249
• [6.649 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 08/24/23 14:54:55.284
  Aug 24 14:54:55.284: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:54:55.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:55.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:55.327
  STEP: Creating a pod to test downward api env vars @ 08/24/23 14:54:55.335
  STEP: Saw pod success @ 08/24/23 14:54:59.391
  Aug 24 14:54:59.397: INFO: Trying to get logs from node dae4wichuiha-1 pod downward-api-52de69ea-39bb-47cb-a26f-0bba284bdbc6 container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 14:54:59.412
  Aug 24 14:54:59.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3296" for this suite. @ 08/24/23 14:54:59.444
• [4.171 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 08/24/23 14:54:59.462
  Aug 24 14:54:59.462: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 14:54:59.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:54:59.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:54:59.498
  STEP: Creating configMap with name configmap-test-volume-map-bbac5dc7-9673-4bdc-94f6-f8acc8b052a3 @ 08/24/23 14:54:59.501
  STEP: Creating a pod to test consume configMaps @ 08/24/23 14:54:59.509
  STEP: Saw pod success @ 08/24/23 14:55:03.548
  Aug 24 14:55:03.554: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-configmaps-58a608eb-114c-4679-afb4-ba1779759432 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 14:55:03.564
  Aug 24 14:55:03.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1291" for this suite. @ 08/24/23 14:55:03.6
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 08/24/23 14:55:03.622
  Aug 24 14:55:03.622: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 14:55:03.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:55:03.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:55:03.678
  STEP: Creating secret with name s-test-opt-del-c37dbbf5-f98e-4fa1-a4c2-28a4163a241d @ 08/24/23 14:55:03.694
  STEP: Creating secret with name s-test-opt-upd-56c8ebcb-132f-4a51-9f20-e88c28f4ba36 @ 08/24/23 14:55:03.707
  STEP: Creating the pod @ 08/24/23 14:55:03.716
  STEP: Deleting secret s-test-opt-del-c37dbbf5-f98e-4fa1-a4c2-28a4163a241d @ 08/24/23 14:55:05.8
  STEP: Updating secret s-test-opt-upd-56c8ebcb-132f-4a51-9f20-e88c28f4ba36 @ 08/24/23 14:55:05.812
  STEP: Creating secret with name s-test-opt-create-9356c19f-1650-4b5f-95d1-d3d7a5dbdf28 @ 08/24/23 14:55:05.823
  STEP: waiting to observe update in volume @ 08/24/23 14:55:05.832
  Aug 24 14:56:14.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4977" for this suite. @ 08/24/23 14:56:14.513
• [70.935 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 08/24/23 14:56:14.56
  Aug 24 14:56:14.560: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename disruption @ 08/24/23 14:56:14.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:14.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:14.655
  STEP: Waiting for the pdb to be processed @ 08/24/23 14:56:14.67
  STEP: Waiting for all pods to be running @ 08/24/23 14:56:14.754
  Aug 24 14:56:14.792: INFO: running pods: 0 < 3
  Aug 24 14:56:16.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7303" for this suite. @ 08/24/23 14:56:16.814
• [2.265 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 08/24/23 14:56:16.829
  Aug 24 14:56:16.829: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename events @ 08/24/23 14:56:16.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:16.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:16.864
  STEP: creating a test event @ 08/24/23 14:56:16.869
  STEP: listing all events in all namespaces @ 08/24/23 14:56:16.877
  STEP: patching the test event @ 08/24/23 14:56:16.889
  STEP: fetching the test event @ 08/24/23 14:56:16.9
  STEP: updating the test event @ 08/24/23 14:56:16.905
  STEP: getting the test event @ 08/24/23 14:56:16.921
  STEP: deleting the test event @ 08/24/23 14:56:16.928
  STEP: listing all events in all namespaces @ 08/24/23 14:56:16.942
  Aug 24 14:56:16.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3353" for this suite. @ 08/24/23 14:56:16.959
• [0.153 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 08/24/23 14:56:16.983
  Aug 24 14:56:16.983: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename endpointslice @ 08/24/23 14:56:16.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:17.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:17.036
  STEP: getting /apis @ 08/24/23 14:56:17.047
  STEP: getting /apis/discovery.k8s.io @ 08/24/23 14:56:17.054
  STEP: getting /apis/discovery.k8s.iov1 @ 08/24/23 14:56:17.056
  STEP: creating @ 08/24/23 14:56:17.057
  STEP: getting @ 08/24/23 14:56:17.088
  STEP: listing @ 08/24/23 14:56:17.093
  STEP: watching @ 08/24/23 14:56:17.099
  Aug 24 14:56:17.099: INFO: starting watch
  STEP: cluster-wide listing @ 08/24/23 14:56:17.101
  STEP: cluster-wide watching @ 08/24/23 14:56:17.119
  Aug 24 14:56:17.119: INFO: starting watch
  STEP: patching @ 08/24/23 14:56:17.121
  STEP: updating @ 08/24/23 14:56:17.131
  Aug 24 14:56:17.150: INFO: waiting for watch events with expected annotations
  Aug 24 14:56:17.150: INFO: saw patched and updated annotations
  STEP: deleting @ 08/24/23 14:56:17.151
  STEP: deleting a collection @ 08/24/23 14:56:17.172
  Aug 24 14:56:17.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-820" for this suite. @ 08/24/23 14:56:17.206
• [0.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 08/24/23 14:56:17.227
  Aug 24 14:56:17.227: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename subpath @ 08/24/23 14:56:17.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:17.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:17.263
  STEP: Setting up data @ 08/24/23 14:56:17.268
  STEP: Creating pod pod-subpath-test-downwardapi-csq4 @ 08/24/23 14:56:17.287
  STEP: Creating a pod to test atomic-volume-subpath @ 08/24/23 14:56:17.287
  STEP: Saw pod success @ 08/24/23 14:56:41.44
  Aug 24 14:56:41.446: INFO: Trying to get logs from node dae4wichuiha-2 pod pod-subpath-test-downwardapi-csq4 container test-container-subpath-downwardapi-csq4: <nil>
  STEP: delete the pod @ 08/24/23 14:56:41.478
  STEP: Deleting pod pod-subpath-test-downwardapi-csq4 @ 08/24/23 14:56:41.505
  Aug 24 14:56:41.505: INFO: Deleting pod "pod-subpath-test-downwardapi-csq4" in namespace "subpath-2683"
  Aug 24 14:56:41.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2683" for this suite. @ 08/24/23 14:56:41.517
• [24.300 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 08/24/23 14:56:41.53
  Aug 24 14:56:41.530: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 14:56:41.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:41.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:41.588
  STEP: creating the pod @ 08/24/23 14:56:41.592
  STEP: submitting the pod to kubernetes @ 08/24/23 14:56:41.593
  STEP: verifying QOS class is set on the pod @ 08/24/23 14:56:41.611
  Aug 24 14:56:41.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7815" for this suite. @ 08/24/23 14:56:41.631
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 08/24/23 14:56:41.653
  Aug 24 14:56:41.653: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename deployment @ 08/24/23 14:56:41.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:41.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:41.728
  Aug 24 14:56:41.753: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Aug 24 14:56:46.767: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 14:56:46.771
  Aug 24 14:56:46.773: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 08/24/23 14:56:46.805
  Aug 24 14:56:50.863: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9583",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e3b7257-23df-429a-ba55-436dab82f7a7",
      ResourceVersion: (string) (len=5) "22884",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485806,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485809,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485809,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-58dcc84f74\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 14:56:50.888: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9583",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aca83f65-458b-4a69-bc26-e5733c8a331c",
      ResourceVersion: (string) (len=5) "22873",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485806,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "6e3b7257-23df-429a-ba55-436dab82f7a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 65 33 62 37 32  35 37 2d 32 33 64 66 2d  |\"6e3b7257-23df-|
              00000120  34 32 39 61 2d 62 61 35  35 2d 34 33 36 64 61 62  |429a-ba55-436dab|
              00000130  38 32 66 37 61 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |82f7a7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 14:56:50.904: INFO: Pod "test-cleanup-deployment-58dcc84f74-skrzf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-skrzf",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=15) "deployment-9583",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6972f45a-4a7f-4f04-9a2e-cf5913452498",
      ResourceVersion: (string) (len=5) "22872",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485806,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "aca83f65-458b-4a69-bc26-e5733c8a331c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 63  61 38 33 66 36 35 2d 34  |d\":\"aca83f65-4|
              00000090  35 38 62 2d 34 61 36 39  2d 62 63 32 36 2d 65 35  |58b-4a69-bc26-e5|
              000000a0  37 33 33 63 38 61 33 33  31 63 5c 22 7d 22 3a 7b  |733c8a331c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 33 39 5c 22 7d 22  |10.233.65.39\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t44s5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t44s5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485806,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485807,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=64) "077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7",
          ContainerID: (string) (len=72) "cri-o://ba4b687a7bf0c369da8434d1772a30f8aed66a14e0b086ce391b08e3c69d6cdf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:56:50.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9583" for this suite. @ 08/24/23 14:56:50.922
• [9.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 08/24/23 14:56:50.95
  Aug 24 14:56:50.950: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 14:56:50.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:50.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:50.99
  STEP: Creating ServiceAccount "e2e-sa-7z92k"  @ 08/24/23 14:56:50.994
  Aug 24 14:56:51.007: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-7z92k"  @ 08/24/23 14:56:51.007
  Aug 24 14:56:51.020: INFO: AutomountServiceAccountToken: true
  Aug 24 14:56:51.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9108" for this suite. @ 08/24/23 14:56:51.029
• [0.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 08/24/23 14:56:51.047
  Aug 24 14:56:51.047: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 14:56:51.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:51.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:51.083
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/24/23 14:56:51.088
  STEP: Saw pod success @ 08/24/23 14:56:55.131
  Aug 24 14:56:55.137: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-dd90c8a5-e7b2-4846-812e-9cb083fd1845 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 14:56:55.151
  Aug 24 14:56:55.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4443" for this suite. @ 08/24/23 14:56:55.187
• [4.153 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 08/24/23 14:56:55.204
  Aug 24 14:56:55.204: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 14:56:55.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:55.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:55.235
  STEP: Creating ReplicationController "e2e-rc-lgn4l" @ 08/24/23 14:56:55.239
  Aug 24 14:56:55.248: INFO: Get Replication Controller "e2e-rc-lgn4l" to confirm replicas
  Aug 24 14:56:56.256: INFO: Get Replication Controller "e2e-rc-lgn4l" to confirm replicas
  Aug 24 14:56:56.272: INFO: Found 1 replicas for "e2e-rc-lgn4l" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-lgn4l" @ 08/24/23 14:56:56.272
  STEP: Updating a scale subresource @ 08/24/23 14:56:56.287
  STEP: Verifying replicas where modified for replication controller "e2e-rc-lgn4l" @ 08/24/23 14:56:56.308
  Aug 24 14:56:56.345: INFO: Get Replication Controller "e2e-rc-lgn4l" to confirm replicas
  Aug 24 14:56:57.373: INFO: Get Replication Controller "e2e-rc-lgn4l" to confirm replicas
  Aug 24 14:56:57.381: INFO: Found 2 replicas for "e2e-rc-lgn4l" replication controller
  Aug 24 14:56:57.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6726" for this suite. @ 08/24/23 14:56:57.39
• [2.201 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 08/24/23 14:56:57.407
  Aug 24 14:56:57.407: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 14:56:57.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:56:57.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:56:57.442
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 08/24/23 14:56:57.447
  Aug 24 14:56:57.468: INFO: Pod name sample-pod: Found 0 pods out of 1
  Aug 24 14:57:02.484: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 14:57:02.486
  STEP: getting scale subresource @ 08/24/23 14:57:02.487
  STEP: updating a scale subresource @ 08/24/23 14:57:02.494
  STEP: verifying the replicaset Spec.Replicas was modified @ 08/24/23 14:57:02.506
  STEP: Patch a scale subresource @ 08/24/23 14:57:02.513
  Aug 24 14:57:02.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8554" for this suite. @ 08/24/23 14:57:02.609
• [5.227 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 08/24/23 14:57:02.65
  Aug 24 14:57:02.650: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 14:57:02.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:02.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:02.725
  STEP: creating service in namespace services-9114 @ 08/24/23 14:57:02.743
  STEP: creating service affinity-clusterip-transition in namespace services-9114 @ 08/24/23 14:57:02.743
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9114 @ 08/24/23 14:57:02.766
  I0824 14:57:02.795542      14 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-9114, replica count: 3
  I0824 14:57:05.847797      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 14:57:05.867: INFO: Creating new exec pod
  Aug 24 14:57:08.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-9114 exec execpod-affinity9xmk9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Aug 24 14:57:09.253: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Aug 24 14:57:09.253: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:57:09.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-9114 exec execpod-affinity9xmk9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.21.95 80'
  Aug 24 14:57:09.586: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.21.95 80\nConnection to 10.233.21.95 80 port [tcp/http] succeeded!\n"
  Aug 24 14:57:09.586: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 14:57:09.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-9114 exec execpod-affinity9xmk9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.21.95:80/ ; done'
  Aug 24 14:57:10.075: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n"
  Aug 24 14:57:10.076: INFO: stdout: "\naffinity-clusterip-transition-ztxkh\naffinity-clusterip-transition-ztxkh\naffinity-clusterip-transition-ztxkh\naffinity-clusterip-transition-djshr\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-ztxkh\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-ztxkh\naffinity-clusterip-transition-ztxkh\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-ztxkh\naffinity-clusterip-transition-ztxkh\naffinity-clusterip-transition-djshr\naffinity-clusterip-transition-djshr\naffinity-clusterip-transition-djshr"
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-ztxkh
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-ztxkh
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-ztxkh
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-djshr
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-ztxkh
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-ztxkh
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-ztxkh
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-ztxkh
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-ztxkh
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-djshr
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-djshr
  Aug 24 14:57:10.077: INFO: Received response from host: affinity-clusterip-transition-djshr
  Aug 24 14:57:10.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-9114 exec execpod-affinity9xmk9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.21.95:80/ ; done'
  Aug 24 14:57:10.765: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.95:80/\n"
  Aug 24 14:57:10.765: INFO: stdout: "\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h\naffinity-clusterip-transition-bfk5h"
  Aug 24 14:57:10.765: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.765: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.765: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.765: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Received response from host: affinity-clusterip-transition-bfk5h
  Aug 24 14:57:10.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 14:57:10.774: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9114, will wait for the garbage collector to delete the pods @ 08/24/23 14:57:10.794
  Aug 24 14:57:10.880: INFO: Deleting ReplicationController affinity-clusterip-transition took: 23.715601ms
  Aug 24 14:57:10.981: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.50237ms
  STEP: Destroying namespace "services-9114" for this suite. @ 08/24/23 14:57:14.229
• [11.598 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 08/24/23 14:57:14.253
  Aug 24 14:57:14.253: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename limitrange @ 08/24/23 14:57:14.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:14.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:14.306
  STEP: Creating LimitRange "e2e-limitrange-rfxxg" in namespace "limitrange-4092" @ 08/24/23 14:57:14.311
  STEP: Creating another limitRange in another namespace @ 08/24/23 14:57:14.321
  Aug 24 14:57:14.350: INFO: Namespace "e2e-limitrange-rfxxg-1255" created
  Aug 24 14:57:14.350: INFO: Creating LimitRange "e2e-limitrange-rfxxg" in namespace "e2e-limitrange-rfxxg-1255"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-rfxxg" @ 08/24/23 14:57:14.358
  Aug 24 14:57:14.364: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-rfxxg" in "limitrange-4092" namespace @ 08/24/23 14:57:14.365
  Aug 24 14:57:14.378: INFO: LimitRange "e2e-limitrange-rfxxg" has been patched
  STEP: Delete LimitRange "e2e-limitrange-rfxxg" by Collection with labelSelector: "e2e-limitrange-rfxxg=patched" @ 08/24/23 14:57:14.378
  STEP: Confirm that the limitRange "e2e-limitrange-rfxxg" has been deleted @ 08/24/23 14:57:14.392
  Aug 24 14:57:14.393: INFO: Requesting list of LimitRange to confirm quantity
  Aug 24 14:57:14.397: INFO: Found 0 LimitRange with label "e2e-limitrange-rfxxg=patched"
  Aug 24 14:57:14.398: INFO: LimitRange "e2e-limitrange-rfxxg" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-rfxxg" @ 08/24/23 14:57:14.398
  Aug 24 14:57:14.404: INFO: Found 1 limitRange
  Aug 24 14:57:14.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4092" for this suite. @ 08/24/23 14:57:14.411
  STEP: Destroying namespace "e2e-limitrange-rfxxg-1255" for this suite. @ 08/24/23 14:57:14.425
• [0.186 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 08/24/23 14:57:14.439
  Aug 24 14:57:14.439: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename deployment @ 08/24/23 14:57:14.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:14.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:14.479
  Aug 24 14:57:14.499: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Aug 24 14:57:14.522: INFO: Pod name sample-pod: Found 0 pods out of 1
  Aug 24 14:57:19.550: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 14:57:19.55
  Aug 24 14:57:19.550: INFO: Creating deployment "test-rolling-update-deployment"
  Aug 24 14:57:19.564: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Aug 24 14:57:19.614: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Aug 24 14:57:21.630: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Aug 24 14:57:21.637: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Aug 24 14:57:21.658: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1324",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "158d3809-a69e-49b6-b7dd-8a9224e0f647",
      ResourceVersion: (string) (len=5) "23313",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 14:57:21.698: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1324",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad8c0b92-2cfe-43cf-ad9a-336de5309f15",
      ResourceVersion: (string) (len=5) "23302",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "158d3809-a69e-49b6-b7dd-8a9224e0f647",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 35 38 64 33 38  30 39 2d 61 36 39 65 2d  |\"158d3809-a69e-|
              00000120  34 39 62 36 2d 62 37 64  64 2d 38 61 39 32 32 34  |49b6-b7dd-8a9224|
              00000130  65 30 66 36 34 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e0f647\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 14:57:21.710: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Aug 24 14:57:21.710: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1324",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6288991-4d93-416e-a9aa-3cacb567a86d",
      ResourceVersion: (string) (len=5) "23311",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485834,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "158d3809-a69e-49b6-b7dd-8a9224e0f647",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 35 38 64 33 38 30  |"uid\":\"158d380|
              000000b0  39 2d 61 36 39 65 2d 34  39 62 36 2d 62 37 64 64  |9-a69e-49b6-b7dd|
              000000c0  2d 38 61 39 32 32 34 65  30 66 36 34 37 5c 22 7d  |-8a9224e0f647\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 14:57:21.722: INFO: Pod "test-rolling-update-deployment-7f5c55c64-jncs8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-jncs8",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-1324",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc2b5c1f-a969-4b8d-abc7-30c139d7f391",
      ResourceVersion: (string) (len=5) "23301",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "ad8c0b92-2cfe-43cf-ad9a-336de5309f15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 63 30 62 39 32 2d 32  |d\":\"ad8c0b92-2|
              00000090  63 66 65 2d 34 33 63 66  2d 61 64 39 61 2d 33 33  |cfe-43cf-ad9a-33|
              000000a0  36 64 65 35 33 30 39 66  31 35 5c 22 7d 22 3a 7b  |6de5309f15\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 30 34 5c 22 7d  |10.233.64.104\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2zwm8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2zwm8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828485839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828485839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828485840,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=64) "077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7",
          ContainerID: (string) (len=72) "cri-o://8fa4cb4da1b2861a6ee4092ca790bf01e79c033db7f4f904c862315680571d9a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 14:57:21.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1324" for this suite. @ 08/24/23 14:57:21.741
• [7.319 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 08/24/23 14:57:21.766
  Aug 24 14:57:21.766: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 14:57:21.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:21.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:21.807
  STEP: Creating a ResourceQuota with best effort scope @ 08/24/23 14:57:21.812
  STEP: Ensuring ResourceQuota status is calculated @ 08/24/23 14:57:21.826
  STEP: Creating a ResourceQuota with not best effort scope @ 08/24/23 14:57:23.833
  STEP: Ensuring ResourceQuota status is calculated @ 08/24/23 14:57:23.842
  STEP: Creating a best-effort pod @ 08/24/23 14:57:25.85
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 08/24/23 14:57:25.875
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 08/24/23 14:57:27.884
  STEP: Deleting the pod @ 08/24/23 14:57:29.891
  STEP: Ensuring resource quota status released the pod usage @ 08/24/23 14:57:29.91
  STEP: Creating a not best-effort pod @ 08/24/23 14:57:31.937
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 08/24/23 14:57:31.967
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 08/24/23 14:57:33.976
  STEP: Deleting the pod @ 08/24/23 14:57:35.984
  STEP: Ensuring resource quota status released the pod usage @ 08/24/23 14:57:36.008
  Aug 24 14:57:38.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8180" for this suite. @ 08/24/23 14:57:38.025
• [16.308 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 08/24/23 14:57:38.079
  Aug 24 14:57:38.079: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 14:57:38.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:38.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:38.13
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 08/24/23 14:57:38.136
  Aug 24 14:57:38.137: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 14:57:40.247: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 14:57:48.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9661" for this suite. @ 08/24/23 14:57:48.254
• [10.188 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 08/24/23 14:57:48.267
  Aug 24 14:57:48.267: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 14:57:48.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:48.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:48.306
  STEP: Creating configMap with name configmap-projected-all-test-volume-9b82369c-559a-41fc-8da9-e9bb33bffc47 @ 08/24/23 14:57:48.31
  STEP: Creating secret with name secret-projected-all-test-volume-6b57626a-d44f-484f-8261-7faac3c11eb0 @ 08/24/23 14:57:48.317
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 08/24/23 14:57:48.324
  STEP: Saw pod success @ 08/24/23 14:57:52.366
  Aug 24 14:57:52.371: INFO: Trying to get logs from node dae4wichuiha-1 pod projected-volume-0da3f526-ccd6-4c70-9b44-ef81ff1b9e0e container projected-all-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 14:57:52.397
  Aug 24 14:57:52.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6890" for this suite. @ 08/24/23 14:57:52.433
• [4.185 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 08/24/23 14:57:52.454
  Aug 24 14:57:52.455: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 14:57:52.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:52.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:52.499
  STEP: Creating the pod @ 08/24/23 14:57:52.506
  Aug 24 14:57:55.099: INFO: Successfully updated pod "labelsupdateb271a43b-2baa-4162-8a06-9f4fe55cb6e3"
  Aug 24 14:57:57.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9202" for this suite. @ 08/24/23 14:57:57.146
• [4.704 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 08/24/23 14:57:57.16
  Aug 24 14:57:57.160: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 14:57:57.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:57:57.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:57:57.204
  Aug 24 14:57:57.238: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 14:57:57.248
  Aug 24 14:57:57.265: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:57:57.266: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:57:58.286: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:57:58.286: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:57:59.283: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 14:57:59.284: INFO: Node dae4wichuiha-2 is running 0 daemon pod, expected 1
  Aug 24 14:58:00.279: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 14:58:00.279: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 08/24/23 14:58:00.298
  STEP: Check that daemon pods images are updated. @ 08/24/23 14:58:00.323
  Aug 24 14:58:00.339: INFO: Wrong image for pod: daemon-set-8p42p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 24 14:58:01.380: INFO: Wrong image for pod: daemon-set-8p42p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 24 14:58:01.380: INFO: Pod daemon-set-zxw46 is not available
  Aug 24 14:58:03.420: INFO: Pod daemon-set-tkj67 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 08/24/23 14:58:03.429
  Aug 24 14:58:03.443: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 14:58:03.443: INFO: Node dae4wichuiha-2 is running 0 daemon pod, expected 1
  Aug 24 14:58:04.461: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 14:58:04.461: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 14:58:04.495
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4098, will wait for the garbage collector to delete the pods @ 08/24/23 14:58:04.495
  Aug 24 14:58:04.568: INFO: Deleting DaemonSet.extensions daemon-set took: 15.769404ms
  Aug 24 14:58:04.670: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.430828ms
  Aug 24 14:58:06.375: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:58:06.375: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 14:58:06.381: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23642"},"items":null}

  Aug 24 14:58:06.386: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23642"},"items":null}

  Aug 24 14:58:06.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4098" for this suite. @ 08/24/23 14:58:06.414
• [9.271 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 08/24/23 14:58:06.431
  Aug 24 14:58:06.431: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 14:58:06.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:58:06.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:58:06.475
  Aug 24 14:58:06.483: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 08/24/23 14:58:07.511
  STEP: Checking rc "condition-test" has the desired failure condition set @ 08/24/23 14:58:07.525
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 08/24/23 14:58:08.542
  Aug 24 14:58:08.558: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 08/24/23 14:58:08.558
  Aug 24 14:58:09.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1088" for this suite. @ 08/24/23 14:58:09.58
• [3.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 08/24/23 14:58:09.602
  Aug 24 14:58:09.602: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 14:58:09.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:58:09.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:58:09.642
  STEP: Creating a simple DaemonSet "daemon-set" @ 08/24/23 14:58:09.686
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 14:58:09.699
  Aug 24 14:58:09.729: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:58:09.729: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:58:10.750: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:58:10.752: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:58:11.759: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 14:58:11.759: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 08/24/23 14:58:11.772
  Aug 24 14:58:11.871: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 14:58:11.871: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:58:12.894: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 14:58:12.894: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  Aug 24 14:58:13.889: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 14:58:13.889: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 08/24/23 14:58:13.89
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 14:58:13.9
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8000, will wait for the garbage collector to delete the pods @ 08/24/23 14:58:13.9
  Aug 24 14:58:13.971: INFO: Deleting DaemonSet.extensions daemon-set took: 14.345194ms
  Aug 24 14:58:14.072: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.316062ms
  Aug 24 14:58:15.391: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 14:58:15.391: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 14:58:15.398: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23830"},"items":null}

  Aug 24 14:58:15.405: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23830"},"items":null}

  Aug 24 14:58:15.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8000" for this suite. @ 08/24/23 14:58:15.446
• [5.856 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 08/24/23 14:58:15.469
  Aug 24 14:58:15.469: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename runtimeclass @ 08/24/23 14:58:15.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:58:15.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:58:15.519
  STEP: getting /apis @ 08/24/23 14:58:15.524
  STEP: getting /apis/node.k8s.io @ 08/24/23 14:58:15.532
  STEP: getting /apis/node.k8s.io/v1 @ 08/24/23 14:58:15.534
  STEP: creating @ 08/24/23 14:58:15.538
  STEP: watching @ 08/24/23 14:58:15.572
  Aug 24 14:58:15.572: INFO: starting watch
  STEP: getting @ 08/24/23 14:58:15.584
  STEP: listing @ 08/24/23 14:58:15.59
  STEP: patching @ 08/24/23 14:58:15.596
  STEP: updating @ 08/24/23 14:58:15.607
  Aug 24 14:58:15.616: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 08/24/23 14:58:15.617
  STEP: deleting a collection @ 08/24/23 14:58:15.639
  Aug 24 14:58:15.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2124" for this suite. @ 08/24/23 14:58:15.668
• [0.211 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 08/24/23 14:58:15.68
  Aug 24 14:58:15.680: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 14:58:15.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:58:15.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:58:15.73
  STEP: create deployment with httpd image @ 08/24/23 14:58:15.738
  Aug 24 14:58:15.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-7080 create -f -'
  Aug 24 14:58:16.356: INFO: stderr: ""
  Aug 24 14:58:16.356: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 08/24/23 14:58:16.356
  Aug 24 14:58:16.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-7080 diff -f -'
  Aug 24 14:58:16.833: INFO: rc: 1
  Aug 24 14:58:16.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-7080 delete -f -'
  Aug 24 14:58:17.014: INFO: stderr: ""
  Aug 24 14:58:17.014: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Aug 24 14:58:17.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7080" for this suite. @ 08/24/23 14:58:17.042
• [1.385 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 08/24/23 14:58:17.065
  Aug 24 14:58:17.065: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 14:58:17.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:58:17.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:58:17.124
  STEP: Creating service test in namespace statefulset-6602 @ 08/24/23 14:58:17.133
  STEP: Creating statefulset ss in namespace statefulset-6602 @ 08/24/23 14:58:17.155
  Aug 24 14:58:17.191: INFO: Found 0 stateful pods, waiting for 1
  Aug 24 14:58:27.207: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 08/24/23 14:58:27.228
  STEP: updating a scale subresource @ 08/24/23 14:58:27.235
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/24/23 14:58:27.245
  STEP: Patch a scale subresource @ 08/24/23 14:58:27.292
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/24/23 14:58:27.323
  Aug 24 14:58:27.329: INFO: Deleting all statefulset in ns statefulset-6602
  Aug 24 14:58:27.344: INFO: Scaling statefulset ss to 0
  Aug 24 14:58:37.408: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 14:58:37.414: INFO: Deleting statefulset ss
  Aug 24 14:58:37.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6602" for this suite. @ 08/24/23 14:58:37.456
• [20.407 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 08/24/23 14:58:37.473
  Aug 24 14:58:37.473: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 14:58:37.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 14:58:37.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 14:58:37.518
  STEP: Creating pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195 @ 08/24/23 14:58:37.523
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 14:58:39.554
  Aug 24 14:58:39.565: INFO: Initial restart count of pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 is 0
  Aug 24 14:58:39.572: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:58:41.580: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:58:43.589: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:58:45.599: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:58:47.609: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:58:49.615: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:58:51.622: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:58:53.629: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:58:55.638: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:58:57.649: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:58:59.656: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:01.665: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:03.673: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:05.682: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:07.691: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:09.705: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:11.712: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:13.720: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:15.729: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:17.742: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:19.749: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:21.759: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:23.766: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:25.773: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:27.786: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:29.795: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:31.802: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:33.818: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:35.826: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:37.834: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:39.841: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:41.854: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:43.862: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:45.868: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:47.876: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:49.885: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:51.894: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:53.902: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:55.911: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:57.920: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 14:59:59.929: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:01.943: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:03.955: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:05.964: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:07.973: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:09.981: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:11.991: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:14.007: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:16.014: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:18.027: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:20.036: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:22.043: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:24.051: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:26.061: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:28.070: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:30.079: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:32.087: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:34.095: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:36.103: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:38.115: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:40.123: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:42.133: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:44.140: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:46.146: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:48.155: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:50.162: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:52.171: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:54.180: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:56.188: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:00:58.201: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:00.209: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:02.218: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:04.225: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:06.233: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:08.243: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:10.252: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:12.261: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:14.271: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:16.281: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:18.292: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:20.300: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:22.309: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:24.316: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:26.322: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:28.330: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:30.338: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:32.347: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:34.355: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:36.362: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:38.370: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:40.378: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:42.386: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:44.393: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:46.401: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:48.411: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:50.422: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:52.428: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:54.435: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:56.442: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:01:58.454: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:00.461: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:02.468: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:04.479: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:06.487: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:08.500: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:10.506: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:12.512: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:14.521: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:16.529: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:18.557: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:20.566: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:22.575: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:24.583: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:26.590: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:28.600: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:30.609: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:32.625: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:34.635: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:36.644: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:38.651: INFO: Get pod liveness-a2ce0653-4d16-46c5-aac1-dd392c7a4b29 in namespace container-probe-2195
  Aug 24 15:02:40.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:02:40.667
  STEP: Destroying namespace "container-probe-2195" for this suite. @ 08/24/23 15:02:40.707
• [243.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 08/24/23 15:02:40.754
  Aug 24 15:02:40.754: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubelet-test @ 08/24/23 15:02:40.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:02:40.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:02:40.801
  Aug 24 15:02:44.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9577" for this suite. @ 08/24/23 15:02:44.854
• [4.114 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 08/24/23 15:02:44.871
  Aug 24 15:02:44.872: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename init-container @ 08/24/23 15:02:44.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:02:44.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:02:44.915
  STEP: creating the pod @ 08/24/23 15:02:44.919
  Aug 24 15:02:44.919: INFO: PodSpec: initContainers in spec.initContainers
  Aug 24 15:03:27.272: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-bed21e37-2cc1-4d30-a7c4-e20cef36d22e", GenerateName:"", Namespace:"init-container-5168", SelfLink:"", UID:"c5d6e1cc-9233-4a6e-889d-d3e413a468cf", ResourceVersion:"24772", Generation:0, CreationTimestamp:time.Date(2023, time.August, 24, 15, 2, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"919461924"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.August, 24, 15, 2, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f4cd38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.August, 24, 15, 3, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f4cde0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-9fhjw", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004bf12a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-9fhjw", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-9fhjw", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-9fhjw", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00565c378), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"dae4wichuiha-1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00465c230), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00565c400)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00565c420)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00565c428), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00565c42c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0013c9fc0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 24, 15, 2, 44, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 24, 15, 2, 44, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 24, 15, 2, 44, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 24, 15, 2, 44, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.197", HostIPs:[]v1.HostIP(nil), PodIP:"10.233.64.35", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.64.35"}}, StartTime:time.Date(2023, time.August, 24, 15, 2, 44, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00465c310)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00465c380)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"d59c675982d8692814ec9e1486d4c645cd86ad825ef33975a5db196cf2801592", ContainerID:"cri-o://59e35f1556955658eca454635066b083a6d73505d68b95413ce18d79baefa0b1", Started:(*bool)(0xc00565c4da), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004bf1320), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc00565c4ef), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004bf1300), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00565c4bf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Aug 24 15:03:27.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5168" for this suite. @ 08/24/23 15:03:27.297
• [42.450 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 08/24/23 15:03:27.323
  Aug 24 15:03:27.323: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:03:27.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:03:27.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:03:27.369
  STEP: Setting up server cert @ 08/24/23 15:03:27.44
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:03:28.834
  STEP: Deploying the webhook pod @ 08/24/23 15:03:28.848
  STEP: Wait for the deployment to be ready @ 08/24/23 15:03:28.874
  Aug 24 15:03:28.908: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 08/24/23 15:03:30.934
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:03:30.966
  Aug 24 15:03:31.969: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 08/24/23 15:03:31.982
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 08/24/23 15:03:31.986
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 08/24/23 15:03:31.988
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 08/24/23 15:03:31.988
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 08/24/23 15:03:31.99
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/24/23 15:03:31.99
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/24/23 15:03:31.994
  Aug 24 15:03:31.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3897" for this suite. @ 08/24/23 15:03:32.154
  STEP: Destroying namespace "webhook-markers-7653" for this suite. @ 08/24/23 15:03:32.177
• [4.868 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 08/24/23 15:03:32.202
  Aug 24 15:03:32.203: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/24/23 15:03:32.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:03:32.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:03:32.249
  STEP: creating a target pod @ 08/24/23 15:03:32.255
  STEP: adding an ephemeral container @ 08/24/23 15:03:36.302
  STEP: checking pod container endpoints @ 08/24/23 15:03:38.333
  Aug 24 15:03:38.333: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3203 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:03:38.333: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:03:38.334: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:03:38.335: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-3203/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Aug 24 15:03:38.482: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 08/24/23 15:03:38.518
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 08/24/23 15:03:38.524
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 08/24/23 15:03:38.558
  Aug 24 15:03:38.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3203" for this suite. @ 08/24/23 15:03:38.66
• [6.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 08/24/23 15:03:38.705
  Aug 24 15:03:38.705: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:03:38.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:03:38.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:03:38.749
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/24/23 15:03:38.777
  STEP: Saw pod success @ 08/24/23 15:03:42.86
  Aug 24 15:03:42.869: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-e0e045d6-8621-43bf-b5c0-165c23fd99ca container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:03:42.881
  Aug 24 15:03:42.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9275" for this suite. @ 08/24/23 15:03:42.922
• [4.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 08/24/23 15:03:42.945
  Aug 24 15:03:42.945: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename lease-test @ 08/24/23 15:03:42.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:03:42.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:03:42.981
  Aug 24 15:03:43.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-3601" for this suite. @ 08/24/23 15:03:43.104
• [0.174 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 08/24/23 15:03:43.119
  Aug 24 15:03:43.119: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 15:03:43.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:03:43.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:03:43.161
  STEP: creating a ReplicationController @ 08/24/23 15:03:43.173
  STEP: waiting for RC to be added @ 08/24/23 15:03:43.186
  STEP: waiting for available Replicas @ 08/24/23 15:03:43.187
  STEP: patching ReplicationController @ 08/24/23 15:03:45.438
  STEP: waiting for RC to be modified @ 08/24/23 15:03:45.471
  STEP: patching ReplicationController status @ 08/24/23 15:03:45.473
  STEP: waiting for RC to be modified @ 08/24/23 15:03:45.487
  STEP: waiting for available Replicas @ 08/24/23 15:03:45.487
  STEP: fetching ReplicationController status @ 08/24/23 15:03:45.512
  STEP: patching ReplicationController scale @ 08/24/23 15:03:45.526
  STEP: waiting for RC to be modified @ 08/24/23 15:03:45.541
  STEP: waiting for ReplicationController's scale to be the max amount @ 08/24/23 15:03:45.545
  STEP: fetching ReplicationController; ensuring that it's patched @ 08/24/23 15:03:47.395
  STEP: updating ReplicationController status @ 08/24/23 15:03:47.401
  STEP: waiting for RC to be modified @ 08/24/23 15:03:47.412
  STEP: listing all ReplicationControllers @ 08/24/23 15:03:47.412
  STEP: checking that ReplicationController has expected values @ 08/24/23 15:03:47.426
  STEP: deleting ReplicationControllers by collection @ 08/24/23 15:03:47.426
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 08/24/23 15:03:47.441
  Aug 24 15:03:47.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:03:47.528679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2579" for this suite. @ 08/24/23 15:03:47.535
• [4.429 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 08/24/23 15:03:47.552
  Aug 24 15:03:47.552: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:03:47.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:03:47.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:03:47.598
  STEP: Creating pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005 @ 08/24/23 15:03:47.603
  E0824 15:03:48.528854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:03:49.529133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 15:03:49.638
  Aug 24 15:03:49.662: INFO: Initial restart count of pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 is 0
  Aug 24 15:03:49.672: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  E0824 15:03:50.531236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:03:51.531038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:03:51.680: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  E0824 15:03:52.531342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:03:53.531717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:03:53.688: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  E0824 15:03:54.531870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:03:55.532483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:03:55.695: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  E0824 15:03:56.532544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:03:57.532703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:03:57.704: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  E0824 15:03:58.533335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:03:59.534710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:03:59.721: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  E0824 15:04:00.535820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:01.535656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:04:01.736: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  E0824 15:04:02.538117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:03.538245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:04:03.747: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  E0824 15:04:04.538758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:05.538767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:04:05.766: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  E0824 15:04:06.538896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:07.539080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:04:07.773: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  E0824 15:04:08.539979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:09.540994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:04:09.781: INFO: Get pod liveness-6b65411c-7348-4b47-b632-9aace761a5a6 in namespace container-probe-9005
  Aug 24 15:04:09.781: INFO: Restart count of pod container-probe-9005/liveness-6b65411c-7348-4b47-b632-9aace761a5a6 is now 1 (20.117601421s elapsed)
  Aug 24 15:04:09.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:04:09.789
  STEP: Destroying namespace "container-probe-9005" for this suite. @ 08/24/23 15:04:09.821
• [22.308 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 08/24/23 15:04:09.86
  Aug 24 15:04:09.860: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:04:09.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:09.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:09.928
  STEP: Setting up server cert @ 08/24/23 15:04:10.003
  E0824 15:04:10.541604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:04:10.613
  STEP: Deploying the webhook pod @ 08/24/23 15:04:10.629
  STEP: Wait for the deployment to be ready @ 08/24/23 15:04:10.647
  Aug 24 15:04:10.660: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0824 15:04:11.542418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:12.547628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:04:12.682
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:04:12.701
  E0824 15:04:13.545397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:04:13.711: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 08/24/23 15:04:13.732
  STEP: create a pod that should be updated by the webhook @ 08/24/23 15:04:13.77
  Aug 24 15:04:13.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5763" for this suite. @ 08/24/23 15:04:14.275
  STEP: Destroying namespace "webhook-markers-9505" for this suite. @ 08/24/23 15:04:14.293
• [4.443 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 08/24/23 15:04:14.311
  Aug 24 15:04:14.311: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename gc @ 08/24/23 15:04:14.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:14.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:14.361
  E0824 15:04:14.558259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:04:14.562: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"5f14db4f-415a-4198-b1e8-f06637d50d3e", Controller:(*bool)(0xc0029bf3d6), BlockOwnerDeletion:(*bool)(0xc0029bf3d7)}}
  Aug 24 15:04:14.590: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"707b67bc-3b51-46f8-8cd4-4fe974c892ff", Controller:(*bool)(0xc0020c623a), BlockOwnerDeletion:(*bool)(0xc0020c623b)}}
  Aug 24 15:04:14.603: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"c053284b-3d6a-4e31-9231-894e0c4ff129", Controller:(*bool)(0xc0020c64d6), BlockOwnerDeletion:(*bool)(0xc0020c64d7)}}
  E0824 15:04:15.558767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:16.558779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:17.559390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:18.559978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:19.574975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:04:19.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8147" for this suite. @ 08/24/23 15:04:19.764
• [5.468 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 08/24/23 15:04:19.779
  Aug 24 15:04:19.779: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename security-context-test @ 08/24/23 15:04:19.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:19.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:19.835
  E0824 15:04:20.575535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:21.575613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:22.576207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:23.576327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:04:23.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4384" for this suite. @ 08/24/23 15:04:23.93
• [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 08/24/23 15:04:23.957
  Aug 24 15:04:23.957: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:04:23.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:04:24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:04:24.008
  STEP: creating the pod with failed condition @ 08/24/23 15:04:24.015
  E0824 15:04:24.577252      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:25.577833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:26.577899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:27.578016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:28.578420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:29.578902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:30.586109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:31.590195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:32.594528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:33.594640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:34.595390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:35.596480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:36.596535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:37.597520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:38.597588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:39.598731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:40.599788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:41.599948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:42.600838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:43.601878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:44.601169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:45.601760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:46.601792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:47.601960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:48.602617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:49.603741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:50.604169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:51.604533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:52.604919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:53.605902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:54.606179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:55.606894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:56.607609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:57.607712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:58.608127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:04:59.608832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:00.609281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:01.609892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:02.611540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:03.611351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:04.612246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:05.612424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:06.613533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:07.613728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:08.613864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:09.614392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:10.614536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:11.614688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:12.614863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:13.614925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:14.615968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:15.616288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:16.617326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:17.618090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:18.618939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:19.619757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:20.620117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:21.620378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:22.621142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:23.621921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:24.622661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:25.623925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:26.623977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:27.624274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:28.624170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:29.625321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:30.625956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:31.626714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:32.626988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:33.626651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:34.627057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:35.626957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:36.627872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:37.628142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:38.628769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:39.628696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:40.630584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:41.630267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:42.630814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:43.631777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:44.632395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:45.632725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:46.633735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:47.633891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:48.634144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:49.634945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:50.638066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:51.635269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:52.636283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:53.636285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:54.637258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:55.637896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:56.637921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:57.638791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:58.639199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:05:59.639475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:00.640736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:01.641286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:02.642551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:03.642861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:04.643356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:05.643889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:06.644680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:07.644851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:08.645822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:09.645965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:10.646449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:11.646701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:12.647282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:13.647934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:14.648666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:15.649415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:16.650204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:17.650528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:18.651158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:19.651738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:20.653131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:21.653305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:22.654207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:23.654829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 08/24/23 15:06:24.037
  Aug 24 15:06:24.570: INFO: Successfully updated pod "var-expansion-7e1442f2-69ed-4144-8418-8bd2b6f76587"
  STEP: waiting for pod running @ 08/24/23 15:06:24.57
  E0824 15:06:24.655273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:25.656700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 08/24/23 15:06:26.606
  Aug 24 15:06:26.607: INFO: Deleting pod "var-expansion-7e1442f2-69ed-4144-8418-8bd2b6f76587" in namespace "var-expansion-3354"
  Aug 24 15:06:26.619: INFO: Wait up to 5m0s for pod "var-expansion-7e1442f2-69ed-4144-8418-8bd2b6f76587" to be fully deleted
  E0824 15:06:26.656638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:27.656848      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:28.657284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:29.658150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:30.657997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:31.662121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:32.658746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:33.659593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:34.660525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:35.660662      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:36.660750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:37.660782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:38.661017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:39.665150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:40.662380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:41.665090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:42.665384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:43.665533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:44.665748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:45.665921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:46.665973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:47.666477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:48.666479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:49.667211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:50.668109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:51.668343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:52.669063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:53.669968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:54.670648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:55.670823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:56.670976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:57.671191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:06:58.671517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:06:58.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3354" for this suite. @ 08/24/23 15:06:58.79
• [154.842 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 08/24/23 15:06:58.802
  Aug 24 15:06:58.802: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/24/23 15:06:58.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:06:58.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:06:58.841
  Aug 24 15:06:58.846: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:06:59.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3108" for this suite. @ 08/24/23 15:06:59.461
• [0.669 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 08/24/23 15:06:59.482
  Aug 24 15:06:59.482: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:06:59.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:06:59.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:06:59.517
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:06:59.522
  E0824 15:06:59.672918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:00.672874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:01.673018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:02.673572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:07:03.562
  Aug 24 15:07:03.580: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-9d0d0148-6e64-42f8-880d-0745436848da container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:07:03.611
  Aug 24 15:07:03.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2189" for this suite. @ 08/24/23 15:07:03.643
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 08/24/23 15:07:03.659
  Aug 24 15:07:03.659: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename events @ 08/24/23 15:07:03.662
  E0824 15:07:03.674103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:03.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:03.698
  STEP: creating a test event @ 08/24/23 15:07:03.702
  STEP: listing events in all namespaces @ 08/24/23 15:07:03.709
  STEP: listing events in test namespace @ 08/24/23 15:07:03.716
  STEP: listing events with field selection filtering on source @ 08/24/23 15:07:03.726
  STEP: listing events with field selection filtering on reportingController @ 08/24/23 15:07:03.733
  STEP: getting the test event @ 08/24/23 15:07:03.738
  STEP: patching the test event @ 08/24/23 15:07:03.743
  STEP: getting the test event @ 08/24/23 15:07:03.753
  STEP: updating the test event @ 08/24/23 15:07:03.757
  STEP: getting the test event @ 08/24/23 15:07:03.767
  STEP: deleting the test event @ 08/24/23 15:07:03.771
  STEP: listing events in all namespaces @ 08/24/23 15:07:03.783
  STEP: listing events in test namespace @ 08/24/23 15:07:03.791
  Aug 24 15:07:03.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8174" for this suite. @ 08/24/23 15:07:03.8
• [0.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 08/24/23 15:07:03.821
  Aug 24 15:07:03.822: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename disruption @ 08/24/23 15:07:03.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:03.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:03.887
  STEP: Creating a pdb that targets all three pods in a test replica set @ 08/24/23 15:07:03.895
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:07:03.914
  E0824 15:07:04.676201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:05.676255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 08/24/23 15:07:05.942
  STEP: Waiting for all pods to be running @ 08/24/23 15:07:05.942
  Aug 24 15:07:05.949: INFO: pods: 0 < 3
  E0824 15:07:06.682022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:07.683250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:07.957: INFO: running pods: 2 < 3
  E0824 15:07:08.684244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:09.684573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 08/24/23 15:07:09.96
  STEP: Updating the pdb to allow a pod to be evicted @ 08/24/23 15:07:09.993
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:07:10.011
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/24/23 15:07:10.019
  STEP: Waiting for all pods to be running @ 08/24/23 15:07:10.019
  STEP: Waiting for the pdb to observed all healthy pods @ 08/24/23 15:07:10.025
  STEP: Patching the pdb to disallow a pod to be evicted @ 08/24/23 15:07:10.091
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:07:10.167
  STEP: Waiting for all pods to be running @ 08/24/23 15:07:10.178
  Aug 24 15:07:10.185: INFO: running pods: 2 < 3
  E0824 15:07:10.685134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:11.685658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 08/24/23 15:07:12.198
  STEP: Deleting the pdb to allow a pod to be evicted @ 08/24/23 15:07:12.217
  STEP: Waiting for the pdb to be deleted @ 08/24/23 15:07:12.234
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/24/23 15:07:12.241
  STEP: Waiting for all pods to be running @ 08/24/23 15:07:12.241
  Aug 24 15:07:12.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4594" for this suite. @ 08/24/23 15:07:12.319
• [8.536 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 08/24/23 15:07:12.362
  Aug 24 15:07:12.362: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename runtimeclass @ 08/24/23 15:07:12.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:12.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:12.409
  E0824 15:07:12.686511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:13.686300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:07:14.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5917" for this suite. @ 08/24/23 15:07:14.486
• [2.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 08/24/23 15:07:14.517
  Aug 24 15:07:14.518: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:07:14.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:07:14.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:07:14.638
  STEP: Creating secret with name s-test-opt-del-2e68e026-63c7-4df1-bbfb-647e95d33ba3 @ 08/24/23 15:07:14.651
  STEP: Creating secret with name s-test-opt-upd-af5336bb-85b3-4cbf-a31c-a2640ed2ef72 @ 08/24/23 15:07:14.66
  STEP: Creating the pod @ 08/24/23 15:07:14.668
  E0824 15:07:14.689118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:15.689480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:16.690429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-2e68e026-63c7-4df1-bbfb-647e95d33ba3 @ 08/24/23 15:07:16.772
  STEP: Updating secret s-test-opt-upd-af5336bb-85b3-4cbf-a31c-a2640ed2ef72 @ 08/24/23 15:07:16.781
  STEP: Creating secret with name s-test-opt-create-b5d766f5-0147-4027-9792-ce5afd92f7b8 @ 08/24/23 15:07:16.792
  STEP: waiting to observe update in volume @ 08/24/23 15:07:16.799
  E0824 15:07:17.691121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:18.691336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:19.694745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:20.695193      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:21.696006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:22.696208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:23.697271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:24.696883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:25.697169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:26.697352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:27.697566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:28.698152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:29.703732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:30.702593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:31.703160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:32.703302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:33.703540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:34.703621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:35.704450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:36.704708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:37.704947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:38.705302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:39.705693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:40.705869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:41.706149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:42.706475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:43.706616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:44.707909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:45.708537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:46.709532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:47.710656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:48.711150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:49.711567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:50.715799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:51.712626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:52.712754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:53.713986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:54.714770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:55.715508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:56.715682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:57.716385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:58.717252      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:07:59.718153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:00.718463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:01.718772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:02.718864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:03.720423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:04.719412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:05.720393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:06.720266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:07.721100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:08.722184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:09.722406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:10.725937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:11.726930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:12.729086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:13.729695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:14.729964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:15.730592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:16.732678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:17.731831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:18.732781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:19.733046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:20.733165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:21.734078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:22.735390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:23.735228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:24.735942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:25.736969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:26.738099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:27.739072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:28.739406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:29.740120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:30.741013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:31.741992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:32.744301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:33.743331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:34.743367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:35.744358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:36.744673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:37.745819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:38.745958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:39.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4522" for this suite. @ 08/24/23 15:08:39.553
• [85.049 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 08/24/23 15:08:39.567
  Aug 24 15:08:39.567: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:08:39.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:08:39.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:08:39.632
  STEP: Setting up server cert @ 08/24/23 15:08:39.678
  E0824 15:08:39.745951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:40.746151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:08:41.016
  STEP: Deploying the webhook pod @ 08/24/23 15:08:41.042
  STEP: Wait for the deployment to be ready @ 08/24/23 15:08:41.072
  Aug 24 15:08:41.085: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:08:41.746797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:42.747310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:08:43.101
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:08:43.122
  E0824 15:08:43.748687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:44.122: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 08/24/23 15:08:44.134
  STEP: create a namespace for the webhook @ 08/24/23 15:08:44.161
  STEP: create a configmap should be unconditionally rejected by the webhook @ 08/24/23 15:08:44.191
  Aug 24 15:08:44.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-566" for this suite. @ 08/24/23 15:08:44.396
  STEP: Destroying namespace "webhook-markers-1793" for this suite. @ 08/24/23 15:08:44.407
  STEP: Destroying namespace "fail-closed-namespace-4713" for this suite. @ 08/24/23 15:08:44.421
• [4.865 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 08/24/23 15:08:44.437
  Aug 24 15:08:44.437: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:08:44.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:08:44.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:08:44.474
  STEP: Creating projection with secret that has name projected-secret-test-cb734129-57d2-4cd9-8d4f-1f73ed8cf875 @ 08/24/23 15:08:44.48
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:08:44.49
  E0824 15:08:44.748734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:45.749567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:46.750269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:47.751940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:08:48.525
  Aug 24 15:08:48.531: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-secrets-c3d96701-be29-42f8-9d28-c652235a1672 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:08:48.564
  Aug 24 15:08:48.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2000" for this suite. @ 08/24/23 15:08:48.598
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 08/24/23 15:08:48.617
  Aug 24 15:08:48.617: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 15:08:48.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:08:48.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:08:48.67
  Aug 24 15:08:48.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4067" for this suite. @ 08/24/23 15:08:48.69
• [0.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 08/24/23 15:08:48.714
  Aug 24 15:08:48.714: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 15:08:48.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:08:48.751
  E0824 15:08:48.753079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:08:48.755
  STEP: Creating simple DaemonSet "daemon-set" @ 08/24/23 15:08:48.788
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 15:08:48.797
  Aug 24 15:08:48.817: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:08:48.818: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:08:49.757592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:49.871: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:08:49.871: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:08:50.757997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:50.834: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:08:50.834: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 08/24/23 15:08:50.838
  STEP: DeleteCollection of the DaemonSets @ 08/24/23 15:08:50.844
  STEP: Verify that ReplicaSets have been deleted @ 08/24/23 15:08:50.856
  Aug 24 15:08:50.872: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26323"},"items":null}

  Aug 24 15:08:50.886: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26323"},"items":[{"metadata":{"name":"daemon-set-9s8z2","generateName":"daemon-set-","namespace":"daemonsets-72","uid":"f4486c2f-93e4-4b1a-8ad5-7102505c4a4b","resourceVersion":"26320","creationTimestamp":"2023-08-24T15:08:48Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"dfbc1768-1c03-4c4c-8548-4731d4839144","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-08-24T15:08:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"dfbc1768-1c03-4c4c-8548-4731d4839144\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-08-24T15:08:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.210\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p2dql","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p2dql","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"dae4wichuiha-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["dae4wichuiha-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:08:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:08:50Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:08:50Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:08:48Z"}],"hostIP":"192.168.121.197","podIP":"10.233.64.210","podIPs":[{"ip":"10.233.64.210"}],"startTime":"2023-08-24T15:08:48Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-08-24T15:08:49Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://41d8e47b0cd84b44521e0c29fbb6122ce0d5d8fbe697d9b064e74ac12811ee6f","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-l55qp","generateName":"daemon-set-","namespace":"daemonsets-72","uid":"1f3d6ad6-2ad3-4914-985f-66f75fc819b7","resourceVersion":"26317","creationTimestamp":"2023-08-24T15:08:48Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"dfbc1768-1c03-4c4c-8548-4731d4839144","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-08-24T15:08:48Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"dfbc1768-1c03-4c4c-8548-4731d4839144\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-08-24T15:08:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.195\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xrp8r","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xrp8r","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"dae4wichuiha-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["dae4wichuiha-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:08:48Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:08:50Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:08:50Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-24T15:08:48Z"}],"hostIP":"192.168.121.163","podIP":"10.233.65.195","podIPs":[{"ip":"10.233.65.195"}],"startTime":"2023-08-24T15:08:48Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-08-24T15:08:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://952dac078469d06881d213b8575c69f31b2277e338a1cea6b079529eb861d034","started":true}],"qosClass":"BestEffort"}}]}

  Aug 24 15:08:50.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-72" for this suite. @ 08/24/23 15:08:50.915
• [2.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 08/24/23 15:08:50.933
  Aug 24 15:08:50.934: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 15:08:50.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:08:50.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:08:50.97
  STEP: creating service endpoint-test2 in namespace services-8498 @ 08/24/23 15:08:50.975
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8498 to expose endpoints map[] @ 08/24/23 15:08:50.994
  Aug 24 15:08:51.020: INFO: successfully validated that service endpoint-test2 in namespace services-8498 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8498 @ 08/24/23 15:08:51.021
  E0824 15:08:51.758284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:52.758620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8498 to expose endpoints map[pod1:[80]] @ 08/24/23 15:08:53.073
  Aug 24 15:08:53.089: INFO: successfully validated that service endpoint-test2 in namespace services-8498 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 08/24/23 15:08:53.089
  Aug 24 15:08:53.089: INFO: Creating new exec pod
  E0824 15:08:53.759164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:54.758855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:55.759253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:56.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8498 exec execpod7pd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 24 15:08:56.601: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 24 15:08:56.601: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:08:56.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8498 exec execpod7pd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.30.184 80'
  E0824 15:08:56.759934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:08:56.832: INFO: stderr: "+ + nc -v -t -w 2echo 10.233.30.184 80 hostName\n\nConnection to 10.233.30.184 80 port [tcp/http] succeeded!\n"
  Aug 24 15:08:56.833: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8498 @ 08/24/23 15:08:56.833
  E0824 15:08:57.760048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:58.760382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:08:59.760552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:00.760732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8498 to expose endpoints map[pod1:[80] pod2:[80]] @ 08/24/23 15:09:00.895
  Aug 24 15:09:00.919: INFO: successfully validated that service endpoint-test2 in namespace services-8498 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 08/24/23 15:09:00.919
  E0824 15:09:01.760794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:01.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8498 exec execpod7pd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 24 15:09:02.263: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 24 15:09:02.263: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:09:02.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8498 exec execpod7pd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.30.184 80'
  Aug 24 15:09:02.514: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.30.184 80\nConnection to 10.233.30.184 80 port [tcp/http] succeeded!\n"
  Aug 24 15:09:02.514: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8498 @ 08/24/23 15:09:02.514
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8498 to expose endpoints map[pod2:[80]] @ 08/24/23 15:09:02.592
  Aug 24 15:09:02.625: INFO: successfully validated that service endpoint-test2 in namespace services-8498 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 08/24/23 15:09:02.625
  E0824 15:09:02.760993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:03.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8498 exec execpod7pd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0824 15:09:03.761889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:03.880: INFO: stderr: "+ echo hostName+ \nnc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 24 15:09:03.880: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:09:03.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8498 exec execpod7pd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.30.184 80'
  Aug 24 15:09:04.108: INFO: stderr: "+ echo+  hostName\nnc -v -t -w 2 10.233.30.184 80\nConnection to 10.233.30.184 80 port [tcp/http] succeeded!\n"
  Aug 24 15:09:04.108: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8498 @ 08/24/23 15:09:04.108
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8498 to expose endpoints map[] @ 08/24/23 15:09:04.154
  E0824 15:09:04.762517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:05.174: INFO: successfully validated that service endpoint-test2 in namespace services-8498 exposes endpoints map[]
  Aug 24 15:09:05.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8498" for this suite. @ 08/24/23 15:09:05.216
• [14.295 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 08/24/23 15:09:05.23
  Aug 24 15:09:05.230: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename deployment @ 08/24/23 15:09:05.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:05.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:05.269
  STEP: creating a Deployment @ 08/24/23 15:09:05.282
  Aug 24 15:09:05.282: INFO: Creating simple deployment test-deployment-qdtdf
  Aug 24 15:09:05.304: INFO: new replicaset for deployment "test-deployment-qdtdf" is yet to be created
  E0824 15:09:05.763274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:06.767236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 08/24/23 15:09:07.326
  Aug 24 15:09:07.333: INFO: Deployment test-deployment-qdtdf has Conditions: [{Available True 2023-08-24 15:09:06 +0000 UTC 2023-08-24 15:09:06 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-08-24 15:09:06 +0000 UTC 2023-08-24 15:09:05 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qdtdf-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 08/24/23 15:09:07.333
  Aug 24 15:09:07.349: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 9, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 9, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 9, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 9, 5, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-qdtdf-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 08/24/23 15:09:07.349
  Aug 24 15:09:07.355: INFO: Observed &Deployment event: ADDED
  Aug 24 15:09:07.355: INFO: Observed Deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:09:05 +0000 UTC 2023-08-24 15:09:05 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qdtdf-5d576bd769"}
  Aug 24 15:09:07.355: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:09:07.356: INFO: Observed Deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:09:05 +0000 UTC 2023-08-24 15:09:05 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qdtdf-5d576bd769"}
  Aug 24 15:09:07.356: INFO: Observed Deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-24 15:09:05 +0000 UTC 2023-08-24 15:09:05 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 24 15:09:07.356: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:09:07.356: INFO: Observed Deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-24 15:09:05 +0000 UTC 2023-08-24 15:09:05 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 24 15:09:07.356: INFO: Observed Deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:09:05 +0000 UTC 2023-08-24 15:09:05 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-qdtdf-5d576bd769" is progressing.}
  Aug 24 15:09:07.356: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:09:07.356: INFO: Observed Deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-24 15:09:06 +0000 UTC 2023-08-24 15:09:06 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 24 15:09:07.356: INFO: Observed Deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:09:06 +0000 UTC 2023-08-24 15:09:05 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qdtdf-5d576bd769" has successfully progressed.}
  Aug 24 15:09:07.357: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:09:07.357: INFO: Observed Deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-24 15:09:06 +0000 UTC 2023-08-24 15:09:06 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 24 15:09:07.357: INFO: Observed Deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:09:06 +0000 UTC 2023-08-24 15:09:05 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qdtdf-5d576bd769" has successfully progressed.}
  Aug 24 15:09:07.357: INFO: Found Deployment test-deployment-qdtdf in namespace deployment-6060 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 15:09:07.357: INFO: Deployment test-deployment-qdtdf has an updated status
  STEP: patching the Statefulset Status @ 08/24/23 15:09:07.357
  Aug 24 15:09:07.357: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 24 15:09:07.383: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 08/24/23 15:09:07.384
  Aug 24 15:09:07.391: INFO: Observed &Deployment event: ADDED
  Aug 24 15:09:07.392: INFO: Observed deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:09:05 +0000 UTC 2023-08-24 15:09:05 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qdtdf-5d576bd769"}
  Aug 24 15:09:07.392: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:09:07.392: INFO: Observed deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:09:05 +0000 UTC 2023-08-24 15:09:05 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qdtdf-5d576bd769"}
  Aug 24 15:09:07.392: INFO: Observed deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-24 15:09:05 +0000 UTC 2023-08-24 15:09:05 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 24 15:09:07.393: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:09:07.393: INFO: Observed deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-24 15:09:05 +0000 UTC 2023-08-24 15:09:05 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 24 15:09:07.394: INFO: Observed deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:09:05 +0000 UTC 2023-08-24 15:09:05 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-qdtdf-5d576bd769" is progressing.}
  Aug 24 15:09:07.394: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:09:07.395: INFO: Observed deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-24 15:09:06 +0000 UTC 2023-08-24 15:09:06 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 24 15:09:07.395: INFO: Observed deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:09:06 +0000 UTC 2023-08-24 15:09:05 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qdtdf-5d576bd769" has successfully progressed.}
  Aug 24 15:09:07.395: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:09:07.395: INFO: Observed deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-24 15:09:06 +0000 UTC 2023-08-24 15:09:06 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 24 15:09:07.395: INFO: Observed deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-24 15:09:06 +0000 UTC 2023-08-24 15:09:05 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qdtdf-5d576bd769" has successfully progressed.}
  Aug 24 15:09:07.396: INFO: Observed deployment test-deployment-qdtdf in namespace deployment-6060 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 15:09:07.396: INFO: Observed &Deployment event: MODIFIED
  Aug 24 15:09:07.396: INFO: Found deployment test-deployment-qdtdf in namespace deployment-6060 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Aug 24 15:09:07.396: INFO: Deployment test-deployment-qdtdf has a patched status
  Aug 24 15:09:07.412: INFO: Deployment "test-deployment-qdtdf":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-qdtdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09890622-827f-424b-817b-a27d662b3942",
      ResourceVersion: (string) (len=5) "26487",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828486545,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-qdtdf-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 15:09:07.457: INFO: New ReplicaSet "test-deployment-qdtdf-5d576bd769" of Deployment "test-deployment-qdtdf":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-qdtdf-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c16b29ff-35d0-412d-a656-30c37aa93228",
      ResourceVersion: (string) (len=5) "26481",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828486545,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-qdtdf",
          UID: (types.UID) (len=36) "09890622-827f-424b-817b-a27d662b3942",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 39 38  |k:{\"uid\":\"098|
              00000120  39 30 36 32 32 2d 38 32  37 66 2d 34 32 34 62 2d  |90622-827f-424b-|
              00000130  38 31 37 62 2d 61 32 37  64 36 36 32 62 33 39 34  |817b-a27d662b394|
              00000140  32 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |2\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:09:07.468: INFO: Pod "test-deployment-qdtdf-5d576bd769-vpff2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-qdtdf-5d576bd769-vpff2",
      GenerateName: (string) (len=33) "test-deployment-qdtdf-5d576bd769-",
      Namespace: (string) (len=15) "deployment-6060",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a774a52-dcfd-4017-bd7b-1391fc224758",
      ResourceVersion: (string) (len=5) "26480",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828486545,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-qdtdf-5d576bd769",
          UID: (types.UID) (len=36) "c16b29ff-35d0-412d-a656-30c37aa93228",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 63 31 36 62 32 39 66  66 2d 33 35 64 30 2d 34  |"c16b29ff-35d0-4|
              000000a0  31 32 64 2d 61 36 35 36  2d 33 30 63 33 37 61 61  |12d-a656-30c37aa|
              000000b0  39 33 32 32 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |93228\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 37 30 5c 22 7d 22  |10.233.64.70\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4zlv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4zlv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828486545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828486545,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828486546,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://a53cc6e208639a0ab659091fc220c0c7515d1904ffc1ca2d4cad7c0370d3058c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:09:07.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6060" for this suite. @ 08/24/23 15:09:07.483
• [2.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 08/24/23 15:09:07.505
  Aug 24 15:09:07.506: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:09:07.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:07.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:07.544
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:09:07.549
  E0824 15:09:07.768205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:08.768337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:09.769071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:10.769150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:09:11.591
  Aug 24 15:09:11.597: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-f675201a-7257-4f1b-949b-13a5d9b706aa container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:09:11.607
  Aug 24 15:09:11.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3467" for this suite. @ 08/24/23 15:09:11.639
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 08/24/23 15:09:11.655
  Aug 24 15:09:11.655: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:09:11.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:11.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:11.694
  E0824 15:09:11.770145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:12.771955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:13.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:09:13.736: INFO: Deleting pod "var-expansion-ab03d84d-d32f-45c2-944f-930881d955c9" in namespace "var-expansion-6632"
  Aug 24 15:09:13.750: INFO: Wait up to 5m0s for pod "var-expansion-ab03d84d-d32f-45c2-944f-930881d955c9" to be fully deleted
  E0824 15:09:13.772754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:14.773903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-6632" for this suite. @ 08/24/23 15:09:15.766
  E0824 15:09:15.775159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.125 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 08/24/23 15:09:15.781
  Aug 24 15:09:15.782: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:09:15.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:15.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:15.824
  STEP: Creating configMap with name configmap-test-volume-5e874615-0b80-4fca-941c-f8b0f8f2c193 @ 08/24/23 15:09:15.83
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:09:15.837
  E0824 15:09:16.776200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:17.776472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:18.776795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:19.777102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:09:19.881
  Aug 24 15:09:19.888: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-configmaps-c5b404fc-e1f6-428a-9977-f7088b705b28 container configmap-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:09:19.9
  Aug 24 15:09:19.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8765" for this suite. @ 08/24/23 15:09:19.946
• [4.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 08/24/23 15:09:19.964
  Aug 24 15:09:19.964: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 15:09:19.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:20.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:20.008
  STEP: creating a collection of services @ 08/24/23 15:09:20.013
  Aug 24 15:09:20.013: INFO: Creating e2e-svc-a-45jv4
  Aug 24 15:09:20.033: INFO: Creating e2e-svc-b-sdv78
  Aug 24 15:09:20.053: INFO: Creating e2e-svc-c-vjq57
  STEP: deleting service collection @ 08/24/23 15:09:20.083
  Aug 24 15:09:20.147: INFO: Collection of services has been deleted
  Aug 24 15:09:20.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2509" for this suite. @ 08/24/23 15:09:20.161
• [0.218 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 08/24/23 15:09:20.183
  Aug 24 15:09:20.183: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 15:09:20.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:20.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:20.235
  STEP: creating the pod @ 08/24/23 15:09:20.24
  STEP: submitting the pod to kubernetes @ 08/24/23 15:09:20.241
  W0824 15:09:20.258772      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0824 15:09:20.777758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:21.777948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 08/24/23 15:09:22.283
  STEP: updating the pod @ 08/24/23 15:09:22.291
  E0824 15:09:22.778236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:22.815: INFO: Successfully updated pod "pod-update-activedeadlineseconds-a5e4b44d-bd48-411a-98bc-442728f9aacd"
  E0824 15:09:23.778387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:24.778676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:25.779113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:26.779361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:26.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3357" for this suite. @ 08/24/23 15:09:26.847
• [6.697 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 08/24/23 15:09:26.881
  Aug 24 15:09:26.881: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 15:09:26.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:26.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:26.94
  Aug 24 15:09:26.974: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0824 15:09:27.779861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:28.780541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:29.780544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:30.780779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:31.781560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:31.992: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 15:09:31.997
  STEP: Scaling up "test-rs" replicaset  @ 08/24/23 15:09:31.998
  Aug 24 15:09:32.047: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 08/24/23 15:09:32.048
  Aug 24 15:09:32.102: INFO: observed ReplicaSet test-rs in namespace replicaset-7176 with ReadyReplicas 1, AvailableReplicas 1
  Aug 24 15:09:32.142: INFO: observed ReplicaSet test-rs in namespace replicaset-7176 with ReadyReplicas 1, AvailableReplicas 1
  Aug 24 15:09:32.174: INFO: observed ReplicaSet test-rs in namespace replicaset-7176 with ReadyReplicas 1, AvailableReplicas 1
  Aug 24 15:09:32.210: INFO: observed ReplicaSet test-rs in namespace replicaset-7176 with ReadyReplicas 1, AvailableReplicas 1
  E0824 15:09:32.793608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:33.563: INFO: observed ReplicaSet test-rs in namespace replicaset-7176 with ReadyReplicas 2, AvailableReplicas 2
  E0824 15:09:33.805407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:09:33.938: INFO: observed Replicaset test-rs in namespace replicaset-7176 with ReadyReplicas 3 found true
  Aug 24 15:09:33.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7176" for this suite. @ 08/24/23 15:09:33.951
• [7.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 08/24/23 15:09:34.03
  Aug 24 15:09:34.030: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename watch @ 08/24/23 15:09:34.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:34.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:34.096
  STEP: creating a new configmap @ 08/24/23 15:09:34.101
  STEP: modifying the configmap once @ 08/24/23 15:09:34.111
  STEP: modifying the configmap a second time @ 08/24/23 15:09:34.13
  STEP: deleting the configmap @ 08/24/23 15:09:34.147
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 08/24/23 15:09:34.161
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 08/24/23 15:09:34.167
  Aug 24 15:09:34.167: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-349  04866626-0500-4cb2-bbf7-77fed052fc7f 26780 0 2023-08-24 15:09:34 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-08-24 15:09:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:09:34.168: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-349  04866626-0500-4cb2-bbf7-77fed052fc7f 26781 0 2023-08-24 15:09:34 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-08-24 15:09:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:09:34.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-349" for this suite. @ 08/24/23 15:09:34.184
• [0.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 08/24/23 15:09:34.215
  Aug 24 15:09:34.215: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:09:34.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:34.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:34.284
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:09:34.293
  E0824 15:09:34.809809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:35.810405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:36.811005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:37.811772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:09:38.389
  Aug 24 15:09:38.394: INFO: Trying to get logs from node dae4wichuiha-2 pod downwardapi-volume-50292252-2037-4b29-84b3-3aa9b7d4c3e5 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:09:38.406
  Aug 24 15:09:38.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9733" for this suite. @ 08/24/23 15:09:38.445
• [4.245 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 08/24/23 15:09:38.463
  Aug 24 15:09:38.463: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pod-network-test @ 08/24/23 15:09:38.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:09:38.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:09:38.511
  STEP: Performing setup for networking test in namespace pod-network-test-6227 @ 08/24/23 15:09:38.517
  STEP: creating a selector @ 08/24/23 15:09:38.518
  STEP: Creating the service pods in kubernetes @ 08/24/23 15:09:38.518
  Aug 24 15:09:38.518: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0824 15:09:38.812221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:39.812456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:40.812992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:41.813528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:42.814148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:43.815353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:44.816290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:45.816365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:46.817764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:47.818022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:48.818529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:49.819258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:50.823584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:51.823739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:52.824344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:53.824543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:54.824878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:55.825224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:56.825980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:57.825937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:58.826700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:09:59.826725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/24/23 15:10:00.732
  E0824 15:10:00.827137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:01.827535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:02.813: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Aug 24 15:10:02.813: INFO: Going to poll 10.233.64.66 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Aug 24 15:10:02.819: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.66:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6227 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:10:02.819: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:10:02.822: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:10:02.822: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6227/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.66%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0824 15:10:02.828304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:10:03.001: INFO: Found all 1 expected endpoints: [netserver-0]
  Aug 24 15:10:03.002: INFO: Going to poll 10.233.65.94 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Aug 24 15:10:03.010: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.94:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6227 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:10:03.010: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:10:03.012: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:10:03.013: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6227/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.94%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 24 15:10:03.178: INFO: Found all 1 expected endpoints: [netserver-1]
  Aug 24 15:10:03.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6227" for this suite. @ 08/24/23 15:10:03.191
• [24.746 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 08/24/23 15:10:03.215
  Aug 24 15:10:03.215: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:10:03.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:10:03.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:10:03.252
  STEP: Creating configMap with name cm-test-opt-del-a46ad270-bde4-4e08-afd0-1a87c00b05b5 @ 08/24/23 15:10:03.263
  STEP: Creating configMap with name cm-test-opt-upd-d195d685-a428-4053-a79f-411f7ff2062b @ 08/24/23 15:10:03.273
  STEP: Creating the pod @ 08/24/23 15:10:03.281
  E0824 15:10:03.828662      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:04.828879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-a46ad270-bde4-4e08-afd0-1a87c00b05b5 @ 08/24/23 15:10:05.345
  STEP: Updating configmap cm-test-opt-upd-d195d685-a428-4053-a79f-411f7ff2062b @ 08/24/23 15:10:05.356
  STEP: Creating configMap with name cm-test-opt-create-c8fc175b-a806-4d66-ab7a-4528ffbe007e @ 08/24/23 15:10:05.362
  STEP: waiting to observe update in volume @ 08/24/23 15:10:05.368
  E0824 15:10:05.829741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:06.830253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:07.830666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:08.831565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:09.831163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:10.831330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:11.832075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:12.832560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:13.833356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:14.833596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:15.833975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:16.834292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:17.834653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:18.835175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:19.835905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:20.836840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:21.841853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:22.842176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:23.843349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:24.844125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:25.844097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:26.844588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:27.844636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:28.844835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:29.844896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:30.845321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:31.845495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:32.845674      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:33.849298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:34.849438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:35.850429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:36.850563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:37.851712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:38.852284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:39.853124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:40.854075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:41.854428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:42.854737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:43.855046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:44.855329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:45.856109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:46.856759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:47.857274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:48.857892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:49.858795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:50.859095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:51.859045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:52.860328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:53.859810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:54.859989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:55.860902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:56.860939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:57.861214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:58.861439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:10:59.862314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:00.862930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:01.862955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:02.863232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:03.863969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:04.864292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:05.869941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:06.870014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:07.870901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:08.871077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:09.871314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:10.871559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:11.872108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:12.872684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:13.873171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:14.873915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:15.873904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:16.873966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:17.874064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:18.874392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:19.874792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:20.875242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:21.876204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:22.876357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:23.876785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:24.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8756" for this suite. @ 08/24/23 15:11:24.113
• [80.912 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 08/24/23 15:11:24.139
  Aug 24 15:11:24.139: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:11:24.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:24.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:24.189
  Aug 24 15:11:24.194: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:11:24.877364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:25.877831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:26.878507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0824 15:11:26.946165      14 warnings.go:70] unknown field "alpha"
  W0824 15:11:26.946204      14 warnings.go:70] unknown field "beta"
  W0824 15:11:26.946214      14 warnings.go:70] unknown field "delta"
  W0824 15:11:26.946223      14 warnings.go:70] unknown field "epsilon"
  W0824 15:11:26.946231      14 warnings.go:70] unknown field "gamma"
  Aug 24 15:11:27.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2031" for this suite. @ 08/24/23 15:11:27.522
• [3.395 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 08/24/23 15:11:27.536
  Aug 24 15:11:27.536: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:11:27.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:27.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:27.57
  STEP: Setting up server cert @ 08/24/23 15:11:27.61
  E0824 15:11:27.878536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:11:28.31
  STEP: Deploying the webhook pod @ 08/24/23 15:11:28.324
  STEP: Wait for the deployment to be ready @ 08/24/23 15:11:28.345
  Aug 24 15:11:28.366: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0824 15:11:28.878970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:29.879898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:11:30.391
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:11:30.416
  E0824 15:11:30.879695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:31.416: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 08/24/23 15:11:31.432
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/24/23 15:11:31.473
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 08/24/23 15:11:31.494
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/24/23 15:11:31.516
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 08/24/23 15:11:31.534
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/24/23 15:11:31.547
  Aug 24 15:11:31.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-859" for this suite. @ 08/24/23 15:11:31.679
  STEP: Destroying namespace "webhook-markers-6372" for this suite. @ 08/24/23 15:11:31.709
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 08/24/23 15:11:31.746
  Aug 24 15:11:31.746: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:11:31.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:31.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:31.786
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/24/23 15:11:31.79
  Aug 24 15:11:31.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-1429 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0824 15:11:31.880119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:32.089: INFO: stderr: ""
  Aug 24 15:11:32.089: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 08/24/23 15:11:32.089
  E0824 15:11:32.882198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:33.882687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:34.883351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:35.883885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:36.886202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/24/23 15:11:37.14
  Aug 24 15:11:37.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-1429 get pod e2e-test-httpd-pod -o json'
  Aug 24 15:11:37.366: INFO: stderr: ""
  Aug 24 15:11:37.366: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-08-24T15:11:32Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1429\",\n        \"resourceVersion\": \"27317\",\n        \"uid\": \"512f94f6-f1cc-47d3-9249-d3db76f6e638\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-wwb2z\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"dae4wichuiha-1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-wwb2z\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-24T15:11:32Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-24T15:11:33Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-24T15:11:33Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-24T15:11:32Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://2b48593a5ba3c3672c0a44ef33b47f4ca85328eec88f132b8c727d6c6e633ab6\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-08-24T15:11:33Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.197\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.64.63\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.64.63\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-08-24T15:11:32Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 08/24/23 15:11:37.366
  Aug 24 15:11:37.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-1429 replace -f -'
  Aug 24 15:11:37.873: INFO: stderr: ""
  Aug 24 15:11:37.874: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 08/24/23 15:11:37.874
  Aug 24 15:11:37.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-1429 delete pods e2e-test-httpd-pod'
  E0824 15:11:37.886355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:38.886543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:39.621: INFO: stderr: ""
  Aug 24 15:11:39.621: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 24 15:11:39.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1429" for this suite. @ 08/24/23 15:11:39.628
• [7.896 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 08/24/23 15:11:39.643
  Aug 24 15:11:39.644: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename disruption @ 08/24/23 15:11:39.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:39.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:39.677
  STEP: Creating a kubernetes client @ 08/24/23 15:11:39.682
  Aug 24 15:11:39.682: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename disruption-2 @ 08/24/23 15:11:39.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:39.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:39.73
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:11:39.748
  E0824 15:11:39.886908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:40.887198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:11:41.778
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:11:41.799
  STEP: listing a collection of PDBs across all namespaces @ 08/24/23 15:11:41.813
  STEP: listing a collection of PDBs in namespace disruption-10 @ 08/24/23 15:11:41.824
  STEP: deleting a collection of PDBs @ 08/24/23 15:11:41.834
  STEP: Waiting for the PDB collection to be deleted @ 08/24/23 15:11:41.864
  Aug 24 15:11:41.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:11:41.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-676" for this suite. @ 08/24/23 15:11:41.885
  E0824 15:11:41.888301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "disruption-10" for this suite. @ 08/24/23 15:11:41.896
• [2.266 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 08/24/23 15:11:41.911
  Aug 24 15:11:41.911: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:11:41.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:41.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:41.954
  Aug 24 15:11:42.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6454" for this suite. @ 08/24/23 15:11:42.05
• [0.151 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 08/24/23 15:11:42.066
  Aug 24 15:11:42.066: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 15:11:42.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:42.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:42.103
  STEP: fetching services @ 08/24/23 15:11:42.107
  Aug 24 15:11:42.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7877" for this suite. @ 08/24/23 15:11:42.118
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 08/24/23 15:11:42.13
  Aug 24 15:11:42.130: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 15:11:42.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:42.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:42.164
  Aug 24 15:11:42.170: INFO: Creating ReplicaSet my-hostname-basic-5e3c757a-bea9-43f6-af9b-861ef90eb4d0
  Aug 24 15:11:42.191: INFO: Pod name my-hostname-basic-5e3c757a-bea9-43f6-af9b-861ef90eb4d0: Found 0 pods out of 1
  E0824 15:11:42.888477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:43.888680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:44.889413      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:45.889087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:46.889232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:47.211: INFO: Pod name my-hostname-basic-5e3c757a-bea9-43f6-af9b-861ef90eb4d0: Found 1 pods out of 1
  Aug 24 15:11:47.225: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-5e3c757a-bea9-43f6-af9b-861ef90eb4d0" is running
  Aug 24 15:11:47.235: INFO: Pod "my-hostname-basic-5e3c757a-bea9-43f6-af9b-861ef90eb4d0-z7gdp" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 15:11:42 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 15:11:43 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 15:11:43 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-24 15:11:42 +0000 UTC Reason: Message:}])
  Aug 24 15:11:47.235: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/24/23 15:11:47.235
  Aug 24 15:11:47.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9891" for this suite. @ 08/24/23 15:11:47.525
• [5.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 08/24/23 15:11:47.623
  Aug 24 15:11:47.623: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 15:11:47.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:47.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:47.681
  Aug 24 15:11:47.727: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 08/24/23 15:11:47.749
  Aug 24 15:11:47.757: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:11:47.757: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 08/24/23 15:11:47.757
  Aug 24 15:11:47.826: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:11:47.826: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:11:47.890433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:48.840: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:11:48.840: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:11:48.890553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:49.847: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 15:11:49.847: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 08/24/23 15:11:49.851
  E0824 15:11:49.894428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:49.895: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:11:49.896: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 08/24/23 15:11:49.897
  Aug 24 15:11:49.916: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:11:49.916: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:11:50.895982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:50.933: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:11:50.933: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:11:51.894831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:51.926: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:11:51.928: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:11:52.895331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:52.924: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 15:11:52.924: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 15:11:52.939
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8412, will wait for the garbage collector to delete the pods @ 08/24/23 15:11:52.939
  Aug 24 15:11:53.011: INFO: Deleting DaemonSet.extensions daemon-set took: 14.636905ms
  Aug 24 15:11:53.114: INFO: Terminating DaemonSet.extensions daemon-set pods took: 103.030453ms
  E0824 15:11:53.895728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:11:54.822: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:11:54.823: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 15:11:54.829: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27547"},"items":null}

  Aug 24 15:11:54.834: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27547"},"items":null}

  Aug 24 15:11:54.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:11:54.896719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "daemonsets-8412" for this suite. @ 08/24/23 15:11:54.898
• [7.302 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 08/24/23 15:11:54.93
  Aug 24 15:11:54.930: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename security-context @ 08/24/23 15:11:54.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:54.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:54.973
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/24/23 15:11:54.984
  E0824 15:11:55.896311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:56.897303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:57.897846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:11:58.897947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:11:59.028
  Aug 24 15:11:59.034: INFO: Trying to get logs from node dae4wichuiha-1 pod security-context-9d2a8294-8a14-4485-9e53-5a4e6936e530 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:11:59.046
  Aug 24 15:11:59.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6175" for this suite. @ 08/24/23 15:11:59.081
• [4.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 08/24/23 15:11:59.099
  Aug 24 15:11:59.099: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename endpointslice @ 08/24/23 15:11:59.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:59.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:59.137
  Aug 24 15:11:59.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-551" for this suite. @ 08/24/23 15:11:59.24
• [0.153 seconds]
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 08/24/23 15:11:59.253
  Aug 24 15:11:59.253: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename conformance-tests @ 08/24/23 15:11:59.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:59.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:59.338
  STEP: Getting node addresses @ 08/24/23 15:11:59.344
  Aug 24 15:11:59.346: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Aug 24 15:11:59.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8458" for this suite. @ 08/24/23 15:11:59.374
• [0.134 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 08/24/23 15:11:59.39
  Aug 24 15:11:59.390: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:11:59.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:59.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:59.434
  STEP: validating api versions @ 08/24/23 15:11:59.439
  Aug 24 15:11:59.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8130 api-versions'
  Aug 24 15:11:59.562: INFO: stderr: ""
  Aug 24 15:11:59.562: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Aug 24 15:11:59.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8130" for this suite. @ 08/24/23 15:11:59.572
• [0.195 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 08/24/23 15:11:59.586
  Aug 24 15:11:59.586: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:11:59.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:11:59.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:11:59.626
  STEP: Setting up server cert @ 08/24/23 15:11:59.673
  E0824 15:11:59.898511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:12:00.467
  STEP: Deploying the webhook pod @ 08/24/23 15:12:00.485
  STEP: Wait for the deployment to be ready @ 08/24/23 15:12:00.512
  Aug 24 15:12:00.527: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:12:00.898694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:01.899806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:12:02.569
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:12:02.587
  E0824 15:12:02.900345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:03.588: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 24 15:12:03.604: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-30-crds.webhook.example.com via the AdmissionRegistration API @ 08/24/23 15:12:03.659
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/24/23 15:12:03.688
  E0824 15:12:03.900444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:04.905398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:05.902654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:05.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6831" for this suite. @ 08/24/23 15:12:06.559
  STEP: Destroying namespace "webhook-markers-2430" for this suite. @ 08/24/23 15:12:06.571
• [6.997 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 08/24/23 15:12:06.586
  Aug 24 15:12:06.586: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:12:06.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:12:06.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:12:06.628
  STEP: Creating secret with name secret-test-eac83c31-e50c-4b86-85b5-b7e5362ace3b @ 08/24/23 15:12:06.632
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:12:06.641
  E0824 15:12:06.905233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:07.905117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:08.906213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:09.906431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:12:10.689
  Aug 24 15:12:10.695: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-secrets-cdb6d06f-0a04-4a3c-8737-ea58d41e988c container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:12:10.707
  Aug 24 15:12:10.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8106" for this suite. @ 08/24/23 15:12:10.759
• [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 08/24/23 15:12:10.774
  Aug 24 15:12:10.774: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/24/23 15:12:10.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:12:10.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:12:10.817
  Aug 24 15:12:10.822: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:12:10.906921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:11.907424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:12.907349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:13.908306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:14.908859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:15.910656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:16.909961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:17.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7884" for this suite. @ 08/24/23 15:12:17.387
• [6.626 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 08/24/23 15:12:17.403
  Aug 24 15:12:17.404: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:12:17.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:12:17.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:12:17.449
  STEP: apply creating a deployment @ 08/24/23 15:12:17.453
  Aug 24 15:12:17.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9549" for this suite. @ 08/24/23 15:12:17.491
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 08/24/23 15:12:17.507
  Aug 24 15:12:17.507: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 15:12:17.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:12:17.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:12:17.545
  STEP: creating the pod @ 08/24/23 15:12:17.55
  STEP: setting up watch @ 08/24/23 15:12:17.55
  STEP: submitting the pod to kubernetes @ 08/24/23 15:12:17.657
  STEP: verifying the pod is in kubernetes @ 08/24/23 15:12:17.68
  STEP: verifying pod creation was observed @ 08/24/23 15:12:17.691
  E0824 15:12:17.910269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:18.910626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 08/24/23 15:12:19.726
  STEP: verifying pod deletion was observed @ 08/24/23 15:12:19.742
  E0824 15:12:19.911385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:20.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3025" for this suite. @ 08/24/23 15:12:20.87
• [3.374 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 08/24/23 15:12:20.888
  Aug 24 15:12:20.888: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:12:20.89
  E0824 15:12:20.913838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:12:20.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:12:20.933
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/24/23 15:12:20.938
  Aug 24 15:12:20.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-7400 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Aug 24 15:12:21.146: INFO: stderr: ""
  Aug 24 15:12:21.146: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 08/24/23 15:12:21.147
  Aug 24 15:12:21.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-7400 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Aug 24 15:12:21.330: INFO: stderr: ""
  Aug 24 15:12:21.330: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/24/23 15:12:21.33
  Aug 24 15:12:21.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-7400 delete pods e2e-test-httpd-pod'
  E0824 15:12:21.915077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:22.915606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:23.885: INFO: stderr: ""
  Aug 24 15:12:23.885: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 24 15:12:23.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7400" for this suite. @ 08/24/23 15:12:23.896
• [3.026 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 08/24/23 15:12:23.915
  Aug 24 15:12:23.915: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:12:23.916922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename services @ 08/24/23 15:12:23.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:12:23.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:12:23.962
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8691 @ 08/24/23 15:12:23.967
  STEP: changing the ExternalName service to type=NodePort @ 08/24/23 15:12:23.982
  STEP: creating replication controller externalname-service in namespace services-8691 @ 08/24/23 15:12:24.008
  I0824 15:12:24.026828      14 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8691, replica count: 2
  E0824 15:12:24.917054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:25.918175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:26.919121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:12:27.081754      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 15:12:27.082: INFO: Creating new exec pod
  E0824 15:12:27.919853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:28.920574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:29.921327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:30.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8691 exec execpodzvh7s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 24 15:12:30.439: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 24 15:12:30.440: INFO: stdout: "externalname-service-w692d"
  Aug 24 15:12:30.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8691 exec execpodzvh7s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.134 80'
  Aug 24 15:12:30.701: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.27.134 80\nConnection to 10.233.27.134 80 port [tcp/http] succeeded!\n"
  Aug 24 15:12:30.702: INFO: stdout: "externalname-service-w692d"
  Aug 24 15:12:30.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8691 exec execpodzvh7s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.197 31122'
  E0824 15:12:30.922137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:30.965: INFO: stderr: "+ nc -v+ echo hostName\n -t -w 2 192.168.121.197 31122\nConnection to 192.168.121.197 31122 port [tcp/*] succeeded!\n"
  Aug 24 15:12:30.965: INFO: stdout: ""
  E0824 15:12:31.923614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:31.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8691 exec execpodzvh7s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.197 31122'
  Aug 24 15:12:32.334: INFO: stderr: "+ nc -v -t -w 2 192.168.121.197 31122\n+ echo hostName\nConnection to 192.168.121.197 31122 port [tcp/*] succeeded!\n"
  Aug 24 15:12:32.334: INFO: stdout: "externalname-service-w692d"
  Aug 24 15:12:32.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-8691 exec execpodzvh7s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.163 31122'
  Aug 24 15:12:32.670: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.163 31122\nConnection to 192.168.121.163 31122 port [tcp/*] succeeded!\n"
  Aug 24 15:12:32.670: INFO: stdout: "externalname-service-wnzf5"
  Aug 24 15:12:32.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:12:32.678: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-8691" for this suite. @ 08/24/23 15:12:32.709
• [8.808 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 08/24/23 15:12:32.725
  Aug 24 15:12:32.725: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:12:32.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:12:32.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:12:32.776
  STEP: Starting the proxy @ 08/24/23 15:12:32.781
  Aug 24 15:12:32.782: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5259 proxy --unix-socket=/tmp/kubectl-proxy-unix820101104/test'
  STEP: retrieving proxy /api/ output @ 08/24/23 15:12:32.882
  Aug 24 15:12:32.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5259" for this suite. @ 08/24/23 15:12:32.894
• [0.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 08/24/23 15:12:32.921
  E0824 15:12:32.924431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:32.924: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:12:32.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:12:32.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:12:32.969
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/24/23 15:12:32.974
  E0824 15:12:33.924773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:34.925368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:35.926625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:36.926617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:12:37.016
  Aug 24 15:12:37.023: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-bc15e5bb-2231-4998-9441-9a66dd0b2660 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:12:37.034
  Aug 24 15:12:37.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3920" for this suite. @ 08/24/23 15:12:37.103
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 08/24/23 15:12:37.133
  Aug 24 15:12:37.134: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename dns @ 08/24/23 15:12:37.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:12:37.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:12:37.195
  STEP: Creating a test externalName service @ 08/24/23 15:12:37.213
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8594.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local; sleep 1; done
   @ 08/24/23 15:12:37.225
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8594.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local; sleep 1; done
   @ 08/24/23 15:12:37.225
  STEP: creating a pod to probe DNS @ 08/24/23 15:12:37.225
  STEP: submitting the pod to kubernetes @ 08/24/23 15:12:37.226
  E0824 15:12:37.928615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:38.929259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:39.934207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:40.929981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 15:12:41.264
  STEP: looking for the results for each expected name from probers @ 08/24/23 15:12:41.272
  Aug 24 15:12:41.298: INFO: DNS probes using dns-test-e5907d0d-cde2-4959-b888-765cedc2a6a8 succeeded

  STEP: changing the externalName to bar.example.com @ 08/24/23 15:12:41.299
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8594.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local; sleep 1; done
   @ 08/24/23 15:12:41.318
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8594.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local; sleep 1; done
   @ 08/24/23 15:12:41.318
  STEP: creating a second pod to probe DNS @ 08/24/23 15:12:41.318
  STEP: submitting the pod to kubernetes @ 08/24/23 15:12:41.318
  E0824 15:12:41.932490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:42.933083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:43.934412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:44.937957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 15:12:45.371
  STEP: looking for the results for each expected name from probers @ 08/24/23 15:12:45.377
  Aug 24 15:12:45.387: INFO: File wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local from pod  dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 15:12:45.395: INFO: File jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local from pod  dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 15:12:45.395: INFO: Lookups using dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 failed for: [wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local]

  Aug 24 15:12:45.406: INFO: Pod client logs for webserver: 
  Aug 24 15:12:45.417: INFO: Pod client logs for querier: 
  Aug 24 15:12:45.426: INFO: Pod client logs for jessie-querier: 
  E0824 15:12:45.938803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:46.939082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:47.939209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:48.939869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:49.939858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:50.439: INFO: File wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local from pod  dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 15:12:50.446: INFO: File jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local from pod  dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 15:12:50.446: INFO: Lookups using dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 failed for: [wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local]

  Aug 24 15:12:50.461: INFO: Pod client logs for webserver: 
  Aug 24 15:12:50.471: INFO: Pod client logs for querier: 
  Aug 24 15:12:50.482: INFO: Pod client logs for jessie-querier: 
  E0824 15:12:50.940119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:51.940397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:52.942149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:53.942298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:54.942505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:12:55.437: INFO: File wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local from pod  dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 15:12:55.444: INFO: File jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local from pod  dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 15:12:55.444: INFO: Lookups using dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 failed for: [wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local]

  Aug 24 15:12:55.455: INFO: Pod client logs for webserver: 
  Aug 24 15:12:55.466: INFO: Pod client logs for querier: 
  Aug 24 15:12:55.476: INFO: Pod client logs for jessie-querier: 
  E0824 15:12:55.943506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:56.943587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:57.944026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:58.944479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:12:59.945507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:00.436: INFO: File wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local from pod  dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 15:13:00.443: INFO: File jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local from pod  dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 15:13:00.443: INFO: Lookups using dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 failed for: [wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local]

  Aug 24 15:13:00.453: INFO: Pod client logs for webserver: 
  Aug 24 15:13:00.464: INFO: Pod client logs for querier: 
  Aug 24 15:13:00.475: INFO: Pod client logs for jessie-querier: 
  E0824 15:13:00.946242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:01.945855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:02.946667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:03.947391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:04.947608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:05.434: INFO: File wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local from pod  dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 15:13:05.446: INFO: File jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local from pod  dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Aug 24 15:13:05.446: INFO: Lookups using dns-8594/dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 failed for: [wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local]

  Aug 24 15:13:05.459: INFO: Pod client logs for webserver: 
  Aug 24 15:13:05.472: INFO: Pod client logs for querier: 
  Aug 24 15:13:05.485: INFO: Pod client logs for jessie-querier: 
  E0824 15:13:05.947774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:06.948535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:07.949299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:08.949819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:09.950175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:13:10.450: INFO: DNS probes using dns-test-73e372ad-2a08-4c6f-afc2-c670edddb575 succeeded

  STEP: changing the service to type=ClusterIP @ 08/24/23 15:13:10.45
  W0824 15:13:10.484761      14 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8594.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8594.svc.cluster.local; sleep 1; done
   @ 08/24/23 15:13:10.485
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8594.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8594.svc.cluster.local; sleep 1; done
   @ 08/24/23 15:13:10.485
  STEP: creating a third pod to probe DNS @ 08/24/23 15:13:10.485
  STEP: submitting the pod to kubernetes @ 08/24/23 15:13:10.501
  E0824 15:13:10.962810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:11.955389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:12.956094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:13.956292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:14.956480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:15.958309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:16.959325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:17.959571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:18.959773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:19.960063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:20.961072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:21.960909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:22.961551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:23.963320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:24.963661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:25.964012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:26.964257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:27.964814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:28.965902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:29.966272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:30.966313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:31.968158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:32.969881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:33.970049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:34.971011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:35.971060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:36.972353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:37.972326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:38.972852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:39.973826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:40.974870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:41.975029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:42.976135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:43.976584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:44.977402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:45.977970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:46.978479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:47.979229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:48.980039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:49.980439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:50.981867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:51.981934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:52.982759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:53.982950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:54.984063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:55.984130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:56.985022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:57.986285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:58.987291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:13:59.987388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:00.987746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:01.987880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:02.988990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:03.989003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:04.989297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:05.989432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:06.989924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:07.990173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:08.991373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:09.991119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:10.992061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:11.992235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:12.992666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:13.993994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 15:14:14.807
  STEP: looking for the results for each expected name from probers @ 08/24/23 15:14:14.813
  Aug 24 15:14:14.842: INFO: DNS probes using dns-test-b138cb46-2d75-4ad1-8609-86b4fdae6bbc succeeded

  Aug 24 15:14:14.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:14:14.85
  STEP: deleting the pod @ 08/24/23 15:14:14.881
  STEP: deleting the pod @ 08/24/23 15:14:14.913
  STEP: deleting the test externalName service @ 08/24/23 15:14:14.978
  E0824 15:14:14.993760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-8594" for this suite. @ 08/24/23 15:14:15.056
• [97.939 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 08/24/23 15:14:15.074
  Aug 24 15:14:15.076: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/24/23 15:14:15.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:14:15.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:14:15.134
  STEP: Creating 50 configmaps @ 08/24/23 15:14:15.139
  STEP: Creating RC which spawns configmap-volume pods @ 08/24/23 15:14:15.578
  Aug 24 15:14:15.618: INFO: Pod name wrapped-volume-race-02616c51-e837-44f1-92d2-560376d29aa1: Found 0 pods out of 5
  E0824 15:14:15.993148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:17.219101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:18.258496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:19.259363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:20.413867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:14:20.636: INFO: Pod name wrapped-volume-race-02616c51-e837-44f1-92d2-560376d29aa1: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/24/23 15:14:20.637
  STEP: Creating RC which spawns configmap-volume pods @ 08/24/23 15:14:20.694
  Aug 24 15:14:20.727: INFO: Pod name wrapped-volume-race-e87fbf37-257f-4a59-ba47-1fdab8a62499: Found 0 pods out of 5
  E0824 15:14:21.408574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:22.408982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:23.408965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:24.409234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:25.410017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:14:25.743: INFO: Pod name wrapped-volume-race-e87fbf37-257f-4a59-ba47-1fdab8a62499: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/24/23 15:14:25.743
  STEP: Creating RC which spawns configmap-volume pods @ 08/24/23 15:14:25.787
  Aug 24 15:14:25.815: INFO: Pod name wrapped-volume-race-0072feb7-f134-403b-abe5-3be0d62c3696: Found 0 pods out of 5
  E0824 15:14:26.410046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:27.410586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:28.410520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:29.410549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:30.411154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:14:30.844: INFO: Pod name wrapped-volume-race-0072feb7-f134-403b-abe5-3be0d62c3696: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/24/23 15:14:30.847
  Aug 24 15:14:30.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-0072feb7-f134-403b-abe5-3be0d62c3696 in namespace emptydir-wrapper-1420, will wait for the garbage collector to delete the pods @ 08/24/23 15:14:30.914
  Aug 24 15:14:31.068: INFO: Deleting ReplicationController wrapped-volume-race-0072feb7-f134-403b-abe5-3be0d62c3696 took: 68.553412ms
  Aug 24 15:14:31.269: INFO: Terminating ReplicationController wrapped-volume-race-0072feb7-f134-403b-abe5-3be0d62c3696 pods took: 200.325988ms
  E0824 15:14:31.411393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:32.411647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-e87fbf37-257f-4a59-ba47-1fdab8a62499 in namespace emptydir-wrapper-1420, will wait for the garbage collector to delete the pods @ 08/24/23 15:14:33.37
  E0824 15:14:33.413418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:14:33.456: INFO: Deleting ReplicationController wrapped-volume-race-e87fbf37-257f-4a59-ba47-1fdab8a62499 took: 24.309383ms
  Aug 24 15:14:33.622: INFO: Terminating ReplicationController wrapped-volume-race-e87fbf37-257f-4a59-ba47-1fdab8a62499 pods took: 166.790196ms
  E0824 15:14:34.413154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:35.421265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-02616c51-e837-44f1-92d2-560376d29aa1 in namespace emptydir-wrapper-1420, will wait for the garbage collector to delete the pods @ 08/24/23 15:14:35.524
  Aug 24 15:14:35.598: INFO: Deleting ReplicationController wrapped-volume-race-02616c51-e837-44f1-92d2-560376d29aa1 took: 11.410584ms
  Aug 24 15:14:35.798: INFO: Terminating ReplicationController wrapped-volume-race-02616c51-e837-44f1-92d2-560376d29aa1 pods took: 200.561905ms
  E0824 15:14:36.801306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:37.616117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 08/24/23 15:14:37.701
  STEP: Destroying namespace "emptydir-wrapper-1420" for this suite. @ 08/24/23 15:14:38.27
• [23.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 08/24/23 15:14:38.298
  Aug 24 15:14:38.298: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:14:38.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:14:38.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:14:38.343
  Aug 24 15:14:38.391: INFO: created pod
  E0824 15:14:38.616105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:39.616355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:40.616905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:41.617099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:14:42.418
  E0824 15:14:42.617962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:43.618625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:44.619321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:45.619690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:46.620082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:47.620830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:48.621574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:49.621856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:50.622958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:51.623300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:52.623902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:53.624420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:54.624631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:55.624756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:56.625110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:57.625725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:58.625913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:14:59.626585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:00.626616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:01.626961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:02.627658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:03.628687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:04.629470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:05.630043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:06.630086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:07.631043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:08.631838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:09.631985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:10.632149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:11.632392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:12.419: INFO: polling logs
  Aug 24 15:15:12.452: INFO: Pod logs: 
  I0824 15:14:39.465781       1 log.go:194] OK: Got token
  I0824 15:14:39.468855       1 log.go:194] validating with in-cluster discovery
  I0824 15:14:39.469850       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0824 15:14:39.469951       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8035:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000ad890), NotBefore:(*jwt.NumericDate)(0xc0000ad978), IssuedAt:(*jwt.NumericDate)(0xc0000ad8a0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8035", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"cc1b24da-5fab-42cd-bc44-91e23584a0a0"}}}
  I0824 15:14:39.493184       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0824 15:14:39.506541       1 log.go:194] OK: Validated signature on JWT
  I0824 15:14:39.506732       1 log.go:194] OK: Got valid claims from token!
  I0824 15:14:39.506849       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8035:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002ac280), NotBefore:(*jwt.NumericDate)(0xc0002ac2a8), IssuedAt:(*jwt.NumericDate)(0xc0002ac288), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8035", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"cc1b24da-5fab-42cd-bc44-91e23584a0a0"}}}

  Aug 24 15:15:12.453: INFO: completed pod
  Aug 24 15:15:12.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8035" for this suite. @ 08/24/23 15:15:12.476
• [34.194 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 08/24/23 15:15:12.496
  Aug 24 15:15:12.496: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:15:12.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:15:12.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:15:12.543
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:15:12.549
  E0824 15:15:12.633727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:13.633510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:14.634041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:15.634304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:15:16.596
  Aug 24 15:15:16.602: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-6977457f-d5ab-41ac-82e3-fe55f89c714f container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:15:16.614
  E0824 15:15:16.635107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:15:16.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7570" for this suite. @ 08/24/23 15:15:16.656
• [4.175 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 08/24/23 15:15:16.672
  Aug 24 15:15:16.672: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename cronjob @ 08/24/23 15:15:16.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:15:16.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:15:16.712
  STEP: Creating a suspended cronjob @ 08/24/23 15:15:16.715
  STEP: Ensuring no jobs are scheduled @ 08/24/23 15:15:16.727
  E0824 15:15:17.635281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:18.635093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:19.635403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:20.635449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:21.635591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:22.635784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:23.637111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:24.637721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:25.638032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:26.638330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:27.639288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:28.639345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:29.640515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:30.644549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:31.641927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:32.642315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:33.642666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:34.643185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:35.644297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:36.644330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:37.644531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:38.645535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:39.645921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:40.646180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:41.646321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:42.647209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:43.647704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:44.647670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:45.648770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:46.648823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:47.649670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:48.649471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:49.650087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:50.650430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:51.651912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:52.652314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:53.652576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:54.652985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:55.653692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:56.653830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:57.654666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:58.655522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:15:59.655782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:00.656680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:01.657528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:02.657851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:03.658617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:04.659434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:05.659771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:06.660116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:07.660968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:08.661349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:09.661771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:10.662087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:11.662361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:12.663547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:13.663741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:14.664037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:15.664291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:16.664821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:17.665016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:18.665186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:19.665343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:20.665473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:21.665873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:22.666704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:23.666807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:24.667911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:25.669026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:26.668348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:27.668469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:28.668658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:29.668827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:30.669195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:31.669269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:32.669913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:33.670127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:34.670376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:35.670980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:36.671809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:37.671945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:38.672209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:39.673301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:40.673555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:41.673895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:42.673870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:43.673880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:44.674115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:45.674342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:46.674750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:47.674859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:48.675900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:49.676067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:50.676755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:51.677125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:52.677819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:53.678118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:54.678330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:55.678401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:56.678622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:57.679343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:58.679514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:16:59.679751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:00.680186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:01.680569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:02.680971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:03.681939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:04.682942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:05.683346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:06.683894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:07.684124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:08.684278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:09.684658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:10.684816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:11.685430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:12.685672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:13.685877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:14.686788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:15.687133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:16.687754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:17.688383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:18.688637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:19.688991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:20.689275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:21.689969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:22.690202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:23.690316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:24.690631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:25.690779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:26.691352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:27.691571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:28.692294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:29.692503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:30.693773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:31.694232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:32.694332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:33.695481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:34.696001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:35.696402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:36.696825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:37.697420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:38.697468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:39.698450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:40.698481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:41.698681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:42.700102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:43.699991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:44.700123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:45.700751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:46.701325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:47.701831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:48.702703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:49.703948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:50.704583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:51.705487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:52.706080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:53.706237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:54.706373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:55.707191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:56.711828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:57.709248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:58.710103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:17:59.711142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:00.711266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:01.711353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:02.711543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:03.712615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:04.713607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:05.714003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:06.715102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:07.716151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:08.716219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:09.716372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:10.716471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:11.717419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:12.720621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:13.718395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:14.719339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:15.719495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:16.720316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:17.721082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:18.721078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:19.725979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:20.727443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:21.727337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:22.728392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:23.728673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:24.730542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:25.733101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:26.733798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:27.734345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:28.737208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:29.738190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:30.738131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:31.740880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:32.745930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:33.745981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:34.746569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:35.746981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:36.747272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:37.747594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:38.748031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:39.748217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:40.748524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:41.748745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:42.749078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:43.752736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:44.751698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:45.751930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:46.752677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:47.752819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:48.753011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:49.753222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:50.754343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:51.754546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:52.755161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:53.755656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:54.756169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:55.756237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:56.757459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:57.758024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:58.759289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:18:59.759792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:00.760008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:01.760234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:02.761054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:03.761766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:04.762380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:05.762613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:06.763041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:07.763672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:08.763939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:09.764027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:10.764392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:11.764616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:12.765489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:13.765772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:14.766049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:15.765936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:16.767100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:17.766919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:18.767703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:19.768285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:20.768063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:21.768990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:22.770282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:23.770888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:24.771472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:25.772341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:26.773136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:27.773797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:28.774238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:29.775470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:30.776411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:31.779694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:32.778110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:33.778766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:34.779945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:35.780172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:36.781059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:37.781221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:38.782175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:39.782630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:40.783223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:41.784046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:42.783970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:43.785001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:44.785016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:45.785229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:46.785937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:47.786257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:48.786784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:49.787687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:50.787926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:51.789027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:52.789098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:53.789923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:54.790083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:55.790218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:56.790476      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:57.790783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:58.790881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:19:59.791086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:00.791961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:01.792879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:02.793844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:03.793957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:04.794827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:05.795478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:06.795512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:07.796077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:08.796974      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:09.797102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:10.797477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:11.798162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:12.798218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:13.798883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:14.799960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:15.799864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 08/24/23 15:20:16.741
  STEP: Removing cronjob @ 08/24/23 15:20:16.747
  Aug 24 15:20:16.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7457" for this suite. @ 08/24/23 15:20:16.767
• [300.107 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 08/24/23 15:20:16.783
  Aug 24 15:20:16.784: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:20:16.79
  E0824 15:20:16.800260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:20:16.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:20:16.824
  STEP: Creating configMap with name configmap-test-volume-map-3a4f872f-2634-4b4d-b3d6-eaf5de669896 @ 08/24/23 15:20:16.83
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:20:16.837
  E0824 15:20:17.800702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:18.800958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:19.801612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:20.802361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:20:20.873
  Aug 24 15:20:20.878: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-configmaps-414e2baf-1608-40d7-84af-670d6d3715db container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:20:20.905
  Aug 24 15:20:20.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5098" for this suite. @ 08/24/23 15:20:20.938
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 08/24/23 15:20:20.955
  Aug 24 15:20:20.955: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:20:20.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:20:20.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:20:20.989
  STEP: Counting existing ResourceQuota @ 08/24/23 15:20:20.992
  E0824 15:20:21.805825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:22.804140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:23.804232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:24.804349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:25.804508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/24/23 15:20:26
  STEP: Ensuring resource quota status is calculated @ 08/24/23 15:20:26.016
  E0824 15:20:26.804797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:27.804981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 08/24/23 15:20:28.028
  STEP: Creating a NodePort Service @ 08/24/23 15:20:28.07
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 08/24/23 15:20:28.109
  STEP: Ensuring resource quota status captures service creation @ 08/24/23 15:20:28.14
  E0824 15:20:28.805402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:29.806024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 08/24/23 15:20:30.148
  STEP: Ensuring resource quota status released usage @ 08/24/23 15:20:30.225
  E0824 15:20:30.806859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:31.807080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:20:32.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2560" for this suite. @ 08/24/23 15:20:32.244
• [11.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 08/24/23 15:20:32.26
  Aug 24 15:20:32.260: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:20:32.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:20:32.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:20:32.311
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/24/23 15:20:32.316
  E0824 15:20:32.808435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:33.809152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:34.809277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:35.809891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:20:36.364
  Aug 24 15:20:36.371: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-9f4065e2-c0a2-41f2-ad8a-5ac56816f1cb container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:20:36.382
  Aug 24 15:20:36.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8982" for this suite. @ 08/24/23 15:20:36.42
• [4.176 seconds]
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 08/24/23 15:20:36.436
  Aug 24 15:20:36.436: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubelet-test @ 08/24/23 15:20:36.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:20:36.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:20:36.474
  E0824 15:20:36.810147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:37.811157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:38.812210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:39.813091      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:20:40.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3786" for this suite. @ 08/24/23 15:20:40.559
• [4.135 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 08/24/23 15:20:40.572
  Aug 24 15:20:40.572: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 15:20:40.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:20:40.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:20:40.613
  STEP: set up a multi version CRD @ 08/24/23 15:20:40.617
  Aug 24 15:20:40.618: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:20:40.813715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:41.815897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:42.814580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:43.815613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:44.816599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 08/24/23 15:20:45.29
  STEP: check the new version name is served @ 08/24/23 15:20:45.318
  E0824 15:20:45.817736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:46.822826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 08/24/23 15:20:46.973
  E0824 15:20:47.822776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 08/24/23 15:20:47.826
  E0824 15:20:48.824107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:49.824354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:50.825222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:20:51.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-205" for this suite. @ 08/24/23 15:20:51.718
• [11.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 08/24/23 15:20:51.748
  Aug 24 15:20:51.748: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pod-network-test @ 08/24/23 15:20:51.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:20:51.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:20:51.783
  STEP: Performing setup for networking test in namespace pod-network-test-5719 @ 08/24/23 15:20:51.787
  STEP: creating a selector @ 08/24/23 15:20:51.787
  STEP: Creating the service pods in kubernetes @ 08/24/23 15:20:51.788
  Aug 24 15:20:51.788: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0824 15:20:51.825733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:52.825928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:53.826067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:54.826239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:55.827194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:56.829200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:57.829853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:58.830275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:20:59.831243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:00.831811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:01.834789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:02.834481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:03.835055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/24/23 15:21:03.924
  E0824 15:21:04.836737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:05.836691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:21:05.982: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Aug 24 15:21:05.983: INFO: Going to poll 10.233.64.166 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Aug 24 15:21:05.988: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.166 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5719 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:21:05.988: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:21:05.990: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:21:05.990: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5719/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.166+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0824 15:21:06.836836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:21:07.154: INFO: Found all 1 expected endpoints: [netserver-0]
  Aug 24 15:21:07.154: INFO: Going to poll 10.233.65.195 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Aug 24 15:21:07.161: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.195 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5719 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:21:07.161: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:21:07.163: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:21:07.163: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5719/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.195+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0824 15:21:07.838400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:21:08.277: INFO: Found all 1 expected endpoints: [netserver-1]
  Aug 24 15:21:08.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5719" for this suite. @ 08/24/23 15:21:08.286
• [16.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 08/24/23 15:21:08.308
  Aug 24 15:21:08.308: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename runtimeclass @ 08/24/23 15:21:08.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:21:08.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:21:08.347
  Aug 24 15:21:08.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1343" for this suite. @ 08/24/23 15:21:08.374
• [0.080 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 08/24/23 15:21:08.39
  Aug 24 15:21:08.390: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/24/23 15:21:08.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:21:08.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:21:08.427
  STEP: create the container to handle the HTTPGet hook request. @ 08/24/23 15:21:08.439
  E0824 15:21:08.838214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:09.839038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:10.840016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:11.840505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 08/24/23 15:21:12.476
  E0824 15:21:12.840528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:13.841134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 08/24/23 15:21:14.518
  E0824 15:21:14.841365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:15.841937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 08/24/23 15:21:16.582
  Aug 24 15:21:16.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6801" for this suite. @ 08/24/23 15:21:16.619
• [8.240 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 08/24/23 15:21:16.633
  Aug 24 15:21:16.633: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename init-container @ 08/24/23 15:21:16.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:21:16.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:21:16.665
  STEP: creating the pod @ 08/24/23 15:21:16.67
  Aug 24 15:21:16.670: INFO: PodSpec: initContainers in spec.initContainers
  E0824 15:21:16.842643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:17.843600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:18.843968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:19.844580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:21:20.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9897" for this suite. @ 08/24/23 15:21:20.578
• [3.957 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 08/24/23 15:21:20.592
  Aug 24 15:21:20.592: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:21:20.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:21:20.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:21:20.632
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:21:20.637
  E0824 15:21:20.845743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:21.850502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:22.850396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:23.851340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:21:24.676
  Aug 24 15:21:24.681: INFO: Trying to get logs from node dae4wichuiha-2 pod downwardapi-volume-4f962365-24a4-4ae7-be3f-8acefc367cac container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:21:24.706
  Aug 24 15:21:24.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1980" for this suite. @ 08/24/23 15:21:24.75
• [4.167 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 08/24/23 15:21:24.764
  Aug 24 15:21:24.764: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:21:24.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:21:24.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:21:24.797
  E0824 15:21:24.851987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:25.855230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:26.855244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:27.855582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:28.856398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:29.858491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:30.858558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:31.860835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:32.860934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:33.861156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:34.862261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:35.863186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:36.863576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:37.864583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:38.865483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:39.866112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:40.866762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 08/24/23 15:21:41.811
  E0824 15:21:41.867236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:42.868286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:43.868960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:44.868969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:45.869988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/24/23 15:21:46.819
  STEP: Ensuring resource quota status is calculated @ 08/24/23 15:21:46.83
  E0824 15:21:46.870421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:47.870288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 08/24/23 15:21:48.837
  STEP: Ensuring resource quota status captures configMap creation @ 08/24/23 15:21:48.852
  E0824 15:21:48.870832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:49.871508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 08/24/23 15:21:50.861
  E0824 15:21:50.871738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released usage @ 08/24/23 15:21:50.874
  E0824 15:21:51.871938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:52.872254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:21:52.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3767" for this suite. @ 08/24/23 15:21:52.888
• [28.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 08/24/23 15:21:52.908
  Aug 24 15:21:52.908: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:21:52.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:21:52.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:21:52.945
  STEP: Setting up server cert @ 08/24/23 15:21:52.977
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:21:53.817
  STEP: Deploying the webhook pod @ 08/24/23 15:21:53.838
  STEP: Wait for the deployment to be ready @ 08/24/23 15:21:53.857
  E0824 15:21:53.877796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:21:53.910: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:21:54.877982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:55.878731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:21:55.935
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:21:55.96
  E0824 15:21:56.879389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:21:56.961: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 24 15:21:56.980: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8301-crds.webhook.example.com via the AdmissionRegistration API @ 08/24/23 15:21:57.509
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/24/23 15:21:57.535
  E0824 15:21:57.880296      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:21:58.880423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:21:59.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:21:59.881607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-5346" for this suite. @ 08/24/23 15:22:00.334
  STEP: Destroying namespace "webhook-markers-2756" for this suite. @ 08/24/23 15:22:00.346
• [7.448 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 08/24/23 15:22:00.36
  Aug 24 15:22:00.360: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:22:00.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:22:00.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:22:00.393
  STEP: Creating configMap that has name configmap-test-emptyKey-3ecb6c7e-c4e4-4d11-b866-1b3a7fab6455 @ 08/24/23 15:22:00.397
  Aug 24 15:22:00.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8314" for this suite. @ 08/24/23 15:22:00.407
• [0.058 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 08/24/23 15:22:00.422
  Aug 24 15:22:00.422: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 15:22:00.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:22:00.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:22:00.45
  STEP: creating a Service @ 08/24/23 15:22:00.459
  STEP: watching for the Service to be added @ 08/24/23 15:22:00.478
  Aug 24 15:22:00.480: INFO: Found Service test-service-vc7jv in namespace services-1279 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Aug 24 15:22:00.480: INFO: Service test-service-vc7jv created
  STEP: Getting /status @ 08/24/23 15:22:00.48
  Aug 24 15:22:00.492: INFO: Service test-service-vc7jv has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 08/24/23 15:22:00.492
  STEP: watching for the Service to be patched @ 08/24/23 15:22:00.505
  Aug 24 15:22:00.507: INFO: observed Service test-service-vc7jv in namespace services-1279 with annotations: map[] & LoadBalancer: {[]}
  Aug 24 15:22:00.508: INFO: Found Service test-service-vc7jv in namespace services-1279 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Aug 24 15:22:00.508: INFO: Service test-service-vc7jv has service status patched
  STEP: updating the ServiceStatus @ 08/24/23 15:22:00.508
  Aug 24 15:22:00.524: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 08/24/23 15:22:00.524
  Aug 24 15:22:00.527: INFO: Observed Service test-service-vc7jv in namespace services-1279 with annotations: map[] & Conditions: {[]}
  Aug 24 15:22:00.527: INFO: Observed event: &Service{ObjectMeta:{test-service-vc7jv  services-1279  3df26045-42d0-4fa7-9dcb-5dcc091ec001 30429 0 2023-08-24 15:22:00 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-08-24 15:22:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-08-24 15:22:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.58.173,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.58.173],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Aug 24 15:22:00.527: INFO: Found Service test-service-vc7jv in namespace services-1279 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 24 15:22:00.527: INFO: Service test-service-vc7jv has service status updated
  STEP: patching the service @ 08/24/23 15:22:00.528
  STEP: watching for the Service to be patched @ 08/24/23 15:22:00.548
  Aug 24 15:22:00.550: INFO: observed Service test-service-vc7jv in namespace services-1279 with labels: map[test-service-static:true]
  Aug 24 15:22:00.550: INFO: observed Service test-service-vc7jv in namespace services-1279 with labels: map[test-service-static:true]
  Aug 24 15:22:00.550: INFO: observed Service test-service-vc7jv in namespace services-1279 with labels: map[test-service-static:true]
  Aug 24 15:22:00.550: INFO: Found Service test-service-vc7jv in namespace services-1279 with labels: map[test-service:patched test-service-static:true]
  Aug 24 15:22:00.550: INFO: Service test-service-vc7jv patched
  STEP: deleting the service @ 08/24/23 15:22:00.55
  STEP: watching for the Service to be deleted @ 08/24/23 15:22:00.571
  Aug 24 15:22:00.573: INFO: Observed event: ADDED
  Aug 24 15:22:00.574: INFO: Observed event: MODIFIED
  Aug 24 15:22:00.574: INFO: Observed event: MODIFIED
  Aug 24 15:22:00.574: INFO: Observed event: MODIFIED
  Aug 24 15:22:00.574: INFO: Found Service test-service-vc7jv in namespace services-1279 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Aug 24 15:22:00.574: INFO: Service test-service-vc7jv deleted
  Aug 24 15:22:00.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1279" for this suite. @ 08/24/23 15:22:00.587
• [0.177 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 08/24/23 15:22:00.602
  Aug 24 15:22:00.602: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:22:00.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:22:00.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:22:00.635
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/24/23 15:22:00.64
  E0824 15:22:00.882208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:01.882332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:02.883258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:03.883330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:22:04.672
  Aug 24 15:22:04.676: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-769ff51a-8189-4f80-a2a9-c184bf908312 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:22:04.691
  Aug 24 15:22:04.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4299" for this suite. @ 08/24/23 15:22:04.717
• [4.127 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 08/24/23 15:22:04.731
  Aug 24 15:22:04.731: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:22:04.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:22:04.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:22:04.765
  Aug 24 15:22:04.768: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:22:04.918448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:05.922220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:06.922543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0824 15:22:07.552417      14 warnings.go:70] unknown field "alpha"
  W0824 15:22:07.552469      14 warnings.go:70] unknown field "beta"
  W0824 15:22:07.552480      14 warnings.go:70] unknown field "delta"
  W0824 15:22:07.552489      14 warnings.go:70] unknown field "epsilon"
  W0824 15:22:07.552497      14 warnings.go:70] unknown field "gamma"
  E0824 15:22:07.923377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:22:08.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9997" for this suite. @ 08/24/23 15:22:08.131
• [3.414 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 08/24/23 15:22:08.15
  Aug 24 15:22:08.150: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 15:22:08.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:22:08.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:22:08.179
  STEP: Creating service test in namespace statefulset-6938 @ 08/24/23 15:22:08.184
  STEP: Creating a new StatefulSet @ 08/24/23 15:22:08.198
  Aug 24 15:22:08.219: INFO: Found 0 stateful pods, waiting for 3
  E0824 15:22:08.924107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:09.925286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:10.925455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:11.926323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:12.927347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:13.927488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:14.928630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:15.928630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:16.928904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:17.929819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:22:18.227: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 15:22:18.228: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 15:22:18.228: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/24/23 15:22:18.243
  Aug 24 15:22:18.271: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 08/24/23 15:22:18.271
  E0824 15:22:18.930708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:19.931584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:20.931644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:21.932044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:22.932635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:23.933135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:24.933749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:25.934098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:26.934941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:27.935190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 08/24/23 15:22:28.301
  STEP: Performing a canary update @ 08/24/23 15:22:28.301
  Aug 24 15:22:28.326: INFO: Updating stateful set ss2
  Aug 24 15:22:28.361: INFO: Waiting for Pod statefulset-6938/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0824 15:22:28.935532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:29.935636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:30.935793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:31.936447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:32.938992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:33.938690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:34.938972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:35.939273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:36.939481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:37.939705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 08/24/23 15:22:38.376
  Aug 24 15:22:38.510: INFO: Found 2 stateful pods, waiting for 3
  E0824 15:22:38.940075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:39.941923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:40.942253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:41.942124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:42.943203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:43.943262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:44.943427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:45.943884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:46.944163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:47.944269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:22:48.520: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 15:22:48.520: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 24 15:22:48.520: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 08/24/23 15:22:48.536
  Aug 24 15:22:48.566: INFO: Updating stateful set ss2
  Aug 24 15:22:48.648: INFO: Waiting for Pod statefulset-6938/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0824 15:22:48.944797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:49.944965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:50.945121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:51.946482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:52.946069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:53.946245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:54.946524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:55.946719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:56.946896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:57.947273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:22:58.696: INFO: Updating stateful set ss2
  Aug 24 15:22:58.725: INFO: Waiting for StatefulSet statefulset-6938/ss2 to complete update
  Aug 24 15:22:58.726: INFO: Waiting for Pod statefulset-6938/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0824 15:22:58.947862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:22:59.948919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:00.949992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:01.950018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:02.950149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:03.950131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:04.950897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:05.951243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:06.952062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:07.952246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:08.744: INFO: Deleting all statefulset in ns statefulset-6938
  Aug 24 15:23:08.752: INFO: Scaling statefulset ss2 to 0
  E0824 15:23:08.953093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:09.953802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:10.997941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:11.969184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:12.969363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:13.970092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:14.971343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:15.972029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:16.972302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:17.972643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:18.801: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 15:23:18.808: INFO: Deleting statefulset ss2
  Aug 24 15:23:18.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6938" for this suite. @ 08/24/23 15:23:18.849
• [70.709 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 08/24/23 15:23:18.866
  Aug 24 15:23:18.866: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 15:23:18.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:23:18.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:23:18.908
  STEP: creating pod @ 08/24/23 15:23:18.911
  E0824 15:23:18.973682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:19.973743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:20.967: INFO: Pod pod-hostip-9104bfbd-e162-41e0-9db1-aeb27ef1f360 has hostIP: 192.168.121.197
  Aug 24 15:23:20.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:23:20.975411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pods-8887" for this suite. @ 08/24/23 15:23:20.976
• [2.123 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 08/24/23 15:23:20.989
  Aug 24 15:23:20.989: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename dns @ 08/24/23 15:23:20.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:23:21.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:23:21.029
  STEP: Creating a test headless service @ 08/24/23 15:23:21.032
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8145.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8145.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 08/24/23 15:23:21.054
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8145.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8145.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 08/24/23 15:23:21.054
  STEP: creating a pod to probe DNS @ 08/24/23 15:23:21.054
  STEP: submitting the pod to kubernetes @ 08/24/23 15:23:21.054
  E0824 15:23:21.975734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:22.976301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:23.976868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:24.977348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 15:23:25.103
  STEP: looking for the results for each expected name from probers @ 08/24/23 15:23:25.109
  Aug 24 15:23:25.139: INFO: DNS probes using dns-8145/dns-test-19a021a7-9e67-4be2-a8ea-19a489f3c003 succeeded

  Aug 24 15:23:25.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:23:25.15
  STEP: deleting the test headless service @ 08/24/23 15:23:25.178
  STEP: Destroying namespace "dns-8145" for this suite. @ 08/24/23 15:23:25.225
• [4.249 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 08/24/23 15:23:25.239
  Aug 24 15:23:25.240: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replicaset @ 08/24/23 15:23:25.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:23:25.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:23:25.27
  STEP: Create a ReplicaSet @ 08/24/23 15:23:25.274
  STEP: Verify that the required pods have come up @ 08/24/23 15:23:25.286
  Aug 24 15:23:25.314: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0824 15:23:25.977807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:26.979065      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:27.978586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:28.979443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:29.979539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:30.327: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 08/24/23 15:23:30.327
  Aug 24 15:23:30.332: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 08/24/23 15:23:30.332
  STEP: DeleteCollection of the ReplicaSets @ 08/24/23 15:23:30.342
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 08/24/23 15:23:30.369
  Aug 24 15:23:30.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2217" for this suite. @ 08/24/23 15:23:30.448
• [5.290 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 08/24/23 15:23:30.544
  Aug 24 15:23:30.544: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:23:30.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:23:30.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:23:30.607
  STEP: Creating pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778 @ 08/24/23 15:23:30.611
  E0824 15:23:30.982184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:31.983966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:32.984797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:33.985295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 15:23:34.661
  Aug 24 15:23:34.668: INFO: Initial restart count of pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec is 0
  Aug 24 15:23:34.673: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:34.985284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:35.986904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:36.682: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:36.986713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:37.987166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:38.690: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:38.987276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:39.987521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:40.700: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:40.988416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:41.988715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:42.710: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:42.989527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:43.990293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:44.720: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:44.991014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:45.993150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:46.733: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:46.993499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:47.994595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:48.739: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:48.994823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:49.995506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:50.747: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:50.996630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:51.997034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:52.753: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:52.997321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:53.998453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:54.759: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:54.998549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:55.998794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:56.771: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:56.999004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:23:57.999154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:23:58.780: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:23:58.999992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:00.001061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:00.791: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:01.002333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:02.002138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:02.799: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:03.002479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:04.002918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:04.808: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:05.003559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:06.004236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:06.814: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:07.004984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:08.005158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:08.820: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:09.006088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:10.006220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:10.826: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:11.006977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:12.007653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:12.835: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:13.007740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:14.008455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:14.841: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:15.009171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:16.010136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:16.849: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:17.010872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:18.011895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:18.856: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:19.012776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:20.013934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:20.868: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  E0824 15:24:21.015789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:22.015642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:24:22.875: INFO: Get pod busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec in namespace container-probe-5778
  Aug 24 15:24:22.876: INFO: Restart count of pod container-probe-5778/busybox-29908ac4-93fb-4d85-af66-86ad80bcd3ec is now 1 (48.207684318s elapsed)
  Aug 24 15:24:22.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:24:22.883
  STEP: Destroying namespace "container-probe-5778" for this suite. @ 08/24/23 15:24:22.91
• [52.383 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 08/24/23 15:24:22.929
  Aug 24 15:24:22.929: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:24:22.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:22.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:22.971
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/24/23 15:24:22.974
  E0824 15:24:23.016556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:24.017186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:25.022038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:26.022371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:24:27.016
  Aug 24 15:24:27.021: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-10f8a213-0f5d-462e-92a3-645eec944c42 container test-container: <nil>
  E0824 15:24:27.022485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 08/24/23 15:24:27.049
  Aug 24 15:24:27.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3234" for this suite. @ 08/24/23 15:24:27.077
• [4.171 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 08/24/23 15:24:27.104
  Aug 24 15:24:27.104: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:24:27.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:24:27.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:24:27.184
  E0824 15:24:28.022717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:29.026072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:30.026235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:31.026580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:32.029832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:33.027276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:34.028299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:35.028818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:36.029359      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:37.029698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:38.029979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:39.030456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:40.030706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:41.031539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:42.031785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:43.032045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:44.032590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:45.033096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:46.032994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:47.033614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:48.034075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:49.034308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:50.034477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:51.034423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:52.038754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:53.035774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:54.036040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:55.036780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:56.037701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:57.037297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:58.037365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:24:59.037980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:00.038419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:01.038931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:02.039562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:03.040135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:04.040984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:05.041878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:06.042815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:07.043711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:08.044157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:09.044866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:10.044995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:11.046056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:12.046161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:13.047079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:14.047827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:15.047950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:16.048143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:17.048824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:18.049768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:19.050445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:20.050784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:21.050858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:22.051749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:23.052559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:24.053148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:25.053195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:26.054382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:27.054305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:25:27.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3060" for this suite. @ 08/24/23 15:25:27.221
• [60.134 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 08/24/23 15:25:27.241
  Aug 24 15:25:27.241: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename taint-multiple-pods @ 08/24/23 15:25:27.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:25:27.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:25:27.335
  Aug 24 15:25:27.343: INFO: Waiting up to 1m0s for all nodes to be ready
  E0824 15:25:28.054814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:29.055726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:30.056633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:31.056914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:32.059527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:33.059794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:34.059951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:35.060120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:36.060903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:37.061969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:38.065266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:39.066117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:40.066988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:41.068008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:42.068277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:43.068676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:44.069446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:45.069580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:46.069905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:47.070198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:48.070883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:49.071538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:50.072074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:51.073155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:52.074147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:53.074312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:54.075323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:55.076024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:56.076249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:57.076777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:58.076898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:25:59.077241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:00.078427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:01.078661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:02.078916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:03.079362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:04.079644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:05.079954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:06.080029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:07.081146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:08.081417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:09.081691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:10.081830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:11.082654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:12.082708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:13.084248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:14.085157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:15.085426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:16.085868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:17.087063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:18.087479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:19.087563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:20.088518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:21.089411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:22.090474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:23.090724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:24.090928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:25.091135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:26.091247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:27.091380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:26:27.387: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 15:26:27.395: INFO: Starting informer...
  STEP: Starting pods... @ 08/24/23 15:26:27.396
  Aug 24 15:26:27.648: INFO: Pod1 is running on dae4wichuiha-1. Tainting Node
  E0824 15:26:28.091672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:29.092294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:26:29.894: INFO: Pod2 is running on dae4wichuiha-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/24/23 15:26:29.894
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/24/23 15:26:29.919
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 08/24/23 15:26:29.931
  E0824 15:26:30.095340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:31.095911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:32.098487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:33.108077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:34.108988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:35.109114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:26:35.658: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0824 15:26:36.109491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:37.110142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:38.110837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:39.111205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:40.111396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:41.111664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:42.111867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:43.111993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:44.112493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:45.113005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:46.113186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:47.113371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:48.113882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:49.114552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:50.115031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:51.115001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:52.115046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:53.115695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:54.116618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:55.116925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:26:55.650: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Aug 24 15:26:55.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/24/23 15:26:55.693
  STEP: Destroying namespace "taint-multiple-pods-1342" for this suite. @ 08/24/23 15:26:55.703
• [88.476 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 08/24/23 15:26:55.72
  Aug 24 15:26:55.720: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:26:55.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:26:55.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:26:55.767
  STEP: creating the pod @ 08/24/23 15:26:55.771
  STEP: waiting for pod running @ 08/24/23 15:26:55.788
  E0824 15:26:56.118042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:26:57.118143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 08/24/23 15:26:57.807
  Aug 24 15:26:57.813: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2790 PodName:var-expansion-1262d3fc-023c-462a-b333-9681ea5c645b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:26:57.814: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:26:57.816: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:26:57.816: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-2790/pods/var-expansion-1262d3fc-023c-462a-b333-9681ea5c645b/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 08/24/23 15:26:57.926
  Aug 24 15:26:57.932: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2790 PodName:var-expansion-1262d3fc-023c-462a-b333-9681ea5c645b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:26:57.932: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:26:57.934: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:26:57.934: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-2790/pods/var-expansion-1262d3fc-023c-462a-b333-9681ea5c645b/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 08/24/23 15:26:58.086
  E0824 15:26:58.118260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:26:58.607: INFO: Successfully updated pod "var-expansion-1262d3fc-023c-462a-b333-9681ea5c645b"
  STEP: waiting for annotated pod running @ 08/24/23 15:26:58.607
  STEP: deleting the pod gracefully @ 08/24/23 15:26:58.614
  Aug 24 15:26:58.614: INFO: Deleting pod "var-expansion-1262d3fc-023c-462a-b333-9681ea5c645b" in namespace "var-expansion-2790"
  Aug 24 15:26:58.626: INFO: Wait up to 5m0s for pod "var-expansion-1262d3fc-023c-462a-b333-9681ea5c645b" to be fully deleted
  E0824 15:26:59.118706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:00.119152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:01.119447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:02.120387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:03.120337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:04.121475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:05.122179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:06.122585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:07.123286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:08.123759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:09.124371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:10.125822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:11.129997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:12.126118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:13.126522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:14.127384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:15.127774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:16.127912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:17.129090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:18.129788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:19.130064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:20.131394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:21.132024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:22.132208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:23.133539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:24.134358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:25.134910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:26.135223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:27.135435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:28.135475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:29.136364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:30.136667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:31.137387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:32.138193      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:27:32.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2790" for this suite. @ 08/24/23 15:27:32.851
• [37.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 08/24/23 15:27:32.885
  Aug 24 15:27:32.885: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 15:27:32.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:27:32.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:27:32.934
  Aug 24 15:27:32.938: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:27:33.138695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:34.139035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/24/23 15:27:35.066
  Aug 24 15:27:35.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-1270 --namespace=crd-publish-openapi-1270 create -f -'
  E0824 15:27:35.139330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:36.139690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:27:36.306: INFO: stderr: ""
  Aug 24 15:27:36.306: INFO: stdout: "e2e-test-crd-publish-openapi-7433-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Aug 24 15:27:36.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-1270 --namespace=crd-publish-openapi-1270 delete e2e-test-crd-publish-openapi-7433-crds test-cr'
  Aug 24 15:27:36.452: INFO: stderr: ""
  Aug 24 15:27:36.452: INFO: stdout: "e2e-test-crd-publish-openapi-7433-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Aug 24 15:27:36.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-1270 --namespace=crd-publish-openapi-1270 apply -f -'
  Aug 24 15:27:36.842: INFO: stderr: ""
  Aug 24 15:27:36.843: INFO: stdout: "e2e-test-crd-publish-openapi-7433-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Aug 24 15:27:36.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-1270 --namespace=crd-publish-openapi-1270 delete e2e-test-crd-publish-openapi-7433-crds test-cr'
  Aug 24 15:27:37.008: INFO: stderr: ""
  Aug 24 15:27:37.008: INFO: stdout: "e2e-test-crd-publish-openapi-7433-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 08/24/23 15:27:37.009
  Aug 24 15:27:37.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-1270 explain e2e-test-crd-publish-openapi-7433-crds'
  E0824 15:27:37.140700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:27:37.391: INFO: stderr: ""
  Aug 24 15:27:37.391: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7433-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0824 15:27:38.142728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:39.142154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:27:39.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1270" for this suite. @ 08/24/23 15:27:39.306
• [6.435 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 08/24/23 15:27:39.32
  Aug 24 15:27:39.320: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 15:27:39.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:27:39.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:27:39.357
  STEP: Creating service test in namespace statefulset-992 @ 08/24/23 15:27:39.36
  STEP: Looking for a node to schedule stateful set and pod @ 08/24/23 15:27:39.377
  STEP: Creating pod with conflicting port in namespace statefulset-992 @ 08/24/23 15:27:39.39
  STEP: Waiting until pod test-pod will start running in namespace statefulset-992 @ 08/24/23 15:27:39.434
  E0824 15:27:40.143152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:41.143461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-992 @ 08/24/23 15:27:41.459
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-992 @ 08/24/23 15:27:41.47
  Aug 24 15:27:41.492: INFO: Observed stateful pod in namespace: statefulset-992, name: ss-0, uid: 2df54413-9fa7-47a0-832d-daa52637321d, status phase: Pending. Waiting for statefulset controller to delete.
  Aug 24 15:27:41.526: INFO: Observed stateful pod in namespace: statefulset-992, name: ss-0, uid: 2df54413-9fa7-47a0-832d-daa52637321d, status phase: Failed. Waiting for statefulset controller to delete.
  Aug 24 15:27:41.552: INFO: Observed stateful pod in namespace: statefulset-992, name: ss-0, uid: 2df54413-9fa7-47a0-832d-daa52637321d, status phase: Failed. Waiting for statefulset controller to delete.
  Aug 24 15:27:41.552: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-992
  STEP: Removing pod with conflicting port in namespace statefulset-992 @ 08/24/23 15:27:41.553
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-992 and will be in running state @ 08/24/23 15:27:41.624
  E0824 15:27:42.144093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:43.144163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:44.145055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:45.149127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:27:45.679: INFO: Deleting all statefulset in ns statefulset-992
  Aug 24 15:27:45.683: INFO: Scaling statefulset ss to 0
  E0824 15:27:46.149769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:47.150406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:48.151045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:49.151142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:50.151350      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:51.151571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:52.151664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:53.152447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:54.153205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:55.154432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:27:55.757: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 15:27:55.763: INFO: Deleting statefulset ss
  Aug 24 15:27:55.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-992" for this suite. @ 08/24/23 15:27:55.799
• [16.491 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 08/24/23 15:27:55.818
  Aug 24 15:27:55.818: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:27:55.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:27:55.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:27:55.857
  E0824 15:27:56.155248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:57.155655      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:58.156955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:27:59.157520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:00.157598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:01.161797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:02.162268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:03.163146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:04.163567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:05.163223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:06.164569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:07.164492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:08.164943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:09.166069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:10.166294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:11.166930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:12.167478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:13.167697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:14.168636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:15.169090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:16.169861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:17.169760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:17.995: INFO: Container started at 2023-08-24 15:27:56 +0000 UTC, pod became ready at 2023-08-24 15:28:16 +0000 UTC
  Aug 24 15:28:17.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9251" for this suite. @ 08/24/23 15:28:18.01
• [22.206 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 08/24/23 15:28:18.028
  Aug 24 15:28:18.029: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:28:18.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:18.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:18.076
  STEP: creating a replication controller @ 08/24/23 15:28:18.083
  Aug 24 15:28:18.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 create -f -'
  E0824 15:28:18.170395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:18.625: INFO: stderr: ""
  Aug 24 15:28:18.625: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/24/23 15:28:18.626
  Aug 24 15:28:18.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 24 15:28:18.887: INFO: stderr: ""
  Aug 24 15:28:18.887: INFO: stdout: "update-demo-nautilus-jbns2 update-demo-nautilus-m9dpd "
  Aug 24 15:28:18.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 get pods update-demo-nautilus-jbns2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:28:19.044: INFO: stderr: ""
  Aug 24 15:28:19.044: INFO: stdout: ""
  Aug 24 15:28:19.044: INFO: update-demo-nautilus-jbns2 is created but not running
  E0824 15:28:19.170482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:20.172793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:21.173410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:22.173919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:23.174320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:24.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0824 15:28:24.175150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:24.206: INFO: stderr: ""
  Aug 24 15:28:24.206: INFO: stdout: "update-demo-nautilus-jbns2 update-demo-nautilus-m9dpd "
  Aug 24 15:28:24.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 get pods update-demo-nautilus-jbns2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:28:24.336: INFO: stderr: ""
  Aug 24 15:28:24.336: INFO: stdout: "true"
  Aug 24 15:28:24.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 get pods update-demo-nautilus-jbns2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 15:28:24.490: INFO: stderr: ""
  Aug 24 15:28:24.490: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 15:28:24.490: INFO: validating pod update-demo-nautilus-jbns2
  Aug 24 15:28:24.505: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 15:28:24.505: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 15:28:24.506: INFO: update-demo-nautilus-jbns2 is verified up and running
  Aug 24 15:28:24.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 get pods update-demo-nautilus-m9dpd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 24 15:28:24.644: INFO: stderr: ""
  Aug 24 15:28:24.644: INFO: stdout: "true"
  Aug 24 15:28:24.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 get pods update-demo-nautilus-m9dpd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 24 15:28:24.806: INFO: stderr: ""
  Aug 24 15:28:24.806: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 24 15:28:24.806: INFO: validating pod update-demo-nautilus-m9dpd
  Aug 24 15:28:24.818: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 24 15:28:24.818: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 24 15:28:24.818: INFO: update-demo-nautilus-m9dpd is verified up and running
  STEP: using delete to clean up resources @ 08/24/23 15:28:24.818
  Aug 24 15:28:24.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 delete --grace-period=0 --force -f -'
  Aug 24 15:28:24.984: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:28:24.984: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Aug 24 15:28:24.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 get rc,svc -l name=update-demo --no-headers'
  E0824 15:28:25.175925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:25.250: INFO: stderr: "No resources found in kubectl-8712 namespace.\n"
  Aug 24 15:28:25.250: INFO: stdout: ""
  Aug 24 15:28:25.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-8712 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 24 15:28:25.465: INFO: stderr: ""
  Aug 24 15:28:25.465: INFO: stdout: ""
  Aug 24 15:28:25.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8712" for this suite. @ 08/24/23 15:28:25.473
• [7.460 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 08/24/23 15:28:25.488
  Aug 24 15:28:25.489: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/24/23 15:28:25.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:25.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:25.528
  STEP: create the container to handle the HTTPGet hook request. @ 08/24/23 15:28:25.54
  E0824 15:28:26.175992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:27.176652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 08/24/23 15:28:27.609
  E0824 15:28:28.186422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:29.187430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 08/24/23 15:28:29.656
  STEP: delete the pod with lifecycle hook @ 08/24/23 15:28:29.698
  E0824 15:28:30.187663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:31.187840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:31.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4039" for this suite. @ 08/24/23 15:28:31.778
• [6.313 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 08/24/23 15:28:31.804
  Aug 24 15:28:31.804: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:28:31.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:31.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:31.863
  STEP: Creating a ResourceQuota @ 08/24/23 15:28:31.866
  STEP: Getting a ResourceQuota @ 08/24/23 15:28:31.883
  STEP: Listing all ResourceQuotas with LabelSelector @ 08/24/23 15:28:31.889
  STEP: Patching the ResourceQuota @ 08/24/23 15:28:31.899
  STEP: Deleting a Collection of ResourceQuotas @ 08/24/23 15:28:31.926
  STEP: Verifying the deleted ResourceQuota @ 08/24/23 15:28:31.951
  Aug 24 15:28:31.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7535" for this suite. @ 08/24/23 15:28:31.986
• [0.201 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 08/24/23 15:28:32.009
  Aug 24 15:28:32.010: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:28:32.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:32.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:32.061
  STEP: Creating a pod to test substitution in container's args @ 08/24/23 15:28:32.069
  E0824 15:28:32.192059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:33.192508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:34.192899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:35.193864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:28:36.115
  Aug 24 15:28:36.120: INFO: Trying to get logs from node dae4wichuiha-1 pod var-expansion-12806b08-abfb-4d2d-bcec-9ae164144e6c container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:28:36.158
  Aug 24 15:28:36.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:28:36.195468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-9843" for this suite. @ 08/24/23 15:28:36.199
• [4.208 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 08/24/23 15:28:36.218
  Aug 24 15:28:36.219: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:28:36.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:36.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:36.254
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:28:36.259
  E0824 15:28:37.195921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:38.196096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:39.196287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:40.197059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:28:40.301
  Aug 24 15:28:40.307: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-542df7c2-9ee9-42a6-959f-67d6ef6abd9a container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:28:40.318
  Aug 24 15:28:40.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3574" for this suite. @ 08/24/23 15:28:40.358
• [4.153 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 08/24/23 15:28:40.372
  Aug 24 15:28:40.372: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 15:28:40.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:40.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:40.416
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 08/24/23 15:28:40.42
  Aug 24 15:28:40.421: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:28:41.197078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:42.199201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:43.198327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:44.205135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:45.205132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:46.205744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:47.205884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 08/24/23 15:28:47.731
  Aug 24 15:28:47.733: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:28:48.206236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:49.208635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:49.606: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:28:50.209483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:51.210636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:52.211566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:53.211403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:54.212395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:55.213055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:56.213102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:28:57.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4476" for this suite. @ 08/24/23 15:28:57.089
• [16.727 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 08/24/23 15:28:57.101
  Aug 24 15:28:57.101: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:28:57.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:28:57.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:28:57.149
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:28:57.154
  E0824 15:28:57.218025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:58.218146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:28:59.219080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:00.219755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:29:01.193
  Aug 24 15:29:01.201: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-5c08e791-6371-4f75-a48b-f2cafa0f1138 container client-container: <nil>
  E0824 15:29:01.220109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 08/24/23 15:29:01.225
  Aug 24 15:29:01.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5176" for this suite. @ 08/24/23 15:29:01.255
• [4.170 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 08/24/23 15:29:01.274
  Aug 24 15:29:01.274: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 15:29:01.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:01.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:01.312
  STEP: Creating simple DaemonSet "daemon-set" @ 08/24/23 15:29:01.348
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 15:29:01.361
  Aug 24 15:29:01.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:29:01.377: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:29:02.221892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:02.534: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:29:02.535: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:29:03.222368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:03.393: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:29:03.393: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 08/24/23 15:29:03.399
  Aug 24 15:29:03.407: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 08/24/23 15:29:03.407
  Aug 24 15:29:03.424: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 08/24/23 15:29:03.425
  Aug 24 15:29:03.428: INFO: Observed &DaemonSet event: ADDED
  Aug 24 15:29:03.429: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:29:03.429: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:29:03.431: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:29:03.431: INFO: Found daemon set daemon-set in namespace daemonsets-4240 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 24 15:29:03.431: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 08/24/23 15:29:03.431
  STEP: watching for the daemon set status to be patched @ 08/24/23 15:29:03.446
  Aug 24 15:29:03.449: INFO: Observed &DaemonSet event: ADDED
  Aug 24 15:29:03.449: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:29:03.450: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:29:03.451: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:29:03.451: INFO: Observed daemon set daemon-set in namespace daemonsets-4240 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 24 15:29:03.453: INFO: Observed &DaemonSet event: MODIFIED
  Aug 24 15:29:03.456: INFO: Found daemon set daemon-set in namespace daemonsets-4240 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Aug 24 15:29:03.456: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 15:29:03.464
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4240, will wait for the garbage collector to delete the pods @ 08/24/23 15:29:03.464
  Aug 24 15:29:03.532: INFO: Deleting DaemonSet.extensions daemon-set took: 12.413137ms
  Aug 24 15:29:03.633: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.061466ms
  E0824 15:29:04.223087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:05.223463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:05.245: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:29:05.245: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 15:29:05.251: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32520"},"items":null}

  Aug 24 15:29:05.257: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32520"},"items":null}

  Aug 24 15:29:05.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4240" for this suite. @ 08/24/23 15:29:05.288
• [4.026 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 08/24/23 15:29:05.306
  Aug 24 15:29:05.307: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:29:05.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:05.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:05.349
  STEP: Creating a pod to test downward api env vars @ 08/24/23 15:29:05.354
  E0824 15:29:06.224357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:07.224783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:08.225155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:09.226135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:29:09.39
  Aug 24 15:29:09.395: INFO: Trying to get logs from node dae4wichuiha-1 pod downward-api-114fe7c7-0e9b-4118-915f-44f816a4c3f3 container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:29:09.408
  Aug 24 15:29:09.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4609" for this suite. @ 08/24/23 15:29:09.435
• [4.137 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 08/24/23 15:29:09.447
  Aug 24 15:29:09.447: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:29:09.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:09.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:09.487
  STEP: Creating configMap configmap-2955/configmap-test-a4a69bec-47a7-46d9-bfa3-3ae8ac489ce3 @ 08/24/23 15:29:09.491
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:29:09.499
  E0824 15:29:10.226389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:11.226496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:12.227125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:13.227679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:29:13.552
  Aug 24 15:29:13.557: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-configmaps-90aa3019-1229-4f9c-931b-73a151df2a62 container env-test: <nil>
  STEP: delete the pod @ 08/24/23 15:29:13.57
  Aug 24 15:29:13.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2955" for this suite. @ 08/24/23 15:29:13.604
• [4.171 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 08/24/23 15:29:13.619
  Aug 24 15:29:13.619: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 15:29:13.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:13.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:13.659
  STEP: creating a Pod with a static label @ 08/24/23 15:29:13.676
  STEP: watching for Pod to be ready @ 08/24/23 15:29:13.695
  Aug 24 15:29:13.700: INFO: observed Pod pod-test in namespace pods-9548 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Aug 24 15:29:13.707: INFO: observed Pod pod-test in namespace pods-9548 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:29:13 +0000 UTC  }]
  Aug 24 15:29:13.759: INFO: observed Pod pod-test in namespace pods-9548 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:29:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:29:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:29:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:29:13 +0000 UTC  }]
  E0824 15:29:14.227709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:15.200: INFO: Found Pod pod-test in namespace pods-9548 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:29:13 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:29:15 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:29:15 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-24 15:29:13 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 08/24/23 15:29:15.209
  STEP: getting the Pod and ensuring that it's patched @ 08/24/23 15:29:15.225
  E0824 15:29:15.228161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: replacing the Pod's status Ready condition to False @ 08/24/23 15:29:15.246
  STEP: check the Pod again to ensure its Ready conditions are False @ 08/24/23 15:29:15.266
  STEP: deleting the Pod via a Collection with a LabelSelector @ 08/24/23 15:29:15.266
  STEP: watching for the Pod to be deleted @ 08/24/23 15:29:15.286
  Aug 24 15:29:15.290: INFO: observed event type MODIFIED
  E0824 15:29:16.228701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:17.204: INFO: observed event type MODIFIED
  E0824 15:29:17.228607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:17.337: INFO: observed event type MODIFIED
  Aug 24 15:29:18.222: INFO: observed event type MODIFIED
  E0824 15:29:18.229449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:18.252: INFO: observed event type MODIFIED
  Aug 24 15:29:18.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9548" for this suite. @ 08/24/23 15:29:18.268
• [4.660 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 08/24/23 15:29:18.281
  Aug 24 15:29:18.281: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:29:18.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:18.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:18.312
  STEP: Creating a pod to test downward api env vars @ 08/24/23 15:29:18.356
  E0824 15:29:19.229590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:20.229693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:21.229993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:22.231083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:29:22.392
  Aug 24 15:29:22.397: INFO: Trying to get logs from node dae4wichuiha-1 pod downward-api-25327341-8c55-43ea-9d1c-0d8a5563be2a container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:29:22.411
  Aug 24 15:29:22.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9890" for this suite. @ 08/24/23 15:29:22.445
• [4.174 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 08/24/23 15:29:22.458
  Aug 24 15:29:22.458: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:29:22.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:22.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:22.505
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:29:22.514
  E0824 15:29:23.231093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:24.231784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:25.232501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:26.232634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:29:26.601
  Aug 24 15:29:26.605: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-eb631b37-089f-4e9d-afaa-c30f6be6b685 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:29:26.615
  Aug 24 15:29:26.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6055" for this suite. @ 08/24/23 15:29:26.643
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 08/24/23 15:29:26.658
  Aug 24 15:29:26.658: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-webhook @ 08/24/23 15:29:26.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:26.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:26.691
  STEP: Setting up server cert @ 08/24/23 15:29:26.695
  E0824 15:29:27.232955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/24/23 15:29:27.885
  STEP: Deploying the custom resource conversion webhook pod @ 08/24/23 15:29:27.903
  STEP: Wait for the deployment to be ready @ 08/24/23 15:29:27.939
  Aug 24 15:29:27.954: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0824 15:29:28.233175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:29.233145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:29:29.975
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:29:30.006
  E0824 15:29:30.233353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:31.016: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Aug 24 15:29:31.036: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:29:31.233987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:32.236752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:33.236969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 08/24/23 15:29:33.897
  STEP: v2 custom resource should be converted @ 08/24/23 15:29:33.91
  Aug 24 15:29:33.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:29:34.237363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-6259" for this suite. @ 08/24/23 15:29:34.602
• [7.977 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 08/24/23 15:29:34.647
  Aug 24 15:29:34.647: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 15:29:34.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:34.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:34.698
  STEP: creating service multi-endpoint-test in namespace services-3448 @ 08/24/23 15:29:34.702
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3448 to expose endpoints map[] @ 08/24/23 15:29:34.745
  Aug 24 15:29:34.784: INFO: successfully validated that service multi-endpoint-test in namespace services-3448 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3448 @ 08/24/23 15:29:34.785
  E0824 15:29:35.238150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:36.238878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3448 to expose endpoints map[pod1:[100]] @ 08/24/23 15:29:36.828
  Aug 24 15:29:36.851: INFO: successfully validated that service multi-endpoint-test in namespace services-3448 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-3448 @ 08/24/23 15:29:36.851
  E0824 15:29:37.239529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:38.239829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3448 to expose endpoints map[pod1:[100] pod2:[101]] @ 08/24/23 15:29:38.908
  Aug 24 15:29:38.930: INFO: successfully validated that service multi-endpoint-test in namespace services-3448 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 08/24/23 15:29:38.931
  Aug 24 15:29:38.931: INFO: Creating new exec pod
  E0824 15:29:39.240885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:40.241937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:41.242545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:41.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-3448 exec execpodcx97d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0824 15:29:42.243155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:42.360: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Aug 24 15:29:42.360: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:29:42.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-3448 exec execpodcx97d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.254 80'
  Aug 24 15:29:42.682: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.254 80\nConnection to 10.233.25.254 80 port [tcp/http] succeeded!\n"
  Aug 24 15:29:42.682: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:29:42.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-3448 exec execpodcx97d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Aug 24 15:29:43.021: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Aug 24 15:29:43.021: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:29:43.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-3448 exec execpodcx97d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.25.254 81'
  E0824 15:29:43.243977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:43.303: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.25.254 81\nConnection to 10.233.25.254 81 port [tcp/*] succeeded!\n"
  Aug 24 15:29:43.303: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3448 @ 08/24/23 15:29:43.303
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3448 to expose endpoints map[pod2:[101]] @ 08/24/23 15:29:43.342
  Aug 24 15:29:43.391: INFO: successfully validated that service multi-endpoint-test in namespace services-3448 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-3448 @ 08/24/23 15:29:43.391
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-3448 to expose endpoints map[] @ 08/24/23 15:29:43.416
  E0824 15:29:44.244089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:44.451: INFO: successfully validated that service multi-endpoint-test in namespace services-3448 exposes endpoints map[]
  Aug 24 15:29:44.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3448" for this suite. @ 08/24/23 15:29:44.497
• [9.862 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 08/24/23 15:29:44.515
  Aug 24 15:29:44.515: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename watch @ 08/24/23 15:29:44.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:44.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:44.558
  STEP: creating a watch on configmaps @ 08/24/23 15:29:44.565
  STEP: creating a new configmap @ 08/24/23 15:29:44.568
  STEP: modifying the configmap once @ 08/24/23 15:29:44.581
  STEP: closing the watch once it receives two notifications @ 08/24/23 15:29:44.614
  Aug 24 15:29:44.679: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-275  c4959c13-b7a7-4591-af54-9440dd9ab7cf 32980 0 2023-08-24 15:29:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-24 15:29:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:29:44.680: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-275  c4959c13-b7a7-4591-af54-9440dd9ab7cf 32981 0 2023-08-24 15:29:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-24 15:29:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 08/24/23 15:29:44.68
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 08/24/23 15:29:44.694
  STEP: deleting the configmap @ 08/24/23 15:29:44.696
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 08/24/23 15:29:44.706
  Aug 24 15:29:44.706: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-275  c4959c13-b7a7-4591-af54-9440dd9ab7cf 32982 0 2023-08-24 15:29:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-24 15:29:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:29:44.707: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-275  c4959c13-b7a7-4591-af54-9440dd9ab7cf 32983 0 2023-08-24 15:29:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-24 15:29:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 24 15:29:44.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-275" for this suite. @ 08/24/23 15:29:44.714
• [0.209 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 08/24/23 15:29:44.725
  Aug 24 15:29:44.725: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:29:44.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:44.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:44.765
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/24/23 15:29:44.772
  E0824 15:29:45.245016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:46.244694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:47.245859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:48.246208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:29:48.806
  Aug 24 15:29:48.812: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-9f2c8395-0cc3-4935-843f-1b493cb8d03b container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:29:48.824
  Aug 24 15:29:48.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5483" for this suite. @ 08/24/23 15:29:48.856
• [4.147 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 08/24/23 15:29:48.875
  Aug 24 15:29:48.875: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:29:48.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:48.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:48.917
  STEP: Creating secret with name secret-test-ff636e0b-91fd-4221-b541-680f9ee692c7 @ 08/24/23 15:29:48.921
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:29:48.93
  E0824 15:29:49.246441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:50.247187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:51.247916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:52.248529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:29:52.973
  Aug 24 15:29:52.978: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-secrets-a07860a5-3d4e-41b5-aa1e-2f01be5c24fa container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:29:52.989
  Aug 24 15:29:53.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3943" for this suite. @ 08/24/23 15:29:53.049
• [4.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 08/24/23 15:29:53.071
  Aug 24 15:29:53.071: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubelet-test @ 08/24/23 15:29:53.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:53.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:53.124
  E0824 15:29:53.249588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:54.252029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:29:55.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6430" for this suite. @ 08/24/23 15:29:55.209
• [2.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 08/24/23 15:29:55.236
  Aug 24 15:29:55.236: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:29:55.239
  E0824 15:29:55.254701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:29:55.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:29:55.279
  STEP: Counting existing ResourceQuota @ 08/24/23 15:29:55.286
  E0824 15:29:56.252672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:57.253039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:58.253557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:29:59.253920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:00.254063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/24/23 15:30:00.295
  STEP: Ensuring resource quota status is calculated @ 08/24/23 15:30:00.31
  E0824 15:30:01.254342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:02.254401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 08/24/23 15:30:02.318
  STEP: Ensuring ResourceQuota status captures the pod usage @ 08/24/23 15:30:02.343
  E0824 15:30:03.254857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:04.255100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 08/24/23 15:30:04.351
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 08/24/23 15:30:04.355
  STEP: Ensuring a pod cannot update its resource requirements @ 08/24/23 15:30:04.362
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 08/24/23 15:30:04.371
  E0824 15:30:05.255402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:06.255831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/24/23 15:30:06.379
  STEP: Ensuring resource quota status released the pod usage @ 08/24/23 15:30:06.398
  E0824 15:30:07.256015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:08.256163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:08.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1708" for this suite. @ 08/24/23 15:30:08.413
• [13.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 08/24/23 15:30:08.428
  Aug 24 15:30:08.428: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename gc @ 08/24/23 15:30:08.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:30:08.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:30:08.464
  STEP: create the rc @ 08/24/23 15:30:08.481
  W0824 15:30:08.490590      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0824 15:30:09.257039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:10.258213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:11.281590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:12.312380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:13.333970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:14.412283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 08/24/23 15:30:14.598
  STEP: wait for the rc to be deleted @ 08/24/23 15:30:15.039
  E0824 15:30:15.358240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:16.359: INFO: 83 pods remaining
  Aug 24 15:30:16.359: INFO: 80 pods has nil DeletionTimestamp
  Aug 24 15:30:16.360: INFO: 
  E0824 15:30:16.361049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:17.361154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:17.618: INFO: 68 pods remaining
  Aug 24 15:30:17.618: INFO: 61 pods has nil DeletionTimestamp
  Aug 24 15:30:17.621: INFO: 
  E0824 15:30:18.369096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:18.490: INFO: 61 pods remaining
  Aug 24 15:30:18.494: INFO: 50 pods has nil DeletionTimestamp
  Aug 24 15:30:18.500: INFO: 
  Aug 24 15:30:19.255: INFO: 51 pods remaining
  Aug 24 15:30:19.278: INFO: 39 pods has nil DeletionTimestamp
  Aug 24 15:30:19.278: INFO: 
  E0824 15:30:19.377447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:20.181: INFO: 43 pods remaining
  Aug 24 15:30:20.181: INFO: 29 pods has nil DeletionTimestamp
  Aug 24 15:30:20.181: INFO: 
  E0824 15:30:20.373767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:21.302: INFO: 36 pods remaining
  Aug 24 15:30:21.306: INFO: 12 pods has nil DeletionTimestamp
  Aug 24 15:30:21.306: INFO: 
  E0824 15:30:21.418514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:22.115: INFO: 28 pods remaining
  Aug 24 15:30:22.116: INFO: 2 pods has nil DeletionTimestamp
  Aug 24 15:30:22.116: INFO: 
  E0824 15:30:22.420213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:23.153: INFO: 19 pods remaining
  Aug 24 15:30:23.153: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 15:30:23.153: INFO: 
  E0824 15:30:23.420654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:24.080: INFO: 14 pods remaining
  Aug 24 15:30:24.081: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 15:30:24.081: INFO: 
  E0824 15:30:24.435950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:25.100: INFO: 7 pods remaining
  Aug 24 15:30:25.100: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 15:30:25.101: INFO: 
  E0824 15:30:25.438481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:26.071: INFO: 3 pods remaining
  Aug 24 15:30:26.072: INFO: 0 pods has nil DeletionTimestamp
  Aug 24 15:30:26.072: INFO: 
  E0824 15:30:26.498195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/24/23 15:30:27.07
  E0824 15:30:27.498853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:27.564: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 15:30:27.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8725" for this suite. @ 08/24/23 15:30:27.629
• [19.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 08/24/23 15:30:27.671
  Aug 24 15:30:27.671: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename cronjob @ 08/24/23 15:30:27.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:30:27.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:30:29.043
  E0824 15:30:29.292333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a cronjob @ 08/24/23 15:30:29.294
  STEP: creating @ 08/24/23 15:30:29.294
  STEP: getting @ 08/24/23 15:30:29.693
  STEP: listing @ 08/24/23 15:30:29.719
  STEP: watching @ 08/24/23 15:30:30.012
  Aug 24 15:30:30.018: INFO: starting watch
  STEP: cluster-wide listing @ 08/24/23 15:30:30.042
  E0824 15:30:30.097945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: cluster-wide watching @ 08/24/23 15:30:30.125
  Aug 24 15:30:30.351: INFO: starting watch
  STEP: patching @ 08/24/23 15:30:30.942
  STEP: updating @ 08/24/23 15:30:31.054
  E0824 15:30:31.098410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:30:31.105: INFO: waiting for watch events with expected annotations
  Aug 24 15:30:31.105: INFO: saw patched and updated annotations
  STEP: patching /status @ 08/24/23 15:30:31.106
  STEP: updating /status @ 08/24/23 15:30:31.192
  STEP: get /status @ 08/24/23 15:30:31.252
  STEP: deleting @ 08/24/23 15:30:31.711
  STEP: deleting a collection @ 08/24/23 15:30:31.888
  Aug 24 15:30:31.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4125" for this suite. @ 08/24/23 15:30:32.884
  E0824 15:30:33.160139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:33.395934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.725 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 08/24/23 15:30:33.396
  Aug 24 15:30:33.396: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename cronjob @ 08/24/23 15:30:34.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:30:34.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:30:34.432
  E0824 15:30:34.598829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplaceConcurrent cronjob @ 08/24/23 15:30:35.106
  E0824 15:30:35.831471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring a job is scheduled @ 08/24/23 15:30:35.883
  E0824 15:30:36.855066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:37.832575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:38.834326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:39.940197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:40.961176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:41.988776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:43.311540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:44.397480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:45.399946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:46.485068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:47.559140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:48.561998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:49.562495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:50.562616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:51.569873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:52.571276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:53.719163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:54.720220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:55.720367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:56.720514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:57.721829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:58.721805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:30:59.726859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:00.726213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:01.727627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 08/24/23 15:31:01.899
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/24/23 15:31:01.907
  STEP: Ensuring the job is replaced with a new one @ 08/24/23 15:31:01.914
  E0824 15:31:02.727714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:03.727945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:04.730166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:05.732329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:06.731215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:07.731817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:08.732489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:09.733175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:10.733507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:11.733863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:12.736031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:13.735346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:14.735429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:15.735606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:16.735880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:17.736974      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:18.737155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:19.737226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:20.737703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:21.737867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:22.739109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:23.739272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:24.739817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:25.740601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:26.740847      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:27.741559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:28.741734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:29.741847      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:30.741996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:31.743454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:32.743734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:33.743984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:34.744115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:35.744475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:36.745297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:37.746063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:38.746313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:39.747407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:40.747917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:41.748068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:42.748220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:43.749586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:44.749885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:45.750070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:46.750689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:47.751458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:48.751739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:49.751615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:50.752264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:51.752469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:52.753305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:53.753716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:54.754007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:55.754420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:56.754596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:57.755431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:58.755875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:31:59.758011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:00.758146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:01.758475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 08/24/23 15:32:01.926
  Aug 24 15:32:01.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-449" for this suite. @ 08/24/23 15:32:01.952
• [88.574 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 08/24/23 15:32:01.972
  Aug 24 15:32:01.972: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubelet-test @ 08/24/23 15:32:01.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:32:02.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:32:02.023
  STEP: Waiting for pod completion @ 08/24/23 15:32:02.047
  E0824 15:32:02.758896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:03.760039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:04.760769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:05.761482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:06.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2806" for this suite. @ 08/24/23 15:32:06.122
• [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 08/24/23 15:32:06.136
  Aug 24 15:32:06.136: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename daemonsets @ 08/24/23 15:32:06.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:32:06.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:32:06.169
  STEP: Creating simple DaemonSet "daemon-set" @ 08/24/23 15:32:06.206
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 15:32:06.222
  Aug 24 15:32:06.268: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:32:06.268: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:32:06.762803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:07.290: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:32:07.290: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:32:07.763541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:08.285: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:32:08.286: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:32:08.764385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:09.286: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:32:09.286: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 08/24/23 15:32:09.293
  Aug 24 15:32:09.324: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 15:32:09.324: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:32:09.765209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:10.341: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 15:32:10.341: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:32:10.765680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:11.354: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 15:32:11.354: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:32:11.765908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:12.341: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 24 15:32:12.341: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:32:12.766241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:13.342: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 24 15:32:13.342: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/24/23 15:32:13.348
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4562, will wait for the garbage collector to delete the pods @ 08/24/23 15:32:13.349
  Aug 24 15:32:13.418: INFO: Deleting DaemonSet.extensions daemon-set took: 13.344869ms
  Aug 24 15:32:13.519: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.850534ms
  E0824 15:32:13.768230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:14.625: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 24 15:32:14.626: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 24 15:32:14.630: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34626"},"items":null}

  Aug 24 15:32:14.637: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34626"},"items":null}

  Aug 24 15:32:14.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4562" for this suite. @ 08/24/23 15:32:14.665
• [8.538 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 08/24/23 15:32:14.677
  Aug 24 15:32:14.677: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:32:14.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:32:14.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:32:14.719
  STEP: Creating a pod to test emptydir volume type on node default medium @ 08/24/23 15:32:14.723
  E0824 15:32:14.769578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:15.770293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:16.770888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:17.772422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:32:18.761
  Aug 24 15:32:18.766: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-7ded4ea8-6aa2-4817-aa51-6359d0daf2d0 container test-container: <nil>
  E0824 15:32:18.772473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 08/24/23 15:32:18.778
  Aug 24 15:32:18.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-45" for this suite. @ 08/24/23 15:32:18.805
• [4.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 08/24/23 15:32:18.828
  Aug 24 15:32:18.828: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename watch @ 08/24/23 15:32:18.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:32:18.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:32:18.867
  STEP: getting a starting resourceVersion @ 08/24/23 15:32:18.871
  STEP: starting a background goroutine to produce watch events @ 08/24/23 15:32:18.877
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 08/24/23 15:32:18.877
  E0824 15:32:19.773128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:20.773985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:21.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8262" for this suite. @ 08/24/23 15:32:21.694
• [2.919 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 08/24/23 15:32:21.759
  Aug 24 15:32:21.759: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:32:21.761
  E0824 15:32:21.775928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:32:21.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:32:21.798
  E0824 15:32:22.776108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:23.777194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 08/24/23 15:32:23.84
  Aug 24 15:32:23.841: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5851 pod-service-account-45c0bb00-fa2f-4034-a09d-f4de58e23eaa -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 08/24/23 15:32:24.298
  Aug 24 15:32:24.299: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5851 pod-service-account-45c0bb00-fa2f-4034-a09d-f4de58e23eaa -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 08/24/23 15:32:24.557
  Aug 24 15:32:24.557: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5851 pod-service-account-45c0bb00-fa2f-4034-a09d-f4de58e23eaa -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  E0824 15:32:24.777309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:24.834: INFO: Got root ca configmap in namespace "svcaccounts-5851"
  Aug 24 15:32:24.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5851" for this suite. @ 08/24/23 15:32:24.846
• [3.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 08/24/23 15:32:24.864
  Aug 24 15:32:24.864: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:32:24.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:32:24.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:32:24.905
  Aug 24 15:32:24.910: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:32:25.777917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:26.779187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0824 15:32:27.700846      14 warnings.go:70] unknown field "alpha"
  W0824 15:32:27.700897      14 warnings.go:70] unknown field "beta"
  W0824 15:32:27.700909      14 warnings.go:70] unknown field "delta"
  W0824 15:32:27.700919      14 warnings.go:70] unknown field "epsilon"
  W0824 15:32:27.700929      14 warnings.go:70] unknown field "gamma"
  E0824 15:32:27.779644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:32:28.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8915" for this suite. @ 08/24/23 15:32:28.283
• [3.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 08/24/23 15:32:28.306
  Aug 24 15:32:28.306: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:32:28.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:32:28.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:32:28.341
  STEP: Creating configMap with name configmap-test-volume-8864721f-3da1-47da-944f-f10defb8bb84 @ 08/24/23 15:32:28.345
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:32:28.354
  E0824 15:32:28.779729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:29.780596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:30.780785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:31.781706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:32:32.402
  Aug 24 15:32:32.413: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-configmaps-fbbc0c52-8110-4cd0-be3c-0b0275828f21 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:32:32.427
  Aug 24 15:32:32.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-963" for this suite. @ 08/24/23 15:32:32.497
• [4.205 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 08/24/23 15:32:32.513
  Aug 24 15:32:32.513: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename cronjob @ 08/24/23 15:32:32.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:32:32.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:32:32.569
  STEP: Creating a cronjob @ 08/24/23 15:32:32.588
  STEP: Ensuring more than one job is running at a time @ 08/24/23 15:32:32.602
  E0824 15:32:32.782082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:33.782561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:34.782759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:35.783219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:36.784221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:37.785246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:38.785860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:39.785793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:40.786244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:41.786921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:42.786971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:43.787564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:44.789027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:45.788936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:46.790032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:47.791744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:48.792009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:49.792562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:50.793340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:51.793983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:52.794783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:53.795545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:54.795930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:55.795865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:56.796168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:57.796197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:58.797083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:32:59.797255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:00.798561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:01.798049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:02.798527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:03.798823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:04.799543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:05.799977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:06.800668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:07.801500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:08.802630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:09.804469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:10.804918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:11.804800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:12.805514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:13.806125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:14.806098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:15.805915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:16.806598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:17.807387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:18.807594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:19.807900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:20.808347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:21.808629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:22.808939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:23.808992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:24.809720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:25.809996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:26.810376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:27.811522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:28.811434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:29.812495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:30.813042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:31.813946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:32.813936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:33.814127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:34.814257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:35.814828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:36.815325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:37.815521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:38.816678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:39.817472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:40.818947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:41.819390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:42.819580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:43.819943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:44.820915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:45.821056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:46.821690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:47.821875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:48.822481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:49.823499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:50.824380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:51.824576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:52.824769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:53.824922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:54.825228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:55.825487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:56.826399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:57.826637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:58.826983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:33:59.827346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 08/24/23 15:34:00.61
  STEP: Removing cronjob @ 08/24/23 15:34:00.62
  Aug 24 15:34:00.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4542" for this suite. @ 08/24/23 15:34:00.665
• [88.180 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 08/24/23 15:34:00.696
  Aug 24 15:34:00.696: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:34:00.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:34:00.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:34:00.817
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:34:00.822
  E0824 15:34:00.827504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:01.827630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:02.828710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:03.828627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:04.829134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:34:04.88
  Aug 24 15:34:04.886: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-f7bffd0d-8429-452a-857b-4ef50b9fbcb5 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:34:04.921
  Aug 24 15:34:04.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1463" for this suite. @ 08/24/23 15:34:04.967
• [4.309 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 08/24/23 15:34:05.006
  Aug 24 15:34:05.006: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-runtime @ 08/24/23 15:34:05.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:34:05.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:34:05.052
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 08/24/23 15:34:05.081
  E0824 15:34:05.830754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:06.830525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:07.830647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:08.831326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:09.831783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:10.832017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:11.832510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:12.833107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:13.833258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:14.834338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:15.834719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:16.835872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:17.836344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:18.836953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:19.836896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:20.839616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:21.838764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:22.839638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:23.847370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:24.848360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 08/24/23 15:34:25.359
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 08/24/23 15:34:25.365
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 08/24/23 15:34:25.374
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 08/24/23 15:34:25.375
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 08/24/23 15:34:25.418
  E0824 15:34:25.848559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:26.849527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:27.849432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 08/24/23 15:34:28.476
  E0824 15:34:28.850501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 08/24/23 15:34:29.5
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 08/24/23 15:34:29.516
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 08/24/23 15:34:29.516
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 08/24/23 15:34:29.56
  E0824 15:34:29.850777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 08/24/23 15:34:30.578
  E0824 15:34:30.851433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:31.852444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 08/24/23 15:34:32.599
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 08/24/23 15:34:32.61
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 08/24/23 15:34:32.61
  Aug 24 15:34:32.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-274" for this suite. @ 08/24/23 15:34:32.67
• [27.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 08/24/23 15:34:32.694
  Aug 24 15:34:32.694: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename disruption @ 08/24/23 15:34:32.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:34:32.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:34:32.751
  STEP: creating the pdb @ 08/24/23 15:34:32.756
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:34:32.771
  STEP: updating the pdb @ 08/24/23 15:34:32.823
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:34:32.839
  STEP: patching the pdb @ 08/24/23 15:34:32.851
  E0824 15:34:32.852813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 08/24/23 15:34:32.878
  STEP: Waiting for the pdb to be deleted @ 08/24/23 15:34:32.915
  Aug 24 15:34:32.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6498" for this suite. @ 08/24/23 15:34:32.925
• [0.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 08/24/23 15:34:32.941
  Aug 24 15:34:32.941: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:34:32.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:34:33.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:34:33.01
  STEP: Setting up server cert @ 08/24/23 15:34:33.094
  E0824 15:34:33.853449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:34:34.193
  STEP: Deploying the webhook pod @ 08/24/23 15:34:34.207
  STEP: Wait for the deployment to be ready @ 08/24/23 15:34:34.233
  Aug 24 15:34:34.260: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:34:34.854855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:35.854785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:36.288: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 15, 34, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 34, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 34, 34, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 34, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:34:36.855715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:37.856003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:34:38.297
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:34:38.342
  E0824 15:34:38.856949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:39.343: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 08/24/23 15:34:39.358
  STEP: Creating a custom resource definition that should be denied by the webhook @ 08/24/23 15:34:39.39
  Aug 24 15:34:39.390: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:34:39.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1380" for this suite. @ 08/24/23 15:34:39.538
  STEP: Destroying namespace "webhook-markers-5924" for this suite. @ 08/24/23 15:34:39.562
• [6.631 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 08/24/23 15:34:39.577
  Aug 24 15:34:39.577: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:34:39.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:34:39.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:34:39.614
  STEP: Creating configMap with name projected-configmap-test-volume-5790b880-8e4a-47b9-b38c-73d2187c3444 @ 08/24/23 15:34:39.618
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:34:39.641
  E0824 15:34:39.857911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:40.858599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:41.859398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:42.859593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:34:43.681
  Aug 24 15:34:43.686: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-configmaps-5dbeb3b8-1517-4ad6-a671-78da2feeeffd container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:34:43.698
  Aug 24 15:34:43.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3058" for this suite. @ 08/24/23 15:34:43.736
• [4.176 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 08/24/23 15:34:43.754
  Aug 24 15:34:43.754: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 15:34:43.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:34:43.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:34:43.8
  STEP: creating service nodeport-test with type=NodePort in namespace services-954 @ 08/24/23 15:34:43.804
  STEP: creating replication controller nodeport-test in namespace services-954 @ 08/24/23 15:34:43.846
  E0824 15:34:43.867536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:34:43.872653      14 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-954, replica count: 2
  E0824 15:34:44.868668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:45.869607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:46.869961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:34:46.938138      14 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 15:34:46.938: INFO: Creating new exec pod
  E0824 15:34:47.870806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:48.873725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:49.873963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:50.004: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-954 exec execpod89xs7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Aug 24 15:34:50.347: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Aug 24 15:34:50.347: INFO: stdout: ""
  E0824 15:34:50.874208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:51.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-954 exec execpod89xs7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Aug 24 15:34:51.637: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Aug 24 15:34:51.637: INFO: stdout: ""
  E0824 15:34:51.874352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:52.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-954 exec execpod89xs7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Aug 24 15:34:52.591: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Aug 24 15:34:52.591: INFO: stdout: ""
  E0824 15:34:52.874933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:53.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-954 exec execpod89xs7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Aug 24 15:34:53.598: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Aug 24 15:34:53.598: INFO: stdout: "nodeport-test-57xkc"
  Aug 24 15:34:53.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-954 exec execpod89xs7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.12.253 80'
  Aug 24 15:34:53.848: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.12.253 80\nConnection to 10.233.12.253 80 port [tcp/http] succeeded!\n"
  Aug 24 15:34:53.849: INFO: stdout: "nodeport-test-kf5kf"
  Aug 24 15:34:53.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-954 exec execpod89xs7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.197 31182'
  E0824 15:34:53.875029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:54.100: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.197 31182\nConnection to 192.168.121.197 31182 port [tcp/*] succeeded!\n"
  Aug 24 15:34:54.100: INFO: stdout: "nodeport-test-kf5kf"
  Aug 24 15:34:54.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-954 exec execpod89xs7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.163 31182'
  Aug 24 15:34:54.331: INFO: stderr: "+ nc -v -t -w 2 192.168.121.163 31182\n+ echo hostName\nConnection to 192.168.121.163 31182 port [tcp/*] succeeded!\n"
  Aug 24 15:34:54.331: INFO: stdout: ""
  E0824 15:34:54.875943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:34:55.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-954 exec execpod89xs7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.163 31182'
  Aug 24 15:34:55.614: INFO: stderr: "+ nc -v -t -w 2 192.168.121.163 31182\n+ echoConnection to 192.168.121.163 31182 port [tcp/*] succeeded!\n hostName\n"
  Aug 24 15:34:55.614: INFO: stdout: "nodeport-test-kf5kf"
  Aug 24 15:34:55.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-954" for this suite. @ 08/24/23 15:34:55.622
• [11.886 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 08/24/23 15:34:55.673
  Aug 24 15:34:55.674: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:34:55.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:34:55.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:34:55.716
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:34:55.724
  E0824 15:34:55.876615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:56.877204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:57.878107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:34:58.878028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:34:59.788
  Aug 24 15:34:59.796: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-0f36f6cf-3c78-40ad-9d98-88f8c99f62a7 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:34:59.808
  Aug 24 15:34:59.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3746" for this suite. @ 08/24/23 15:34:59.845
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 08/24/23 15:34:59.867
  Aug 24 15:34:59.867: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:34:59.87
  E0824 15:34:59.878708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:34:59.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:34:59.908
  STEP: Creating configMap with name projected-configmap-test-volume-fc5e4786-4c5d-4db9-8a30-406a66aeea4d @ 08/24/23 15:34:59.914
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:34:59.922
  E0824 15:35:00.881263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:01.880820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:02.885554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:03.885990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:35:03.973
  Aug 24 15:35:03.980: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-configmaps-70f7758d-7755-48c0-9e63-339b6c1eff0e container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:35:03.993
  Aug 24 15:35:04.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4178" for this suite. @ 08/24/23 15:35:04.039
• [4.193 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 08/24/23 15:35:04.062
  Aug 24 15:35:04.063: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:35:04.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:35:04.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:35:04.16
  STEP: Setting up server cert @ 08/24/23 15:35:04.212
  E0824 15:35:04.886232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:05.887006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:35:05.939
  STEP: Deploying the webhook pod @ 08/24/23 15:35:05.955
  STEP: Wait for the deployment to be ready @ 08/24/23 15:35:05.978
  Aug 24 15:35:05.997: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:35:06.887675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:07.887591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:08.020: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 15, 35, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 35, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 35, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 35, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:35:08.888016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:09.888302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:35:10.029
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:35:10.048
  E0824 15:35:10.888431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:11.049: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/24/23 15:35:11.062
  STEP: create a pod that should be denied by the webhook @ 08/24/23 15:35:11.096
  STEP: create a pod that causes the webhook to hang @ 08/24/23 15:35:11.124
  E0824 15:35:11.889505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:12.890145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:13.890572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:14.890938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:15.891358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:16.891837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:17.892399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:18.892581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:19.893422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:20.893703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 08/24/23 15:35:21.138
  STEP: create a configmap that should be admitted by the webhook @ 08/24/23 15:35:21.164
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/24/23 15:35:21.183
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/24/23 15:35:21.2
  STEP: create a namespace that bypass the webhook @ 08/24/23 15:35:21.21
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 08/24/23 15:35:21.24
  Aug 24 15:35:21.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-663" for this suite. @ 08/24/23 15:35:21.417
  STEP: Destroying namespace "webhook-markers-591" for this suite. @ 08/24/23 15:35:21.449
  STEP: Destroying namespace "exempted-namespace-8395" for this suite. @ 08/24/23 15:35:21.467
• [17.419 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 08/24/23 15:35:21.484
  Aug 24 15:35:21.484: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:35:21.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:35:21.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:35:21.545
  STEP: Creating pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793 @ 08/24/23 15:35:21.551
  E0824 15:35:21.894281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:22.895001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 15:35:23.581
  Aug 24 15:35:23.588: INFO: Initial restart count of pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 is 0
  Aug 24 15:35:23.599: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:23.895242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:24.896062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:25.608: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:25.931893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:26.933280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:27.614: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:27.936795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:28.934057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:29.634: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:29.935281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:30.935232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:31.655: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:31.936238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:32.936440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:33.663: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:33.936681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:34.936676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:35.672: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:35.936991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:36.936951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:37.680: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:37.938050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:38.938379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:39.688: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:39.939177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:40.939518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:41.698: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:41.940753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:42.941494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:43.703: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:43.942246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:44.942336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:45.712: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:45.943991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:46.943481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:47.720: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:47.943673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:48.944021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:49.727: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:49.944011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:50.945025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:51.736: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:51.945177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:52.945312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:53.743: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:53.946022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:54.947019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:55.749: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:55.947871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:56.948210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:57.756: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:57.948425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:35:58.949281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:35:59.765: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:35:59.949877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:00.950857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:01.774: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:01.951277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:02.951292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:03.783: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:03.952226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:04.952258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:05.791: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:05.953217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:06.953333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:07.800: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:07.953743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:08.954702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:09.809: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:09.955407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:10.955609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:11.819: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:11.956570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:12.957038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:13.825: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:13.958590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:14.958166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:15.833: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:15.959311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:16.959377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:17.846: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:17.960012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:18.960330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:19.853: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:19.961377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:20.961803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:21.860: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:21.962311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:22.962423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:23.868: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:23.963549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:24.963855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:25.875: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:25.963811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:26.964007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:27.882: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:27.964936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:28.965246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:29.889: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:29.966352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:30.967258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:31.898: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:31.968037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:32.970239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:33.906: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:33.970697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:34.971467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:35.913: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:35.972991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:36.973215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:37.920: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:37.973770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:38.974930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:39.927: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:39.974930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:40.975597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:41.937: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:41.975956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:42.976829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:43.943: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:43.977009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:44.977441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:45.951: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:45.979151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:46.978416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:47.958: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:47.979464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:48.980233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:49.970: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:49.981243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:50.981767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:51.980: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:51.982354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:52.982704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:53.982759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:53.988: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:54.983210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:55.983294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:55.997: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:56.983561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:57.984393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:36:58.007: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:36:58.985422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:36:59.986343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:00.014: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:00.987714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:01.987089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:02.025: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:02.987181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:03.989016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:04.033: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:04.988968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:05.989184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:06.045: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:06.990943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:07.989829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:08.055: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:08.990687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:09.991400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:10.064: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:10.992105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:11.991774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:12.075: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:12.992215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:13.992666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:14.082: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:14.993121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:15.993496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:16.089: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:16.994028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:17.994764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:18.102: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:18.995389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:19.995881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:20.109: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:20.996343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:21.996726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:22.118: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:22.997042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:23.997608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:24.126: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:24.998396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:26.001912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:26.146: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:27.002192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:28.003658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:28.153: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:29.003097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:30.003572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:30.160: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:31.005725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:32.013806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:32.175: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:33.006375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:34.010043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:34.183: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:35.010995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:36.011292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:36.194: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:37.011674      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:38.012081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:38.203: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:39.012237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:40.012394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:40.210: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:41.012783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:42.014265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:42.216: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:43.016991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:44.017238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:44.225: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:45.022443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:46.022636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:46.235: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:47.023320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:48.023318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:48.242: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:49.023392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:50.023501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:50.250: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:51.024437      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:52.024852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:52.258: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:53.025939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:54.026420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:54.270: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:55.026204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:56.026925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:56.277: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:57.027320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:37:58.027873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:37:58.286: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:37:59.028901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:00.029209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:00.292: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:01.030183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:02.031029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:02.301: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:03.031183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:04.031963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:04.308: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:05.032205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:06.032466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:06.316: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:07.038623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:08.039038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:08.327: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:09.040469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:10.040562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:10.336: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:11.040874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:12.041551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:12.348: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:13.042160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:14.043260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:14.355: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:15.043462      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:16.044317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:16.363: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:17.044982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:18.046241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:18.373: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:19.046363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:20.046929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:20.381: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:21.047133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:22.047543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:22.391: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:23.048463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:24.049150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:24.399: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:25.050059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:26.050496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:26.408: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:27.050886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:28.053035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:28.418: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:29.052315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:30.052603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:30.428: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:31.053167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:32.055377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:32.444: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:33.062231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:34.056809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:34.452: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:35.057496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:36.058208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:36.460: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:37.058433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:38.058663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:38.467: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:39.059630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:40.060575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:40.473: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:41.061537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:42.061846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:42.484: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:43.062605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:44.063173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:44.491: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:45.064168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:46.064299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:46.500: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:47.064475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:48.064609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:48.507: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:49.065173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:50.065862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:50.513: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:51.066791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:52.068854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:52.520: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:53.068936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:54.070030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:54.552: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:55.070372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:56.070830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:56.559: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:57.070848      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:38:58.071263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:38:58.568: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:38:59.071310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:00.072064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:00.577: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:01.073170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:02.075358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:02.588: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:03.074990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:04.075785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:04.595: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:05.076636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:06.077457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:06.605: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:07.077772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:08.078007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:08.611: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:09.078895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:10.079601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:10.620: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:11.079933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:12.080243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:12.631: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:13.080816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:14.081327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:14.641: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:15.081423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:16.081751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:16.648: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:17.081549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:18.081974      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:18.657: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:19.082788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:20.082751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:20.664: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:21.083343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:22.083843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:22.672: INFO: Get pod busybox-2ae7d376-248c-4caf-9504-90937078d9a8 in namespace container-probe-5793
  E0824 15:39:23.083602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:24.084496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:24.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:39:24.686
  STEP: Destroying namespace "container-probe-5793" for this suite. @ 08/24/23 15:39:24.73
• [243.275 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 08/24/23 15:39:24.762
  Aug 24 15:39:24.762: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 15:39:24.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:24.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:24.824
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5732 @ 08/24/23 15:39:24.828
  STEP: changing the ExternalName service to type=ClusterIP @ 08/24/23 15:39:24.847
  STEP: creating replication controller externalname-service in namespace services-5732 @ 08/24/23 15:39:24.882
  I0824 15:39:24.898306      14 runners.go:197] Created replication controller with name: externalname-service, namespace: services-5732, replica count: 2
  E0824 15:39:25.084999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:26.085226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:27.085990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:39:27.955755      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 15:39:27.956: INFO: Creating new exec pod
  E0824 15:39:28.086114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:29.086800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:30.089791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:30.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-5732 exec execpodmppwk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0824 15:39:31.088423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:31.397: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 24 15:39:31.397: INFO: stdout: "externalname-service-dvln8"
  Aug 24 15:39:31.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-5732 exec execpodmppwk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.248 80'
  Aug 24 15:39:31.719: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.49.248 80\nConnection to 10.233.49.248 80 port [tcp/http] succeeded!\n"
  Aug 24 15:39:31.719: INFO: stdout: ""
  E0824 15:39:32.093278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:32.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-5732 exec execpodmppwk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.248 80'
  E0824 15:39:33.094488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:33.237: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.49.248 80\nConnection to 10.233.49.248 80 port [tcp/http] succeeded!\n"
  Aug 24 15:39:33.237: INFO: stdout: "externalname-service-dvln8"
  Aug 24 15:39:33.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:39:33.255: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-5732" for this suite. @ 08/24/23 15:39:33.294
• [8.559 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 08/24/23 15:39:33.321
  Aug 24 15:39:33.321: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sched-pred @ 08/24/23 15:39:33.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:33.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:33.377
  Aug 24 15:39:33.387: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 24 15:39:33.405: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 15:39:33.412: INFO: 
  Logging pods the apiserver thinks is on node dae4wichuiha-1 before test
  Aug 24 15:39:33.436: INFO: cilium-mdfhj from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.436: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 15:39:33.437: INFO: cilium-node-init-7k8b9 from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.437: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 15:39:33.438: INFO: kube-addon-manager-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.438: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Aug 24 15:39:33.439: INFO: kube-apiserver-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.439: INFO: 	Container kube-apiserver ready: true, restart count 0
  Aug 24 15:39:33.440: INFO: kube-controller-manager-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.440: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Aug 24 15:39:33.440: INFO: kube-proxy-n7wmg from kube-system started at 2023-08-24 13:13:26 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.441: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 15:39:33.441: INFO: kube-scheduler-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.441: INFO: 	Container kube-scheduler ready: true, restart count 0
  Aug 24 15:39:33.442: INFO: execpodmppwk from services-5732 started at 2023-08-24 15:39:27 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.442: INFO: 	Container agnhost-container ready: true, restart count 0
  Aug 24 15:39:33.442: INFO: externalname-service-mqfq9 from services-5732 started at 2023-08-24 15:39:24 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.443: INFO: 	Container externalname-service ready: true, restart count 0
  Aug 24 15:39:33.443: INFO: sonobuoy from sonobuoy started at 2023-08-24 14:08:32 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.443: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 24 15:39:33.444: INFO: sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-psrg2 from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 15:39:33.444: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:39:33.444: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 15:39:33.445: INFO: 
  Logging pods the apiserver thinks is on node dae4wichuiha-2 before test
  Aug 24 15:39:33.464: INFO: cilium-5xp7q from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.464: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 15:39:33.464: INFO: cilium-node-init-qdzkp from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.464: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 15:39:33.464: INFO: cilium-operator-7d96878f5-7qj9z from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.464: INFO: 	Container cilium-operator ready: true, restart count 0
  Aug 24 15:39:33.464: INFO: coredns-5dd5756b68-94t7j from kube-system started at 2023-08-24 15:26:30 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.464: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 15:39:33.464: INFO: coredns-5dd5756b68-prz6s from kube-system started at 2023-08-24 13:14:24 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.464: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 15:39:33.464: INFO: kube-addon-manager-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.464: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Aug 24 15:39:33.464: INFO: kube-apiserver-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.464: INFO: 	Container kube-apiserver ready: true, restart count 0
  Aug 24 15:39:33.464: INFO: kube-controller-manager-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.464: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Aug 24 15:39:33.464: INFO: kube-proxy-8brvc from kube-system started at 2023-08-24 13:13:27 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.464: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 15:39:33.465: INFO: kube-scheduler-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.465: INFO: 	Container kube-scheduler ready: true, restart count 0
  Aug 24 15:39:33.465: INFO: externalname-service-dvln8 from services-5732 started at 2023-08-24 15:39:24 +0000 UTC (1 container statuses recorded)
  Aug 24 15:39:33.465: INFO: 	Container externalname-service ready: true, restart count 0
  Aug 24 15:39:33.465: INFO: sonobuoy-e2e-job-da352b1d444c47a1 from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 15:39:33.465: INFO: 	Container e2e ready: true, restart count 0
  Aug 24 15:39:33.465: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:39:33.465: INFO: sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-jwqcj from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 15:39:33.465: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:39:33.465: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/24/23 15:39:33.465
  E0824 15:39:34.094868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:35.095098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/24/23 15:39:35.51
  STEP: Trying to apply a random label on the found node. @ 08/24/23 15:39:35.53
  STEP: verifying the node has the label kubernetes.io/e2e-b8569a0f-dfee-4d14-a680-7b67024f4d68 42 @ 08/24/23 15:39:35.557
  STEP: Trying to relaunch the pod, now with labels. @ 08/24/23 15:39:35.565
  E0824 15:39:36.095344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:37.095961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-b8569a0f-dfee-4d14-a680-7b67024f4d68 off the node dae4wichuiha-1 @ 08/24/23 15:39:37.605
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-b8569a0f-dfee-4d14-a680-7b67024f4d68 @ 08/24/23 15:39:37.637
  Aug 24 15:39:37.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-490" for this suite. @ 08/24/23 15:39:37.66
• [4.355 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 08/24/23 15:39:37.683
  Aug 24 15:39:37.683: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:39:37.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:37.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:37.738
  STEP: Creating secret with name secret-test-c496743f-de2d-4504-964e-d881d74850dc @ 08/24/23 15:39:37.799
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:39:37.813
  E0824 15:39:38.096993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:39.097512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:40.102185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:41.102893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:39:41.876
  Aug 24 15:39:41.885: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-secrets-0d761cfc-a8b7-4cec-9294-abaf9866ffae container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:39:41.917
  Aug 24 15:39:41.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9270" for this suite. @ 08/24/23 15:39:41.949
  STEP: Destroying namespace "secret-namespace-4592" for this suite. @ 08/24/23 15:39:41.961
• [4.293 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 08/24/23 15:39:41.979
  Aug 24 15:39:41.979: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:39:41.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:42.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:42.049
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/24/23 15:39:42.056
  E0824 15:39:42.103086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:43.105454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:44.105139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:45.105146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:46.105870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:39:46.117
  Aug 24 15:39:46.125: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-897b6868-9496-415a-8ac8-f1c7f698d33d container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:39:46.138
  Aug 24 15:39:46.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1368" for this suite. @ 08/24/23 15:39:46.183
• [4.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 08/24/23 15:39:46.203
  Aug 24 15:39:46.203: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 15:39:46.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:46.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:46.243
  STEP: Given a ReplicationController is created @ 08/24/23 15:39:46.248
  STEP: When the matched label of one of its pods change @ 08/24/23 15:39:46.259
  Aug 24 15:39:46.268: INFO: Pod name pod-release: Found 0 pods out of 1
  E0824 15:39:47.106178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:48.106571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:49.107279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:50.107439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:51.107656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:51.280: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/24/23 15:39:51.307
  Aug 24 15:39:51.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1640" for this suite. @ 08/24/23 15:39:51.385
• [5.204 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 08/24/23 15:39:51.412
  Aug 24 15:39:51.412: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:39:51.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:51.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:51.473
  Aug 24 15:39:51.490: INFO: Got root ca configmap in namespace "svcaccounts-6714"
  Aug 24 15:39:51.504: INFO: Deleted root ca configmap in namespace "svcaccounts-6714"
  STEP: waiting for a new root ca configmap created @ 08/24/23 15:39:52.005
  Aug 24 15:39:52.013: INFO: Recreated root ca configmap in namespace "svcaccounts-6714"
  Aug 24 15:39:52.025: INFO: Updated root ca configmap in namespace "svcaccounts-6714"
  E0824 15:39:52.109141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 08/24/23 15:39:52.527
  Aug 24 15:39:52.535: INFO: Reconciled root ca configmap in namespace "svcaccounts-6714"
  Aug 24 15:39:52.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6714" for this suite. @ 08/24/23 15:39:52.545
• [1.149 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 08/24/23 15:39:52.562
  Aug 24 15:39:52.562: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename job @ 08/24/23 15:39:52.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:39:52.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:39:52.602
  STEP: Creating a job @ 08/24/23 15:39:52.61
  STEP: Ensuring active pods == parallelism @ 08/24/23 15:39:52.626
  E0824 15:39:53.108977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:54.109469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:55.110118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:56.110283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 08/24/23 15:39:56.64
  E0824 15:39:57.116040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:39:57.185: INFO: Successfully updated pod "adopt-release-h4fj2"
  STEP: Checking that the Job readopts the Pod @ 08/24/23 15:39:57.185
  E0824 15:39:58.116500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:39:59.117588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 08/24/23 15:39:59.197
  Aug 24 15:39:59.720: INFO: Successfully updated pod "adopt-release-h4fj2"
  STEP: Checking that the Job releases the Pod @ 08/24/23 15:39:59.721
  E0824 15:40:00.118009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:01.118702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:01.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7512" for this suite. @ 08/24/23 15:40:01.772
• [9.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 08/24/23 15:40:01.791
  Aug 24 15:40:01.791: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename init-container @ 08/24/23 15:40:01.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:01.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:01.849
  STEP: creating the pod @ 08/24/23 15:40:01.855
  Aug 24 15:40:01.856: INFO: PodSpec: initContainers in spec.initContainers
  E0824 15:40:02.119503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:03.120640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:04.121229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:05.122214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:06.122310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:06.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2890" for this suite. @ 08/24/23 15:40:06.905
• [5.127 seconds]
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 08/24/23 15:40:06.92
  Aug 24 15:40:06.921: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename replication-controller @ 08/24/23 15:40:06.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:06.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:06.969
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 08/24/23 15:40:06.976
  E0824 15:40:07.123442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:08.123473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 08/24/23 15:40:09.041
  STEP: Then the orphan pod is adopted @ 08/24/23 15:40:09.054
  E0824 15:40:09.123825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:10.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4703" for this suite. @ 08/24/23 15:40:10.082
• [3.176 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 08/24/23 15:40:10.096
  Aug 24 15:40:10.096: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 15:40:10.102
  E0824 15:40:10.126219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:10.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:10.149
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-128 @ 08/24/23 15:40:10.154
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/24/23 15:40:10.189
  STEP: creating service externalsvc in namespace services-128 @ 08/24/23 15:40:10.192
  STEP: creating replication controller externalsvc in namespace services-128 @ 08/24/23 15:40:10.219
  I0824 15:40:10.231488      14 runners.go:197] Created replication controller with name: externalsvc, namespace: services-128, replica count: 2
  E0824 15:40:11.129537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:12.348098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:13.302397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:40:13.327351      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 08/24/23 15:40:13.334
  Aug 24 15:40:13.364: INFO: Creating new exec pod
  E0824 15:40:14.302207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:15.304554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:15.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-128 exec execpodclpgk -- /bin/sh -x -c nslookup nodeport-service.services-128.svc.cluster.local'
  Aug 24 15:40:16.008: INFO: stderr: "+ nslookup nodeport-service.services-128.svc.cluster.local\n"
  Aug 24 15:40:16.008: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-128.svc.cluster.local\tcanonical name = externalsvc.services-128.svc.cluster.local.\nName:\texternalsvc.services-128.svc.cluster.local\nAddress: 10.233.17.111\n\n"
  Aug 24 15:40:16.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-128, will wait for the garbage collector to delete the pods @ 08/24/23 15:40:16.017
  Aug 24 15:40:16.094: INFO: Deleting ReplicationController externalsvc took: 18.972686ms
  Aug 24 15:40:16.196: INFO: Terminating ReplicationController externalsvc pods took: 101.743139ms
  E0824 15:40:16.304320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:17.305200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:18.306438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:19.306588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:19.322: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-128" for this suite. @ 08/24/23 15:40:19.366
• [9.290 seconds]
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 08/24/23 15:40:19.387
  Aug 24 15:40:19.387: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename deployment @ 08/24/23 15:40:19.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:19.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:19.43
  Aug 24 15:40:19.457: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0824 15:40:20.309869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:21.308690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:22.308825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:23.309279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:24.310168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:24.466: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/24/23 15:40:24.467
  Aug 24 15:40:24.467: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0824 15:40:25.310259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:26.310833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:26.478: INFO: Creating deployment "test-rollover-deployment"
  Aug 24 15:40:26.498: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0824 15:40:27.310555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:28.310817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:28.513: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Aug 24 15:40:28.529: INFO: Ensure that both replica sets have 1 created replica
  Aug 24 15:40:28.540: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Aug 24 15:40:28.562: INFO: Updating deployment test-rollover-deployment
  Aug 24 15:40:28.563: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0824 15:40:29.312786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:30.312386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:30.583: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Aug 24 15:40:30.605: INFO: Make sure deployment "test-rollover-deployment" is complete
  Aug 24 15:40:30.623: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:40:30.623: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 28, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:40:31.312882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:32.314112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:32.638: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:40:32.639: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:40:33.314178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:34.314843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:34.640: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:40:34.640: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:40:35.316363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:36.316599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:36.652: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:40:36.652: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:40:37.316716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:38.317672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:38.637: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:40:38.637: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:40:39.317907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:40.318884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:40.639: INFO: all replica sets need to contain the pod-template-hash label
  Aug 24 15:40:40.639: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 40, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:40:41.318948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:42.319566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:42.642: INFO: 
  Aug 24 15:40:42.642: INFO: Ensure that both old replica sets have no replicas
  Aug 24 15:40:42.666: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-241",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9ff6554-7e6d-42d1-9c86-f44401cd1950",
      ResourceVersion: (string) (len=5) "37078",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 15:40:42.690: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-241",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a88425f6-6305-458d-ab67-e24f8f209fe4",
      ResourceVersion: (string) (len=5) "37067",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488428,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d9ff6554-7e6d-42d1-9c86-f44401cd1950",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 39 66 66 36 35  35 34 2d 37 65 36 64 2d  |\"d9ff6554-7e6d-|
              00000120  34 32 64 31 2d 39 63 38  36 2d 66 34 34 34 30 31  |42d1-9c86-f44401|
              00000130  63 64 31 39 35 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cd1950\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:40:42.697: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Aug 24 15:40:42.698: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-241",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8e67fef-b39d-4bd0-946f-ca48c720d35b",
      ResourceVersion: (string) (len=5) "37076",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d9ff6554-7e6d-42d1-9c86-f44401cd1950",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  64 39 66 66 36 35 35 34  2d 37 65 36 64 2d 34 32  |d9ff6554-7e6d-42|
              000000c0  64 31 2d 39 63 38 36 2d  66 34 34 34 30 31 63 64  |d1-9c86-f44401cd|
              000000d0  31 39 35 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |1950\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:40:42.705: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-241",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30c52822-efff-423e-b8a1-2fd03574bc5d",
      ResourceVersion: (string) (len=5) "37009",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d9ff6554-7e6d-42d1-9c86-f44401cd1950",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 39 66 66 36 35  35 34 2d 37 65 36 64 2d  |\"d9ff6554-7e6d-|
              00000120  34 32 64 31 2d 39 63 38  36 2d 66 34 34 34 30 31  |42d1-9c86-f44401|
              00000130  63 64 31 39 35 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cd1950\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:40:42.726: INFO: Pod "test-rollover-deployment-5d484bf7f9-ct47d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-ct47d",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=14) "deployment-241",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70ea8104-9312-4997-9bf3-48e72d6f7269",
      ResourceVersion: (string) (len=5) "37031",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488428,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "a88425f6-6305-458d-ab67-e24f8f209fe4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 38  38 34 32 35 66 36 2d 36  |d\":\"a88425f6-6|
              00000090  33 30 35 2d 34 35 38 64  2d 61 62 36 37 2d 65 32  |305-458d-ab67-e2|
              000000a0  34 66 38 66 32 30 39 66  65 34 5c 22 7d 22 3a 7b  |4f8f209fe4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 32 32 31 5c 22 7d  |10.233.64.221\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bjcvm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bjcvm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.221",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.221"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488428,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828488429,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=64) "077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7",
          ContainerID: (string) (len=72) "cri-o://4ba5f487e4067e32a11b1e0f6486a5b2fc626fc8cc0976d3d8a7802801707f73",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:40:42.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-241" for this suite. @ 08/24/23 15:40:42.757
• [23.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 08/24/23 15:40:42.804
  Aug 24 15:40:42.804: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 15:40:42.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:42.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:42.847
  Aug 24 15:40:42.852: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: creating the pod @ 08/24/23 15:40:42.854
  STEP: submitting the pod to kubernetes @ 08/24/23 15:40:42.854
  E0824 15:40:43.320057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:44.320024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:45.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5801" for this suite. @ 08/24/23 15:40:45.057
• [2.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 08/24/23 15:40:45.082
  Aug 24 15:40:45.082: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sched-pred @ 08/24/23 15:40:45.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:45.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:45.124
  Aug 24 15:40:45.134: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 24 15:40:45.160: INFO: Waiting for terminating namespaces to be deleted...
  Aug 24 15:40:45.167: INFO: 
  Logging pods the apiserver thinks is on node dae4wichuiha-1 before test
  Aug 24 15:40:45.186: INFO: test-rollover-deployment-5d484bf7f9-ct47d from deployment-241 started at 2023-08-24 15:40:28 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.186: INFO: 	Container agnhost ready: true, restart count 0
  Aug 24 15:40:45.186: INFO: cilium-mdfhj from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.186: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 15:40:45.186: INFO: cilium-node-init-7k8b9 from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.187: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 15:40:45.187: INFO: kube-addon-manager-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.187: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Aug 24 15:40:45.187: INFO: kube-apiserver-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.187: INFO: 	Container kube-apiserver ready: true, restart count 0
  Aug 24 15:40:45.187: INFO: kube-controller-manager-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.187: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Aug 24 15:40:45.187: INFO: kube-proxy-n7wmg from kube-system started at 2023-08-24 13:13:26 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.187: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 15:40:45.187: INFO: kube-scheduler-dae4wichuiha-1 from kube-system started at 2023-08-24 12:57:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.187: INFO: 	Container kube-scheduler ready: true, restart count 0
  Aug 24 15:40:45.188: INFO: pod-exec-websocket-da4d28a5-4884-4735-98e1-25da54dfdbd0 from pods-5801 started at 2023-08-24 15:40:42 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.188: INFO: 	Container main ready: true, restart count 0
  Aug 24 15:40:45.188: INFO: sonobuoy from sonobuoy started at 2023-08-24 14:08:32 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.188: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 24 15:40:45.188: INFO: sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-psrg2 from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 15:40:45.189: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:40:45.189: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 24 15:40:45.189: INFO: 
  Logging pods the apiserver thinks is on node dae4wichuiha-2 before test
  Aug 24 15:40:45.210: INFO: cilium-5xp7q from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.211: INFO: 	Container cilium-agent ready: true, restart count 0
  Aug 24 15:40:45.211: INFO: cilium-node-init-qdzkp from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.211: INFO: 	Container node-init ready: true, restart count 0
  Aug 24 15:40:45.211: INFO: cilium-operator-7d96878f5-7qj9z from kube-system started at 2023-08-24 13:13:29 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.212: INFO: 	Container cilium-operator ready: true, restart count 0
  Aug 24 15:40:45.212: INFO: coredns-5dd5756b68-94t7j from kube-system started at 2023-08-24 15:26:30 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.212: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 15:40:45.212: INFO: coredns-5dd5756b68-prz6s from kube-system started at 2023-08-24 13:14:24 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.212: INFO: 	Container coredns ready: true, restart count 0
  Aug 24 15:40:45.213: INFO: kube-addon-manager-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.213: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Aug 24 15:40:45.213: INFO: kube-apiserver-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.213: INFO: 	Container kube-apiserver ready: true, restart count 0
  Aug 24 15:40:45.214: INFO: kube-controller-manager-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.214: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Aug 24 15:40:45.214: INFO: kube-proxy-8brvc from kube-system started at 2023-08-24 13:13:27 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.214: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 24 15:40:45.214: INFO: kube-scheduler-dae4wichuiha-2 from kube-system started at 2023-08-24 13:02:04 +0000 UTC (1 container statuses recorded)
  Aug 24 15:40:45.215: INFO: 	Container kube-scheduler ready: true, restart count 0
  Aug 24 15:40:45.215: INFO: sonobuoy-e2e-job-da352b1d444c47a1 from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 15:40:45.215: INFO: 	Container e2e ready: true, restart count 0
  Aug 24 15:40:45.215: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:40:45.215: INFO: sonobuoy-systemd-logs-daemon-set-e9e5780613eb45d7-jwqcj from sonobuoy started at 2023-08-24 14:08:44 +0000 UTC (2 container statuses recorded)
  Aug 24 15:40:45.216: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 24 15:40:45.216: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 08/24/23 15:40:45.216
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.177e5bfb67220184], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling..] @ 08/24/23 15:40:45.277
  E0824 15:40:45.320172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:40:46.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3841" for this suite. @ 08/24/23 15:40:46.279
• [1.215 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 08/24/23 15:40:46.298
  Aug 24 15:40:46.298: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:40:46.301
  E0824 15:40:46.321360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:46.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:46.338
  STEP: creating a ServiceAccount @ 08/24/23 15:40:46.345
  STEP: watching for the ServiceAccount to be added @ 08/24/23 15:40:46.361
  STEP: patching the ServiceAccount @ 08/24/23 15:40:46.367
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 08/24/23 15:40:46.378
  STEP: deleting the ServiceAccount @ 08/24/23 15:40:46.388
  Aug 24 15:40:46.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3781" for this suite. @ 08/24/23 15:40:46.422
• [0.139 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 08/24/23 15:40:46.438
  Aug 24 15:40:46.438: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename server-version @ 08/24/23 15:40:46.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:46.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:46.503
  STEP: Request ServerVersion @ 08/24/23 15:40:46.508
  STEP: Confirm major version @ 08/24/23 15:40:46.511
  Aug 24 15:40:46.511: INFO: Major version: 1
  STEP: Confirm minor version @ 08/24/23 15:40:46.512
  Aug 24 15:40:46.512: INFO: cleanMinorVersion: 28
  Aug 24 15:40:46.513: INFO: Minor version: 28
  Aug 24 15:40:46.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5891" for this suite. @ 08/24/23 15:40:46.57
• [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 08/24/23 15:40:46.599
  Aug 24 15:40:46.599: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:40:46.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:46.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:46.637
  STEP: Creating secret with name secret-test-a7fc9d19-723d-4628-a8cb-88ee09747dcb @ 08/24/23 15:40:46.642
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:40:46.65
  E0824 15:40:47.321483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:48.322317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:49.323289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:50.324458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:40:50.705
  Aug 24 15:40:50.715: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-secrets-5c6e0fe7-ebfa-40a1-88f9-dfd872c84410 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:40:50.73
  Aug 24 15:40:50.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7360" for this suite. @ 08/24/23 15:40:50.769
• [4.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 08/24/23 15:40:50.796
  Aug 24 15:40:50.796: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename job @ 08/24/23 15:40:50.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:40:50.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:40:50.843
  STEP: Creating a job @ 08/24/23 15:40:50.853
  STEP: Ensuring job reaches completions @ 08/24/23 15:40:50.863
  E0824 15:40:51.324914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:52.325215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:53.326219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:54.326968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:55.327534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:56.327893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:57.329133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:58.328893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:40:59.329497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:00.329945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:01.331321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:02.331532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:02.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4379" for this suite. @ 08/24/23 15:41:02.879
• [12.095 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 08/24/23 15:41:02.894
  Aug 24 15:41:02.894: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename dns @ 08/24/23 15:41:02.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:02.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:02.938
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 08/24/23 15:41:02.945
  Aug 24 15:41:02.966: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9289  4ece0ef6-1a00-490b-8c30-64d1051b2a37 37343 0 2023-08-24 15:41:02 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-08-24 15:41:02 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dww6f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dww6f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0824 15:41:03.331719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:04.332730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 08/24/23 15:41:04.989
  Aug 24 15:41:04.989: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9289 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:41:04.990: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:41:04.994: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:41:04.995: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-9289/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 08/24/23 15:41:05.186
  Aug 24 15:41:05.186: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9289 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:41:05.186: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:41:05.188: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:41:05.188: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-9289/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0824 15:41:05.333259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:05.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:41:05.403: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-9289" for this suite. @ 08/24/23 15:41:05.433
• [2.557 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 08/24/23 15:41:05.452
  Aug 24 15:41:05.452: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename proxy @ 08/24/23 15:41:05.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:05.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:05.495
  Aug 24 15:41:05.500: INFO: Creating pod...
  E0824 15:41:06.333691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:07.334667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:07.566: INFO: Creating service...
  Aug 24 15:41:07.598: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/pods/agnhost/proxy/some/path/with/DELETE
  Aug 24 15:41:07.617: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 24 15:41:07.617: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/pods/agnhost/proxy/some/path/with/GET
  Aug 24 15:41:07.623: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Aug 24 15:41:07.623: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/pods/agnhost/proxy/some/path/with/HEAD
  Aug 24 15:41:07.629: INFO: http.Client request:HEAD | StatusCode:200
  Aug 24 15:41:07.629: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/pods/agnhost/proxy/some/path/with/OPTIONS
  Aug 24 15:41:07.636: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 24 15:41:07.637: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/pods/agnhost/proxy/some/path/with/PATCH
  Aug 24 15:41:07.644: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 24 15:41:07.644: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/pods/agnhost/proxy/some/path/with/POST
  Aug 24 15:41:07.653: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 24 15:41:07.653: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/pods/agnhost/proxy/some/path/with/PUT
  Aug 24 15:41:07.660: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 24 15:41:07.661: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/services/test-service/proxy/some/path/with/DELETE
  Aug 24 15:41:07.673: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 24 15:41:07.673: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/services/test-service/proxy/some/path/with/GET
  Aug 24 15:41:07.687: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Aug 24 15:41:07.687: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/services/test-service/proxy/some/path/with/HEAD
  Aug 24 15:41:07.696: INFO: http.Client request:HEAD | StatusCode:200
  Aug 24 15:41:07.696: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/services/test-service/proxy/some/path/with/OPTIONS
  Aug 24 15:41:07.709: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 24 15:41:07.709: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/services/test-service/proxy/some/path/with/PATCH
  Aug 24 15:41:07.717: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 24 15:41:07.717: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/services/test-service/proxy/some/path/with/POST
  Aug 24 15:41:07.726: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 24 15:41:07.726: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6282/services/test-service/proxy/some/path/with/PUT
  Aug 24 15:41:07.734: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 24 15:41:07.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6282" for this suite. @ 08/24/23 15:41:07.742
• [2.302 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 08/24/23 15:41:07.758
  Aug 24 15:41:07.759: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/24/23 15:41:07.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:07.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:07.799
  STEP: create the container to handle the HTTPGet hook request. @ 08/24/23 15:41:07.811
  E0824 15:41:08.336231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:09.335283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 08/24/23 15:41:09.853
  E0824 15:41:10.335620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:11.336041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 08/24/23 15:41:11.892
  E0824 15:41:12.336796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:13.340502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 08/24/23 15:41:13.933
  Aug 24 15:41:14.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6933" for this suite. @ 08/24/23 15:41:14.04
• [6.307 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 08/24/23 15:41:14.068
  Aug 24 15:41:14.068: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename subpath @ 08/24/23 15:41:14.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:14.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:14.129
  STEP: Setting up data @ 08/24/23 15:41:14.137
  STEP: Creating pod pod-subpath-test-secret-brbs @ 08/24/23 15:41:14.159
  STEP: Creating a pod to test atomic-volume-subpath @ 08/24/23 15:41:14.16
  E0824 15:41:14.341329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:15.341598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:16.342567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:17.342533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:18.343377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:19.344285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:20.344952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:21.345077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:22.346551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:23.347044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:24.347964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:25.348289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:26.348479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:27.348759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:28.348880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:29.349124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:30.349093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:31.349480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:32.350901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:33.350339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:34.350935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:35.351999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:36.352784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:37.353401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:41:38.31
  Aug 24 15:41:38.317: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-subpath-test-secret-brbs container test-container-subpath-secret-brbs: <nil>
  STEP: delete the pod @ 08/24/23 15:41:38.333
  E0824 15:41:38.354545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pod pod-subpath-test-secret-brbs @ 08/24/23 15:41:38.38
  Aug 24 15:41:38.380: INFO: Deleting pod "pod-subpath-test-secret-brbs" in namespace "subpath-4522"
  Aug 24 15:41:38.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4522" for this suite. @ 08/24/23 15:41:38.402
• [24.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 08/24/23 15:41:38.428
  Aug 24 15:41:38.428: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename hostport @ 08/24/23 15:41:38.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:38.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:38.498
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 08/24/23 15:41:38.525
  E0824 15:41:39.355741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:40.357104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.163 on the node which pod1 resides and expect scheduled @ 08/24/23 15:41:40.592
  E0824 15:41:41.358642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:42.359002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.163 but use UDP protocol on the node which pod2 resides @ 08/24/23 15:41:42.642
  E0824 15:41:43.364310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:44.364897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:45.365186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:46.365724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 08/24/23 15:41:46.738
  Aug 24 15:41:46.738: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.163 http://127.0.0.1:54323/hostname] Namespace:hostport-4861 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:41:46.739: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:41:46.741: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:41:46.741: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-4861/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.163+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.163, port: 54323 @ 08/24/23 15:41:46.906
  Aug 24 15:41:46.906: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.163:54323/hostname] Namespace:hostport-4861 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:41:46.906: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:41:46.908: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:41:46.908: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-4861/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.163%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.163, port: 54323 UDP @ 08/24/23 15:41:47.023
  Aug 24 15:41:47.024: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.163 54323] Namespace:hostport-4861 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:41:47.024: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:41:47.026: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:41:47.026: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-4861/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.163+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0824 15:41:47.365932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:48.366430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:49.367672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:50.368104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:51.368414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:52.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4861" for this suite. @ 08/24/23 15:41:52.207
• [13.792 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 08/24/23 15:41:52.232
  Aug 24 15:41:52.232: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename var-expansion @ 08/24/23 15:41:52.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:52.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:52.284
  STEP: Creating a pod to test substitution in container's command @ 08/24/23 15:41:52.289
  E0824 15:41:52.369759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:53.369896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:54.370933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:55.371585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:41:56.329
  Aug 24 15:41:56.334: INFO: Trying to get logs from node dae4wichuiha-1 pod var-expansion-874654d9-62d5-45da-8ba6-ccb4e49adb16 container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:41:56.346
  E0824 15:41:56.371774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:41:56.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7495" for this suite. @ 08/24/23 15:41:56.383
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 08/24/23 15:41:56.401
  Aug 24 15:41:56.401: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:41:56.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:41:56.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:41:56.439
  STEP: Creating projection with secret that has name projected-secret-test-0f9c9cf8-6886-4dc1-bc22-b4149e7b0054 @ 08/24/23 15:41:56.444
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:41:56.454
  E0824 15:41:57.372890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:58.374408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:41:59.375319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:00.375901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:42:00.518
  Aug 24 15:42:00.523: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-secrets-60ae81f7-7477-4cc5-8191-fb31e0ed995d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:42:00.535
  Aug 24 15:42:00.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9213" for this suite. @ 08/24/23 15:42:00.569
• [4.179 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 08/24/23 15:42:00.585
  Aug 24 15:42:00.585: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-webhook @ 08/24/23 15:42:00.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:00.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:00.628
  STEP: Setting up server cert @ 08/24/23 15:42:00.637
  E0824 15:42:01.376426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/24/23 15:42:01.767
  STEP: Deploying the custom resource conversion webhook pod @ 08/24/23 15:42:01.786
  STEP: Wait for the deployment to be ready @ 08/24/23 15:42:01.811
  Aug 24 15:42:01.833: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0824 15:42:02.376693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:03.377775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:42:03.854
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:42:03.878
  E0824 15:42:04.378121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:04.881: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Aug 24 15:42:04.893: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:42:05.385387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:06.379306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:07.379956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 08/24/23 15:42:07.726
  STEP: Create a v2 custom resource @ 08/24/23 15:42:07.755
  STEP: List CRs in v1 @ 08/24/23 15:42:08.244
  STEP: List CRs in v2 @ 08/24/23 15:42:08.263
  Aug 24 15:42:08.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:42:08.386031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-6143" for this suite. @ 08/24/23 15:42:09.027
• [8.482 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 08/24/23 15:42:09.069
  Aug 24 15:42:09.069: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:42:09.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:09.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:09.115
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:42:09.12
  E0824 15:42:09.386938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:10.387587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:11.388398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:12.389078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:42:13.162
  Aug 24 15:42:13.168: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-b10f0785-fdf2-42ba-892d-513b2746011e container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:42:13.18
  Aug 24 15:42:13.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3280" for this suite. @ 08/24/23 15:42:13.226
• [4.172 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 08/24/23 15:42:13.245
  Aug 24 15:42:13.245: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:42:13.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:13.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:13.292
  STEP: Setting up server cert @ 08/24/23 15:42:13.342
  E0824 15:42:13.389568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:42:13.955
  STEP: Deploying the webhook pod @ 08/24/23 15:42:13.968
  STEP: Wait for the deployment to be ready @ 08/24/23 15:42:13.997
  Aug 24 15:42:14.039: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:42:14.389999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:15.390221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:42:16.059
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:42:16.09
  E0824 15:42:16.390564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:17.093: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 24 15:42:17.105: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:42:17.391570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 08/24/23 15:42:17.626
  STEP: Creating a custom resource that should be denied by the webhook @ 08/24/23 15:42:17.685
  E0824 15:42:18.392330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:19.392868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 08/24/23 15:42:19.801
  STEP: Updating the custom resource with disallowed data should be denied @ 08/24/23 15:42:19.816
  STEP: Deleting the custom resource should be denied @ 08/24/23 15:42:19.84
  STEP: Remove the offending key and value from the custom resource data @ 08/24/23 15:42:19.855
  STEP: Deleting the updated custom resource should be successful @ 08/24/23 15:42:19.879
  Aug 24 15:42:19.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:42:20.393946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-2343" for this suite. @ 08/24/23 15:42:20.615
  STEP: Destroying namespace "webhook-markers-411" for this suite. @ 08/24/23 15:42:20.627
• [7.396 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 08/24/23 15:42:20.646
  Aug 24 15:42:20.647: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:42:20.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:20.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:20.689
  STEP: Creating secret with name secret-test-map-91e45179-0e65-46fe-be0e-f3e1cf42b487 @ 08/24/23 15:42:20.695
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:42:20.708
  E0824 15:42:21.394334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:22.394626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:23.395433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:24.396452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:25.396877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:26.397127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:42:26.801
  Aug 24 15:42:26.807: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-secrets-9cffdd46-7c7b-4689-b2f9-49a9b6215dcb container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:42:26.821
  Aug 24 15:42:26.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5119" for this suite. @ 08/24/23 15:42:26.857
• [6.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 08/24/23 15:42:26.873
  Aug 24 15:42:26.873: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:42:26.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:26.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:26.912
  STEP: starting the proxy server @ 08/24/23 15:42:26.917
  Aug 24 15:42:26.918: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-3195 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 08/24/23 15:42:27.04
  Aug 24 15:42:27.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3195" for this suite. @ 08/24/23 15:42:27.074
• [0.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 08/24/23 15:42:27.094
  Aug 24 15:42:27.094: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:42:27.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:27.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:27.131
  STEP: Creating secret with name secret-test-52a8c9d0-3ee4-4ca6-975a-7ba7f118813b @ 08/24/23 15:42:27.137
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:42:27.148
  E0824 15:42:27.398076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:28.398444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:29.399452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:30.399543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:42:31.194
  Aug 24 15:42:31.211: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-secrets-742a0734-61bc-48d2-be00-31e57df41455 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:42:31.229
  Aug 24 15:42:31.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5160" for this suite. @ 08/24/23 15:42:31.28
• [4.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 08/24/23 15:42:31.297
  Aug 24 15:42:31.297: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:42:31.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:31.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:31.346
  STEP: Discovering how many secrets are in namespace by default @ 08/24/23 15:42:31.349
  E0824 15:42:31.400817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:32.402398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:33.402246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:34.404276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:35.404502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 08/24/23 15:42:36.358
  E0824 15:42:36.404617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:37.405441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:38.406096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:39.407076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:40.407594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/24/23 15:42:41.366
  STEP: Ensuring resource quota status is calculated @ 08/24/23 15:42:41.377
  E0824 15:42:41.407947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:42.408134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 08/24/23 15:42:43.387
  E0824 15:42:43.408303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures secret creation @ 08/24/23 15:42:43.408
  E0824 15:42:44.408867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:45.409317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 08/24/23 15:42:45.416
  STEP: Ensuring resource quota status released usage @ 08/24/23 15:42:45.445
  E0824 15:42:46.411648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:47.412351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:47.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5719" for this suite. @ 08/24/23 15:42:47.47
• [16.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 08/24/23 15:42:47.498
  Aug 24 15:42:47.498: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename runtimeclass @ 08/24/23 15:42:47.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:47.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:47.543
  STEP: Deleting RuntimeClass runtimeclass-7314-delete-me @ 08/24/23 15:42:47.559
  STEP: Waiting for the RuntimeClass to disappear @ 08/24/23 15:42:47.576
  Aug 24 15:42:47.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7314" for this suite. @ 08/24/23 15:42:47.608
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 08/24/23 15:42:47.628
  Aug 24 15:42:47.628: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:42:47.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:47.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:47.678
  STEP: Creating projection with secret that has name projected-secret-test-map-f2a0518b-2c4d-4f5e-ba2a-38cb62c22484 @ 08/24/23 15:42:47.684
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:42:47.694
  E0824 15:42:48.411361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:49.412538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:50.412916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:51.414318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:42:51.745
  Aug 24 15:42:51.751: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-secrets-014d4a37-e974-4d1a-ab8e-393e74992548 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:42:51.763
  Aug 24 15:42:51.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3653" for this suite. @ 08/24/23 15:42:51.798
• [4.185 seconds]
------------------------------
SS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 08/24/23 15:42:51.815
  Aug 24 15:42:51.815: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename controllerrevisions @ 08/24/23 15:42:51.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:51.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:51.865
  STEP: Creating DaemonSet "e2e-5kzsx-daemon-set" @ 08/24/23 15:42:51.905
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/24/23 15:42:51.917
  Aug 24 15:42:51.937: INFO: Number of nodes with available pods controlled by daemonset e2e-5kzsx-daemon-set: 0
  Aug 24 15:42:51.937: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:42:52.414324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:52.977: INFO: Number of nodes with available pods controlled by daemonset e2e-5kzsx-daemon-set: 0
  Aug 24 15:42:52.977: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:42:53.420258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:53.956: INFO: Number of nodes with available pods controlled by daemonset e2e-5kzsx-daemon-set: 1
  Aug 24 15:42:53.956: INFO: Node dae4wichuiha-1 is running 0 daemon pod, expected 1
  E0824 15:42:54.421047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:54.954: INFO: Number of nodes with available pods controlled by daemonset e2e-5kzsx-daemon-set: 2
  Aug 24 15:42:54.954: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-5kzsx-daemon-set
  STEP: Confirm DaemonSet "e2e-5kzsx-daemon-set" successfully created with "daemonset-name=e2e-5kzsx-daemon-set" label @ 08/24/23 15:42:54.959
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-5kzsx-daemon-set" @ 08/24/23 15:42:54.969
  Aug 24 15:42:54.979: INFO: Located ControllerRevision: "e2e-5kzsx-daemon-set-8c54989bb"
  STEP: Patching ControllerRevision "e2e-5kzsx-daemon-set-8c54989bb" @ 08/24/23 15:42:54.985
  Aug 24 15:42:54.997: INFO: e2e-5kzsx-daemon-set-8c54989bb has been patched
  STEP: Create a new ControllerRevision @ 08/24/23 15:42:54.998
  Aug 24 15:42:55.006: INFO: Created ControllerRevision: e2e-5kzsx-daemon-set-58b4c4d8
  STEP: Confirm that there are two ControllerRevisions @ 08/24/23 15:42:55.007
  Aug 24 15:42:55.007: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 24 15:42:55.013: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-5kzsx-daemon-set-8c54989bb" @ 08/24/23 15:42:55.014
  STEP: Confirm that there is only one ControllerRevision @ 08/24/23 15:42:55.024
  Aug 24 15:42:55.025: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 24 15:42:55.031: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-5kzsx-daemon-set-58b4c4d8" @ 08/24/23 15:42:55.036
  Aug 24 15:42:55.050: INFO: e2e-5kzsx-daemon-set-58b4c4d8 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 08/24/23 15:42:55.051
  W0824 15:42:55.070791      14 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 08/24/23 15:42:55.073
  Aug 24 15:42:55.074: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0824 15:42:55.421679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:56.082: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 24 15:42:56.091: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-5kzsx-daemon-set-58b4c4d8=updated" @ 08/24/23 15:42:56.092
  STEP: Confirm that there is only one ControllerRevision @ 08/24/23 15:42:56.111
  Aug 24 15:42:56.114: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 24 15:42:56.126: INFO: Found 1 ControllerRevisions
  Aug 24 15:42:56.132: INFO: ControllerRevision "e2e-5kzsx-daemon-set-7ddd445f77" has revision 3
  STEP: Deleting DaemonSet "e2e-5kzsx-daemon-set" @ 08/24/23 15:42:56.143
  STEP: deleting DaemonSet.extensions e2e-5kzsx-daemon-set in namespace controllerrevisions-5516, will wait for the garbage collector to delete the pods @ 08/24/23 15:42:56.144
  Aug 24 15:42:56.226: INFO: Deleting DaemonSet.extensions e2e-5kzsx-daemon-set took: 17.112044ms
  Aug 24 15:42:56.327: INFO: Terminating DaemonSet.extensions e2e-5kzsx-daemon-set pods took: 101.739446ms
  E0824 15:42:56.422857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:42:57.344: INFO: Number of nodes with available pods controlled by daemonset e2e-5kzsx-daemon-set: 0
  Aug 24 15:42:57.344: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-5kzsx-daemon-set
  Aug 24 15:42:57.350: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38237"},"items":null}

  Aug 24 15:42:57.363: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38238"},"items":null}

  Aug 24 15:42:57.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5516" for this suite. @ 08/24/23 15:42:57.413
  E0824 15:42:57.425116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.617 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 08/24/23 15:42:57.438
  Aug 24 15:42:57.438: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pods @ 08/24/23 15:42:57.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:42:57.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:42:57.507
  STEP: creating the pod @ 08/24/23 15:42:57.519
  STEP: submitting the pod to kubernetes @ 08/24/23 15:42:57.52
  E0824 15:42:58.425203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:42:59.425712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 08/24/23 15:42:59.578
  STEP: updating the pod @ 08/24/23 15:42:59.589
  Aug 24 15:43:00.126: INFO: Successfully updated pod "pod-update-498d2375-cedf-4867-aabf-41caf910468a"
  STEP: verifying the updated pod is in kubernetes @ 08/24/23 15:43:00.167
  Aug 24 15:43:00.175: INFO: Pod update OK
  Aug 24 15:43:00.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2079" for this suite. @ 08/24/23 15:43:00.191
• [2.773 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 08/24/23 15:43:00.219
  Aug 24 15:43:00.219: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename gc @ 08/24/23 15:43:00.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:43:00.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:43:00.265
  STEP: create the rc @ 08/24/23 15:43:00.28
  W0824 15:43:00.294531      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0824 15:43:00.663019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:01.664176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:02.666818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:04.681060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 08/24/23 15:43:04.851
  STEP: wait for the rc to be deleted @ 08/24/23 15:43:04.97
  E0824 15:43:04.998273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:06.402181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:07.043380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:08.054263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:09.127022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:10.518102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 08/24/23 15:43:10.584
  E0824 15:43:11.530683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:12.531081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:13.534052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:14.538001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:15.541972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:16.542307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:17.547520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:18.543379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:19.544528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:20.544919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:21.552298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:22.669324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:23.699838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:24.700537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:25.757941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:26.746228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:27.953867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:28.769069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:29.776790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:30.776901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:31.780891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:32.780960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:33.784005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:34.806037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:35.807064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:36.807276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:37.807998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:38.808310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:39.808647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/24/23 15:43:40.613
  E0824 15:43:40.809191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:40.815: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 15:43:40.818: INFO: Deleting pod "simpletest.rc-2fvl2" in namespace "gc-2026"
  Aug 24 15:43:40.844: INFO: Deleting pod "simpletest.rc-2jf4q" in namespace "gc-2026"
  Aug 24 15:43:40.915: INFO: Deleting pod "simpletest.rc-2l72z" in namespace "gc-2026"
  Aug 24 15:43:40.949: INFO: Deleting pod "simpletest.rc-4cwlh" in namespace "gc-2026"
  Aug 24 15:43:41.024: INFO: Deleting pod "simpletest.rc-4lpjm" in namespace "gc-2026"
  Aug 24 15:43:41.090: INFO: Deleting pod "simpletest.rc-5wk6x" in namespace "gc-2026"
  Aug 24 15:43:41.181: INFO: Deleting pod "simpletest.rc-67phr" in namespace "gc-2026"
  Aug 24 15:43:41.232: INFO: Deleting pod "simpletest.rc-6brq7" in namespace "gc-2026"
  Aug 24 15:43:41.352: INFO: Deleting pod "simpletest.rc-6d9ps" in namespace "gc-2026"
  Aug 24 15:43:41.444: INFO: Deleting pod "simpletest.rc-6xpxk" in namespace "gc-2026"
  Aug 24 15:43:41.500: INFO: Deleting pod "simpletest.rc-729ll" in namespace "gc-2026"
  Aug 24 15:43:41.559: INFO: Deleting pod "simpletest.rc-74nzc" in namespace "gc-2026"
  Aug 24 15:43:41.610: INFO: Deleting pod "simpletest.rc-774hz" in namespace "gc-2026"
  Aug 24 15:43:41.693: INFO: Deleting pod "simpletest.rc-79f6h" in namespace "gc-2026"
  Aug 24 15:43:41.751: INFO: Deleting pod "simpletest.rc-7jksk" in namespace "gc-2026"
  Aug 24 15:43:41.804: INFO: Deleting pod "simpletest.rc-7pp7k" in namespace "gc-2026"
  E0824 15:43:41.815896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:41.946: INFO: Deleting pod "simpletest.rc-7wgk4" in namespace "gc-2026"
  Aug 24 15:43:42.092: INFO: Deleting pod "simpletest.rc-7xzqx" in namespace "gc-2026"
  Aug 24 15:43:42.209: INFO: Deleting pod "simpletest.rc-874ht" in namespace "gc-2026"
  Aug 24 15:43:42.255: INFO: Deleting pod "simpletest.rc-8jc9c" in namespace "gc-2026"
  Aug 24 15:43:42.349: INFO: Deleting pod "simpletest.rc-8tkqx" in namespace "gc-2026"
  Aug 24 15:43:42.397: INFO: Deleting pod "simpletest.rc-9rcm7" in namespace "gc-2026"
  Aug 24 15:43:42.561: INFO: Deleting pod "simpletest.rc-b66hk" in namespace "gc-2026"
  Aug 24 15:43:42.619: INFO: Deleting pod "simpletest.rc-bbsxr" in namespace "gc-2026"
  Aug 24 15:43:42.719: INFO: Deleting pod "simpletest.rc-bnffg" in namespace "gc-2026"
  E0824 15:43:42.818073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:42.847: INFO: Deleting pod "simpletest.rc-bqckd" in namespace "gc-2026"
  Aug 24 15:43:43.036: INFO: Deleting pod "simpletest.rc-bvtjj" in namespace "gc-2026"
  Aug 24 15:43:43.100: INFO: Deleting pod "simpletest.rc-chv88" in namespace "gc-2026"
  Aug 24 15:43:43.149: INFO: Deleting pod "simpletest.rc-clg59" in namespace "gc-2026"
  Aug 24 15:43:43.250: INFO: Deleting pod "simpletest.rc-cqpx5" in namespace "gc-2026"
  Aug 24 15:43:43.304: INFO: Deleting pod "simpletest.rc-d7l9t" in namespace "gc-2026"
  Aug 24 15:43:43.350: INFO: Deleting pod "simpletest.rc-dnt4w" in namespace "gc-2026"
  Aug 24 15:43:43.426: INFO: Deleting pod "simpletest.rc-ds8wx" in namespace "gc-2026"
  Aug 24 15:43:43.535: INFO: Deleting pod "simpletest.rc-fbj8q" in namespace "gc-2026"
  Aug 24 15:43:43.594: INFO: Deleting pod "simpletest.rc-fcq4t" in namespace "gc-2026"
  Aug 24 15:43:43.739: INFO: Deleting pod "simpletest.rc-fqpss" in namespace "gc-2026"
  E0824 15:43:43.818482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:43.818: INFO: Deleting pod "simpletest.rc-frtwl" in namespace "gc-2026"
  Aug 24 15:43:43.951: INFO: Deleting pod "simpletest.rc-g4msw" in namespace "gc-2026"
  Aug 24 15:43:44.020: INFO: Deleting pod "simpletest.rc-grxz2" in namespace "gc-2026"
  Aug 24 15:43:44.131: INFO: Deleting pod "simpletest.rc-gv79q" in namespace "gc-2026"
  Aug 24 15:43:44.182: INFO: Deleting pod "simpletest.rc-hbdhf" in namespace "gc-2026"
  Aug 24 15:43:44.239: INFO: Deleting pod "simpletest.rc-hc7cw" in namespace "gc-2026"
  Aug 24 15:43:44.316: INFO: Deleting pod "simpletest.rc-hnfbw" in namespace "gc-2026"
  Aug 24 15:43:44.355: INFO: Deleting pod "simpletest.rc-htpvs" in namespace "gc-2026"
  Aug 24 15:43:44.515: INFO: Deleting pod "simpletest.rc-jgh9k" in namespace "gc-2026"
  Aug 24 15:43:44.562: INFO: Deleting pod "simpletest.rc-jgk5x" in namespace "gc-2026"
  Aug 24 15:43:44.652: INFO: Deleting pod "simpletest.rc-jmh9p" in namespace "gc-2026"
  Aug 24 15:43:44.766: INFO: Deleting pod "simpletest.rc-jn8sx" in namespace "gc-2026"
  Aug 24 15:43:44.800: INFO: Deleting pod "simpletest.rc-k5vnt" in namespace "gc-2026"
  E0824 15:43:44.818822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:44.936: INFO: Deleting pod "simpletest.rc-k658q" in namespace "gc-2026"
  Aug 24 15:43:45.208: INFO: Deleting pod "simpletest.rc-kf9tx" in namespace "gc-2026"
  Aug 24 15:43:45.364: INFO: Deleting pod "simpletest.rc-kl4tt" in namespace "gc-2026"
  Aug 24 15:43:45.454: INFO: Deleting pod "simpletest.rc-klpxf" in namespace "gc-2026"
  Aug 24 15:43:45.588: INFO: Deleting pod "simpletest.rc-ktknl" in namespace "gc-2026"
  Aug 24 15:43:45.681: INFO: Deleting pod "simpletest.rc-l85zf" in namespace "gc-2026"
  Aug 24 15:43:45.743: INFO: Deleting pod "simpletest.rc-lch6t" in namespace "gc-2026"
  Aug 24 15:43:45.802: INFO: Deleting pod "simpletest.rc-lctpb" in namespace "gc-2026"
  E0824 15:43:45.824623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:45.925: INFO: Deleting pod "simpletest.rc-lfpn8" in namespace "gc-2026"
  Aug 24 15:43:46.074: INFO: Deleting pod "simpletest.rc-lztjc" in namespace "gc-2026"
  Aug 24 15:43:46.180: INFO: Deleting pod "simpletest.rc-m2cj4" in namespace "gc-2026"
  Aug 24 15:43:46.222: INFO: Deleting pod "simpletest.rc-mc9nq" in namespace "gc-2026"
  Aug 24 15:43:46.262: INFO: Deleting pod "simpletest.rc-mtzwn" in namespace "gc-2026"
  Aug 24 15:43:46.300: INFO: Deleting pod "simpletest.rc-nb9r7" in namespace "gc-2026"
  Aug 24 15:43:46.438: INFO: Deleting pod "simpletest.rc-nf96p" in namespace "gc-2026"
  Aug 24 15:43:46.496: INFO: Deleting pod "simpletest.rc-p6mzn" in namespace "gc-2026"
  Aug 24 15:43:46.585: INFO: Deleting pod "simpletest.rc-pnwx6" in namespace "gc-2026"
  Aug 24 15:43:46.680: INFO: Deleting pod "simpletest.rc-pshmj" in namespace "gc-2026"
  Aug 24 15:43:46.770: INFO: Deleting pod "simpletest.rc-pw2b9" in namespace "gc-2026"
  E0824 15:43:46.826207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:46.878: INFO: Deleting pod "simpletest.rc-pwc7f" in namespace "gc-2026"
  Aug 24 15:43:46.981: INFO: Deleting pod "simpletest.rc-q6gj7" in namespace "gc-2026"
  Aug 24 15:43:47.112: INFO: Deleting pod "simpletest.rc-q7jqj" in namespace "gc-2026"
  Aug 24 15:43:47.198: INFO: Deleting pod "simpletest.rc-qhhj4" in namespace "gc-2026"
  Aug 24 15:43:47.286: INFO: Deleting pod "simpletest.rc-qm5fs" in namespace "gc-2026"
  Aug 24 15:43:47.348: INFO: Deleting pod "simpletest.rc-qr7n7" in namespace "gc-2026"
  Aug 24 15:43:47.418: INFO: Deleting pod "simpletest.rc-r67m9" in namespace "gc-2026"
  Aug 24 15:43:47.533: INFO: Deleting pod "simpletest.rc-rmjl8" in namespace "gc-2026"
  Aug 24 15:43:47.605: INFO: Deleting pod "simpletest.rc-rp6fx" in namespace "gc-2026"
  Aug 24 15:43:47.678: INFO: Deleting pod "simpletest.rc-rz6kw" in namespace "gc-2026"
  Aug 24 15:43:47.712: INFO: Deleting pod "simpletest.rc-s87xj" in namespace "gc-2026"
  E0824 15:43:47.827168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:47.841: INFO: Deleting pod "simpletest.rc-sn29j" in namespace "gc-2026"
  Aug 24 15:43:47.922: INFO: Deleting pod "simpletest.rc-snbfq" in namespace "gc-2026"
  Aug 24 15:43:48.002: INFO: Deleting pod "simpletest.rc-sp4hv" in namespace "gc-2026"
  Aug 24 15:43:48.034: INFO: Deleting pod "simpletest.rc-spnm7" in namespace "gc-2026"
  Aug 24 15:43:48.067: INFO: Deleting pod "simpletest.rc-sxpmn" in namespace "gc-2026"
  Aug 24 15:43:48.101: INFO: Deleting pod "simpletest.rc-t2xsn" in namespace "gc-2026"
  Aug 24 15:43:48.155: INFO: Deleting pod "simpletest.rc-tfq4n" in namespace "gc-2026"
  Aug 24 15:43:48.197: INFO: Deleting pod "simpletest.rc-tn4r6" in namespace "gc-2026"
  Aug 24 15:43:48.274: INFO: Deleting pod "simpletest.rc-v2bw4" in namespace "gc-2026"
  Aug 24 15:43:48.342: INFO: Deleting pod "simpletest.rc-v6lf6" in namespace "gc-2026"
  Aug 24 15:43:48.438: INFO: Deleting pod "simpletest.rc-vmwsd" in namespace "gc-2026"
  Aug 24 15:43:48.484: INFO: Deleting pod "simpletest.rc-vq9hn" in namespace "gc-2026"
  Aug 24 15:43:48.554: INFO: Deleting pod "simpletest.rc-vqstz" in namespace "gc-2026"
  Aug 24 15:43:48.612: INFO: Deleting pod "simpletest.rc-vv6j8" in namespace "gc-2026"
  Aug 24 15:43:48.652: INFO: Deleting pod "simpletest.rc-vvjgc" in namespace "gc-2026"
  Aug 24 15:43:48.700: INFO: Deleting pod "simpletest.rc-wgvph" in namespace "gc-2026"
  Aug 24 15:43:48.787: INFO: Deleting pod "simpletest.rc-x2fwg" in namespace "gc-2026"
  Aug 24 15:43:48.823: INFO: Deleting pod "simpletest.rc-xz5xh" in namespace "gc-2026"
  E0824 15:43:48.827518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:43:48.970: INFO: Deleting pod "simpletest.rc-zkklc" in namespace "gc-2026"
  Aug 24 15:43:49.169: INFO: Deleting pod "simpletest.rc-zr9jk" in namespace "gc-2026"
  Aug 24 15:43:49.302: INFO: Deleting pod "simpletest.rc-zz8pb" in namespace "gc-2026"
  Aug 24 15:43:49.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2026" for this suite. @ 08/24/23 15:43:49.343
• [49.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 08/24/23 15:43:49.623
  Aug 24 15:43:49.624: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:43:49.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:43:49.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:43:49.826
  E0824 15:43:49.833516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/24/23 15:43:49.933
  E0824 15:43:50.845247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:51.851942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:52.851782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:53.852989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:54.852873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:55.853889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:56.854579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:57.854630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:58.854991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:43:59.856851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:44:00.112
  Aug 24 15:44:00.119: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-0d4d6dba-aa0e-49c5-b821-9216fb201b1f container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:44:00.138
  Aug 24 15:44:00.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7404" for this suite. @ 08/24/23 15:44:00.184
• [10.603 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 08/24/23 15:44:00.22
  Aug 24 15:44:00.220: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename deployment @ 08/24/23 15:44:00.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:44:00.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:44:00.271
  Aug 24 15:44:00.280: INFO: Creating simple deployment test-new-deployment
  Aug 24 15:44:00.358: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0824 15:44:00.855300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:01.855878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 08/24/23 15:44:02.402
  STEP: updating a scale subresource @ 08/24/23 15:44:02.409
  STEP: verifying the deployment Spec.Replicas was modified @ 08/24/23 15:44:02.425
  STEP: Patch a scale subresource @ 08/24/23 15:44:02.438
  Aug 24 15:44:02.504: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5999",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db7eb95f-17b6-4670-b1b3-6734b1cfaebe",
      ResourceVersion: (string) (len=5) "40431",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488640,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 24 15:44:02.574: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5999",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cec5b2fd-cd33-4cfb-a10b-5e5709272657",
      ResourceVersion: (string) (len=5) "40438",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488640,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "db7eb95f-17b6-4670-b1b3-6734b1cfaebe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 62 37 65 62 39  35 66 2d 31 37 62 36 2d  |\"db7eb95f-17b6-|
              00000120  34 36 37 30 2d 62 31 62  33 2d 36 37 33 34 62 31  |4670-b1b3-6734b1|
              00000130  63 66 61 65 62 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cfaebe\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 24 15:44:02.611: INFO: Pod "test-new-deployment-557759b7c7-hnjkt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-hnjkt",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5999",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff61e5cc-5b5e-45cf-8a17-62c887beeb4f",
      ResourceVersion: (string) (len=5) "40443",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488642,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "cec5b2fd-cd33-4cfb-a10b-5e5709272657",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 65  63 35 62 32 66 64 2d 63  |d\":\"cec5b2fd-c|
              00000090  64 33 33 2d 34 63 66 62  2d 61 31 30 62 2d 35 65  |d33-4cfb-a10b-5e|
              000000a0  35 37 30 39 32 37 32 36  35 37 5c 22 7d 22 3a 7b  |5709272657\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mpldt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mpldt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.163",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488642,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:44:02.717: INFO: Pod "test-new-deployment-557759b7c7-jfx8v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-jfx8v",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-5999",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a7aaba5-37a6-4972-82c2-ff2e4830a0ce",
      ResourceVersion: (string) (len=5) "40355",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488640,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "cec5b2fd-cd33-4cfb-a10b-5e5709272657",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 65  63 35 62 32 66 64 2d 63  |d\":\"cec5b2fd-c|
              00000090  64 33 33 2d 34 63 66 62  2d 61 31 30 62 2d 35 65  |d33-4cfb-a10b-5e|
              000000a0  35 37 30 39 32 37 32 36  35 37 5c 22 7d 22 3a 7b  |5709272657\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 38 33 5c 22 7d  |10.233.64.183\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s5jd8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s5jd8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dae4wichuiha-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63828488640,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.197",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.183",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.183"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63828488640,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63828488641,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://fc984ce858e30810934c99269b2187852708a051d84f540d4af531e4e1ba4ae7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 24 15:44:02.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5999" for this suite. @ 08/24/23 15:44:02.795
• [2.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 08/24/23 15:44:02.814
  Aug 24 15:44:02.814: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename gc @ 08/24/23 15:44:02.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:44:02.85
  E0824 15:44:02.856215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:44:02.87
  STEP: create the deployment @ 08/24/23 15:44:02.886
  W0824 15:44:02.897578      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/24/23 15:44:02.897
  STEP: delete the deployment @ 08/24/23 15:44:03.43
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 08/24/23 15:44:03.462
  E0824 15:44:03.856654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/24/23 15:44:04.028
  Aug 24 15:44:04.288: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 24 15:44:04.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3237" for this suite. @ 08/24/23 15:44:04.315
• [1.514 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 08/24/23 15:44:04.333
  Aug 24 15:44:04.333: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:44:04.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:44:04.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:44:04.381
  STEP: creating secret secrets-475/secret-test-44babc0b-f631-4ea4-9a49-0ae158703408 @ 08/24/23 15:44:04.39
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:44:04.4
  E0824 15:44:04.857761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:05.857964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:06.859637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:07.859704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:44:08.445
  Aug 24 15:44:08.462: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-configmaps-1fd1a86d-ad95-4685-9266-06eabf4c55a0 container env-test: <nil>
  STEP: delete the pod @ 08/24/23 15:44:08.476
  Aug 24 15:44:08.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-475" for this suite. @ 08/24/23 15:44:08.521
• [4.215 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 08/24/23 15:44:08.549
  Aug 24 15:44:08.549: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 08/24/23 15:44:08.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:44:08.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:44:08.696
  STEP: Setting up the test @ 08/24/23 15:44:08.71
  STEP: Creating hostNetwork=false pod @ 08/24/23 15:44:08.71
  E0824 15:44:08.862500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:09.862157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:10.862760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:11.863448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 08/24/23 15:44:12.778
  E0824 15:44:12.864638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:13.864904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 08/24/23 15:44:14.829
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 08/24/23 15:44:14.829
  Aug 24 15:44:14.829: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9139 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:14.830: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:14.832: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:14.832: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9139/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0824 15:44:14.865379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:14.998: INFO: Exec stderr: ""
  Aug 24 15:44:14.998: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9139 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:14.998: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:15.001: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:15.001: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9139/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 24 15:44:15.129: INFO: Exec stderr: ""
  Aug 24 15:44:15.129: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9139 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:15.129: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:15.131: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:15.131: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9139/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 24 15:44:15.265: INFO: Exec stderr: ""
  Aug 24 15:44:15.265: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9139 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:15.265: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:15.266: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:15.267: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9139/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 24 15:44:15.387: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 08/24/23 15:44:15.388
  Aug 24 15:44:15.388: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9139 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:15.388: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:15.389: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:15.389: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9139/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Aug 24 15:44:15.512: INFO: Exec stderr: ""
  Aug 24 15:44:15.513: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9139 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:15.514: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:15.516: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:15.517: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9139/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Aug 24 15:44:15.609: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 08/24/23 15:44:15.609
  Aug 24 15:44:15.609: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9139 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:15.609: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:15.610: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:15.611: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9139/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 24 15:44:15.740: INFO: Exec stderr: ""
  Aug 24 15:44:15.741: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9139 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:15.741: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:15.743: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:15.743: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9139/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 24 15:44:15.863: INFO: Exec stderr: ""
  Aug 24 15:44:15.864: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9139 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:15.864: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:44:15.865303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:15.866: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:15.867: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9139/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 24 15:44:15.992: INFO: Exec stderr: ""
  Aug 24 15:44:15.992: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9139 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:15.992: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:15.994: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:15.994: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9139/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 24 15:44:16.134: INFO: Exec stderr: ""
  Aug 24 15:44:16.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9139" for this suite. @ 08/24/23 15:44:16.146
• [7.610 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 08/24/23 15:44:16.166
  Aug 24 15:44:16.166: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename pod-network-test @ 08/24/23 15:44:16.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:44:16.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:44:16.211
  STEP: Performing setup for networking test in namespace pod-network-test-4668 @ 08/24/23 15:44:16.216
  STEP: creating a selector @ 08/24/23 15:44:16.216
  STEP: Creating the service pods in kubernetes @ 08/24/23 15:44:16.217
  Aug 24 15:44:16.217: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0824 15:44:16.866825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:17.867443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:18.867804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:19.868163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:20.869138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:21.869789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:22.869784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:23.871051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:24.871660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:25.872771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:26.873884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:27.876244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:28.877149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:29.877938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:30.877923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:31.878136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:32.879388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:33.880068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:34.880892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:35.881811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:36.882644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:37.883566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/24/23 15:44:38.453
  E0824 15:44:38.883744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:39.883958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:40.503: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Aug 24 15:44:40.503: INFO: Breadth first check of 10.233.64.107 on host 192.168.121.197...
  Aug 24 15:44:40.510: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.114:9080/dial?request=hostname&protocol=http&host=10.233.64.107&port=8083&tries=1'] Namespace:pod-network-test-4668 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:40.510: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:40.514: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:40.515: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4668/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.114%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.107%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 24 15:44:40.688: INFO: Waiting for responses: map[]
  Aug 24 15:44:40.689: INFO: reached 10.233.64.107 after 0/1 tries
  Aug 24 15:44:40.689: INFO: Breadth first check of 10.233.65.15 on host 192.168.121.163...
  Aug 24 15:44:40.698: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.64.114:9080/dial?request=hostname&protocol=http&host=10.233.65.15&port=8083&tries=1'] Namespace:pod-network-test-4668 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 24 15:44:40.698: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  Aug 24 15:44:40.705: INFO: ExecWithOptions: Clientset creation
  Aug 24 15:44:40.707: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4668/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.64.114%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.15%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 24 15:44:40.827: INFO: Waiting for responses: map[]
  Aug 24 15:44:40.827: INFO: reached 10.233.65.15 after 0/1 tries
  Aug 24 15:44:40.827: INFO: Going to retry 0 out of 2 pods....
  Aug 24 15:44:40.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4668" for this suite. @ 08/24/23 15:44:40.838
• [24.690 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 08/24/23 15:44:40.86
  Aug 24 15:44:40.860: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:44:40.863
  E0824 15:44:40.885150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:44:40.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:44:40.899
  STEP: Creating a pod to test downward API volume plugin @ 08/24/23 15:44:40.905
  E0824 15:44:41.886012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:42.886661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:43.886726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:44.887069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:44:44.95
  Aug 24 15:44:44.955: INFO: Trying to get logs from node dae4wichuiha-1 pod downwardapi-volume-bd2957cc-adad-486e-b58b-857e3d10e3f7 container client-container: <nil>
  STEP: delete the pod @ 08/24/23 15:44:44.994
  Aug 24 15:44:45.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9571" for this suite. @ 08/24/23 15:44:45.032
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 08/24/23 15:44:45.066
  Aug 24 15:44:45.066: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:44:45.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:44:45.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:44:45.178
  STEP: Creating configMap with name projected-configmap-test-volume-map-dc1831cf-9670-4216-b14f-74e6ecbdd549 @ 08/24/23 15:44:45.183
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:44:45.191
  E0824 15:44:45.887463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:46.933275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:47.933371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:48.933929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:44:49.224
  Aug 24 15:44:49.229: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-configmaps-acd6b75d-e417-453b-8110-d9022bb0ae47 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:44:49.24
  Aug 24 15:44:49.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-525" for this suite. @ 08/24/23 15:44:49.277
• [4.223 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 08/24/23 15:44:49.29
  Aug 24 15:44:49.290: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename init-container @ 08/24/23 15:44:49.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:44:49.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:44:49.335
  STEP: creating the pod @ 08/24/23 15:44:49.34
  Aug 24 15:44:49.341: INFO: PodSpec: initContainers in spec.initContainers
  E0824 15:44:49.934271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:50.935320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:51.936101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:52.936075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:53.943697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:54.940300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:44:55.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6621" for this suite. @ 08/24/23 15:44:55.083
• [5.810 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 08/24/23 15:44:55.119
  Aug 24 15:44:55.119: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sched-preemption @ 08/24/23 15:44:55.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:44:55.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:44:55.166
  Aug 24 15:44:55.209: INFO: Waiting up to 1m0s for all nodes to be ready
  E0824 15:44:55.941130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:56.941778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:57.942296      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:58.943158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:44:59.943829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:00.944381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:01.944620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:02.944856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:03.945862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:04.946470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:05.951050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:06.951748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:07.952443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:08.952500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:09.952949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:10.954293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:11.954338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:12.954580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:13.955079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:14.955515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:15.955637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:16.956261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:17.957611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:18.958039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:19.958421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:20.959480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:21.960397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:22.960608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:23.960976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:24.961519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:25.962183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:26.962115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:27.962277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:28.962807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:29.963047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:30.963935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:31.965446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:32.966049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:33.966978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:34.967379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:35.968256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:36.968427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:37.968818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:38.969730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:39.970348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:40.970595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:41.970848      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:42.970905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:43.971047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:44.972125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:45.972480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:46.973694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:47.973591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:48.974297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:49.974481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:50.975147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:51.975684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:52.975916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:53.976132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:54.976407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:55.281: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/24/23 15:45:55.289
  Aug 24 15:45:55.289: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/24/23 15:45:55.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:45:55.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:45:55.338
  Aug 24 15:45:55.373: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Aug 24 15:45:55.380: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Aug 24 15:45:55.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:45:55.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4471" for this suite. @ 08/24/23 15:45:55.516
  STEP: Destroying namespace "sched-preemption-708" for this suite. @ 08/24/23 15:45:55.529
• [60.424 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 08/24/23 15:45:55.546
  Aug 24 15:45:55.546: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename proxy @ 08/24/23 15:45:55.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:45:55.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:45:55.586
  Aug 24 15:45:55.592: INFO: Creating pod...
  E0824 15:45:55.976701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:56.977039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:57.625: INFO: Creating service...
  Aug 24 15:45:57.651: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/pods/agnhost/proxy?method=DELETE
  Aug 24 15:45:57.669: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 24 15:45:57.670: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/pods/agnhost/proxy?method=OPTIONS
  Aug 24 15:45:57.679: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 24 15:45:57.681: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/pods/agnhost/proxy?method=PATCH
  Aug 24 15:45:57.696: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 24 15:45:57.696: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/pods/agnhost/proxy?method=POST
  Aug 24 15:45:57.703: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 24 15:45:57.703: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/pods/agnhost/proxy?method=PUT
  Aug 24 15:45:57.709: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 24 15:45:57.710: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/services/e2e-proxy-test-service/proxy?method=DELETE
  Aug 24 15:45:57.726: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 24 15:45:57.726: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Aug 24 15:45:57.745: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 24 15:45:57.745: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/services/e2e-proxy-test-service/proxy?method=PATCH
  Aug 24 15:45:57.758: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 24 15:45:57.758: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/services/e2e-proxy-test-service/proxy?method=POST
  Aug 24 15:45:57.772: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 24 15:45:57.772: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/services/e2e-proxy-test-service/proxy?method=PUT
  Aug 24 15:45:57.784: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 24 15:45:57.784: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/pods/agnhost/proxy?method=GET
  Aug 24 15:45:57.790: INFO: http.Client request:GET StatusCode:301
  Aug 24 15:45:57.791: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/services/e2e-proxy-test-service/proxy?method=GET
  Aug 24 15:45:57.801: INFO: http.Client request:GET StatusCode:301
  Aug 24 15:45:57.801: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/pods/agnhost/proxy?method=HEAD
  Aug 24 15:45:57.819: INFO: http.Client request:HEAD StatusCode:301
  Aug 24 15:45:57.819: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2606/services/e2e-proxy-test-service/proxy?method=HEAD
  Aug 24 15:45:57.827: INFO: http.Client request:HEAD StatusCode:301
  Aug 24 15:45:57.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2606" for this suite. @ 08/24/23 15:45:57.838
• [2.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 08/24/23 15:45:57.877
  Aug 24 15:45:57.877: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:45:57.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:45:57.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:45:57.933
  STEP: creating the pod @ 08/24/23 15:45:57.938
  Aug 24 15:45:57.938: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4485 create -f -'
  E0824 15:45:57.977934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:45:58.978078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:45:59.425: INFO: stderr: ""
  Aug 24 15:45:59.425: INFO: stdout: "pod/pause created\n"
  E0824 15:45:59.978565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:00.980550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 08/24/23 15:46:01.466
  Aug 24 15:46:01.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4485 label pods pause testing-label=testing-label-value'
  Aug 24 15:46:01.630: INFO: stderr: ""
  Aug 24 15:46:01.630: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 08/24/23 15:46:01.63
  Aug 24 15:46:01.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4485 get pod pause -L testing-label'
  Aug 24 15:46:01.799: INFO: stderr: ""
  Aug 24 15:46:01.799: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 08/24/23 15:46:01.799
  Aug 24 15:46:01.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4485 label pods pause testing-label-'
  Aug 24 15:46:01.971: INFO: stderr: ""
  Aug 24 15:46:01.971: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 08/24/23 15:46:01.971
  Aug 24 15:46:01.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4485 get pod pause -L testing-label'
  E0824 15:46:01.979709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:02.135: INFO: stderr: ""
  Aug 24 15:46:02.135: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 08/24/23 15:46:02.135
  Aug 24 15:46:02.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4485 delete --grace-period=0 --force -f -'
  Aug 24 15:46:02.305: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:46:02.305: INFO: stdout: "pod \"pause\" force deleted\n"
  Aug 24 15:46:02.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4485 get rc,svc -l name=pause --no-headers'
  Aug 24 15:46:02.482: INFO: stderr: "No resources found in kubectl-4485 namespace.\n"
  Aug 24 15:46:02.482: INFO: stdout: ""
  Aug 24 15:46:02.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-4485 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 24 15:46:02.638: INFO: stderr: ""
  Aug 24 15:46:02.638: INFO: stdout: ""
  Aug 24 15:46:02.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4485" for this suite. @ 08/24/23 15:46:02.646
• [4.780 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 08/24/23 15:46:02.661
  Aug 24 15:46:02.661: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename svcaccounts @ 08/24/23 15:46:02.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:46:02.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:46:02.696
  STEP: Creating a pod to test service account token:  @ 08/24/23 15:46:02.7
  E0824 15:46:02.980736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:03.981361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:04.981316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:05.982023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:46:06.736
  Aug 24 15:46:06.741: INFO: Trying to get logs from node dae4wichuiha-1 pod test-pod-5757c1f8-115f-4fce-a9b4-6954576c450b container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:46:06.75
  Aug 24 15:46:06.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-901" for this suite. @ 08/24/23 15:46:06.775
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 08/24/23 15:46:06.791
  Aug 24 15:46:06.791: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:46:06.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:46:06.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:46:06.827
  STEP: validating cluster-info @ 08/24/23 15:46:06.832
  Aug 24 15:46:06.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5442 cluster-info'
  E0824 15:46:06.982388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:07.000: INFO: stderr: ""
  Aug 24 15:46:07.000: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Aug 24 15:46:07.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5442" for this suite. @ 08/24/23 15:46:07.006
• [0.225 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 08/24/23 15:46:07.017
  Aug 24 15:46:07.017: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-runtime @ 08/24/23 15:46:07.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:46:07.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:46:07.055
  STEP: create the container @ 08/24/23 15:46:07.06
  W0824 15:46:07.080096      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/24/23 15:46:07.08
  E0824 15:46:08.057848      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:09.058047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:10.058175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 08/24/23 15:46:10.154
  STEP: the container should be terminated @ 08/24/23 15:46:10.159
  STEP: the termination message should be set @ 08/24/23 15:46:10.159
  Aug 24 15:46:10.159: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 08/24/23 15:46:10.16
  Aug 24 15:46:10.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-286" for this suite. @ 08/24/23 15:46:10.199
• [3.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 08/24/23 15:46:10.223
  Aug 24 15:46:10.223: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename subpath @ 08/24/23 15:46:10.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:46:10.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:46:10.266
  STEP: Setting up data @ 08/24/23 15:46:10.271
  STEP: Creating pod pod-subpath-test-projected-2jgn @ 08/24/23 15:46:10.288
  STEP: Creating a pod to test atomic-volume-subpath @ 08/24/23 15:46:10.288
  E0824 15:46:11.058433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:12.063887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:13.064420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:14.065237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:15.065511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:16.066182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:17.066271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:18.066283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:19.067615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:20.067560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:21.067935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:22.068289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:23.068418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:24.068608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:25.068747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:26.069404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:27.070863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:28.071088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:29.071754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:30.071948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:31.072079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:32.072287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:33.072976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:34.073169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:46:34.409
  Aug 24 15:46:34.416: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-subpath-test-projected-2jgn container test-container-subpath-projected-2jgn: <nil>
  STEP: delete the pod @ 08/24/23 15:46:34.431
  STEP: Deleting pod pod-subpath-test-projected-2jgn @ 08/24/23 15:46:34.463
  Aug 24 15:46:34.463: INFO: Deleting pod "pod-subpath-test-projected-2jgn" in namespace "subpath-8246"
  Aug 24 15:46:34.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8246" for this suite. @ 08/24/23 15:46:34.478
• [24.279 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 08/24/23 15:46:34.502
  Aug 24 15:46:34.502: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:46:34.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:46:34.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:46:34.55
  STEP: creating Agnhost RC @ 08/24/23 15:46:34.555
  Aug 24 15:46:34.556: INFO: namespace kubectl-930
  Aug 24 15:46:34.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-930 create -f -'
  E0824 15:46:35.073449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:35.156: INFO: stderr: ""
  Aug 24 15:46:35.156: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/24/23 15:46:35.157
  E0824 15:46:36.074023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:36.164: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:46:36.164: INFO: Found 0 / 1
  E0824 15:46:37.074345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:37.165: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:46:37.165: INFO: Found 1 / 1
  Aug 24 15:46:37.165: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Aug 24 15:46:37.171: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 24 15:46:37.171: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 24 15:46:37.171: INFO: wait on agnhost-primary startup in kubectl-930 
  Aug 24 15:46:37.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-930 logs agnhost-primary-pjqdw agnhost-primary'
  Aug 24 15:46:37.336: INFO: stderr: ""
  Aug 24 15:46:37.336: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 08/24/23 15:46:37.336
  Aug 24 15:46:37.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-930 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Aug 24 15:46:37.540: INFO: stderr: ""
  Aug 24 15:46:37.540: INFO: stdout: "service/rm2 exposed\n"
  Aug 24 15:46:37.554: INFO: Service rm2 in namespace kubectl-930 found.
  E0824 15:46:38.075456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:39.076220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 08/24/23 15:46:39.573
  Aug 24 15:46:39.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-930 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Aug 24 15:46:39.863: INFO: stderr: ""
  Aug 24 15:46:39.863: INFO: stdout: "service/rm3 exposed\n"
  Aug 24 15:46:39.873: INFO: Service rm3 in namespace kubectl-930 found.
  E0824 15:46:40.080667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:41.081387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:46:41.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-930" for this suite. @ 08/24/23 15:46:41.897
• [7.407 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 08/24/23 15:46:41.914
  Aug 24 15:46:41.915: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename endpointslice @ 08/24/23 15:46:41.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:46:41.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:46:41.955
  E0824 15:46:42.082086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:43.083006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:44.083330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:45.084022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:46.084418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:47.089040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 08/24/23 15:46:47.159
  E0824 15:46:48.087600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:49.088489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:50.090301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:51.089107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:52.089271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 08/24/23 15:46:52.176
  E0824 15:46:53.089737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:54.089547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:55.089888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:56.090601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:57.091653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 08/24/23 15:46:57.193
  E0824 15:46:58.091660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:46:59.092882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:00.093100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:01.093304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:02.093428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 08/24/23 15:47:02.214
  Aug 24 15:47:02.259: INFO: EndpointSlice for Service endpointslice-930/example-named-port not found
  E0824 15:47:03.093878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:04.094345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:05.095113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:06.095570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:07.095855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:08.095676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:09.096386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:10.096476      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:11.096722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:12.096944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:12.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-930" for this suite. @ 08/24/23 15:47:12.284
• [30.384 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 08/24/23 15:47:12.3
  Aug 24 15:47:12.301: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sysctl @ 08/24/23 15:47:12.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:12.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:12.34
  STEP: Creating a pod with one valid and two invalid sysctls @ 08/24/23 15:47:12.345
  Aug 24 15:47:12.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9369" for this suite. @ 08/24/23 15:47:12.365
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 08/24/23 15:47:12.385
  Aug 24 15:47:12.385: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:47:12.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:12.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:12.423
  STEP: Creating a ResourceQuota with terminating scope @ 08/24/23 15:47:12.428
  STEP: Ensuring ResourceQuota status is calculated @ 08/24/23 15:47:12.439
  E0824 15:47:13.098250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:14.099486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 08/24/23 15:47:14.447
  STEP: Ensuring ResourceQuota status is calculated @ 08/24/23 15:47:14.458
  E0824 15:47:15.099819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:16.099861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 08/24/23 15:47:16.466
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 08/24/23 15:47:16.496
  E0824 15:47:17.100719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:18.103965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 08/24/23 15:47:18.505
  E0824 15:47:19.104861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:20.105167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/24/23 15:47:20.514
  STEP: Ensuring resource quota status released the pod usage @ 08/24/23 15:47:20.541
  E0824 15:47:21.105358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:22.106130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 08/24/23 15:47:22.555
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 08/24/23 15:47:22.574
  E0824 15:47:23.106378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:24.110696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 08/24/23 15:47:24.585
  E0824 15:47:25.110593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:26.110735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/24/23 15:47:26.597
  STEP: Ensuring resource quota status released the pod usage @ 08/24/23 15:47:26.636
  E0824 15:47:27.111301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:28.111435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:28.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-633" for this suite. @ 08/24/23 15:47:28.652
• [16.279 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 08/24/23 15:47:28.665
  Aug 24 15:47:28.665: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename emptydir @ 08/24/23 15:47:28.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:28.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:28.705
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/24/23 15:47:28.709
  E0824 15:47:29.111995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:30.112709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:31.113429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:32.117615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:47:32.786
  Aug 24 15:47:32.792: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-4dfc021c-768a-4fe4-95ba-a4bfb6996588 container test-container: <nil>
  STEP: delete the pod @ 08/24/23 15:47:32.804
  Aug 24 15:47:32.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5927" for this suite. @ 08/24/23 15:47:32.861
• [4.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 08/24/23 15:47:32.897
  Aug 24 15:47:32.897: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename job @ 08/24/23 15:47:32.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:32.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:32.952
  STEP: Creating a job @ 08/24/23 15:47:32.963
  STEP: Ensure pods equal to parallelism count is attached to the job @ 08/24/23 15:47:32.992
  E0824 15:47:33.117892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:34.118961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 08/24/23 15:47:35.003
  STEP: updating /status @ 08/24/23 15:47:35.021
  STEP: get /status @ 08/24/23 15:47:35.042
  Aug 24 15:47:35.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-99" for this suite. @ 08/24/23 15:47:35.063
• [2.185 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 08/24/23 15:47:35.083
  Aug 24 15:47:35.083: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename secrets @ 08/24/23 15:47:35.087
  E0824 15:47:35.118949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:35.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:35.133
  STEP: Creating secret with name secret-test-bc3f01c0-d041-4356-8988-3ad9bcd23b3c @ 08/24/23 15:47:35.14
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:47:35.151
  E0824 15:47:36.119335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:37.119998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:38.125368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:39.121103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:47:39.21
  Aug 24 15:47:39.216: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-secrets-7b1762c1-3ff9-47f4-af77-68ca06856f2e container secret-env-test: <nil>
  STEP: delete the pod @ 08/24/23 15:47:39.233
  Aug 24 15:47:39.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-384" for this suite. @ 08/24/23 15:47:39.269
• [4.198 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 08/24/23 15:47:39.282
  Aug 24 15:47:39.282: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 15:47:39.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:39.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:39.321
  Aug 24 15:47:39.326: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:47:40.122348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:41.122760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/24/23 15:47:41.652
  Aug 24 15:47:41.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-3563 --namespace=crd-publish-openapi-3563 create -f -'
  E0824 15:47:42.123982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:42.935: INFO: stderr: ""
  Aug 24 15:47:42.935: INFO: stdout: "e2e-test-crd-publish-openapi-6680-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Aug 24 15:47:42.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-3563 --namespace=crd-publish-openapi-3563 delete e2e-test-crd-publish-openapi-6680-crds test-cr'
  E0824 15:47:43.123909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:43.197: INFO: stderr: ""
  Aug 24 15:47:43.197: INFO: stdout: "e2e-test-crd-publish-openapi-6680-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Aug 24 15:47:43.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-3563 --namespace=crd-publish-openapi-3563 apply -f -'
  Aug 24 15:47:43.589: INFO: stderr: ""
  Aug 24 15:47:43.590: INFO: stdout: "e2e-test-crd-publish-openapi-6680-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Aug 24 15:47:43.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-3563 --namespace=crd-publish-openapi-3563 delete e2e-test-crd-publish-openapi-6680-crds test-cr'
  Aug 24 15:47:43.776: INFO: stderr: ""
  Aug 24 15:47:43.776: INFO: stdout: "e2e-test-crd-publish-openapi-6680-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/24/23 15:47:43.776
  Aug 24 15:47:43.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=crd-publish-openapi-3563 explain e2e-test-crd-publish-openapi-6680-crds'
  E0824 15:47:44.125042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:44.862: INFO: stderr: ""
  Aug 24 15:47:44.862: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6680-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0824 15:47:45.125050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:46.145912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:46.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3563" for this suite. @ 08/24/23 15:47:46.849
• [7.582 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 08/24/23 15:47:46.864
  Aug 24 15:47:46.865: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/24/23 15:47:46.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:46.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:46.902
  STEP: fetching the /apis discovery document @ 08/24/23 15:47:46.909
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 08/24/23 15:47:46.912
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 08/24/23 15:47:46.912
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 08/24/23 15:47:46.912
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 08/24/23 15:47:46.915
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 08/24/23 15:47:46.915
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 08/24/23 15:47:46.917
  Aug 24 15:47:46.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8145" for this suite. @ 08/24/23 15:47:46.926
• [0.075 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 08/24/23 15:47:46.939
  Aug 24 15:47:46.939: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:47:46.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:46.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:46.987
  Aug 24 15:47:46.992: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:47:47.146668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:48.147555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:49.148013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:50.148644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:50.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7632" for this suite. @ 08/24/23 15:47:50.405
• [3.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 08/24/23 15:47:50.421
  Aug 24 15:47:50.421: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename dns @ 08/24/23 15:47:50.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:47:50.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:47:50.462
  STEP: Creating a test headless service @ 08/24/23 15:47:50.468
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local;sleep 1; done
   @ 08/24/23 15:47:50.48
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local;sleep 1; done
   @ 08/24/23 15:47:50.48
  STEP: creating a pod to probe DNS @ 08/24/23 15:47:50.48
  STEP: submitting the pod to kubernetes @ 08/24/23 15:47:50.48
  E0824 15:47:51.148748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:52.151881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:53.149177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:54.149987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 15:47:54.565
  STEP: looking for the results for each expected name from probers @ 08/24/23 15:47:54.572
  Aug 24 15:47:54.582: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:54.591: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:54.599: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:54.606: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:54.612: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:54.618: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:54.631: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:54.641: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:54.641: INFO: Lookups using dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local]

  Aug 24 15:47:54.654: INFO: Pod client logs for webserver: 
  Aug 24 15:47:54.668: INFO: Pod client logs for querier: 
  Aug 24 15:47:54.679: INFO: Pod client logs for jessie-querier: 
  E0824 15:47:55.150966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:56.151107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:57.151354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:58.151503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:47:59.151759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:47:59.687: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:59.698: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:59.709: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:59.716: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:59.725: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:59.735: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:59.741: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:59.750: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:47:59.750: INFO: Lookups using dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local]

  Aug 24 15:47:59.765: INFO: Pod client logs for webserver: 
  Aug 24 15:47:59.779: INFO: Pod client logs for querier: 
  Aug 24 15:47:59.793: INFO: Pod client logs for jessie-querier: 
  E0824 15:48:00.152883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:01.154093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:02.153882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:03.155409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:04.156140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:04.688: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:04.695: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:04.703: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:04.710: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:04.718: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:04.726: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:04.733: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:04.739: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:04.740: INFO: Lookups using dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local]

  Aug 24 15:48:04.751: INFO: Pod client logs for webserver: 
  Aug 24 15:48:04.759: INFO: Pod client logs for querier: 
  Aug 24 15:48:04.774: INFO: Pod client logs for jessie-querier: 
  E0824 15:48:05.156579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:06.156842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:07.157833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:08.158145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:09.158693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:09.685: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:09.691: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:09.698: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:09.703: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:09.709: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:09.715: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:09.720: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:09.726: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:09.726: INFO: Lookups using dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local]

  Aug 24 15:48:09.739: INFO: Pod client logs for webserver: 
  Aug 24 15:48:09.748: INFO: Pod client logs for querier: 
  Aug 24 15:48:09.758: INFO: Pod client logs for jessie-querier: 
  E0824 15:48:10.159536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:11.160142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:12.160613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:13.161072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:14.161425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:14.689: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:14.699: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:14.705: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:14.711: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:14.718: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:14.724: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:14.733: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:14.744: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:14.744: INFO: Lookups using dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local]

  Aug 24 15:48:14.755: INFO: Pod client logs for webserver: 
  Aug 24 15:48:14.769: INFO: Pod client logs for querier: 
  Aug 24 15:48:14.784: INFO: Pod client logs for jessie-querier: 
  E0824 15:48:15.162411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:16.163572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:17.163319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:18.163597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:19.164312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:19.710: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:19.718: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:19.726: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:19.733: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:19.740: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:19.748: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:19.755: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:19.762: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local from pod dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0: the server could not find the requested resource (get pods dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0)
  Aug 24 15:48:19.763: INFO: Lookups using dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8586.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8586.svc.cluster.local jessie_udp@dns-test-service-2.dns-8586.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8586.svc.cluster.local]

  Aug 24 15:48:19.777: INFO: Pod client logs for webserver: 
  Aug 24 15:48:19.790: INFO: Pod client logs for querier: 
  Aug 24 15:48:19.803: INFO: Pod client logs for jessie-querier: 
  E0824 15:48:20.165283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:21.166002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:22.166340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:23.166739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:24.167335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:24.737: INFO: DNS probes using dns-8586/dns-test-39ba8070-6300-4e52-86aa-bf90f9fc17a0 succeeded

  Aug 24 15:48:24.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:48:24.747
  STEP: deleting the test headless service @ 08/24/23 15:48:24.776
  STEP: Destroying namespace "dns-8586" for this suite. @ 08/24/23 15:48:24.845
• [34.442 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 08/24/23 15:48:25.047
  Aug 24 15:48:25.047: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:48:25.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:48:25.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:48:25.098
  STEP: creating a ConfigMap @ 08/24/23 15:48:25.104
  STEP: fetching the ConfigMap @ 08/24/23 15:48:25.113
  STEP: patching the ConfigMap @ 08/24/23 15:48:25.119
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 08/24/23 15:48:25.134
  STEP: deleting the ConfigMap by collection with a label selector @ 08/24/23 15:48:25.14
  STEP: listing all ConfigMaps in test namespace @ 08/24/23 15:48:25.159
  E0824 15:48:25.168341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:25.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4544" for this suite. @ 08/24/23 15:48:25.179
• [0.145 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 08/24/23 15:48:25.196
  Aug 24 15:48:25.196: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename services @ 08/24/23 15:48:25.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:48:25.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:48:25.235
  STEP: creating service in namespace services-9906 @ 08/24/23 15:48:25.238
  STEP: creating service affinity-clusterip in namespace services-9906 @ 08/24/23 15:48:25.239
  STEP: creating replication controller affinity-clusterip in namespace services-9906 @ 08/24/23 15:48:25.26
  I0824 15:48:25.285919      14 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-9906, replica count: 3
  E0824 15:48:26.168666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:27.169198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:28.169336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:48:28.369164      14 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 24 15:48:28.382: INFO: Creating new exec pod
  E0824 15:48:29.170426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:30.171595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:31.171575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:31.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-9906 exec execpod-affinityzwhpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Aug 24 15:48:31.938: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Aug 24 15:48:31.938: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:48:31.938: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-9906 exec execpod-affinityzwhpl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.63.54 80'
  E0824 15:48:32.171983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:32.338: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.63.54 80\nConnection to 10.233.63.54 80 port [tcp/http] succeeded!\n"
  Aug 24 15:48:32.339: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 24 15:48:32.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=services-9906 exec execpod-affinityzwhpl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.63.54:80/ ; done'
  Aug 24 15:48:32.994: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.54:80/\n"
  Aug 24 15:48:32.994: INFO: stdout: "\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9\naffinity-clusterip-qmch9"
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.994: INFO: Received response from host: affinity-clusterip-qmch9
  Aug 24 15:48:32.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 24 15:48:33.010: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-9906, will wait for the garbage collector to delete the pods @ 08/24/23 15:48:33.035
  E0824 15:48:33.214147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:33.230: INFO: Deleting ReplicationController affinity-clusterip took: 127.785062ms
  Aug 24 15:48:33.332: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.186781ms
  E0824 15:48:34.214655      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:35.215677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:36.216199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-9906" for this suite. @ 08/24/23 15:48:36.261
• [11.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 08/24/23 15:48:36.284
  Aug 24 15:48:36.284: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:48:36.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:48:36.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:48:36.334
  STEP: Creating configMap with name configmap-test-volume-map-8e8498e4-2d7b-439e-a0f4-a38ba1429cc0 @ 08/24/23 15:48:36.339
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:48:36.346
  E0824 15:48:37.217029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:38.216763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:39.217797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:40.218016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:48:40.385
  Aug 24 15:48:40.394: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-configmaps-01eed27e-7445-414c-acdf-b2da3be31088 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:48:40.406
  Aug 24 15:48:40.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1700" for this suite. @ 08/24/23 15:48:40.459
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 08/24/23 15:48:40.475
  Aug 24 15:48:40.476: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename tables @ 08/24/23 15:48:40.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:48:40.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:48:40.524
  Aug 24 15:48:40.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7425" for this suite. @ 08/24/23 15:48:40.541
• [0.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 08/24/23 15:48:40.554
  Aug 24 15:48:40.554: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename ingressclass @ 08/24/23 15:48:40.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:48:40.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:48:40.591
  STEP: getting /apis @ 08/24/23 15:48:40.596
  STEP: getting /apis/networking.k8s.io @ 08/24/23 15:48:40.605
  STEP: getting /apis/networking.k8s.iov1 @ 08/24/23 15:48:40.607
  STEP: creating @ 08/24/23 15:48:40.609
  STEP: getting @ 08/24/23 15:48:40.632
  STEP: listing @ 08/24/23 15:48:40.637
  STEP: watching @ 08/24/23 15:48:40.642
  Aug 24 15:48:40.643: INFO: starting watch
  STEP: patching @ 08/24/23 15:48:40.645
  STEP: updating @ 08/24/23 15:48:40.654
  Aug 24 15:48:40.663: INFO: waiting for watch events with expected annotations
  Aug 24 15:48:40.663: INFO: saw patched and updated annotations
  STEP: deleting @ 08/24/23 15:48:40.664
  STEP: deleting a collection @ 08/24/23 15:48:40.685
  Aug 24 15:48:40.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4096" for this suite. @ 08/24/23 15:48:40.719
• [0.177 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 08/24/23 15:48:40.731
  Aug 24 15:48:40.731: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubelet-test @ 08/24/23 15:48:40.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:48:40.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:48:40.77
  Aug 24 15:48:40.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6044" for this suite. @ 08/24/23 15:48:40.818
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 08/24/23 15:48:40.837
  Aug 24 15:48:40.837: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:48:40.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:48:40.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:48:40.874
  STEP: Creating a pod to test downward api env vars @ 08/24/23 15:48:40.879
  E0824 15:48:41.218409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:42.218577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:43.219062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:44.219084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:48:44.928
  Aug 24 15:48:44.937: INFO: Trying to get logs from node dae4wichuiha-1 pod downward-api-86db52e7-2dda-4fe3-954b-49f378acf638 container dapi-container: <nil>
  STEP: delete the pod @ 08/24/23 15:48:44.954
  Aug 24 15:48:45.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4199" for this suite. @ 08/24/23 15:48:45.016
• [4.197 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 08/24/23 15:48:45.035
  Aug 24 15:48:45.035: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename kubectl @ 08/24/23 15:48:45.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:48:45.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:48:45.074
  STEP: creating all guestbook components @ 08/24/23 15:48:45.08
  Aug 24 15:48:45.081: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Aug 24 15:48:45.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 create -f -'
  E0824 15:48:45.219952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:46.224652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:46.894: INFO: stderr: ""
  Aug 24 15:48:46.894: INFO: stdout: "service/agnhost-replica created\n"
  Aug 24 15:48:46.894: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Aug 24 15:48:46.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 create -f -'
  E0824 15:48:47.224869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:47.429: INFO: stderr: ""
  Aug 24 15:48:47.429: INFO: stdout: "service/agnhost-primary created\n"
  Aug 24 15:48:47.429: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Aug 24 15:48:47.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 create -f -'
  Aug 24 15:48:47.909: INFO: stderr: ""
  Aug 24 15:48:47.909: INFO: stdout: "service/frontend created\n"
  Aug 24 15:48:47.909: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Aug 24 15:48:47.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 create -f -'
  E0824 15:48:48.224897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:48.346: INFO: stderr: ""
  Aug 24 15:48:48.346: INFO: stdout: "deployment.apps/frontend created\n"
  Aug 24 15:48:48.346: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Aug 24 15:48:48.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 create -f -'
  Aug 24 15:48:48.907: INFO: stderr: ""
  Aug 24 15:48:48.907: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Aug 24 15:48:48.907: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Aug 24 15:48:48.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 create -f -'
  E0824 15:48:49.234005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:49.809: INFO: stderr: ""
  Aug 24 15:48:49.810: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 08/24/23 15:48:49.81
  Aug 24 15:48:49.810: INFO: Waiting for all frontend pods to be Running.
  E0824 15:48:50.234324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:51.242540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:52.242811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:53.243427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:54.244094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:54.861: INFO: Waiting for frontend to serve content.
  Aug 24 15:48:54.887: INFO: Trying to add a new entry to the guestbook.
  Aug 24 15:48:54.921: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 08/24/23 15:48:54.944
  Aug 24 15:48:54.945: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 delete --grace-period=0 --force -f -'
  Aug 24 15:48:55.121: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:48:55.121: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 08/24/23 15:48:55.121
  Aug 24 15:48:55.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 delete --grace-period=0 --force -f -'
  E0824 15:48:55.244929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:48:55.333: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:48:55.333: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/24/23 15:48:55.333
  Aug 24 15:48:55.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 delete --grace-period=0 --force -f -'
  Aug 24 15:48:55.506: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:48:55.506: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/24/23 15:48:55.507
  Aug 24 15:48:55.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 delete --grace-period=0 --force -f -'
  Aug 24 15:48:55.660: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:48:55.660: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/24/23 15:48:55.66
  Aug 24 15:48:55.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 delete --grace-period=0 --force -f -'
  Aug 24 15:48:55.913: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:48:55.913: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/24/23 15:48:55.913
  Aug 24 15:48:55.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-416727402 --namespace=kubectl-5935 delete --grace-period=0 --force -f -'
  Aug 24 15:48:56.204: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 24 15:48:56.204: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Aug 24 15:48:56.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5935" for this suite. @ 08/24/23 15:48:56.229
  E0824 15:48:56.245207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [11.258 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 08/24/23 15:48:56.3
  Aug 24 15:48:56.300: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename containers @ 08/24/23 15:48:56.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:48:56.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:48:56.367
  STEP: Creating a pod to test override command @ 08/24/23 15:48:56.384
  E0824 15:48:57.246435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:58.246400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:48:59.247350      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:00.247326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:49:00.427
  Aug 24 15:49:00.432: INFO: Trying to get logs from node dae4wichuiha-1 pod client-containers-5af59224-82fd-4a71-b938-6433e9fba91e container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:49:00.441
  Aug 24 15:49:00.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-978" for this suite. @ 08/24/23 15:49:00.477
• [4.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 08/24/23 15:49:00.491
  Aug 24 15:49:00.491: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename resourcequota @ 08/24/23 15:49:00.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:49:00.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:49:00.526
  STEP: Creating resourceQuota "e2e-rq-status-gml8c" @ 08/24/23 15:49:00.537
  Aug 24 15:49:00.553: INFO: Resource quota "e2e-rq-status-gml8c" reports spec: hard cpu limit of 500m
  Aug 24 15:49:00.553: INFO: Resource quota "e2e-rq-status-gml8c" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-gml8c" /status @ 08/24/23 15:49:00.553
  STEP: Confirm /status for "e2e-rq-status-gml8c" resourceQuota via watch @ 08/24/23 15:49:00.568
  Aug 24 15:49:00.571: INFO: observed resourceQuota "e2e-rq-status-gml8c" in namespace "resourcequota-8154" with hard status: v1.ResourceList(nil)
  Aug 24 15:49:00.572: INFO: Found resourceQuota "e2e-rq-status-gml8c" in namespace "resourcequota-8154" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Aug 24 15:49:00.572: INFO: ResourceQuota "e2e-rq-status-gml8c" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 08/24/23 15:49:00.58
  Aug 24 15:49:00.594: INFO: Resource quota "e2e-rq-status-gml8c" reports spec: hard cpu limit of 1
  Aug 24 15:49:00.594: INFO: Resource quota "e2e-rq-status-gml8c" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-gml8c" /status @ 08/24/23 15:49:00.594
  STEP: Confirm /status for "e2e-rq-status-gml8c" resourceQuota via watch @ 08/24/23 15:49:00.613
  Aug 24 15:49:00.615: INFO: observed resourceQuota "e2e-rq-status-gml8c" in namespace "resourcequota-8154" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Aug 24 15:49:00.615: INFO: Found resourceQuota "e2e-rq-status-gml8c" in namespace "resourcequota-8154" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Aug 24 15:49:00.615: INFO: ResourceQuota "e2e-rq-status-gml8c" /status was patched
  STEP: Get "e2e-rq-status-gml8c" /status @ 08/24/23 15:49:00.615
  Aug 24 15:49:00.626: INFO: Resourcequota "e2e-rq-status-gml8c" reports status: hard cpu of 1
  Aug 24 15:49:00.626: INFO: Resourcequota "e2e-rq-status-gml8c" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-gml8c" /status before checking Spec is unchanged @ 08/24/23 15:49:00.632
  Aug 24 15:49:00.643: INFO: Resourcequota "e2e-rq-status-gml8c" reports status: hard cpu of 2
  Aug 24 15:49:00.644: INFO: Resourcequota "e2e-rq-status-gml8c" reports status: hard memory of 2Gi
  Aug 24 15:49:00.646: INFO: Found resourceQuota "e2e-rq-status-gml8c" in namespace "resourcequota-8154" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0824 15:49:01.247759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:02.247863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:03.247998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:04.248800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:05.249041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:06.249962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:07.250829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:08.251043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:09.251168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:10.251311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:11.251481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:12.252113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:13.252329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:14.253229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:15.253623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:16.254226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:17.254545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:18.255255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:19.255670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:20.255798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:21.257048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:22.257962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:23.258317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:24.258375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:25.258832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:26.259176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:27.260628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:28.260169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:29.261033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:30.261282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:31.272181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:32.272576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:33.272477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:34.273317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:35.273489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:36.273614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:37.273943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:38.274964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:39.276070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:40.277079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:41.278299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:42.278565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:43.279263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:44.279835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:45.280362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:46.281183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:47.281203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:48.281697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:49.282303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:50.282839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:51.284876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:52.283590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:53.283939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:54.284328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:55.284851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:56.285844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:57.286000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:58.286628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:49:59.287523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:00.288081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:01.289092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:02.289959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:03.289963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:04.290057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:05.290670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:06.290815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:07.290941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:08.291137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:09.291400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:10.292055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:11.292132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:12.292365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:13.292696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:14.293346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:15.293904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:16.295042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:17.295349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:18.296031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:19.296587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:20.296603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:21.297914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:22.298239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:23.298290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:24.299143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:25.299397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:26.299876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:27.300417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:28.300816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:29.301324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:30.301269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:31.302393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:32.308203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:33.314672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:34.310952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:35.313414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:36.311642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:37.312291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:38.312366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:39.313330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:40.313807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:41.314123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:42.314335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:43.314552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:44.314790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:45.314905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:46.315481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:47.316064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:48.316308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:49.317191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:50.317380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:51.317986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:52.318333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:53.318832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:54.319601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:55.319945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:56.320233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:57.320382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:58.321422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:50:59.322283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:00.323107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:01.323742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:02.324487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:03.324375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:04.325343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:05.325905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:06.326102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:07.326784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:08.327237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:09.328572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:10.329106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:11.329866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:12.329871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:13.330303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:14.331042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:15.331744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:16.332209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:17.332711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:18.333532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:19.334443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:20.335512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:21.335611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:22.336542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:23.336595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:24.337579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:25.337928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:26.338223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:27.338106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:28.338299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:29.338528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:30.339535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:31.339686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:32.342004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:33.342240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:34.342285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:35.342467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:36.343569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:37.343631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:38.343811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:39.344022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:40.344200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:41.344900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:42.345214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:43.345531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:44.346417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:45.346960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:46.348019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:47.348540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:48.348853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:49.349197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:50.349328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:51.349787      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:52.350559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:53.351567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:54.352626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:55.353356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:56.353472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:57.353678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:58.354498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:51:59.355975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:00.357052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:01.355992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:02.356378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:03.356452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:04.356449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:05.356556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:06.357110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:07.357258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:08.357466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:09.358205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:10.358736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:11.359582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:12.359612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:13.360822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:14.360394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:15.361227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:16.361575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:17.361814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:18.361924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:19.362958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:20.363307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:21.364257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:22.364514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:23.364695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:24.365809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:25.365801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:26.366607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:27.366902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:28.366909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:29.367052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:30.367398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:31.368316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:32.382031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:33.370731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:34.371524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:35.372567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:36.372693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:37.373351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:38.373435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:39.374537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:40.374962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:41.376130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:42.376327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:43.376745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:44.377503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:45.377815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:46.378542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:47.379222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:48.379624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:49.380754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:50.380985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:51.381176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:52.382450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:53.381783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:54.382749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:55.383177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:56.384212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:57.384443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:58.384573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:52:59.384945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:00.385923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:01.386620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:02.386792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:03.387170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:04.388212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:05.388234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:06.389383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:07.390004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:08.390290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:09.391248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:10.391890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:11.392048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:12.392312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:13.393071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:14.393692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:15.394118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:16.395120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:17.396057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:18.396303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:19.396520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:20.397229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:21.398249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:22.399263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:23.399783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:24.400075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:25.400806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:26.401593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:27.402404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:28.402780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:29.404188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:30.404912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:30.665: INFO: ResourceQuota "e2e-rq-status-gml8c" Spec was unchanged and /status reset
  Aug 24 15:53:30.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8154" for this suite. @ 08/24/23 15:53:30.684
• [270.218 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 08/24/23 15:53:30.726
  Aug 24 15:53:30.726: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename namespaces @ 08/24/23 15:53:30.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:53:30.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:53:30.792
  STEP: Updating Namespace "namespaces-9891" @ 08/24/23 15:53:30.8
  Aug 24 15:53:30.823: INFO: Namespace "namespaces-9891" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"d9d2b905-f445-420f-9083-5a97f4c1f284", "kubernetes.io/metadata.name":"namespaces-9891", "namespaces-9891":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Aug 24 15:53:30.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9891" for this suite. @ 08/24/23 15:53:30.837
• [0.130 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 08/24/23 15:53:30.857
  Aug 24 15:53:30.857: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:53:30.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:53:30.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:53:30.908
  STEP: Creating configMap with name projected-configmap-test-volume-d5d94e1f-fafa-40a2-a8d2-4642e8edeef8 @ 08/24/23 15:53:30.919
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:53:30.932
  E0824 15:53:31.405104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:32.407442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:33.406003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:34.406485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:53:34.99
  Aug 24 15:53:34.997: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-configmaps-9ec8fad1-797d-40bd-88c9-1a9777ba7cf9 container agnhost-container: <nil>
  STEP: delete the pod @ 08/24/23 15:53:35.031
  Aug 24 15:53:35.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-444" for this suite. @ 08/24/23 15:53:35.078
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 08/24/23 15:53:35.107
  Aug 24 15:53:35.108: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename container-probe @ 08/24/23 15:53:35.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:53:35.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:53:35.158
  STEP: Creating pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593 @ 08/24/23 15:53:35.164
  E0824 15:53:35.406663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:36.408330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:37.409217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:38.409435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/24/23 15:53:39.218
  Aug 24 15:53:39.229: INFO: Initial restart count of pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 is 0
  Aug 24 15:53:39.238: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:53:39.409945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:40.410654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:41.248: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:53:41.411875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:42.411731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:43.257: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:53:43.412028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:44.412699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:45.266: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:53:45.413237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:46.413760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:47.273: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:53:47.415001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:48.416841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:49.281: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:53:49.416723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:50.416702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:51.290: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:53:51.417548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:52.418389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:53.303: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:53:53.419843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:54.420889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:55.316: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:53:55.421436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:56.421906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:57.324: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  Aug 24 15:53:57.324: INFO: Restart count of pod container-probe-5593/liveness-6c626749-c36f-4746-8696-dc40f623b1b9 is now 1 (18.094781769s elapsed)
  E0824 15:53:57.422680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:53:58.423222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:53:59.332: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:53:59.423876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:00.425004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:01.341: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:01.424912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:02.425793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:03.350: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:03.425897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:04.426671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:05.359: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:05.426730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:06.427199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:07.368: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:07.427333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:08.428228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:09.375: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:09.428655      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:10.429261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:11.385: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:11.429863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:12.430051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:13.391: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:13.430724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:14.431526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:15.399: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:15.432078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:16.432835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:17.408: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  Aug 24 15:54:17.409: INFO: Restart count of pod container-probe-5593/liveness-6c626749-c36f-4746-8696-dc40f623b1b9 is now 2 (38.179788404s elapsed)
  E0824 15:54:17.433312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:18.433866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:19.416: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:19.434659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:20.434770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:21.426: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:21.435358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:22.435950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:23.436306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:23.436: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:24.436858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:25.437007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:25.448: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:26.437419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:27.437800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:27.456: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:28.438121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:29.439880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:29.467: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:30.439185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:31.439475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:31.476: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:32.445508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:33.442227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:33.489: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:34.442836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:35.443839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:35.499: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:36.443778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:37.444507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:37.507: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  Aug 24 15:54:37.507: INFO: Restart count of pod container-probe-5593/liveness-6c626749-c36f-4746-8696-dc40f623b1b9 is now 3 (58.278078134s elapsed)
  E0824 15:54:38.444640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:39.445704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:39.514: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:40.446288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:41.446379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:41.524: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:42.447126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:43.447390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:43.533: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:44.448222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:45.448557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:45.546: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:46.448760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:47.449249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:47.558: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:48.450059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:49.451168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:49.567: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:50.451439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:51.451963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:51.577: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:52.452167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:53.452266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:53.585: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:54.452841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:55.453607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:55.593: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:54:56.452827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:57.453005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:57.602: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  Aug 24 15:54:57.603: INFO: Restart count of pod container-probe-5593/liveness-6c626749-c36f-4746-8696-dc40f623b1b9 is now 4 (1m18.373294984s elapsed)
  E0824 15:54:58.453284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:54:59.454264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:54:59.613: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:00.455425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:01.455628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:01.622: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:02.456056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:03.456102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:03.629: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:04.456079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:05.456341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:05.636: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:06.456713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:07.456746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:07.645: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:08.457689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:09.458584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:09.653: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:10.458592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:11.459488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:11.661: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:12.460248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:13.460353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:13.678: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:14.461085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:15.461561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:15.718: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:16.462263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:17.463004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:17.726: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:18.463679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:19.464661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:19.733: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:20.465677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:21.466339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:21.741: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:22.467017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:23.467390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:23.746: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:24.468523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:25.469197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:25.755: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:26.469448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:27.470079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:27.761: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:28.470180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:29.470397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:29.772: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:30.470620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:31.471127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:31.781: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:32.471337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:33.471696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:33.790: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:34.472802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:35.472905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:35.797: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:36.473925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:37.474720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:37.807: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:38.477102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:39.476895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:39.816: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:40.477160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:41.478479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:41.824: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:42.477924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:43.478364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:43.832: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:44.478975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:45.479626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:45.841: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:46.480244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:47.480191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:47.849: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:48.481085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:49.481269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:49.859: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:50.481696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:51.481956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:51.870: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:52.482830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:53.483744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:53.876: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:54.483692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:55.483917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:55.891: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:56.485684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:57.485613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:57.904: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:55:58.485892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:55:59.486862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:55:59.911: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:56:00.487249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:01.487833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:01.918: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:56:02.488027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:03.488563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:03.927: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:56:04.488974      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:05.489078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:05.938: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:56:06.489465      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:07.490025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:07.946: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:56:08.490099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:09.490485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:09.955: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  E0824 15:56:10.491071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:11.491556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:11.964: INFO: Get pod liveness-6c626749-c36f-4746-8696-dc40f623b1b9 in namespace container-probe-5593
  Aug 24 15:56:11.965: INFO: Restart count of pod container-probe-5593/liveness-6c626749-c36f-4746-8696-dc40f623b1b9 is now 5 (2m32.735477687s elapsed)
  Aug 24 15:56:11.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:56:11.976
  STEP: Destroying namespace "container-probe-5593" for this suite. @ 08/24/23 15:56:12.001
• [156.920 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 08/24/23 15:56:12.039
  Aug 24 15:56:12.039: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:56:12.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:12.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:12.105
  STEP: Setting up server cert @ 08/24/23 15:56:12.182
  E0824 15:56:12.491816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:56:12.858
  STEP: Deploying the webhook pod @ 08/24/23 15:56:12.875
  STEP: Wait for the deployment to be ready @ 08/24/23 15:56:12.906
  Aug 24 15:56:12.914: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0824 15:56:13.492074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:14.492541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:56:14.937
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:56:14.956
  E0824 15:56:15.493538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:15.956: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/24/23 15:56:16.073
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/24/23 15:56:16.164
  STEP: Deleting the collection of validation webhooks @ 08/24/23 15:56:16.283
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/24/23 15:56:16.378
  Aug 24 15:56:16.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7511" for this suite. @ 08/24/23 15:56:16.482
  E0824 15:56:16.510932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-2335" for this suite. @ 08/24/23 15:56:16.511
• [4.488 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 08/24/23 15:56:16.532
  Aug 24 15:56:16.532: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/24/23 15:56:16.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:16.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:16.578
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 08/24/23 15:56:16.583
  Aug 24 15:56:16.586: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:56:17.504366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:18.501267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:18.510: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:56:19.501616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:20.502341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:21.503442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:22.503612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:23.503773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:24.504684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:25.505993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:26.513896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:56:26.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8846" for this suite. @ 08/24/23 15:56:26.907
• [10.395 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 08/24/23 15:56:26.928
  Aug 24 15:56:26.928: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename job @ 08/24/23 15:56:26.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:56:26.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:56:26.978
  STEP: Creating a job @ 08/24/23 15:56:26.986
  STEP: Ensuring active pods == parallelism @ 08/24/23 15:56:27.001
  E0824 15:56:27.514543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:28.514585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:29.515034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:30.515348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 08/24/23 15:56:31.011
  STEP: deleting Job.batch foo in namespace job-475, will wait for the garbage collector to delete the pods @ 08/24/23 15:56:31.011
  Aug 24 15:56:31.113: INFO: Deleting Job.batch foo took: 40.817164ms
  Aug 24 15:56:31.215: INFO: Terminating Job.batch foo pods took: 101.523169ms
  E0824 15:56:31.515747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:32.517927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:33.518598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:34.519592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:35.520254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:36.520861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:37.521883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:38.522139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:39.522658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:40.523696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:41.524628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:42.524893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:43.525726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:44.525913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:45.526696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:46.527114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:47.527666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:48.529987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:49.530260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:50.530924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:51.531138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:52.532179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:53.532644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:54.533093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:55.533861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:56.534113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:57.534431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:58.534773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:56:59.535030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:00.536294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:01.536529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 08/24/23 15:57:02.517
  Aug 24 15:57:02.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0824 15:57:02.537182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "job-475" for this suite. @ 08/24/23 15:57:02.538
• [35.651 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 08/24/23 15:57:02.587
  Aug 24 15:57:02.587: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:57:02.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:02.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:02.627
  STEP: Setting up server cert @ 08/24/23 15:57:02.673
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:57:03.314
  STEP: Deploying the webhook pod @ 08/24/23 15:57:03.331
  STEP: Wait for the deployment to be ready @ 08/24/23 15:57:03.353
  Aug 24 15:57:03.367: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0824 15:57:03.537331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:04.538233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:05.414: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 24, 15, 57, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 57, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 24, 15, 57, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 24, 15, 57, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0824 15:57:05.539086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:06.539215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:57:07.423
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:57:07.454
  E0824 15:57:07.540010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:08.464: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0824 15:57:08.541190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 08/24/23 15:57:08.594
  STEP: Creating a configMap that should be mutated @ 08/24/23 15:57:08.635
  STEP: Deleting the collection of validation webhooks @ 08/24/23 15:57:08.684
  STEP: Creating a configMap that should not be mutated @ 08/24/23 15:57:08.782
  Aug 24 15:57:08.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9056" for this suite. @ 08/24/23 15:57:08.915
  STEP: Destroying namespace "webhook-markers-1120" for this suite. @ 08/24/23 15:57:08.936
• [6.376 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 08/24/23 15:57:08.966
  Aug 24 15:57:08.967: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename configmap @ 08/24/23 15:57:08.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:09.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:09.018
  STEP: Creating configMap configmap-4179/configmap-test-c369a85e-eb65-4b8c-9921-e167e680be99 @ 08/24/23 15:57:09.023
  STEP: Creating a pod to test consume configMaps @ 08/24/23 15:57:09.032
  E0824 15:57:09.541610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:10.553933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:11.555088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:12.555462      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:57:13.082
  Aug 24 15:57:13.089: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-configmaps-599e36f0-49de-4412-bfde-9664db08c80a container env-test: <nil>
  STEP: delete the pod @ 08/24/23 15:57:13.116
  Aug 24 15:57:13.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4179" for this suite. @ 08/24/23 15:57:13.151
• [4.202 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 08/24/23 15:57:13.17
  Aug 24 15:57:13.170: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename prestop @ 08/24/23 15:57:13.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:13.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:13.216
  STEP: Creating server pod server in namespace prestop-8078 @ 08/24/23 15:57:13.221
  STEP: Waiting for pods to come up. @ 08/24/23 15:57:13.234
  E0824 15:57:13.555567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:14.556685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-8078 @ 08/24/23 15:57:15.259
  E0824 15:57:15.557251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:16.558483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 08/24/23 15:57:17.288
  E0824 15:57:17.559264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:18.561383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:19.560967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:20.567136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:21.563042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:22.314: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Aug 24 15:57:22.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 08/24/23 15:57:22.336
  STEP: Destroying namespace "prestop-8078" for this suite. @ 08/24/23 15:57:22.403
• [9.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 08/24/23 15:57:22.431
  Aug 24 15:57:22.431: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename dns @ 08/24/23 15:57:22.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:22.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:22.491
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/24/23 15:57:22.504
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/24/23 15:57:22.505
  STEP: creating a pod to probe DNS @ 08/24/23 15:57:22.505
  STEP: submitting the pod to kubernetes @ 08/24/23 15:57:22.506
  E0824 15:57:22.563809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:23.565447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:24.565698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/24/23 15:57:24.629
  STEP: looking for the results for each expected name from probers @ 08/24/23 15:57:24.637
  Aug 24 15:57:24.681: INFO: DNS probes using dns-4516/dns-test-21bf3fed-1bdb-48be-a075-73242fd9656b succeeded

  Aug 24 15:57:24.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/24/23 15:57:24.691
  STEP: Destroying namespace "dns-4516" for this suite. @ 08/24/23 15:57:24.735
• [2.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 08/24/23 15:57:24.765
  Aug 24 15:57:24.765: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename statefulset @ 08/24/23 15:57:24.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:24.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:24.811
  STEP: Creating service test in namespace statefulset-7194 @ 08/24/23 15:57:24.816
  STEP: Creating statefulset ss in namespace statefulset-7194 @ 08/24/23 15:57:24.846
  Aug 24 15:57:24.868: INFO: Found 0 stateful pods, waiting for 1
  E0824 15:57:25.565669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:26.574239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:27.577081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:28.578625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:29.576727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:30.577989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:31.577518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:32.579504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:33.578845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:34.579026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:34.880: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 08/24/23 15:57:34.893
  STEP: Getting /status @ 08/24/23 15:57:34.921
  Aug 24 15:57:34.931: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 08/24/23 15:57:34.931
  Aug 24 15:57:34.954: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 08/24/23 15:57:34.955
  Aug 24 15:57:34.961: INFO: Observed &StatefulSet event: ADDED
  Aug 24 15:57:34.962: INFO: Found Statefulset ss in namespace statefulset-7194 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 24 15:57:34.963: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 08/24/23 15:57:34.964
  Aug 24 15:57:34.964: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 24 15:57:34.984: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 08/24/23 15:57:34.985
  Aug 24 15:57:34.992: INFO: Observed &StatefulSet event: ADDED
  Aug 24 15:57:34.993: INFO: Deleting all statefulset in ns statefulset-7194
  Aug 24 15:57:34.998: INFO: Scaling statefulset ss to 0
  E0824 15:57:35.580248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:36.580706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:37.580621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:38.580762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:39.582144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:40.582503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:41.582917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:42.583863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:43.584157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:44.584867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:45.032: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 24 15:57:45.038: INFO: Deleting statefulset ss
  Aug 24 15:57:45.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7194" for this suite. @ 08/24/23 15:57:45.094
• [20.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 08/24/23 15:57:45.113
  Aug 24 15:57:45.113: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/24/23 15:57:45.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:45.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:45.163
  Aug 24 15:57:45.167: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  E0824 15:57:45.585287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:46.586033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:47.586648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:48.586573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:48.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4510" for this suite. @ 08/24/23 15:57:48.731
• [3.635 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 08/24/23 15:57:48.754
  Aug 24 15:57:48.754: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename downward-api @ 08/24/23 15:57:48.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:48.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:48.793
  STEP: Creating the pod @ 08/24/23 15:57:48.798
  E0824 15:57:49.588109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:50.591945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:51.376: INFO: Successfully updated pod "annotationupdate36e3d2e0-9f29-4ab5-8654-89591dedaabd"
  E0824 15:57:51.590725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:52.590673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:53.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9005" for this suite. @ 08/24/23 15:57:53.423
• [4.682 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 08/24/23 15:57:53.441
  Aug 24 15:57:53.441: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:57:53.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:53.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:53.486
  STEP: Creating secret with name projected-secret-test-69c4e812-f5b9-44e6-bd5c-4d7d600304c0 @ 08/24/23 15:57:53.49
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:57:53.499
  E0824 15:57:53.591411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:54.592035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:55.592758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:56.593444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:57:57.543
  Aug 24 15:57:57.550: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-secrets-11d41700-ea45-4fb4-9738-13f9e367fc13 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:57:57.563
  E0824 15:57:57.594299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:57:57.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7264" for this suite. @ 08/24/23 15:57:57.605
• [4.179 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 08/24/23 15:57:57.63
  Aug 24 15:57:57.630: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:57:57.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:57:57.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:57:57.689
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-a2b4a25b-d52a-47ed-b54b-2b7606b0b4ee @ 08/24/23 15:57:57.707
  STEP: Creating the pod @ 08/24/23 15:57:57.72
  E0824 15:57:58.595035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:57:59.595865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-a2b4a25b-d52a-47ed-b54b-2b7606b0b4ee @ 08/24/23 15:57:59.809
  STEP: waiting to observe update in volume @ 08/24/23 15:57:59.817
  E0824 15:58:00.596940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:01.597295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:02.598422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:03.598532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:04.599700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:05.599909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:06.600150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:07.600753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:08.600686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:09.601809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:10.602004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:11.602474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:12.602930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:13.603429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:14.603822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:15.604218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:16.604297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:17.604511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:18.604791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:19.605053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:20.606208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:21.606711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:22.607107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:23.608465      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:24.608175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:25.608842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:26.611721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:27.609603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:28.609934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:29.610376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:30.611450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:31.612327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:32.612570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:33.612720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:34.613198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:35.614076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:36.614331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:37.614428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:38.614547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:39.614626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:40.614654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:41.615457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:42.616471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:43.617368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:44.618559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:45.618751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:46.619586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:47.620268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:48.620475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:49.621453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:50.621139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:51.621030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:52.621751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:53.621943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:54.622721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:55.623465      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:56.623710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:57.624086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:58.625185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:58:59.625247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:00.626064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:01.626396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:02.626742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:03.627793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:04.630000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:05.630374      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:06.630728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:07.631837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:08.632554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:09.633790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:10.633715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:11.633988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:12.635097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:13.635485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:14.635482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:15.636049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:16.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1107" for this suite. @ 08/24/23 15:59:16.506
• [78.893 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 08/24/23 15:59:16.525
  Aug 24 15:59:16.526: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename job @ 08/24/23 15:59:16.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:59:16.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:59:16.577
  STEP: Creating a suspended job @ 08/24/23 15:59:16.593
  STEP: Patching the Job @ 08/24/23 15:59:16.612
  E0824 15:59:16.636598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Watching for Job to be patched @ 08/24/23 15:59:16.646
  Aug 24 15:59:16.649: INFO: Event ADDED observed for Job e2e-48fpg in namespace job-5810 with labels: map[e2e-job-label:e2e-48fpg] and annotations: map[]
  Aug 24 15:59:16.649: INFO: Event MODIFIED observed for Job e2e-48fpg in namespace job-5810 with labels: map[e2e-job-label:e2e-48fpg] and annotations: map[]
  Aug 24 15:59:16.649: INFO: Event MODIFIED found for Job e2e-48fpg in namespace job-5810 with labels: map[e2e-48fpg:patched e2e-job-label:e2e-48fpg] and annotations: map[]
  STEP: Updating the job @ 08/24/23 15:59:16.649
  STEP: Watching for Job to be updated @ 08/24/23 15:59:16.669
  Aug 24 15:59:16.673: INFO: Event MODIFIED found for Job e2e-48fpg in namespace job-5810 with labels: map[e2e-48fpg:patched e2e-job-label:e2e-48fpg] and annotations: map[updated:true]
  Aug 24 15:59:16.674: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 08/24/23 15:59:16.675
  Aug 24 15:59:16.681: INFO: Job: e2e-48fpg as labels: map[e2e-48fpg:patched e2e-job-label:e2e-48fpg]
  STEP: Waiting for job to complete @ 08/24/23 15:59:16.681
  E0824 15:59:17.636930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:18.637143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:19.638159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:20.637905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:21.641748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:22.641516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:23.641927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:24.642282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:25.644031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:26.644622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 08/24/23 15:59:26.695
  STEP: Watching for Job to be deleted @ 08/24/23 15:59:26.714
  Aug 24 15:59:26.719: INFO: Event MODIFIED observed for Job e2e-48fpg in namespace job-5810 with labels: map[e2e-48fpg:patched e2e-job-label:e2e-48fpg] and annotations: map[updated:true]
  Aug 24 15:59:26.719: INFO: Event MODIFIED observed for Job e2e-48fpg in namespace job-5810 with labels: map[e2e-48fpg:patched e2e-job-label:e2e-48fpg] and annotations: map[updated:true]
  Aug 24 15:59:26.720: INFO: Event MODIFIED observed for Job e2e-48fpg in namespace job-5810 with labels: map[e2e-48fpg:patched e2e-job-label:e2e-48fpg] and annotations: map[updated:true]
  Aug 24 15:59:26.720: INFO: Event MODIFIED observed for Job e2e-48fpg in namespace job-5810 with labels: map[e2e-48fpg:patched e2e-job-label:e2e-48fpg] and annotations: map[updated:true]
  Aug 24 15:59:26.721: INFO: Event MODIFIED observed for Job e2e-48fpg in namespace job-5810 with labels: map[e2e-48fpg:patched e2e-job-label:e2e-48fpg] and annotations: map[updated:true]
  Aug 24 15:59:26.721: INFO: Event DELETED found for Job e2e-48fpg in namespace job-5810 with labels: map[e2e-48fpg:patched e2e-job-label:e2e-48fpg] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 08/24/23 15:59:26.724
  Aug 24 15:59:26.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5810" for this suite. @ 08/24/23 15:59:26.783
• [10.271 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 08/24/23 15:59:26.798
  Aug 24 15:59:26.798: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename sysctl @ 08/24/23 15:59:26.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:59:26.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:59:26.847
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 08/24/23 15:59:26.851
  STEP: Watching for error events or started pod @ 08/24/23 15:59:26.866
  E0824 15:59:27.645204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:28.645554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 08/24/23 15:59:28.876
  E0824 15:59:29.646297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:30.646956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 08/24/23 15:59:30.904
  STEP: Getting logs from the pod @ 08/24/23 15:59:30.904
  STEP: Checking that the sysctl is actually updated @ 08/24/23 15:59:30.92
  Aug 24 15:59:30.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5519" for this suite. @ 08/24/23 15:59:30.933
• [4.150 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 08/24/23 15:59:30.953
  Aug 24 15:59:30.954: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename webhook @ 08/24/23 15:59:30.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:59:30.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:59:31.128
  STEP: Setting up server cert @ 08/24/23 15:59:31.196
  E0824 15:59:31.647498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/24/23 15:59:31.711
  STEP: Deploying the webhook pod @ 08/24/23 15:59:31.73
  STEP: Wait for the deployment to be ready @ 08/24/23 15:59:31.766
  Aug 24 15:59:31.789: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0824 15:59:32.653431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:33.650124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/24/23 15:59:33.827
  STEP: Verifying the service has paired with the endpoint @ 08/24/23 15:59:33.87
  E0824 15:59:34.651116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:34.871: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 08/24/23 15:59:34.884
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 08/24/23 15:59:34.927
  STEP: Creating a configMap that should not be mutated @ 08/24/23 15:59:34.939
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 08/24/23 15:59:34.961
  STEP: Creating a configMap that should be mutated @ 08/24/23 15:59:34.972
  Aug 24 15:59:35.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4905" for this suite. @ 08/24/23 15:59:35.101
  STEP: Destroying namespace "webhook-markers-9004" for this suite. @ 08/24/23 15:59:35.124
• [4.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 08/24/23 15:59:35.166
  Aug 24 15:59:35.166: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename field-validation @ 08/24/23 15:59:35.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:59:35.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:59:35.205
  STEP: apply creating a deployment @ 08/24/23 15:59:35.209
  Aug 24 15:59:35.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2745" for this suite. @ 08/24/23 15:59:35.237
• [0.082 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 08/24/23 15:59:35.249
  Aug 24 15:59:35.249: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename projected @ 08/24/23 15:59:35.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:59:35.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:59:35.281
  STEP: Creating projection with secret that has name projected-secret-test-6a7f1051-7867-4762-ab1e-e7b575815192 @ 08/24/23 15:59:35.285
  STEP: Creating a pod to test consume secrets @ 08/24/23 15:59:35.294
  E0824 15:59:35.652090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:36.652300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:37.653273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:38.653898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/24/23 15:59:39.333
  Aug 24 15:59:39.339: INFO: Trying to get logs from node dae4wichuiha-1 pod pod-projected-secrets-043c8bf4-675c-43e6-91e3-80a9ca27c815 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/24/23 15:59:39.35
  Aug 24 15:59:39.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2280" for this suite. @ 08/24/23 15:59:39.382
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 08/24/23 15:59:39.404
  Aug 24 15:59:39.404: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename svc-latency @ 08/24/23 15:59:39.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:59:39.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:59:39.446
  Aug 24 15:59:39.450: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-7835 @ 08/24/23 15:59:39.452
  I0824 15:59:39.473973      14 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7835, replica count: 1
  E0824 15:59:39.654185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:59:40.535205      14 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0824 15:59:40.655203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0824 15:59:41.538583      14 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0824 15:59:41.672805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:41.674: INFO: Created: latency-svc-xpt4p
  Aug 24 15:59:41.674: INFO: Got endpoints: latency-svc-xpt4p [35.042697ms]
  Aug 24 15:59:41.710: INFO: Created: latency-svc-9kz7x
  Aug 24 15:59:41.828: INFO: Got endpoints: latency-svc-9kz7x [152.90149ms]
  Aug 24 15:59:41.829: INFO: Created: latency-svc-b2sw9
  Aug 24 15:59:41.829: INFO: Created: latency-svc-wj9xp
  Aug 24 15:59:41.830: INFO: Created: latency-svc-r7mq5
  Aug 24 15:59:41.831: INFO: Created: latency-svc-kcvbl
  Aug 24 15:59:41.831: INFO: Created: latency-svc-khjdd
  Aug 24 15:59:41.834: INFO: Created: latency-svc-m4whl
  Aug 24 15:59:41.836: INFO: Created: latency-svc-fjqqz
  Aug 24 15:59:41.836: INFO: Created: latency-svc-krqqx
  Aug 24 15:59:41.837: INFO: Created: latency-svc-tdwr9
  Aug 24 15:59:41.837: INFO: Got endpoints: latency-svc-khjdd [159.345312ms]
  Aug 24 15:59:41.838: INFO: Got endpoints: latency-svc-wj9xp [163.190603ms]
  Aug 24 15:59:41.839: INFO: Got endpoints: latency-svc-b2sw9 [163.733351ms]
  Aug 24 15:59:41.840: INFO: Got endpoints: latency-svc-kcvbl [163.59277ms]
  Aug 24 15:59:41.840: INFO: Got endpoints: latency-svc-r7mq5 [164.989274ms]
  Aug 24 15:59:41.840: INFO: Got endpoints: latency-svc-m4whl [162.867862ms]
  Aug 24 15:59:42.030: INFO: Created: latency-svc-5rjp8
  Aug 24 15:59:42.031: INFO: Created: latency-svc-nspdz
  Aug 24 15:59:42.031: INFO: Created: latency-svc-2q8qh
  Aug 24 15:59:42.031: INFO: Created: latency-svc-nmpl5
  Aug 24 15:59:42.032: INFO: Created: latency-svc-gnb6h
  Aug 24 15:59:42.032: INFO: Created: latency-svc-9w24z
  Aug 24 15:59:42.032: INFO: Created: latency-svc-9zvvd
  Aug 24 15:59:42.034: INFO: Created: latency-svc-rn28g
  Aug 24 15:59:42.045: INFO: Got endpoints: latency-svc-rn28g [205.340567ms]
  Aug 24 15:59:42.034: INFO: Created: latency-svc-spnzt
  Aug 24 15:59:42.037: INFO: Created: latency-svc-wnqmk
  Aug 24 15:59:42.041: INFO: Created: latency-svc-k5sp2
  Aug 24 15:59:42.044: INFO: Got endpoints: latency-svc-2q8qh [205.49009ms]
  Aug 24 15:59:42.044: INFO: Got endpoints: latency-svc-fjqqz [366.120641ms]
  Aug 24 15:59:42.044: INFO: Got endpoints: latency-svc-krqqx [365.479583ms]
  Aug 24 15:59:42.044: INFO: Got endpoints: latency-svc-tdwr9 [365.675353ms]
  Aug 24 15:59:42.044: INFO: Got endpoints: latency-svc-5rjp8 [364.97019ms]
  Aug 24 15:59:42.044: INFO: Got endpoints: latency-svc-nspdz [364.754522ms]
  Aug 24 15:59:42.044: INFO: Got endpoints: latency-svc-9zvvd [364.575129ms]
  Aug 24 15:59:42.044: INFO: Got endpoints: latency-svc-gnb6h [203.765559ms]
  Aug 24 15:59:42.044: INFO: Got endpoints: latency-svc-nmpl5 [204.475276ms]
  Aug 24 15:59:42.044: INFO: Got endpoints: latency-svc-9w24z [216.335381ms]
  Aug 24 15:59:42.047: INFO: Created: latency-svc-6fxwc
  Aug 24 15:59:42.047: INFO: Got endpoints: latency-svc-spnzt [209.653781ms]
  Aug 24 15:59:42.048: INFO: Got endpoints: latency-svc-wnqmk [207.977492ms]
  Aug 24 15:59:42.048: INFO: Got endpoints: latency-svc-k5sp2 [369.800932ms]
  Aug 24 15:59:42.051: INFO: Got endpoints: latency-svc-6fxwc [371.283662ms]
  Aug 24 15:59:42.079: INFO: Created: latency-svc-cjc6j
  Aug 24 15:59:42.080: INFO: Got endpoints: latency-svc-cjc6j [32.839287ms]
  Aug 24 15:59:42.209: INFO: Created: latency-svc-4pjp7
  Aug 24 15:59:42.210: INFO: Created: latency-svc-tmgtx
  Aug 24 15:59:42.212: INFO: Created: latency-svc-kt5pv
  Aug 24 15:59:42.212: INFO: Created: latency-svc-z2wql
  Aug 24 15:59:42.213: INFO: Created: latency-svc-mwvt4
  Aug 24 15:59:42.218: INFO: Created: latency-svc-mkbgh
  Aug 24 15:59:42.218: INFO: Created: latency-svc-n2qnl
  Aug 24 15:59:42.218: INFO: Created: latency-svc-chqf5
  Aug 24 15:59:42.218: INFO: Created: latency-svc-9j7k2
  Aug 24 15:59:42.218: INFO: Created: latency-svc-flvnp
  Aug 24 15:59:42.229: INFO: Created: latency-svc-njcst
  Aug 24 15:59:42.334: INFO: Created: latency-svc-vhdfv
  Aug 24 15:59:42.339: INFO: Created: latency-svc-pmw89
  Aug 24 15:59:42.341: INFO: Created: latency-svc-gx4pn
  Aug 24 15:59:42.342: INFO: Created: latency-svc-hqb74
  Aug 24 15:59:42.342: INFO: Got endpoints: latency-svc-chqf5 [290.395911ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-4pjp7 [292.861732ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-gx4pn [263.46317ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-mkbgh [292.413637ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-z2wql [292.176075ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-njcst [292.833191ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-tmgtx [293.254495ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-kt5pv [293.404232ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-mwvt4 [291.810281ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-hqb74 [293.580352ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-pmw89 [292.107288ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-vhdfv [292.306582ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-n2qnl [294.142202ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-9j7k2 [293.895541ms]
  Aug 24 15:59:42.343: INFO: Got endpoints: latency-svc-flvnp [292.597541ms]
  Aug 24 15:59:42.364: INFO: Created: latency-svc-zd8fv
  Aug 24 15:59:42.379: INFO: Got endpoints: latency-svc-zd8fv [36.901842ms]
  Aug 24 15:59:42.381: INFO: Created: latency-svc-c7f7n
  Aug 24 15:59:42.393: INFO: Got endpoints: latency-svc-c7f7n [50.076446ms]
  Aug 24 15:59:42.394: INFO: Created: latency-svc-7vrlj
  Aug 24 15:59:42.416: INFO: Created: latency-svc-7sr42
  Aug 24 15:59:42.421: INFO: Got endpoints: latency-svc-7sr42 [76.871107ms]
  Aug 24 15:59:42.430: INFO: Created: latency-svc-lwzqs
  Aug 24 15:59:42.431: INFO: Got endpoints: latency-svc-7vrlj [87.531723ms]
  Aug 24 15:59:42.433: INFO: Created: latency-svc-5tl2z
  Aug 24 15:59:42.453: INFO: Got endpoints: latency-svc-lwzqs [108.688263ms]
  Aug 24 15:59:42.462: INFO: Got endpoints: latency-svc-5tl2z [119.148765ms]
  Aug 24 15:59:42.469: INFO: Created: latency-svc-wtrwn
  Aug 24 15:59:42.472: INFO: Created: latency-svc-zng26
  Aug 24 15:59:42.500: INFO: Got endpoints: latency-svc-zng26 [156.144269ms]
  Aug 24 15:59:42.492: INFO: Created: latency-svc-bb4s8
  Aug 24 15:59:42.496: INFO: Created: latency-svc-fqz5v
  Aug 24 15:59:42.500: INFO: Created: latency-svc-27xr4
  Aug 24 15:59:42.505: INFO: Created: latency-svc-2pxjf
  Aug 24 15:59:42.511: INFO: Created: latency-svc-l48wp
  Aug 24 15:59:42.525: INFO: Got endpoints: latency-svc-wtrwn [180.000929ms]
  Aug 24 15:59:42.532: INFO: Created: latency-svc-h645d
  Aug 24 15:59:42.533: INFO: Created: latency-svc-6rvr4
  Aug 24 15:59:42.538: INFO: Created: latency-svc-n5945
  Aug 24 15:59:42.601: INFO: Got endpoints: latency-svc-2pxjf [256.041999ms]
  Aug 24 15:59:42.601: INFO: Created: latency-svc-6dcpj
  Aug 24 15:59:42.618: INFO: Created: latency-svc-bn8ks
  Aug 24 15:59:42.624: INFO: Created: latency-svc-hrhxf
  Aug 24 15:59:42.639: INFO: Got endpoints: latency-svc-bb4s8 [293.831962ms]
  Aug 24 15:59:42.639: INFO: Created: latency-svc-tx4kx
  Aug 24 15:59:42.652: INFO: Created: latency-svc-rm2rm
  Aug 24 15:59:42.668: INFO: Got endpoints: latency-svc-fqz5v [323.560561ms]
  E0824 15:59:42.687619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:42.688: INFO: Created: latency-svc-gd57n
  Aug 24 15:59:42.689: INFO: Created: latency-svc-nbrsh
  Aug 24 15:59:42.691: INFO: Created: latency-svc-4j864
  Aug 24 15:59:42.706: INFO: Created: latency-svc-bgfsb
  Aug 24 15:59:42.709: INFO: Created: latency-svc-wmscn
  Aug 24 15:59:42.724: INFO: Got endpoints: latency-svc-27xr4 [378.578717ms]
  Aug 24 15:59:42.741: INFO: Created: latency-svc-869pm
  Aug 24 15:59:42.773: INFO: Got endpoints: latency-svc-l48wp [427.696562ms]
  Aug 24 15:59:42.796: INFO: Created: latency-svc-trtb5
  Aug 24 15:59:42.829: INFO: Got endpoints: latency-svc-h645d [484.058882ms]
  Aug 24 15:59:42.856: INFO: Created: latency-svc-wgjbl
  Aug 24 15:59:42.871: INFO: Got endpoints: latency-svc-6rvr4 [525.068486ms]
  Aug 24 15:59:42.888: INFO: Created: latency-svc-jvjrv
  Aug 24 15:59:42.919: INFO: Got endpoints: latency-svc-n5945 [540.515662ms]
  Aug 24 15:59:42.941: INFO: Created: latency-svc-cj8bv
  Aug 24 15:59:42.971: INFO: Got endpoints: latency-svc-6dcpj [578.452972ms]
  Aug 24 15:59:42.993: INFO: Created: latency-svc-5hqgv
  Aug 24 15:59:43.022: INFO: Got endpoints: latency-svc-bn8ks [595.477907ms]
  Aug 24 15:59:43.046: INFO: Created: latency-svc-jbnkt
  Aug 24 15:59:43.076: INFO: Got endpoints: latency-svc-hrhxf [643.813357ms]
  Aug 24 15:59:43.103: INFO: Created: latency-svc-nvbl5
  Aug 24 15:59:43.122: INFO: Got endpoints: latency-svc-tx4kx [668.561018ms]
  Aug 24 15:59:43.147: INFO: Created: latency-svc-jlnn4
  Aug 24 15:59:43.168: INFO: Got endpoints: latency-svc-rm2rm [703.949673ms]
  Aug 24 15:59:43.201: INFO: Created: latency-svc-wfb97
  Aug 24 15:59:43.224: INFO: Got endpoints: latency-svc-nbrsh [721.847777ms]
  Aug 24 15:59:43.241: INFO: Created: latency-svc-jz7xc
  Aug 24 15:59:43.271: INFO: Got endpoints: latency-svc-gd57n [741.767921ms]
  Aug 24 15:59:43.288: INFO: Created: latency-svc-8pts9
  Aug 24 15:59:43.322: INFO: Got endpoints: latency-svc-4j864 [718.692758ms]
  Aug 24 15:59:43.339: INFO: Created: latency-svc-sxbbr
  Aug 24 15:59:43.370: INFO: Got endpoints: latency-svc-bgfsb [730.96503ms]
  Aug 24 15:59:43.394: INFO: Created: latency-svc-xq86j
  Aug 24 15:59:43.427: INFO: Got endpoints: latency-svc-wmscn [758.747335ms]
  Aug 24 15:59:43.451: INFO: Created: latency-svc-klffh
  Aug 24 15:59:43.470: INFO: Got endpoints: latency-svc-869pm [746.288822ms]
  Aug 24 15:59:43.490: INFO: Created: latency-svc-8bqkm
  Aug 24 15:59:43.522: INFO: Got endpoints: latency-svc-trtb5 [748.555039ms]
  Aug 24 15:59:43.544: INFO: Created: latency-svc-k829c
  Aug 24 15:59:43.571: INFO: Got endpoints: latency-svc-wgjbl [740.793106ms]
  Aug 24 15:59:43.591: INFO: Created: latency-svc-qj674
  Aug 24 15:59:43.625: INFO: Got endpoints: latency-svc-jvjrv [754.120821ms]
  Aug 24 15:59:43.648: INFO: Created: latency-svc-n7zfs
  Aug 24 15:59:43.670: INFO: Got endpoints: latency-svc-cj8bv [750.444699ms]
  E0824 15:59:43.685612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:43.696: INFO: Created: latency-svc-g4dpg
  Aug 24 15:59:43.723: INFO: Got endpoints: latency-svc-5hqgv [751.257542ms]
  Aug 24 15:59:43.748: INFO: Created: latency-svc-bnt4p
  Aug 24 15:59:43.773: INFO: Got endpoints: latency-svc-jbnkt [750.700726ms]
  Aug 24 15:59:43.791: INFO: Created: latency-svc-2jwld
  Aug 24 15:59:43.827: INFO: Got endpoints: latency-svc-nvbl5 [749.111906ms]
  Aug 24 15:59:43.853: INFO: Created: latency-svc-xb8wp
  Aug 24 15:59:43.868: INFO: Got endpoints: latency-svc-jlnn4 [743.485647ms]
  Aug 24 15:59:43.895: INFO: Created: latency-svc-xszgk
  Aug 24 15:59:43.931: INFO: Got endpoints: latency-svc-wfb97 [756.157071ms]
  Aug 24 15:59:43.952: INFO: Created: latency-svc-6mq8q
  Aug 24 15:59:43.975: INFO: Got endpoints: latency-svc-jz7xc [750.563505ms]
  Aug 24 15:59:43.998: INFO: Created: latency-svc-cvkvs
  Aug 24 15:59:44.018: INFO: Got endpoints: latency-svc-8pts9 [746.821598ms]
  Aug 24 15:59:44.035: INFO: Created: latency-svc-97rk2
  Aug 24 15:59:44.072: INFO: Got endpoints: latency-svc-sxbbr [749.686099ms]
  Aug 24 15:59:44.091: INFO: Created: latency-svc-bzjjh
  Aug 24 15:59:44.121: INFO: Got endpoints: latency-svc-xq86j [750.750946ms]
  Aug 24 15:59:44.143: INFO: Created: latency-svc-74hkm
  Aug 24 15:59:44.174: INFO: Got endpoints: latency-svc-klffh [745.823391ms]
  Aug 24 15:59:44.191: INFO: Created: latency-svc-pckqx
  Aug 24 15:59:44.220: INFO: Got endpoints: latency-svc-8bqkm [749.162708ms]
  Aug 24 15:59:44.241: INFO: Created: latency-svc-9qppn
  Aug 24 15:59:44.271: INFO: Got endpoints: latency-svc-k829c [748.045295ms]
  Aug 24 15:59:44.296: INFO: Created: latency-svc-5v95g
  Aug 24 15:59:44.324: INFO: Got endpoints: latency-svc-qj674 [751.569223ms]
  Aug 24 15:59:44.351: INFO: Created: latency-svc-2slx5
  Aug 24 15:59:44.372: INFO: Got endpoints: latency-svc-n7zfs [746.007465ms]
  Aug 24 15:59:44.407: INFO: Created: latency-svc-rztww
  Aug 24 15:59:44.431: INFO: Got endpoints: latency-svc-g4dpg [760.198884ms]
  Aug 24 15:59:44.450: INFO: Created: latency-svc-pwc5z
  Aug 24 15:59:44.475: INFO: Got endpoints: latency-svc-bnt4p [750.33088ms]
  Aug 24 15:59:44.499: INFO: Created: latency-svc-ljcp5
  Aug 24 15:59:44.531: INFO: Got endpoints: latency-svc-2jwld [758.068442ms]
  Aug 24 15:59:44.555: INFO: Created: latency-svc-lqbks
  Aug 24 15:59:44.569: INFO: Got endpoints: latency-svc-xb8wp [741.855594ms]
  Aug 24 15:59:44.591: INFO: Created: latency-svc-pvtz6
  Aug 24 15:59:44.625: INFO: Got endpoints: latency-svc-xszgk [753.675484ms]
  Aug 24 15:59:44.645: INFO: Created: latency-svc-zhqct
  Aug 24 15:59:44.677: INFO: Got endpoints: latency-svc-6mq8q [745.118729ms]
  E0824 15:59:44.686756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:44.698: INFO: Created: latency-svc-57gv9
  Aug 24 15:59:44.735: INFO: Got endpoints: latency-svc-cvkvs [760.211634ms]
  Aug 24 15:59:44.764: INFO: Created: latency-svc-hbsd2
  Aug 24 15:59:44.778: INFO: Got endpoints: latency-svc-97rk2 [759.648478ms]
  Aug 24 15:59:44.803: INFO: Created: latency-svc-zcsdc
  Aug 24 15:59:44.827: INFO: Got endpoints: latency-svc-bzjjh [754.156686ms]
  Aug 24 15:59:44.880: INFO: Created: latency-svc-qxbv8
  Aug 24 15:59:44.879: INFO: Got endpoints: latency-svc-74hkm [758.011939ms]
  Aug 24 15:59:44.904: INFO: Created: latency-svc-q6wnc
  Aug 24 15:59:44.918: INFO: Got endpoints: latency-svc-pckqx [744.08249ms]
  Aug 24 15:59:44.952: INFO: Created: latency-svc-jqt9w
  Aug 24 15:59:44.978: INFO: Got endpoints: latency-svc-9qppn [758.817629ms]
  Aug 24 15:59:45.000: INFO: Created: latency-svc-w57xf
  Aug 24 15:59:45.027: INFO: Got endpoints: latency-svc-5v95g [754.981674ms]
  Aug 24 15:59:45.049: INFO: Created: latency-svc-ptntv
  Aug 24 15:59:45.075: INFO: Got endpoints: latency-svc-2slx5 [750.785825ms]
  Aug 24 15:59:45.093: INFO: Created: latency-svc-cn6nw
  Aug 24 15:59:45.117: INFO: Got endpoints: latency-svc-rztww [744.890221ms]
  Aug 24 15:59:45.137: INFO: Created: latency-svc-mjq94
  Aug 24 15:59:45.185: INFO: Got endpoints: latency-svc-pwc5z [753.612365ms]
  Aug 24 15:59:45.206: INFO: Created: latency-svc-w8swp
  Aug 24 15:59:45.231: INFO: Got endpoints: latency-svc-ljcp5 [755.228674ms]
  Aug 24 15:59:45.252: INFO: Created: latency-svc-lrmw6
  Aug 24 15:59:45.271: INFO: Got endpoints: latency-svc-lqbks [739.755884ms]
  Aug 24 15:59:45.293: INFO: Created: latency-svc-c2s9z
  Aug 24 15:59:45.323: INFO: Got endpoints: latency-svc-pvtz6 [752.80071ms]
  Aug 24 15:59:45.344: INFO: Created: latency-svc-269cm
  Aug 24 15:59:45.366: INFO: Got endpoints: latency-svc-zhqct [738.923541ms]
  Aug 24 15:59:45.388: INFO: Created: latency-svc-h674k
  Aug 24 15:59:45.422: INFO: Got endpoints: latency-svc-57gv9 [743.609833ms]
  Aug 24 15:59:45.441: INFO: Created: latency-svc-dmrwc
  Aug 24 15:59:45.473: INFO: Got endpoints: latency-svc-hbsd2 [737.079726ms]
  Aug 24 15:59:45.495: INFO: Created: latency-svc-8rqq5
  Aug 24 15:59:45.522: INFO: Got endpoints: latency-svc-zcsdc [744.186923ms]
  Aug 24 15:59:45.549: INFO: Created: latency-svc-vdzt6
  Aug 24 15:59:45.567: INFO: Got endpoints: latency-svc-qxbv8 [739.891637ms]
  Aug 24 15:59:45.588: INFO: Created: latency-svc-4jr4w
  Aug 24 15:59:45.623: INFO: Got endpoints: latency-svc-q6wnc [738.868766ms]
  Aug 24 15:59:45.643: INFO: Created: latency-svc-msxms
  Aug 24 15:59:45.671: INFO: Got endpoints: latency-svc-jqt9w [752.840277ms]
  E0824 15:59:45.687305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:45.689: INFO: Created: latency-svc-htbpd
  Aug 24 15:59:45.721: INFO: Got endpoints: latency-svc-w57xf [742.560719ms]
  Aug 24 15:59:45.744: INFO: Created: latency-svc-wr58w
  Aug 24 15:59:45.774: INFO: Got endpoints: latency-svc-ptntv [747.383606ms]
  Aug 24 15:59:45.802: INFO: Created: latency-svc-2wlk7
  Aug 24 15:59:45.833: INFO: Got endpoints: latency-svc-cn6nw [757.89295ms]
  Aug 24 15:59:45.852: INFO: Created: latency-svc-dqttg
  Aug 24 15:59:45.867: INFO: Got endpoints: latency-svc-mjq94 [749.638475ms]
  Aug 24 15:59:45.898: INFO: Created: latency-svc-9vf4c
  Aug 24 15:59:45.924: INFO: Got endpoints: latency-svc-w8swp [738.954419ms]
  Aug 24 15:59:45.962: INFO: Created: latency-svc-78gmh
  Aug 24 15:59:45.971: INFO: Got endpoints: latency-svc-lrmw6 [738.214802ms]
  Aug 24 15:59:46.004: INFO: Created: latency-svc-79jpq
  Aug 24 15:59:46.027: INFO: Got endpoints: latency-svc-c2s9z [755.65987ms]
  Aug 24 15:59:46.045: INFO: Created: latency-svc-h45l9
  Aug 24 15:59:46.082: INFO: Got endpoints: latency-svc-269cm [759.115356ms]
  Aug 24 15:59:46.098: INFO: Created: latency-svc-6jx5v
  Aug 24 15:59:46.117: INFO: Got endpoints: latency-svc-h674k [750.541118ms]
  Aug 24 15:59:46.137: INFO: Created: latency-svc-xb8cs
  Aug 24 15:59:46.170: INFO: Got endpoints: latency-svc-dmrwc [747.562003ms]
  Aug 24 15:59:46.186: INFO: Created: latency-svc-nwmc8
  Aug 24 15:59:46.225: INFO: Got endpoints: latency-svc-8rqq5 [751.359468ms]
  Aug 24 15:59:46.245: INFO: Created: latency-svc-tgv4q
  Aug 24 15:59:46.271: INFO: Got endpoints: latency-svc-vdzt6 [742.906516ms]
  Aug 24 15:59:46.288: INFO: Created: latency-svc-wc52f
  Aug 24 15:59:46.321: INFO: Got endpoints: latency-svc-4jr4w [754.203419ms]
  Aug 24 15:59:46.344: INFO: Created: latency-svc-k7n7r
  Aug 24 15:59:46.372: INFO: Got endpoints: latency-svc-msxms [748.67019ms]
  Aug 24 15:59:46.388: INFO: Created: latency-svc-slk5v
  Aug 24 15:59:46.420: INFO: Got endpoints: latency-svc-htbpd [748.194674ms]
  Aug 24 15:59:46.436: INFO: Created: latency-svc-7t4dm
  Aug 24 15:59:46.470: INFO: Got endpoints: latency-svc-wr58w [747.419827ms]
  Aug 24 15:59:46.491: INFO: Created: latency-svc-mhgp6
  Aug 24 15:59:46.527: INFO: Got endpoints: latency-svc-2wlk7 [752.891165ms]
  Aug 24 15:59:46.565: INFO: Created: latency-svc-mms86
  Aug 24 15:59:46.574: INFO: Got endpoints: latency-svc-dqttg [740.559655ms]
  Aug 24 15:59:46.594: INFO: Created: latency-svc-8qct5
  Aug 24 15:59:46.621: INFO: Got endpoints: latency-svc-9vf4c [746.878549ms]
  Aug 24 15:59:46.640: INFO: Created: latency-svc-2xqsk
  Aug 24 15:59:46.671: INFO: Got endpoints: latency-svc-78gmh [746.067572ms]
  Aug 24 15:59:46.692: INFO: Created: latency-svc-9rllk
  E0824 15:59:46.693526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:46.720: INFO: Got endpoints: latency-svc-79jpq [749.094774ms]
  Aug 24 15:59:46.753: INFO: Created: latency-svc-5982n
  Aug 24 15:59:46.773: INFO: Got endpoints: latency-svc-h45l9 [744.752575ms]
  Aug 24 15:59:46.797: INFO: Created: latency-svc-m6r2h
  Aug 24 15:59:46.825: INFO: Got endpoints: latency-svc-6jx5v [743.175914ms]
  Aug 24 15:59:46.848: INFO: Created: latency-svc-j7pxg
  Aug 24 15:59:46.871: INFO: Got endpoints: latency-svc-xb8cs [754.470896ms]
  Aug 24 15:59:46.889: INFO: Created: latency-svc-fb78s
  Aug 24 15:59:46.918: INFO: Got endpoints: latency-svc-nwmc8 [747.981834ms]
  Aug 24 15:59:46.934: INFO: Created: latency-svc-lhsk2
  Aug 24 15:59:46.972: INFO: Got endpoints: latency-svc-tgv4q [746.833101ms]
  Aug 24 15:59:46.998: INFO: Created: latency-svc-rlbhz
  Aug 24 15:59:47.019: INFO: Got endpoints: latency-svc-wc52f [747.911001ms]
  Aug 24 15:59:47.041: INFO: Created: latency-svc-k59m5
  Aug 24 15:59:47.075: INFO: Got endpoints: latency-svc-k7n7r [753.248837ms]
  Aug 24 15:59:47.104: INFO: Created: latency-svc-qnn2v
  Aug 24 15:59:47.117: INFO: Got endpoints: latency-svc-slk5v [744.985232ms]
  Aug 24 15:59:47.141: INFO: Created: latency-svc-9v4n8
  Aug 24 15:59:47.172: INFO: Got endpoints: latency-svc-7t4dm [752.045522ms]
  Aug 24 15:59:47.194: INFO: Created: latency-svc-rxqbv
  Aug 24 15:59:47.222: INFO: Got endpoints: latency-svc-mhgp6 [751.631289ms]
  Aug 24 15:59:47.241: INFO: Created: latency-svc-qfvtz
  Aug 24 15:59:47.270: INFO: Got endpoints: latency-svc-mms86 [741.361547ms]
  Aug 24 15:59:47.298: INFO: Created: latency-svc-zptlx
  Aug 24 15:59:47.321: INFO: Got endpoints: latency-svc-8qct5 [746.381094ms]
  Aug 24 15:59:47.341: INFO: Created: latency-svc-9h5ld
  Aug 24 15:59:47.370: INFO: Got endpoints: latency-svc-2xqsk [748.837668ms]
  Aug 24 15:59:47.387: INFO: Created: latency-svc-tqm56
  Aug 24 15:59:47.420: INFO: Got endpoints: latency-svc-9rllk [748.553005ms]
  Aug 24 15:59:47.439: INFO: Created: latency-svc-q8f6q
  Aug 24 15:59:47.471: INFO: Got endpoints: latency-svc-5982n [750.211875ms]
  Aug 24 15:59:47.500: INFO: Created: latency-svc-gdvmz
  Aug 24 15:59:47.516: INFO: Got endpoints: latency-svc-m6r2h [742.889464ms]
  Aug 24 15:59:47.539: INFO: Created: latency-svc-d4jvs
  Aug 24 15:59:47.572: INFO: Got endpoints: latency-svc-j7pxg [745.922346ms]
  Aug 24 15:59:47.596: INFO: Created: latency-svc-sth48
  Aug 24 15:59:47.624: INFO: Got endpoints: latency-svc-fb78s [751.630419ms]
  Aug 24 15:59:47.641: INFO: Created: latency-svc-v6vp2
  Aug 24 15:59:47.676: INFO: Got endpoints: latency-svc-lhsk2 [757.277797ms]
  E0824 15:59:47.701872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:47.696: INFO: Created: latency-svc-xvmjq
  Aug 24 15:59:47.726: INFO: Got endpoints: latency-svc-rlbhz [752.775642ms]
  Aug 24 15:59:47.748: INFO: Created: latency-svc-vhxft
  Aug 24 15:59:47.782: INFO: Got endpoints: latency-svc-k59m5 [762.065419ms]
  Aug 24 15:59:47.811: INFO: Created: latency-svc-8ptwb
  Aug 24 15:59:47.825: INFO: Got endpoints: latency-svc-qnn2v [749.992214ms]
  Aug 24 15:59:47.851: INFO: Created: latency-svc-fbtcs
  Aug 24 15:59:47.885: INFO: Got endpoints: latency-svc-9v4n8 [767.417388ms]
  Aug 24 15:59:47.934: INFO: Got endpoints: latency-svc-rxqbv [761.379477ms]
  Aug 24 15:59:47.935: INFO: Created: latency-svc-2wh2r
  Aug 24 15:59:47.950: INFO: Created: latency-svc-52m27
  Aug 24 15:59:47.969: INFO: Got endpoints: latency-svc-qfvtz [746.625962ms]
  Aug 24 15:59:48.001: INFO: Created: latency-svc-hpcsv
  Aug 24 15:59:48.016: INFO: Got endpoints: latency-svc-zptlx [746.126987ms]
  Aug 24 15:59:48.037: INFO: Created: latency-svc-wmhfc
  Aug 24 15:59:48.078: INFO: Got endpoints: latency-svc-9h5ld [757.508457ms]
  Aug 24 15:59:48.098: INFO: Created: latency-svc-fqqjh
  Aug 24 15:59:48.122: INFO: Got endpoints: latency-svc-tqm56 [752.595083ms]
  Aug 24 15:59:48.144: INFO: Created: latency-svc-rdqnl
  Aug 24 15:59:48.172: INFO: Got endpoints: latency-svc-q8f6q [752.271193ms]
  Aug 24 15:59:48.192: INFO: Created: latency-svc-mknwj
  Aug 24 15:59:48.221: INFO: Got endpoints: latency-svc-gdvmz [749.7165ms]
  Aug 24 15:59:48.241: INFO: Created: latency-svc-kz8sd
  Aug 24 15:59:48.268: INFO: Got endpoints: latency-svc-d4jvs [750.867987ms]
  Aug 24 15:59:48.288: INFO: Created: latency-svc-bc2xq
  Aug 24 15:59:48.321: INFO: Got endpoints: latency-svc-sth48 [748.804606ms]
  Aug 24 15:59:48.339: INFO: Created: latency-svc-pqqxw
  Aug 24 15:59:48.368: INFO: Got endpoints: latency-svc-v6vp2 [744.194668ms]
  Aug 24 15:59:48.390: INFO: Created: latency-svc-gzvk5
  Aug 24 15:59:48.420: INFO: Got endpoints: latency-svc-xvmjq [743.67086ms]
  Aug 24 15:59:48.446: INFO: Created: latency-svc-qk8mj
  Aug 24 15:59:48.471: INFO: Got endpoints: latency-svc-vhxft [744.693968ms]
  Aug 24 15:59:48.498: INFO: Created: latency-svc-zf62g
  Aug 24 15:59:48.522: INFO: Got endpoints: latency-svc-8ptwb [739.308867ms]
  Aug 24 15:59:48.542: INFO: Created: latency-svc-rbtz4
  Aug 24 15:59:48.573: INFO: Got endpoints: latency-svc-fbtcs [747.344404ms]
  Aug 24 15:59:48.596: INFO: Created: latency-svc-vnf48
  Aug 24 15:59:48.634: INFO: Got endpoints: latency-svc-2wh2r [748.287726ms]
  Aug 24 15:59:48.668: INFO: Created: latency-svc-9wz4f
  Aug 24 15:59:48.678: INFO: Got endpoints: latency-svc-52m27 [744.211318ms]
  Aug 24 15:59:48.702: INFO: Created: latency-svc-rwxsb
  E0824 15:59:48.706606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:48.717: INFO: Got endpoints: latency-svc-hpcsv [746.152402ms]
  Aug 24 15:59:48.740: INFO: Created: latency-svc-8p8xr
  Aug 24 15:59:48.775: INFO: Got endpoints: latency-svc-wmhfc [753.589653ms]
  Aug 24 15:59:48.798: INFO: Created: latency-svc-bmr8d
  Aug 24 15:59:48.822: INFO: Got endpoints: latency-svc-fqqjh [743.460623ms]
  Aug 24 15:59:48.842: INFO: Created: latency-svc-mdcml
  Aug 24 15:59:48.876: INFO: Got endpoints: latency-svc-rdqnl [753.475593ms]
  Aug 24 15:59:48.898: INFO: Created: latency-svc-gnk2t
  Aug 24 15:59:48.922: INFO: Got endpoints: latency-svc-mknwj [749.744568ms]
  Aug 24 15:59:48.942: INFO: Created: latency-svc-9zhsj
  Aug 24 15:59:48.970: INFO: Got endpoints: latency-svc-kz8sd [748.794294ms]
  Aug 24 15:59:48.995: INFO: Created: latency-svc-cfc5v
  Aug 24 15:59:49.023: INFO: Got endpoints: latency-svc-bc2xq [754.709504ms]
  Aug 24 15:59:49.065: INFO: Created: latency-svc-6s2l4
  Aug 24 15:59:49.077: INFO: Got endpoints: latency-svc-pqqxw [756.595936ms]
  Aug 24 15:59:49.101: INFO: Created: latency-svc-hkfms
  Aug 24 15:59:49.127: INFO: Got endpoints: latency-svc-gzvk5 [758.672766ms]
  Aug 24 15:59:49.146: INFO: Created: latency-svc-mkk42
  Aug 24 15:59:49.170: INFO: Got endpoints: latency-svc-qk8mj [750.054638ms]
  Aug 24 15:59:49.188: INFO: Created: latency-svc-8wzmw
  Aug 24 15:59:49.220: INFO: Got endpoints: latency-svc-zf62g [749.341972ms]
  Aug 24 15:59:49.238: INFO: Created: latency-svc-xb6hp
  Aug 24 15:59:49.276: INFO: Got endpoints: latency-svc-rbtz4 [753.279009ms]
  Aug 24 15:59:49.297: INFO: Created: latency-svc-rsq6x
  Aug 24 15:59:49.317: INFO: Got endpoints: latency-svc-vnf48 [742.886368ms]
  Aug 24 15:59:49.340: INFO: Created: latency-svc-jsfwl
  Aug 24 15:59:49.372: INFO: Got endpoints: latency-svc-9wz4f [738.109594ms]
  Aug 24 15:59:49.395: INFO: Created: latency-svc-j8ktg
  Aug 24 15:59:49.423: INFO: Got endpoints: latency-svc-rwxsb [745.189003ms]
  Aug 24 15:59:49.444: INFO: Created: latency-svc-np56n
  Aug 24 15:59:49.474: INFO: Got endpoints: latency-svc-8p8xr [752.182464ms]
  Aug 24 15:59:49.495: INFO: Created: latency-svc-76jdf
  Aug 24 15:59:49.519: INFO: Got endpoints: latency-svc-bmr8d [743.677589ms]
  Aug 24 15:59:49.575: INFO: Got endpoints: latency-svc-mdcml [752.112961ms]
  Aug 24 15:59:49.623: INFO: Got endpoints: latency-svc-gnk2t [745.939087ms]
  Aug 24 15:59:49.671: INFO: Got endpoints: latency-svc-9zhsj [748.054706ms]
  E0824 15:59:49.707381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 15:59:49.729: INFO: Got endpoints: latency-svc-cfc5v [758.099486ms]
  Aug 24 15:59:49.772: INFO: Got endpoints: latency-svc-6s2l4 [748.005917ms]
  Aug 24 15:59:49.828: INFO: Got endpoints: latency-svc-hkfms [749.713031ms]
  Aug 24 15:59:49.872: INFO: Got endpoints: latency-svc-mkk42 [745.077181ms]
  Aug 24 15:59:49.920: INFO: Got endpoints: latency-svc-8wzmw [750.099926ms]
  Aug 24 15:59:49.982: INFO: Got endpoints: latency-svc-xb6hp [761.877494ms]
  Aug 24 15:59:50.039: INFO: Got endpoints: latency-svc-rsq6x [762.825696ms]
  Aug 24 15:59:50.073: INFO: Got endpoints: latency-svc-jsfwl [750.912044ms]
  Aug 24 15:59:50.120: INFO: Got endpoints: latency-svc-j8ktg [748.374285ms]
  Aug 24 15:59:50.179: INFO: Got endpoints: latency-svc-np56n [754.868784ms]
  Aug 24 15:59:50.218: INFO: Got endpoints: latency-svc-76jdf [743.56992ms]
  Aug 24 15:59:50.219: INFO: Latencies: [32.839287ms 36.901842ms 50.076446ms 76.871107ms 87.531723ms 108.688263ms 119.148765ms 152.90149ms 156.144269ms 159.345312ms 162.867862ms 163.190603ms 163.59277ms 163.733351ms 164.989274ms 180.000929ms 203.765559ms 204.475276ms 205.340567ms 205.49009ms 207.977492ms 209.653781ms 216.335381ms 256.041999ms 263.46317ms 290.395911ms 291.810281ms 292.107288ms 292.176075ms 292.306582ms 292.413637ms 292.597541ms 292.833191ms 292.861732ms 293.254495ms 293.404232ms 293.580352ms 293.831962ms 293.895541ms 294.142202ms 323.560561ms 364.575129ms 364.754522ms 364.97019ms 365.479583ms 365.675353ms 366.120641ms 369.800932ms 371.283662ms 378.578717ms 427.696562ms 484.058882ms 525.068486ms 540.515662ms 578.452972ms 595.477907ms 643.813357ms 668.561018ms 703.949673ms 718.692758ms 721.847777ms 730.96503ms 737.079726ms 738.109594ms 738.214802ms 738.868766ms 738.923541ms 738.954419ms 739.308867ms 739.755884ms 739.891637ms 740.559655ms 740.793106ms 741.361547ms 741.767921ms 741.855594ms 742.560719ms 742.886368ms 742.889464ms 742.906516ms 743.175914ms 743.460623ms 743.485647ms 743.56992ms 743.609833ms 743.67086ms 743.677589ms 744.08249ms 744.186923ms 744.194668ms 744.211318ms 744.693968ms 744.752575ms 744.890221ms 744.985232ms 745.077181ms 745.118729ms 745.189003ms 745.823391ms 745.922346ms 745.939087ms 746.007465ms 746.067572ms 746.126987ms 746.152402ms 746.288822ms 746.381094ms 746.625962ms 746.821598ms 746.833101ms 746.878549ms 747.344404ms 747.383606ms 747.419827ms 747.562003ms 747.911001ms 747.981834ms 748.005917ms 748.045295ms 748.054706ms 748.194674ms 748.287726ms 748.374285ms 748.553005ms 748.555039ms 748.67019ms 748.794294ms 748.804606ms 748.837668ms 749.094774ms 749.111906ms 749.162708ms 749.341972ms 749.638475ms 749.686099ms 749.713031ms 749.7165ms 749.744568ms 749.992214ms 750.054638ms 750.099926ms 750.211875ms 750.33088ms 750.444699ms 750.541118ms 750.563505ms 750.700726ms 750.750946ms 750.785825ms 750.867987ms 750.912044ms 751.257542ms 751.359468ms 751.569223ms 751.630419ms 751.631289ms 752.045522ms 752.112961ms 752.182464ms 752.271193ms 752.595083ms 752.775642ms 752.80071ms 752.840277ms 752.891165ms 753.248837ms 753.279009ms 753.475593ms 753.589653ms 753.612365ms 753.675484ms 754.120821ms 754.156686ms 754.203419ms 754.470896ms 754.709504ms 754.868784ms 754.981674ms 755.228674ms 755.65987ms 756.157071ms 756.595936ms 757.277797ms 757.508457ms 757.89295ms 758.011939ms 758.068442ms 758.099486ms 758.672766ms 758.747335ms 758.817629ms 759.115356ms 759.648478ms 760.198884ms 760.211634ms 761.379477ms 761.877494ms 762.065419ms 762.825696ms 767.417388ms]
  Aug 24 15:59:50.220: INFO: 50 %ile: 745.939087ms
  Aug 24 15:59:50.220: INFO: 90 %ile: 756.157071ms
  Aug 24 15:59:50.220: INFO: 99 %ile: 762.825696ms
  Aug 24 15:59:50.221: INFO: Total sample count: 200
  Aug 24 15:59:50.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7835" for this suite. @ 08/24/23 15:59:50.236
• [10.843 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 08/24/23 15:59:50.252
  Aug 24 15:59:50.252: INFO: >>> kubeConfig: /tmp/kubeconfig-416727402
  STEP: Building a namespace api object, basename security-context-test @ 08/24/23 15:59:50.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/24/23 15:59:50.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/24/23 15:59:50.293
  E0824 15:59:50.708185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:51.708959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:52.709990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:53.710279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:54.710385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:55.797319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:56.811109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:57.806212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:58.806971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0824 15:59:59.807967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 24 16:00:00.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4346" for this suite. @ 08/24/23 16:00:00.42
• [10.201 seconds]
------------------------------
SS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Aug 24 16:00:00.501: INFO: Running AfterSuite actions on node 1
  Aug 24 16:00:00.503: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.008 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.004 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
  E0824 16:00:00.831962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.338 seconds]
------------------------------

Ran 380 of 7387 Specs in 6641.183 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h50m42.366439412s
Test Suite Passed
